{"version":3,"sources":["webpack://react-sigplot/webpack/universalModuleDefinition","webpack://react-sigplot/webpack/bootstrap","webpack://react-sigplot/./node_modules/prop-types/index.js","webpack://react-sigplot/./node_modules/react/index.js","webpack://react-sigplot/./node_modules/sigplot/js/sigplot.js","webpack://react-sigplot/./src/sigplot.js","webpack://react-sigplot/./src/layer.js","webpack://react-sigplot/./src/arraylayer.js","webpack://react-sigplot/./src/pipelayer.js","webpack://react-sigplot/./src/hreflayer.js","webpack://react-sigplot/./src/bluelayer.js","webpack://react-sigplot/./src/websocketlayer.js","webpack://react-sigplot/./src/plugin.js","webpack://react-sigplot/./src/index.js","webpack://react-sigplot/./node_modules/sigplot/js/common.js","webpack://react-sigplot/./node_modules/sigplot/js/m.js","webpack://react-sigplot/./node_modules/sigplot/js/mx.js","webpack://react-sigplot/./node_modules/sigplot/js/bluefile.js","webpack://react-sigplot/./node_modules/tinycolor2/tinycolor.js","webpack://react-sigplot/./node_modules/object-assign/index.js","webpack://react-sigplot/(webpack)/buildin/global.js","webpack://react-sigplot/./node_modules/react/cjs/react.production.min.js","webpack://react-sigplot/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://react-sigplot/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://react-sigplot/./node_modules/spin/spin.js","webpack://react-sigplot/./node_modules/process/browser.js","webpack://react-sigplot/./node_modules/sigplot/js/matfile.js","webpack://react-sigplot/./node_modules/loglevel/lib/loglevel.js","webpack://react-sigplot/./node_modules/sigplot/js/ColorMap.js","webpack://react-sigplot/./node_modules/sigplot/js/CanvasInput.js","webpack://react-sigplot/./node_modules/sigplot/js/sigplot.layer1d.js","webpack://react-sigplot/./node_modules/sigplot/js/sigplot.layer2d.js","webpack://react-sigplot/./node_modules/react-dom/index.js","webpack://react-sigplot/./node_modules/react-dom/cjs/react-dom.production.min.js","webpack://react-sigplot/./node_modules/scheduler/index.js","webpack://react-sigplot/./node_modules/scheduler/cjs/scheduler.production.min.js","webpack://react-sigplot/./example/demo.html","webpack://react-sigplot/./example/app.js","webpack://react-sigplot/./example/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Spinner","common","bluefile","matfile","mx","Layer1D","Layer2D","sigplot","element","options","this","Plot","version","KEYPRESS_HELP","SPINNER_OPTS","lines","length","width","radius","corners","rotate","color","speed","trail","shadow","hwaccel","className","zIndex","top","left","browserIsCompatible","hascanvas","document","createElement","hasarraybuf","_Mx","open","plot","Mx","_Gx","GX","parent","mouseOnCanvas","Gx","xlab","ylab","unit_lookup","xmin","undefined","xmax","address","havexmin","havexmax","cmode","RangeError","toUpperCase","line","ylabel","ymin","ymax","haveymin","haveymax","zmin","zmax","havezmin","havezmax","colors","setbgfg","bg","fg","xi","invertbgfg","forcelab","all","expand","xlabel","segment","plab","phunits","xdiv","ydiv","xcompression","xcmp","rasterSmoothing","smoothing","origin","yinv","pmt","bufmax","sections","nsec","anno_type","xfmt","yfmt","index","imode","slice","xdata","note","hold","always_show_marker","vstype","inputs","basefile","lyr","alert","basemode","change_settings","dbmin","dbscale","Math","max","log10","min","pow","level","xstart","xdelta","xmult","ymult","autox","autoy","autoz","autol","scale_base","get_data","stk","panxmin","panxmax","panymin","panymax","panxpad","panypad","xran","yran","pad","font_family","font_width","font_scaled","set_font","ncolors","cmap","xc","setup_cmap","xcnt","cntrls","default_rubberbox_mode","rubberbox_mode","default_rubberbox_action","rubberbox_action","default_rightclick_rubberbox_mode","rightclick_rubberbox_mode","default_rightclick_rubberbox_action","rightclick_rubberbox_action","cross","grid","nogrid","fillStyle","gridBackground","gridStyle","wheelZoom","wheelZoomPercent","legend","no_legend_button","legendBtnLocation","pan","nopan","nomenu","modmode","modlayer","modsource","modified","mod","nmark","iabsc","specs","nospecs","scroll_time_interval","autohide_readout","autohide_panbars","x_scrollbar_location","show_x_axis","noxaxis","show_y_axis","noyaxis","show_readout","noreadout","hide_note","xmrk","ymrk","nodragdrop","addEventListener","evt","preventDefault","files","dataTransfer","load_files","initialized","plot_init","mimicListeners","other","listeners","zoom","unzoom","xpan","ypan","_refresh","onmousemove","e","rect","target","getBoundingClientRect","xpos","offsetX","pageX","scrollX","ypos","pageY","scrollY","offsetY","re","pixel_to_real","retx","x","rety","y","widget","display_specs","createEvent","initEvent","dispatchEvent","warpbox","cross_xpos","rubberline","b","cross_ypos","draw_crosshairs","p_cuts","hcb","y_cut_press_on","x_cut_press_on","draw_p_cuts","throttledOnMouseMove","throttle","onmouseout","event","draw_panbars","prompt","input","enableBlur","onmouseover","disableBlur","onmousedown","type","refresh","ifevent","which","rect_x","rect_y","rect_width","rect_height","inPan","inPanRegion","command","scrollbar","position","scrollbar_x","scrollbar_y","onScrollbar","removeEventListener","menu","title","finalize","items","text","handler","middleClickScrollMenuAction","SB_EXPAND","SB_SHRINK","SB_FULL","sigplot_scrollScaleMenu","repeatPan","stillPanning","clearInterval","repeatPanning","setTimeout","setInterval","lButtonPressed","height","lg_colorbar","mouse_x","mouse_y","top_x1","cbb_top_x1","top_y1","cbb_top_y1","coordsInTriangle","cbb_width","cbb_height","cur_cmap","get_layer","img","current_map","Mc","colormap","pos","bot_x1","cbb_bot_x1","bot_y1","cbb_bot_y1","zoom_style","opacity","return_value","select_style","fill_color","hi","rubberbox","rubberbox_cb","sigplot_mainmenu","ontouchstart","targetTouches","touchClear","touches","clearTimeout","touchEvent","bound","touch_distance","ontouchmove","k","touchStart","new_xpos","new_ypos","delta_xpos","delta_ypos","xscl","ydelta","yscl","cur_distance","scaling","throttledOnTouchMove","ontouchend","console","log","panning","action","widget_callback","docMouseUp","mouseup","inCenter","inCenterRegion","th","text_h","tw","text_w","trunc","inPanCenterRegion","mtagevt","clientX","clientY","w","h","shift","shiftKey","redraw","stopPropagation","cancelBubble","emit_hidemenu","hideMenuEvt","mouseclick","mousedblclick","dragMouseDownHandler","axis","screenX","screenY","dragMouseMoveHandler","scrollAction","flag","rangeOut","range","SB_DRAG","scaleFactor","trange","mouseOffset","realOffset","drag_updateRange","smin","srange","redrawScrollbar","updateViewbox","drag_scrollbar","err","throttledDragOnMouseMove","dragMouseUpHandler","onresize","checkresize","wheelHandler","throttledPan","wheelscroll_mode_natural","deltaY","SB_WHEELDOWN","SB_WHEELUP","step","page","scroll","XW_COMMAND","throttledZoom","zoomperc","percent_zoom","addWheelListener","nokeypress","onkeypress","keyCode","getKeyCode","ctrlKey","altKey","metaKey","redraw_warpbox","xCut","xyKeys","x_pop_now","sigplot_show_x","yCut","y_pop_now","sigplot_show_y","msg","get_z","toString","message","sigplot_show_z","xunits","yunits","sec2tod","timecode","sigplot_show_timecode","fullscreen","invert","show_marker","setKeypressHandler","add_plugin","plugin","zorder","Number","MAX_VALUE","init","canvas","plugins","push","impl","sort","a","remove_plugin","dispose","parentNode","removeElement","splice","addListener","what","callback","removeListener","settings","changemode","newphunits","newplab","phscale","PI","dscl","changephunits","xcut_now","ycut_now","reread","oldLayerData","origHCB","HCB","deoverlay","overlay_bluefile","j","symbol","cleanup","reload","data","hdrmod","rsync","xbnds","rescale","headermod","sync","display","hdrmod_clone","JSON","parse","stringify","overlay_array","overrides","layerOptions","debug","initialize","overlay_pipe","pipe","overlay_websocket","wsurl","ws","WebSocket","binaryType","layer_n","onopen","onmessage","ArrayBuffer","createArray","warning","newHdr","overlay_href","href","onload","show_spinner","handleHeader","endsWith","overlay_matfile","hide_spinner","MatFileReader","BlueFileReader","read_http","error","spinner","xwfg","spin","stop","add_layer","layer","mfile","file_name","dview","basefiles","layers","layerType","overlay","user_data","forEach","resize","preferred_origin","draw_layer","form_plotnote","hdr","f","read","remove_layer","fileName","delete_layer","pixel_zoom","x1","y1","x2","y2","continuous","r1","r2","xperc","yperc","xadj","abs","yadj","ul","lr","xtmp","ytmp","zstk","inContinuousZoom","inZoom","levels","pop","mimic","mask","self","unmimic","xzoom","yzoom","that","keys","ctx","getContext","plotData","valid","drawImage","draw_plugins","draw_marker","refresh_after_ctr","render","refresh_after","cb","enable_listeners","onmouseup","onkeydown","onkeyup","disable_listeners","addColorMaps","colormaps","cut_stash","x_cut_data","xframe","row","round","ystart","lps","start","finish","buf","old_drawmode","drawmode","old_autol","cx","UNITS","xcut_layer","mxmn","vmxmn","smax","y_cut_data","ycut_layer","pthk","ytimecode","pl","pr","pt","lbtn","pyl","prev_Mx_r","prev_Mx_b","x_box_w","x_box_h","y_box_h","y_box_w","clear_window","drawaxis_flags","noxtlab","noxtics","noxplab","noytics","noytlab","noyplab","xtimecode","drawaxis","shadowbox","noaxisbox","draw_layers","ln","ix","iy","yc","xs","ys","thk","ic","legendPos","maxLabelWidth","labelOffset","labelLength","measureText","strokeStyle","fillRect","strokeRect","floor","sign","thick","L_dashed","draw_line","on","off","draw_symbol","legend_colorbar","layerheight","sigplot_legend_menu","draw_legend","draw_accessories","cxm","cam","xptr","yptr","aretx","arety","zoff","pxscl","pyscl","format","pb","px1","px2","py1","py2","panmode","iysec","isec","lineSmoothing","x_box_x","x_box_y","y_box_x","y_box_y","p_cuts_xpos","p_cuts_ypos","xcut","ycut","ylabel_stash","element1","element2","Array","isArray","custom_cmap","ls","CONTROLS_MENU","checked","CXMODE_MENU","SCALING_MENU","style","setupPrompt","floatValidator","finalValue","parseFloat","GRID_MENU","SETTINGS_MENU","isValid","intValidator","maxXDIV","reason","maxYDIV","COLORMAP_MENU","colormap_handler","item","menuitem","traceoptionsmenu","ii","hexValidator","sym","rad","thickness","MAINMENU","tracemenu","deoverlaymenu","result","active_canvas","toDataURL","link","download","Date","getTime","body","appendChild","click","removeChild","DASHED","COLORS","SOLID","TOGGLE","SYMBOLS","LINE_TYPE","THICKNESS","OPACITY","LEGEND_TRACE","triggerEvent","xo","yo","xl","yl","takeAction","rwh","wpxl","hpxl","plugin_index","clearRect","plotnote","join","draw_pcut_x","plot_width","draw_box","beginPath","lineWidth","z","zrt","zpx","xrt","xpx","xnew","ynew","moveTo","lineTo","stroke","draw_pcut_y","plot_height","yrt","ypx","draw","ybufn","ybuf","yframe","zbuf","pix","real_to_pixel","clipped","clipped_x","clipped_y","arc","textBaseline","textAlign","font","format_g","fillText","newmode","oldmode","out","ps","pe","need_y_scrollbar","need_x_scrollbar","mouseEvent","scrollbarState","sbx","SCROLLBAR","sby","SIGPLOT_PAN","substring","XW_UPDATE","promptText","onSuccess","inputValue","disableListeners","enableListeners","realOnSuccess","dretx","drety","xval","yval","sec2tspec","chara","charb","substr","LEGACY_RENDER","colorbar_height","button_width","button_height","button_x","button_y","fill","button_y_2","colorbar","xxmin","xxmax","load","noxmin","noxmax","npts","prep","size","dpts","ret","tri_x1","tri_y1","tri_x2","tri_y2","tri_x3","tri_y3","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","inv_denom","u","v","coord","outside_right_border","above_top_border","below_bottom_border","between_top_and_bottom","between_left_and_right","has_bottom_scrollbar","s1","sw","scrollReal2PixOut","scroll_real2pix","direction","scale","newMin","newMax","SigPlot","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","state","Component","setState","nextProps","_this$props","newHeight","newWidth","newOptions","_this2","_this$props2","styles","propChildren","children","React","Children","map","child","cloneElement","react_default","_objectSpread","ref","PropTypes","instanceOf","node","number","string","Layer","context","arrayOf","ArrayLayer","currentData","currentOptions","currentLayerOptions","nextData","nextOptions","nextLayerOptions","PipeLayer","HrefLayer","hreflayer_classCallCheck","hreflayer_possibleConstructorReturn","hreflayer_getPrototypeOf","onloadWrapper","hreflayer_assertThisInitialized","oldHref","oldOptions","newHref","newOnload","func","BlueLayer","WebsocketLayer","oldWsurl","newWsurl","newOverrides","Plugin","pluginOptions","__webpack_exports__","sigplot_SigPlot","process","global","end","Uint8Array","resultArray","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCanelAnimationFrame","timeoutID","dashOn","setLineDash","mozDash","webkitLineDash","dashOff","charCode","attachEvent","String","search","this_len","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","obj","buffer","byteOffset","dv","DataView","maxlength","byteLength","getFloat64","subarray","begin","info","warn","arguments","BYTES_PER_ELEMENT","constructor","Uint16Array","Uint32Array","cls","_addEventListener","support","prefix","_addWheelListener","elem","eventName","useCapture","originalEvent","srcElement","deltaMode","deltaX","delatZ","returnValue","wheelDelta","wheelDeltaX","detail","onmousewheel","Proxy","navigator","product","g","TypeError","set","apply","construct","q","unshift","getOwnPropertyNames","getOwnPropertyDescriptor","setPrototypeOf","getPrototypeOf","__proto__","seal","revocable","proxy","revoke","update","dst","src","prop","val","loglevel","userAgent","match","PointArray","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","60","61","62","63","red","green","blue","reverse","PIPESIZE","unitInput","first","second","comparer1","comparer2","BlueHeader","field","subsize","enabled_streaming_pcut","in_byte","out_byte","pipesize","setData","data_free","force1000","bpe","ape","grab","bufview","nget","ngot","filad","sidx","eidx","head","tail","onwritelisteners","pavail","grabx","offset","navail","addPipeWriteListener","onwrite","indexOf","units_name","units","trim_name","pathfilename","label","mult","mult_prefix","touchA","touchB","xd","yd","sqrt","VECTOR","MV","MS","nbpt","view","pad2","ctype","lo_thresh","vlog10","vlogscale","cvmag2logscale","vsmul","mul","count","vec","imax","imin","vmov","sstride","dest","dstride","vfill","inpval","vabs","cvmag","cxvec","cvmag2","cvpha","im","atan2","cvphad","a1","a2","sec","trim_trailing_zeros","tod","j1950","UTC","j1949","midnightToday","getFullYear","getMonth","getDate","millisecs","getHours","getMinutes","getSeconds","days","ceil","secMilli","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toPrecision","dloc","zloc","sec2tod_j1970","j1970toj1950","j1950toj1970","delay","previousCall","time","padamt","tinycolor","ColorMap","CanvasInput","WARPBOX","MX","clientWidth","clientHeight","wid_canvas","STKSTRUCT","event_cb","rmode","linewidth","button_release","button_press","state_mask","pixel","_renderCanvas","_syncRender","in_fill_range","ele","range_begin","range_end","right","isLeft","p_x","p_y","e_x1","e_y1","e_x2","e_y2","update_winding_number","wn","XW_INIT","XW_DRAW","XW_EVENT","SB_STEPINC","SB_STEPDEC","SB_PAGEINC","SB_PAGEDEC","L_ArrowLeft","L_ArrowRight","L_ArrowUp","L_ArrowDown","GBorder","L_RModeOff","L_RModeOn","L_PixelSymbol","L_CircleSymbol","L_SquareSymbol","L_PlusSymbol","L_XSymbol","L_TriangleSymbol","L_ITriangleSymbol","L_HLineSymbol","L_VLineSymbol","tmin","dragoutline","initial_pause","repeat_pause","swmin","soff","arrow","mxevent","repeat_count","oncontextmenu","_ctx","alt_style","def_style","onWidgetLayer","erase_window","old_warpbox","offsetParent","offsetLeft","offsetTop","onCanvas","current_active","withWidgetLayer","_animationFrameHandle","mixcolor","color1","color2","perc1to2","c1","toRgb","c2","mix","toHexString","linear_gradient","step_size","lingrad","createLinearGradient","addColorStop","equals","xwbg","xwts","xwbs","xwms","xwlo","clr","settheme","theme","close","sb","xe","ye","qs","qe","stat","sblocal","scroll_loc","scroll_vals","sv","op","btn","rr","d2","tri","cnt","fillColor","strokeColor","fill_rectangle","draw_rectangle","tempTri","fill_poly","start_poly","closePath","draw_poly","draw_symbols","pixx","pixy","npix","istart","trace","xpoint","ypoint","skip","symb","dashed","stk4","yymin","noclip","clip","dx","dy","bufsize","ib","lvisible","vertsym","horzsym","sn","highlight","xend","rxs","rxe","cn","mid_x","mid_y","ie","visible","lx","ly","tL","tE","clipt","draw_lines","fillMin","fillMax","fill_trace","x_start","x_end","xstart_pixel_value","xend_pixel_value","pi_start","pi_end","pixx_new","pixy_new","this_point","this_point_y","draw_mode","isNaN","to_rgb","getColor","current_color","newcolor","save","restore","inorigin","outorigin","instk","outstk","diff","sum","end1","end2","absmax","kengr","onsubmit","errorTimeout","inputValid","pxIndex","fontIndex","fontSize","fontFamily","canvasInput","backgroundColor","fontColor","borderWidth","borderRadius","padding","boxShadow","innerShadow","renderOnReturn","tabToClear","subHandlerCreator","messageX","messageY","newValue","redrawPrompt","xssPrompt","xcc","ycc","yPos","inputXPos","widgetbox","inputYPos","redrawPromptCreator","focus","strict","isFinite","parseInt","test","render_message_box","textColor","center","linel","beg","split","cur","brk","endinreturn","replace","winlines","lastline","draw_round_box","fill_opacity","quadraticCurveTo","oldAlpha","globalAlpha","Uint8ClampedArray","dctx","imgd","getImageData","putImageData","ctx_wid","font_size","textline","yend","tics","dmin","dmax","ndiv","dtic","dtic1","nsig","df","sig","nseg","ddf","dft","flags","stk1","iscl","isct","iscr","iscb","exactbox","xTIC","yTIC","_xmult","_ymult","xticlabels","yticlabels","ontop","Function","fact","fmul","itext","jtext","inside","last_xlbl","endtic","ylbl","xlbl_maxlen","sp","xlbl","format_f","trimlabel","itexti","yonright","sep","inrect","MENU_CONSTANTS","sidelab","toplab","n_show","_menu_redraw","animationFrameHandle","avail_space","menu_item_height","n_items","yb","xss","yss","i_begin","queue","i_end","menu_counter","selected","_menu_takeaction","newmenu","_menu_callback","drag_x","drag_y","_menu_dismiss","next_item","inp","fromCharCode","keypresses","matches","denom","num","accept","lineColor","pc2px","perc","lbl","res","scaleImage","sx","sy","sh","imgctx","createImageData","ibuf","buf8","width_scaling","height_scaling","xx","yy","jj","xb","inx","iny","inw","inh","xt","yt","getcolor","iz","zf","zf1","display_warpbox","leading_nonzero","decloc","exp","eloc","dz","toFixed","legacy_shadowbox","shape","bw","sigplot_shadowbox","alpha","chevron","x_offset","y_offset","eventXPos","eventYPos","ts2","ts1","p1","op1","iretx","irety","setRange","cidx","renderImage","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","shift_image_rows","update_image_row","didx","create_image","nxc","put_image","nx","ny","nex","ney","draw_image","view_xmin","view_xmax","view_ymin","view_ymax","rx","ry","iw","ih","BitArray","u8","getBit","idx","setBit","array","len","sub","ARRAY_BUFFER_ENDIANNESS","Error","endianness","_SPA","S","C","V","Q","M","X","T","U","_BPS","P","A","O","B","I","L","F","D","_XM_TO_TYPEDARRAY","_XM_TO_DATAVIEW","dataView","littleEndian","highIndex","lowIndex","MAX_INT","high","getInt32","rv","pow2","Infinity","_applySupportsTypedArray","uintbuf","ab2str","str","parseURL","url","source","protocol","host","hostname","port","query","params","seg","file","pathname","hash","path","relative","segments","ext_header_type","dvhdr","headrep","datarep","littleEndianHdr","littleEndianData","ext_start","ext_size","getUint32","data_start","data_size","ds","de","ext_header","unpack_keywords","data_end","spa","bps","bpa","lbuf","lkey","lextra","ltag","tag","ldata","itag","idata","keywords","dic_index","dict_keywords","getInt16","getInt8","dictTypes","TypedArray","concat","readheader","theFile","reader","FileReader","blob","webkitSlice","onloadend","rawhdr","readAsArrayBuffer","raw","oReq","XMLHttpRequest","responseType","overrideMimeType","oEvent","readyState","status","arrayBuffer","response","fileUrl","responseText","oncomplete","blocksize","bufView","worker","charCodeAt","text2buffer","onerror","send","__WEBPACK_AMD_DEFINE_RESULT__","trimLeft","trimRight","tinyCounter","mathRound","mathMin","mathMax","mathRandom","random","opts","rgb","ok","toLowerCase","named","names","matchers","exec","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","convertToPercentage","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","charAt","rgbaToArgbHex","convertDecimalToHex","desaturate","amount","toHsl","clamp01","saturate","greyscale","lighten","brighten","darken","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","monochromatic","toHsv","modification","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","setAlpha","toHsvString","toHslString","toHex","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","fn","args","_applyCombination","fromRatio","newColor","rgb1","rgb2","readability","isReadable","wcag2","wcag2Parms","parms","validateWCAG2Parms","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","isOnePointZero","processPercent","isPercentage","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","test2","test3","letter","shouldUseNative","from","symbols","to","toObject","for","aa","ba","iterator","encodeURIComponent","framesToPop","ca","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","isReactComponent","forceUpdate","H","isPureReactComponent","current","J","K","__self","__source","defaultProps","$$typeof","_owner","N","keyPrefix","R","next","done","=",":","escape","ea","fa","da","W","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","default","Z","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","any","elementType","objectOf","oneOf","oneOfType","exact","checkPropTypes","useCssAnimations","prefixes","animations","createEl","el","ins","sheet","getElementsByTagName","styleSheet","addAnimation","pre","insertRule","vendor","pp","css","merge","def","defaults","fps","ep","tp","mid","insertBefore","firstChild","offsetWidth","offsetHeight","setAttribute","ostep","astep","anim","timeout","background","transformOrigin","transform","animation","childNodes","vml","attr","behavior","adj","addRule","grp","coordsize","coordorigin","margin","filter","rotation","arcsize","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","browser","env","argv","versions","once","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","versionNames","256","dataTypeNames","getDataWithType","typeName","output","getUint16","getFloat32","getInt64","MatHeader","headerStr","headerTextBegin","endianCharsBegin","headerList","trim","platform","createdOn","subsystemOffset","subsysOffsetBegin","versionOffsetBegin","versionName","dataType","firstDataTypeOffsetBegin","dataTypeName","arraySize","numBytesOffsetBegin","currIndex","numBytesOffsetEnd","typeNum","typeSize","dimTypeNum","dimTypeName","dimTypeSize","rows","arrayNameTypeNum","nameSize","small","arrayNameTypeName","arrayValSize","arrayBuff","startByte","outArr","getArray","__WEBPACK_AMD_DEFINE_FACTORY__","definition","undefinedType","logMethods","bindMethod","methodName","method","replaceLoggingMethods","loggerName","methodFactory","defaultMethodFactory","realMethod","Logger","defaultLevel","currentLevel","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","varArgs","nextSource","nextKey","writable","configurable","_low","_high","_fscale","colorindex","colorBlockIndex","_parseColors","col1","col2","colorsInBlock","factorStep","_addColor","interpolate","front","_rgbToHex","_hexToRgb","_checkColorStops","colorsWithNoStops","stopSize","currentPos","_componentToHex","low","factor","_canvas","_x","_y","_extraX","extraX","_extraY","extraY","_fontSize","_fontFamily","_fontColor","_placeHolderColor","placeHolderColor","_fontWeight","fontWeight","_fontStyle","fontStyle","_readonly","readonly","_maxlength","_width","_height","_padding","_borderWidth","_borderColor","borderColor","_borderRadius","_backgroundImage","backgroundImage","_boxShadow","_innerShadow","_selectionColor","selectionColor","_placeHolder","placeHolder","_value","_onsubmit","_onkeydown","_onkeyup","_onfocus","onfocus","_onblur","onblur","_cursor","_cursorPos","_hasFocus","_selection","_wasOver","_renderOnReturn","_disableBlur","_tabToClear","_calcWH","outerW","outerH","_renderCtx","_shadowCanvas","_shadowCtx","backgroundGradient","_backgroundColor","mousemoveCanvasListener","mousemove","mousedownCanvasListener","mousedown","mouseupCanvasListener","mouseupWindowListener","_mouseDown","blur","keydownWindowListener","keydown","keyupWindowListener","pasteWindowListener","clipboardData","getData","startText","endText","_inputsIndex","_updateCanvasWH","doReturn","shadowL","shadowR","shadowT","shadowB","shadowW","shadowH","_selectionUpdated","_clipText","_cursorInterval","nav","isChromeMobile","isMobile","orientation","isShift","_clearSelection","_mapCodeToKey","mouse","_mousePos","_endSelection","_overInput","_clickPos","isOver","cursor","_selectionStart","curPos","isSelection","renderCanvas","br","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","_roundedRect","_drawTextBox","paddingBorder","selectOffset","_textWidth","selectWidth","cursorOffset","textX","textY","isOffsetX","isOffsetY","isBlur","isColor","shadowCtx","scw","sch","Image","fillPer","oldW","oldH","xLeft","xRight","yTop","yBottom","totalW","elm","defaultView","getComputedStyle","paddingLeft","paddingTop","borderLeft","borderTop","htmlTop","htmlLeft","blockedKeys","56","57","59","107","173","189","186","187","188","190","191","192","219","220","221","222","xbuf","xsub","ysub","pointbufsize","buf_type","xbufn","framesize","tle","tl","_onpipewrite","axis_change","n1","n2","dbuf","qmin","qmax","fac","traceoptions","pts","pnt","add_highlight","min_nan","max_nan","remove_highlight","id","get_highlights","clear_highlights","mixc","num_rows","layer_name_override","layerOption","lpb","frame","ylength","zpoint","start_write","stop_write","cut_off","tmp","zidx","timestamp","xsize","nny","noff","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","ha","ia","onError","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","va","wa","currentTarget","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","disabled","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","transition","Xa","Ya","Za","$a","ab","bb","db","eb","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","eventPool","jb","destructor","hb","getPooled","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","extend","kb","lb","mb","nb","ob","documentMode","qb","rb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","vb","wb","zb","locale","char","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","date","datetime","datetime-local","email","month","password","tel","week","Mb","nodeName","Nb","correspondingUseElement","nodeType","Ob","Pb","Rb","_valueTracker","getValue","setValue","stopTracking","Qb","Sb","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","displayName","jc","_debugOwner","_debugSource","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","qc","oc","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","zc","Ac","ownerDocument","activeElement","Bc","change","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","detachEvent","Kc","Lc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","sibling","gd","animationName","elapsedTime","pseudoElement","jd","kd","ld","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","39","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","repeat","pd","qd","changedTouches","rd","sd","wheelDeltaY","deltaZ","td","ud","vd","wd","isInteractive","isInteractiveTopLevelEventType","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","nextSibling","Nd","HTMLIFrameElement","contentWindow","Od","contentEditable","Qd","focusedElem","selectionRange","Md","contains","compareDocumentPosition","documentElement","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","defaultSelected","be","dangerouslySetInnerHTML","ce","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","svg","ge","he","je","namespaceURI","innerHTML","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","lineClamp","lineHeight","order","orphans","tabSize","widows","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","area","base","col","embed","hr","keygen","meta","param","track","wbr","is","se","te","ue","ve","we","autoFocus","__html","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Set","Fe","Ge","He","Ie","Je","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","cf","didError","earliestPendingTime","latestPendingTime","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","payload","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Af","_stringRef","Bf","Cf","Map","delete","Df","Ef","Ff","Gf","Hf","If","Jf","tagName","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","cg","dg","eg","gg","hg","ig","jg","kg","lg","mg","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","qg","last","lastRenderedState","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","then","hf","We","hydrate","hidden","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","jh","stack","kh","lh","mh","nh","oh","onClick","onclick","ph","WeakSet","qh","rh","vh","componentWillUnmount","wh","xh","yh","_reactRootContainer","zh","wasMultiple","multiple","Ce","uh","Xh","has","add","Bh","WeakMap","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","createTextNode","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","hasAttribute","Ri","Ti","Mi","querySelectorAll","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","previous","priorityLevel","performance","_schedMock","MessageChannel","port2","port1","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","App","rasterData","rasterData2D","random2D","_this2$state","_this$state","require","ReactDOM","app_App","getElementById"],"mappings":"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","file":"example.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-sigplot\"] = factory();\n\telse\n\t\troot[\"react-sigplot\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license\n * File: sigplot.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var version = \"version-PLACEHOLDER\";\n\n    var Spinner = require(\"spin\");\n    var common = require(\"./common\");\n    var bluefile = require(\"./bluefile\");\n    var matfile = require(\"./matfile\");\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n    var Layer1D = require(\"./sigplot.layer1d\");\n    var Layer2D = require(\"./sigplot.layer2d\");\n\n    function sigplot(element, options) {\n        if (!(this instanceof sigplot)) {\n            return new sigplot.Plot(element, options);\n        }\n    }\n\n    sigplot.bluefile = bluefile;\n    sigplot.matfile = matfile;\n    sigplot.m = m;\n    sigplot.mx = mx;\n    sigplot.Layer1D = Layer1D;\n    sigplot.Layer2D = Layer2D;\n    sigplot.version = version;\n\n    /**\n     * Text of the keypress help dialog.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var KEYPRESS_HELP = \"Keypress Table:\\n\" +\n        \"--------------\\n\" +\n        \"?       - Main help box.\\n\" +\n        \"A       - Toggle display x,y readouts:\\n\" +\n        \"          (absc) -> (index) -> (1/absc) -> (time).\\n\" +\n        \"B       - Toggle LM Drag Mode:\\n\" +\n        \"          (box) -> (horizontal) -> (vertical).\\n\" +\n        \"C       - Toggle controls.\\n\" +\n        \"K       - Show Marker.\\n\" +\n        \"L       - Toggle legend.\\n\" +\n        \"M       - Pops up main menu\\n\" +\n        \"R       - Toggle display specs (x/y readout)\\n\" +\n        \"S       - Toggle display specs and axes.\\n\" +\n        \"T       - Popup box with timecode value at mouse.\\n\" +\n        \"X       - In 1D mode, popup box with X value at mouse.\\n\" +\n        \"        - In 2D mode, toggle x-cut display.\\n\" +\n        \"Y       - In 1D mode, popup box with Y value at mouse.\\n\" +\n        \"        - In 2D mode, toggle y-cut display.\\n\" +\n        \"P       - In 2D mode, displays p-cuts along side and bottom.\\n\" +\n        \"F       - Toggle fullscreen.\\n\" +\n        \"Cntrl+I - Invert colors.\";\n\n    /**\n     * Text of the main help dialog.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var MAIN_HELP = \"To zoom, press and drag the left mouse (LM) over the region of interest and release. \" +\n        \"To unzoom, press right mouse (RM).  Press the middle mouse (MM) button or press the 'M' key to open the main menu.\" +\n        \"View the function of all keypresses by selecting 'Keypress Info' from the main menu.\";\n\n    /**\n     * Options used when displaying the spinner.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var SPINNER_OPTS = {\n        lines: 13, // The number of lines to draw\n        length: 7, // The length of each line\n        width: 4, // The line thickness\n        radius: 10, // The radius of the inner circle\n        corners: 1, // Corner roundness (0..1)\n        rotate: 0, // The rotation offset\n        color: '#FFF', // #rgb or #rrggbb\n        speed: 1, // Rounds per second\n        trail: 60, // Afterglow percentage\n        shadow: false, // Whether to render a shadow\n        hwaccel: false, // Whether to use hardware acceleration\n        className: 'spinner', // The CSS class to assign to the spinner\n        zIndex: 2e9, // The z-index (defaults to 2000000000)\n        top: 'auto', // Top position relative to parent in px\n        left: 'auto' // Left position relative to parent in px\n    };\n\n    /**\n     * Attempts basic checks to determine if the browser is compatible with\n     * sigplot.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    sigplot.browserIsCompatible = function browserIsCompatible() {\n        // We need a Canvas\n        var test_canvas = document.createElement('canvas');\n        var hascanvas = (test_canvas.getContext) ? true : false;\n\n        // We need ArrayBuffer\n        var hasarraybuf = (\"ArrayBuffer\" in window);\n\n        // File and FileReader are optional...and only\n        // required if the user wants to plot local files\n        return (hascanvas && hasarraybuf);\n    };\n\n\n\n    /**\n     * Construct and render a plot.\n     *\n     * @memberOf sigplot\n     * @constructor\n     *\n     * @example plot = new sigplot.Plot(document.getElementById('plot'), {[options]});\n     *\n     * @param element\n     *            a 'div' DOM element\n     * @param [options]\n     *            Key-value pairs whose values alter the behavior of the plot.\n     *\n     * @param {String}\n     *            options.cmode the plot rendering mode \"IN\" = Index, \"AB\" =\n     *            Abscissa (both of these, along with \"__\" can be added as prefixes to the other modes),\n     *            \"MA\", \"Magnitude\" = Magnitude, \"PH\", \"Phase\" = Phase, \"RE\", \"Real\" = Real,\n     *            \"IM\",\"Imaginary\" = Imaginary, \"LO\", \"D1\", \"10*log10\" = 10*log, \"L2\" or \"D2\"\n     *            , \"20*log10\" = 20*log, \"RI\", \"Real/Imag\", \"Imag/Real\",\"IR\" = Real vs. Imaginary\n     *\n     * @param {String}\n     *            options.phunits the phase units \"D\" = Degrees, \"R\" = Radians,\n     *            \"C\" = Cycles\n     *\n     * @param {Boolean}\n     *            options.cross display cross hairs on the plot\n     *\n     * @param {Boolean}\n     *            options.nogrid hide the background grid\n     *\n     * @param {Boolean}\n     *            options.legend set to false to hide the legend\n     *\n     * @param {Boolean}\n     *            options.no_legend_button set to true to hide the legend button\n     *\n     * @param {Boolean}\n     *            options.nopan disable panning on the plot\n     *\n     * @param {Boolean}\n     *            options.nomenu disable the middle-click menu\n     *\n     * @param {Boolean}\n     *            options.nospec hide all plot specification displays\n     *\n     * @param {Boolean}\n     *            options.noxaxis hide the x-axis\n     *\n     * @param {Boolean}\n     *            options.noyaxis hide the y-axis\n     *\n     * @param {Boolean}\n     *            options.noreadout hide the plot readout area\n     *\n     * @param {Boolean}\n     *            options.nodragdrop prevent file drag drop\n     *\n     * @param {Number}\n     *            options.scroll_time_interval set the time interval for scrolling\n     *\n     * @param {Boolean}\n     *            options.index use the data-index in the X axis\n     *\n     * @param {Number}\n     *            options.autox auto-scaling settings for X axis !!!!CHANGED\n     *\n     * @param {Number}\n     *            options.xmin the minimum range to display on the X axis\n     *\n     * @param {Number}\n     *            options.xmax the maximum range to display on the X axis\n     *\n     * @param {Number}\n     *            options.xlab the units that X-axis uses (see m.UNITS)\n     *\n     * @param {Object}\n     *            options.xlabel function or string for custom X-axis label\n     *\n     * @param {Number}\n     *            options.xdiv the number of divisions on the X axis\n     *\n     * @param {Number}\n     *            options.xcnt configure the mtag mouse controls 0 = Off, 1\n     *            (default) = LM Click, 2 = Continuous\n     *\n     * @param {String}\n     *            options.rubberbox_mode controls the behavior of the rubberbox\n     *            \"zoom\" (default) = zoom to the selected area \"box\" = trigger\n     *            an mtag action on the selected area\n     *\n     * @param {String}\n     *            options.rightclick_rubberbox_mode controls the behavior of the rubberbox\n     *            \"zoom\" = zoom to the selected area \"box\" = trigger\n     *            an mtag action on the selected area.  By default is null to disable\n     *            right-click boxes\n     *\n     * @param {Number}\n     *            options.line the line type to draw 0 = None, 1 = Verticals, 2 =\n     *            Horizontals, 3 (default) = Connecting\n     *\n     * @param {Number}\n     *            options.autoy auto-scaling settings for Y axis !!!! CHANGED\n     *            0 = Fix , 1 = Auto Min , 2 = Auto Max, 3 = Full Auto\n     *\n     * @param {Number}\n     *            options.ylab the units that Y-axis uses (see m.UNITS)\n     *\n     * @param {Object}\n     *            options.ylabel function or string for custom Y-axis label\n     *\n     * @param {Number}\n     *            options.ymin the minimum range to display on the Y axis\n     *\n     * @param {Number}\n     *            options.ymax the maximum range to display on the Y axis\n     *\n     * @param {Number}\n     *            options.ydiv the number of divisions on the Y axis\n     *\n     * @param {Number}\n     *            options.zmin the minimum range to display on the Z axis\n     *\n     * @param {Number}\n     *            options.zmax the maximum range to display on the Z axis\n     *\n     * @param {Boolean}\n     *            options.yinv invert the y-axis\n     *\n     * @param {String}\n     *            options.colors.fg the foreground color as a CSS color\n     *\n     * @param {String}\n     *            options.colors.bg the background color as a CSS color\n     *\n     * @param {Boolean}\n     *            options.xi invert the foreground/background colors\n     *\n     * @param {Boolean}\n     *            options.all show all of the data on the plot instead of just\n     *            one buffer\n     *\n     * @param {Boolean}\n     *            options.expand auto-scale the plot based on all the data (when\n     *            combined with the all option)\n     *\n     * @param {Number}\n     *            options.origin 1 = x1:xmin, x2:xmax, y1:ymax, y2:ymin\n     *            (default), 2 = x1:xmax, x2:xmin, y1:ymax, y2:ymin (x\n     *            inverted), 3 = x1:xmax, x2:xmin, y1:ymin, y2:ymax (x & y\n     *            inverted), 4 = x1:xmin, x2:xmax, y1:ymin, y2:ymax (y inverted)\n     *\n     * @param {Number}\n     *            options.bufmax the buffer size to use\n     *\n     * @param {Boolean}\n     *            options.nokeypress disable key press actions\n     *\n     * @param options.font_family\n     *            the font family to use for text rendered on the plot.  Monospace\n     *            font will generally work best.\n     *\n     * @param {Boolean}\n     *            options.font_scaled mimic the MIDAS plotting behaviour where the\n     *            plot font-size is scaled relative to the width of the\n     *\n     * @param {Boolean}\n     *            options.font_width sets the font width (default=8); if scaled_font\n     *            is set to true, then the font width will be the minimum of font_width\n     *            or plot width/64.\n     *\n     * @param {Number}\n     *            options.panxpad\n     *            Pad the x-axis panning with this amount.  If a string in the form of\n     *            \"XX%\" the padding will be a percentage.\n     *\n     * @param {Number}\n     *            options.panypad\n     *            Pad the y-axis panning with this amount.  If a string in the form of\n     *            \"XX%\" the padding will be a percentage.\n     *\n     * @returns {Plot}\n     */\n    var Plot = function(element, options) {\n        if (!sigplot.browserIsCompatible()) {\n            throw \"Browser is not compatible\";\n        }\n        // Register with the Mx structure - Step #4\n        this._Mx = mx.open(element);\n        var Mx = this._Mx;\n\n        this._Gx = new GX();\n        this._Gx.parent = element;\n\n        // Variable which stores state of mouse position relative to the canvas\n        this.mouseOnCanvas = false;\n\n        if (!options) {\n            options = {};\n        }\n\n        plot_init(this, options);\n\n        this.mimicListeners = {\n            other: null,\n            listeners: {\n                zoom: null,\n                unzoom: null,\n                xpan: null,\n                ypan: null\n            }\n        };\n\n        this._refresh(); // Draw immediately\n\n        this.onmousemove = (function(plot) {\n            return function(e) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                var rect = e.target.getBoundingClientRect();\n                var xpos = (e.offsetX === undefined) ? (e.pageX - rect.left - window.scrollX) : e.offsetX;\n                var ypos = (e.offsetX === undefined) ? (e.pageY - rect.top - window.scrollY) : e.offsetY;\n\n                // var xpos = (e.offsetX === undefined) ? e.layerX : e.offsetX;\n                // var ypos = (e.offsetY === undefined) ? e.layerY : e.offsetY;\n                var re = pixel_to_real(plot, xpos, ypos);\n                Gx.retx = re.x;\n                Gx.rety = re.y;\n\n                if (Mx.widget) {\n                    return;\n                }\n                display_specs(plot);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mmove', true, true);\n                evt.xpos = xpos;\n                evt.ypos = ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n                if (!executeDefault) {\n                    return;\n                }\n\n                // The crosshair logic in websigplot is different\n                // because we need to clear the previous position\n                // of the line (via XOR) and then draw the new line\n                //\n                // The Mx.xpos and Mx.ypos may have already been\n                // updated to their new location so we need to store\n                // the crosshair position in the Gx structure\n                if (Gx.cross) {\n                    if (Mx.warpbox) {\n                        // during zoom operations undraw the crosshairs\n                        if (Gx.cross_xpos !== undefined) {\n                            mx.rubberline(Mx, Gx.cross_xpos, Mx.t,\n                                Gx.cross_xpos, Mx.b);\n                        }\n                        if (Gx.cross_ypos !== undefined) {\n                            mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r,\n                                Gx.cross_ypos);\n                        }\n                        Gx.cross_xpos = undefined;\n                        Gx.cross_ypos = undefined;\n                    } else {\n                        if (plot.mouseOnCanvas) {\n                            draw_crosshairs(plot);\n                            if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                if (!Gx.y_cut_press_on && !Gx.x_cut_press_on) {\n                                    draw_p_cuts(plot);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (Gx.cntrls === 2) {\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('mtag', true, true);\n                    evt.x = Gx.retx;\n                    evt.y = Gx.rety;\n                    evt.xpos = xpos;\n                    evt.ypos = ypos;\n                    mx.dispatchEvent(Mx, evt);\n                }\n            };\n        }(this));\n\n        this.throttledOnMouseMove = m.throttle(this._Gx.scroll_time_interval,\n            this.onmousemove);\n\n        mx.addEventListener(Mx, \"mousemove\", this.throttledOnMouseMove, false);\n\n        this.onmouseout = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n                if (plot.mouseOnCanvas) {\n                    plot.mouseOnCanvas = false;\n\n                    if (Gx.autohide_readout) {\n                        display_specs(plot);\n                    }\n                    if (Gx.autohide_panbars) {\n                        draw_panbars(plot);\n                    }\n                    if (Mx.prompt) {\n                        Mx.prompt.input.enableBlur();\n                    }\n                }\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mouseout\", this.onmouseout, false);\n\n        this.onmouseover = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n                plot.mouseOnCanvas = true;\n                if (Gx.autohide_panbars) {\n                    draw_panbars(plot);\n                }\n                if (Mx.prompt) {\n                    Mx.prompt.input.disableBlur();\n                }\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mouseover\", this.onmouseover, false);\n\n        this.onmousedown = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // mouse down on the canvas should never do a browser default action\n\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                if (Mx.widget && (Mx.widget.type === \"ONESHOT\")) {\n                    Mx.widget = null;\n                    plot.refresh();\n                }\n\n                // Update Mx event fields\n                mx.ifevent(Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mdown', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n                if (!executeDefault) {\n                    return false;\n                }\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (inPan.inPanRegion) { // Mouse position lies in a pan\n                    // region\n                    event.preventDefault();\n                    if (inPan.command !== ' ') {\n                        var scrollbar = null;\n                        var position = null;\n                        if (inPan.command === \"XPAN\") {\n                            scrollbar = Mx.scrollbar_x;\n                        } else if (inPan.command === \"YPAN\") {\n                            scrollbar = Mx.scrollbar_y;\n                        }\n\n                        if (event.which === 2) {\n                            position = {\n                                x: Mx.xpos,\n                                y: Mx.ypos\n                            };\n                            if ((scrollbar !== undefined) && (onScrollbar(position, scrollbar))) {\n                                // Only show menu if on the scrollbar itself\n                                sigplot_scrollScaleMenu(plot, inPan.command);\n                            }\n                        } else {\n                            if (inPan.command !== ' ') {\n                                position = {\n                                    x: Mx.xpos,\n                                    y: Mx.ypos\n                                };\n                                if (!onScrollbar(position, scrollbar) && event.which === 1) { // Left-clicking\n                                    // not on a\n                                    // scrollbar -\n                                    // handle\n                                    // typical pan\n                                    pan(plot, inPan.command, 0, event); // Execute\n                                    // the\n                                    // first\n                                    // pan\n                                    var repeatPan = function() {\n                                        if (!onScrollbar({\n                                                \"x\": Mx.xpos,\n                                                \"y\": Mx.ypos\n                                            }, scrollbar)) {\n                                            pan(plot, inPan.command, 0, event);\n                                            // execute\n                                            // a\n                                            // pan\n                                            // on\n                                            // every\n                                            // interval\n                                        } else {\n                                            // stop\n                                            // panning\n                                            // once you\n                                            // hit the\n                                            // scrollbar\n                                            if (Gx.stillPanning) {\n                                                window.clearInterval(Gx.stillPanning);\n                                                Gx.repeatPanning = undefined;\n                                            }\n                                        }\n                                    };\n\n                                    // Make scrolling smooth, the longer initial prevents\n                                    // a single click from counting twice\n                                    Gx.stillPanning = window.setTimeout(\n\n                                        function() {\n                                            Gx.repeatPanning = window.setInterval(repeatPan, 50);\n                                        }, 250);\n                                }\n                            }\n                        }\n                    }\n                } else { // Mouse not in a pan region, handle other cases\n                    if (event.which === 1 || event.which === 3) {\n                        var lButtonPressed = false;\n                        if (Gx.legendBtnLocation) {\n                            lButtonPressed = coordsInRectangle(Mx.xpos,\n                                Mx.ypos, Gx.legendBtnLocation.x,\n                                Gx.legendBtnLocation.y,\n                                Gx.legendBtnLocation.width,\n                                Gx.legendBtnLocation.height);\n                        }\n\n                        // If we have a large colorbar, we also have buttons:\n                        if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                            if (event.which === 1 || event.which === 3) {\n                                var mouse_x = Mx.xpos;\n                                var mouse_y = Mx.ypos;\n\n                                // Find vertex positions of top and bottom buttons\n                                var top_x1 = Gx.cbb_top_x1;\n                                var top_y1 = Gx.cbb_top_y1;\n                                var top_x2 = top_x1 + Gx.cbb_width;\n                                var top_y2 = top_y1;\n                                var top_x3 = top_x1 + (1 / 2) * Gx.cbb_width;\n                                var top_y3 = top_y1 - Gx.cbb_height;\n\n                                var topButtonPressed = coordsInTriangle(mouse_x, mouse_y, top_x1, top_y1, top_x2, top_y2, top_x3, top_y3);\n                                //console.log(\"Top \", topButtonPressed);\n\n                                if (topButtonPressed) {\n                                    var cur_cmap = Gx.cmap;\n                                    plot.get_layer(0).img = undefined;\n                                    var current_map = m.Mc.colormap[cur_cmap];\n\n                                    for (var i = 0; i < current_map.colors.length; i++) {\n                                        current_map.colors[i].pos += 5.0;\n                                    }\n                                    mx.colormap(Mx, current_map.colors, 16);\n                                    //Gx.zoff += (1/10)*(Gx.zmax - Gx.zmin);\n                                    plot.refresh();\n                                }\n\n                                // bottom\n                                var bot_x1 = Gx.cbb_bot_x1;\n                                var bot_y1 = Gx.cbb_bot_y1;\n                                var bot_x2 = bot_x1 + Gx.cbb_width;\n                                var bot_y2 = bot_y1;\n                                var bot_x3 = bot_x1 + (1 / 2) * Gx.cbb_width;\n                                var bot_y3 = bot_y1 + Gx.cbb_height;\n\n                                var botButtonPressed = coordsInTriangle(mouse_x, mouse_y, bot_x1, bot_y1, bot_x2, bot_y2, bot_x3, bot_y3);\n\n                                if (botButtonPressed) {\n                                    //Gx.zoff -= (1/10)*(Gx.zmax - Gx.zmin);\n                                    var cur_cmap = Gx.cmap;\n                                    var current_map = m.Mc.colormap[cur_cmap];\n                                    plot.get_layer(0).img = undefined;\n                                    for (var i = 0; i < current_map.colors.length; i++) {\n                                        current_map.colors[i].pos -= 5.0;\n                                    }\n                                    mx.colormap(Mx, current_map.colors, 16);\n                                    plot.refresh();\n                                }\n\n                            }\n\n                        }\n\n                        if (lButtonPressed) {\n                            plot.change_settings({\n                                legend: !Gx.legend\n                            }); // toggle the legend\n                        } else {\n                            display_specs(plot);\n\n                            // Styles for rubberbox\n                            var zoom_style = {\n                                opacity: 0,\n                                return_value: \"zoom\"\n                            };\n\n                            var select_style = {\n                                opacity: 0.4,\n                                fill_color: Mx.hi,\n                                return_value: \"select\"\n                            };\n\n                            if (event.which === 1) {\n                                if (Gx.default_rubberbox_action === \"zoom\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rubberbox_mode, zoom_style,\n                                        select_style);\n                                } else if (Gx.default_rubberbox_action === \"select\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rubberbox_mode,\n                                        select_style, zoom_style);\n                                } // otherwise rubber-box is considered disabled\n                            } else if (event.which === 3) {\n                                if (Gx.default_rightclick_rubberbox_action === \"zoom\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rightclick_rubberbox_mode, zoom_style,\n                                        select_style);\n                                } else if (Gx.default_rightclick_rubberbox_action === \"select\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rightclick_rubberbox_mode,\n                                        select_style, zoom_style);\n                                } // otherwise right-click rubber-box is considered disabled\n                            }\n                        }\n                    } else if (event.which === 2) {\n                        if (!Gx.nomenu) {\n                            sigplot_mainmenu(plot);\n                        }\n                    }\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mousedown\", this.onmousedown, false);\n\n        // Putting a finger on the screen and moving it, simulates\n        // pan.\n        this.ontouchstart = (function(plot) {\n            return function(event) {\n                event.preventDefault();\n\n                // See how many fingers are on the screen\n                // 1 finger == pan and/or unzoom\n                if (event.targetTouches.length === 1) {\n\n                    // See if this is a double-tap\n                    if (Mx.touchClear && Mx.touches) {\n                        // Double tap unzooms to L=0 and fully expands the plot\n                        window.clearTimeout(Mx.touchClear);\n                        plot.unzoom();\n                        middleClickScrollMenuAction(plot, mx.SB_FULL, \"XPAN\");\n                        middleClickScrollMenuAction(plot, mx.SB_FULL, \"YPAN\");\n                    } else {\n                        // Normal touch prepares for panning\n                        var touchEvent = event.targetTouches[0];\n                        // Determine the touch position, relative to the canvas\n                        var rect = touchEvent.target.getBoundingClientRect();\n                        var position = {\n                            x: (touchEvent.pageX - rect.left - window.scrollX),\n                            y: (touchEvent.pageY - rect.top - window.scrollY)\n                        };\n\n                        // Update the Mx coordinates\n                        Mx.xpos = m.bound(position.x, 0, Mx.width);\n                        Mx.ypos = m.bound(position.y, 0, Mx.height);\n\n                        // See if the finger lies on the pan-bars\n                        var inPan = inPanRegion(plot, position);\n                        if (!inPan.inPanRegion) {\n                            Mx.touches = event.targetTouches;\n                        } // TODO support touch 'pan' on the panbars\n                    }\n                } else if (event.targetTouches.length === 2) {\n                    Mx.touch_distance = m.touch_distance(event.targetTouches[0], event.targetTouches[1]);\n                }\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"touchstart\", this.ontouchstart, false);\n\n        this.ontouchmove = (function(plot) {\n            return function(event) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n                var k = Mx.level;\n\n                event.preventDefault();\n                if (event.targetTouches.length === 1) {\n                    // Determine the touch event position\n                    var touchStart = Mx.touches[0];\n                    var rect = touchStart.target.getBoundingClientRect();\n                    var startPosition = {\n                        x: (touchStart.pageX - rect.left - window.scrollX),\n                        y: (touchStart.pageY - rect.top - window.scrollY)\n                    };\n\n                    var touchEvent = event.targetTouches[0];\n                    var rect = touchEvent.target.getBoundingClientRect();\n                    var position = {\n                        x: (touchEvent.pageX - rect.left - window.scrollX),\n                        y: (touchEvent.pageY - rect.top - window.scrollY)\n                    };\n\n                    var new_xpos = m.bound(position.x, 0, Mx.width);\n                    var new_ypos = m.bound(position.y, 0, Mx.height);\n                    var delta_xpos = new_xpos - Mx.xpos;\n                    var delta_ypos = new_ypos - Mx.ypos;\n                    Mx.xpos = new_xpos;\n                    Mx.ypos = new_ypos;\n\n                    var inPan = inPanRegion(plot, position);\n                    // If we are in the pan region, don't take any action\n                    if (inPan.inPanRegion) {\n                        return;\n                    }\n\n                    // Pan proportionally to the movement of the touch\n                    var xdelta = (Mx.stk[k].xscl * delta_xpos);\n                    var ydelta = (Mx.stk[k].yscl * delta_ypos);\n\n                    if (Mx.origin === 1) {\n                        // regular x, regular y\n                        xdelta *= -1;\n                    } else if (Mx.origin === 2) {\n                        // inverted x, regular y\n                        ydelta *= -1;\n                    } else if (Mx.origin === 3) {\n                        // inverted x, inverted y\n                        ydelta *= -1;\n                    } else if (Mx.origin === 4) {\n                        // regular x, inverted y\n                        xdelta *= -1;\n                        ydelta *= -1;\n                    }\n\n                    var xmin = Mx.stk[k].xmin + xdelta;\n                    var xmax = Mx.stk[k].xmax + xdelta;\n                    var ymin = Mx.stk[k].ymin + ydelta;\n                    var ymax = Mx.stk[k].ymax + ydelta;\n\n                    if ((xmin >= Gx.xmin) && (xmax <= Gx.xmax)) {\n                        Mx.stk[k].xmin = xmin;\n                        Mx.stk[k].xmax = xmax;\n                    }\n\n                    if ((ymin >= Gx.ymin) && (ymax <= Gx.ymax)) {\n                        Mx.stk[k].ymin = ymin;\n                        Mx.stk[k].ymax = ymax;\n                    }\n\n                    if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                        Gx.xmin = Math.min(Gx.xmin, xmin);\n                        Gx.xmax = Math.max(Gx.xmax, xmax);\n                        Gx.ymin = Math.min(Gx.ymin, ymin);\n                        Gx.ymax = Math.max(Gx.ymax, ymax);\n                    }\n                    plot.refresh();\n                } else if (event.targetTouches.length === 2) {\n                    var cur_distance = m.touch_distance(event.targetTouches[0], event.targetTouches[1]);\n                    var scaling = (1 - (Mx.touch_distance / cur_distance)) * 0.05;\n\n                    var xran = Mx.stk[k].xmax - Mx.stk[k].xmin;\n                    var yran = Mx.stk[k].ymax - Mx.stk[k].ymin;\n\n                    var xmin = Mx.stk[k].xmin + (scaling * xran);\n                    var xmax = Mx.stk[k].xmax - (scaling * xran);\n                    var ymin = Mx.stk[k].ymin + (scaling * yran);\n                    var ymax = Mx.stk[k].ymax - (scaling * yran);\n\n                    Mx.stk[k].xmin = Math.max(Gx.xmin, xmin);\n                    Mx.stk[k].xmax = Math.min(Gx.xmax, xmax);\n                    Mx.stk[k].ymin = Math.max(Gx.ymin, ymin);\n                    Mx.stk[k].ymax = Math.min(Gx.ymax, ymax);\n\n                    plot.refresh();\n                }\n            };\n        }(this));\n\n        this.throttledOnTouchMove = m.throttle(\n            this._Gx.scroll_time_interval,\n            this.ontouchmove);\n\n        mx.addEventListener(Mx, \"touchmove\", this.throttledOnTouchMove, false);\n\n        this.ontouchend = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                event.preventDefault();\n                console.log(\"on touch end \", event.targetTouches.length);\n                Gx.panning = undefined;\n                plot._Mx.scrollbar_x.action = 0;\n                plot._Mx.scrollbar_y.action = 0;\n                Mx.touch_distance = undefined;\n\n                mx.widget_callback(Mx, event);\n                // Only clear the touches after a slight delay so we can\n                // detect double-tap\n                Mx.touchClear = window.setTimeout(\n\n                    function() {\n                        Mx.touches = undefined;\n                        Mx.touchClear = undefined;\n                    }, 100);\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"touchend\", this.ontouchend, false);\n\n        this.docMouseUp = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n\n                if (event.which === 1) {\n                    // in general, you shouldn't put anything in here\n                    // ...instead it should go into rubberbox_cb\n                    Gx.panning = undefined;\n                    plot._Mx.scrollbar_x.action = 0; // TODO Is this\n                    // necessary?\n                    plot._Mx.scrollbar_y.action = 0;\n                } //else if (event.which === 2) {\n                // nothing\n                //} else if (event.which === 3) {\n                // nothing\n                //}\n                if (Gx.stillPanning) {\n                    window.clearTimeout(Gx.stillPanning);\n                    Gx.stillPanning = undefined;\n                }\n                if (Gx.repeatPanning) { // Clear the panning interval on any\n                    // mouse up in the document\n                    window.clearInterval(Gx.repeatPanning);\n                    Gx.repeatPanning = undefined;\n                }\n                return false;\n            };\n        }(this));\n        document.addEventListener(\"mouseup\", this.docMouseUp, false);\n\n        this.mouseup = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // mouse up on the canvas should never do a browser default action\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mup', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n\n                if (executeDefault) {\n                    if (Mx.warpbox || Mx.widget || Mx.prompt) {\n                        // If any of these are true, the mouseup is going\n                        // to be handled by them...but this is a fragile approach\n                        // because it relies upon implicit ordering of event dispatch\n                        // for mouseup events.  It should be improved/refactored at some point\n                        return;\n                    }\n\n                    // Normal mouse up handling\n                    if (event.which === 1) {\n                        // If we are in the pan region, perform the pan\n                        // otherwise emit an mtag\n                        var inCenter = inPanCenterRegion(plot);\n                        if (inCenter.inCenterRegion) {\n                            if (inCenter.command !== ' ') {\n                                pan(plot, inCenter.command, 0, event); // pan\n                            }\n                        } else if (Gx.cntrls === 1) {\n                            // Update the mark\n                            Gx.xmrk = Gx.retx;\n                            Gx.ymrk = Gx.rety;\n\n                            var mtagevt = document.createEvent('Event');\n                            mtagevt.initEvent('mtag', true, true);\n                            mtagevt.x = Gx.xmrk;\n                            mtagevt.y = Gx.ymrk;\n                            mtagevt.xpos = event.x || event.clientX;\n                            mtagevt.ypos = event.y || event.clientY;\n                            mtagevt.w = undefined;\n                            mtagevt.h = undefined;\n                            mtagevt.shift = event.shiftKey;\n                            mx.dispatchEvent(Mx, mtagevt);\n\n                            // Refresh to draw the new marker position\n                            //if (Gx.always_show_marker || Gx.show_marker) {\n                            plot.redraw();\n                            //}\n                        }\n                    } else if (event.which === 2) {\n                        if (Gx.nomenu) {\n                            // Send an event so that a custom menu can be displayed\n                            // if desired\n                            var evt = document.createEvent('Event');\n                            evt.initEvent('showmenu', true, true);\n                            evt.x = event.x || event.clientX;\n                            evt.y = event.y || event.clientY;\n                            var executeDefault = mx.dispatchEvent(Mx, evt);\n\n                            if (executeDefault) {\n                                if (event.stopPropagation) {\n                                    event.stopPropagation();\n                                }\n                                event.cancelBubble = true;\n                                mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n                                var emit_hidemenu = function() {\n                                    try {\n                                        var hideMenuEvt = document.createEvent('Event');\n                                        hideMenuEvt.initEvent('hidemenu', true, true);\n                                        if (mx.dispatchEvent(Mx, hideMenuEvt)) {\n                                            mx.addEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n                                        }\n                                    } finally {\n                                        document.removeEventListener(\"mouseup\", emit_hidemenu, false);\n                                    }\n                                };\n                                document.addEventListener(\"mouseup\", emit_hidemenu, false);\n                            }\n                        }\n                    } else if (event.which === 3) { // unzoom only happens on\n                        // right-clicks on plot\n                        // unzoom/expand\n                        event.preventDefault();\n\n                        plot.unzoom(1);\n                        plot.refresh();\n                    }\n                }\n\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"mouseup\", this.mouseup, false);\n\n        this.mouseclick = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // alway prevent any default browser actions on the plot\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mclick', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which; // not always available on all browser\n                if (mx.dispatchEvent(Mx, evt)) {\n                    // currently there isn't a default for mouseclick to cancel\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"click\", this.mouseclick, false);\n\n        this.mousedblclick = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // alway prevent any default browser actions on the plot\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mdblclick', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which; // not always available on all browser\n                if (mx.dispatchEvent(Mx, evt)) {\n                    // currently there isn't a default for mouseclick to cancel\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"dblclick\", this.mousedblclick, false);\n\n        // PANBAR DRAGGING mouse event handlers:\n        this.dragMouseDownHandler = (function(plot) {\n            return function(event) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (inPan.inPanRegion) { // Mouse position lies in a pan\n                    // region\n                    event.preventDefault();\n                    if (inPan.command !== ' ') {\n                        var scrollbar;\n                        if (inPan.command === \"XPAN\") {\n                            scrollbar = Mx.scrollbar_x;\n                        } else if (inPan.command === \"YPAN\") {\n                            scrollbar = Mx.scrollbar_y;\n                        }\n\n                        var position = {\n                            x: Mx.xpos,\n                            y: Mx.ypos\n                        };\n                        if (scrollbar !== undefined && onScrollbar(position, scrollbar) && event.which === 1) { // On scrollbar, set up\n                            // a DRAG\n                            Gx.panning = {\n                                axis: inPan.command,\n                                xpos: event.screenX, // Use screen-relative\n                                // values here instead\n                                // of div/page-relative\n                                // values\n                                ypos: event.screenY,\n                                xmin: Mx.stk[Mx.level].xmin,\n                                xmax: Mx.stk[Mx.level].xmax,\n                                ymin: Mx.stk[Mx.level].ymin,\n                                ymax: Mx.stk[Mx.level].ymax\n                            };\n                        }\n                    }\n                }\n            };\n        }(this));\n        window.addEventListener(\"mousedown\", this.dragMouseDownHandler, false);\n\n        this.dragMouseMoveHandler = (function(plot) {\n            return function(e) {\n                var Gx = plot._Gx;\n\n                if (Gx.panning !== undefined) { // execute a scrollbar DRAG\n                    try {\n                        drag_scrollbar(plot, Gx.panning.axis, e);\n                    } catch (err) {\n                        console.log(\"Error: \" + err); // TODO Eventually come\n                        // up with better error\n                        // handling here\n                    }\n                }\n            };\n        }(this));\n\n        this.throttledDragOnMouseMove = m.throttle(this._Gx.scroll_time_interval,\n            this.dragMouseMoveHandler);\n\n        window.addEventListener(\"mousemove\", this.throttledDragOnMouseMove,\n            false);\n\n        this.dragMouseUpHandler = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n\n                if (event.which === 1) {\n                    Gx.panning = undefined; // Panbar dragging completed - clear\n                    // the state variable\n                }\n            };\n        }(this));\n        window.addEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n\n        // TODO this may need to be throttled or debounced\n        this.onresize = (function(plot) {\n            return function(event) {\n                if (mx.checkresize(plot._Mx)) {\n                    plot.refresh();\n                }\n            };\n        }(this));\n\n        // Mouse Wheel logic\n        this.wheelHandler = (function(plot) {\n\n            var Mx = plot._Mx;\n            var Gx = plot._Gx;\n\n            var throttledPan = m.throttle(100, function(inPan) {\n                // Mouse wheel\n                // event over a\n                // panning\n                // region\n\n                var scrollbar;\n                if (inPan.command === \"XPAN\") {\n                    scrollbar = Mx.scrollbar_x;\n                } else if (inPan.command === \"YPAN\") {\n                    scrollbar = Mx.scrollbar_y;\n                }\n\n                // For now, vertical mouse scrolling is the only action that\n                // will trigger a pan\n                // Later, we can add horizontal mouse scrolling if we choose\n                if (Gx.wheelscroll_mode_natural) { // Original Sig-Plot\n                    // orientation\n                    scrollbar.action = (event.deltaY < 0 ? mx.SB_WHEELDOWN : mx.SB_WHEELUP);\n                } else { // Inverted/\"un-natural\" orientation\n                    scrollbar.action = (event.deltaY < 0 ? mx.SB_WHEELUP : mx.SB_WHEELDOWN);\n                }\n\n                scrollbar.step = 0.1 * scrollbar.srange;\n                scrollbar.page = 9 * scrollbar.step;\n\n                // Execute wheel action on the scrollbar\n                mx.scroll(Mx, scrollbar, mx.XW_COMMAND, undefined,\n                    scrollbar);\n\n                // Update the viewbox\n                updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange, inPan.command.slice(0, 1));\n            });\n\n            var throttledZoom = m.throttle(100, function() {\n                var zoomperc = Gx.wheelZoomPercent || 0.2;\n                if (Gx.wheelscroll_mode_natural) {\n                    if (event.deltaY > 0) {\n                        zoomperc = -1 * zoomperc;\n                    }\n                } else { // Inverted/\"un-natural\" orientation\n                    if (event.deltaY < 0) {\n                        zoomperc = -1 * zoomperc;\n                    }\n                }\n\n                if (Gx.wheelZoom === \"x\") {\n                    plot.percent_zoom(zoomperc, 1, true);\n                } else if (Gx.wheelZoom === \"y\") {\n                    plot.percent_zoom(1, zoomperc, true);\n                } else {\n                    plot.percent_zoom(zoomperc, zoomperc, true);\n                }\n            });\n\n            return function(event) {\n                // Update Mx event fields\n                mx.ifevent(Mx, event);\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (plot.mouseOnCanvas) {\n                    event.preventDefault();\n\n                    if (inPan.inPanRegion) {\n                        throttledPan(inPan);\n                    } else if (Gx.wheelZoom) {\n                        throttledZoom();\n                    }\n                }\n            };\n        }(this));\n\n        window.addWheelListener(window, this.wheelHandler, false);\n\n        window.addEventListener(\"resize\", this.onresize, false);\n\n        // If multiple plots are in the same window, then it\n        // may be desired to disable keypress behavior and implement\n        // it at a higher-level...by default keypress behavior\n        // is enabled and only works if the mouse if over the plot\n        if (!options.nokeypress) {\n            this.onkeypress = (function(plot) {\n                return function(event) {\n                    var Mx = plot._Mx;\n                    var Gx = plot._Gx;\n                    if (plot.mouseOnCanvas) {\n\n                        if (Mx.widget && (Mx.widget.type === \"MENU\")) {\n                            return; // The menu absorbs the keypress\n                        }\n\n                        if (Mx.widget && (Mx.widget.type === \"ONESHOT\")) {\n                            Mx.widget = null;\n                            plot.refresh();\n                            return;\n                        }\n\n                        var keyCode = common.getKeyCode(event);\n\n                        // Since the mouse is in the plot area, send a keypress event\n                        var evt = document.createEvent('Event');\n                        evt.initEvent('plotkeypress', true, true);\n                        evt.keyCode = keyCode;\n                        evt.shiftKey = event.shiftKey;\n                        evt.ctrlKey = event.ctrlKey;\n                        evt.altKey = event.altKey;\n                        evt.metaKey = event.metaKey;\n                        var executeDefault = mx.dispatchEvent(Mx, evt);\n                        if (!executeDefault) {\n                            return;\n                        }\n\n                        // Only respond to keypresses if the mouse is\n                        // in the plot area....\n\n                        if (keyCode === 97) { // 'a'\n                            Gx.iabsc = (Gx.iabsc + 1) % 4;\n                            // It's kinda up in the air if changing the 'specs'\n                            // area should also change the plotting mode itself...\n                            // on one hand, if you have multiple layers with different\n                            // xdeta's then switching the specs area to index mode will\n                            // give you only the index of the baselayer...on the other hand\n                            // the use may only want to change the readout and not the x-axis\n                            // or the plot...for now this is commented out to behave in the same\n                            // manner as SIGPLOT.\n                            //plot.change_settings({\n                            //\tindex : Gx.iabsc === 1\n                            //});\n                            display_specs(plot);\n                        } else if (keyCode === 108) { // 'l'\n                            plot.change_settings({\n                                legend: !Gx.legend\n                            }); // toggle the legend\n                        } else if (keyCode === 103) { // 'g'\n                            plot.change_settings({\n                                grid: !Gx.grid\n                            }); // toggle the grid\n                        } else if ((keyCode === 98) || (keyCode === 2)) { // 'b' and CTRL-'b'\n                            if (Mx.warpbox) {\n                                if (Mx.warpbox.mode === \"box\") {\n                                    Mx.warpbox.mode = \"horizontal\";\n                                } else if (Mx.warpbox.mode === \"horizontal\") {\n                                    Mx.warpbox.mode = \"vertical\";\n                                } else {\n                                    Mx.warpbox.mode = \"box\";\n                                }\n                                mx.redraw_warpbox(Mx);\n                            }\n                        } else if (keyCode === 99) { // 'c'\n                            plot.change_settings({\n                                xcnt: -1 * Gx.cntrls\n                            });\n                        } else if (keyCode === 114) { // 'r'\n                            plot.change_settings({\n                                show_readout: !Gx.show_readout\n                            });\n                        } else if (keyCode === 115) { // 's'\n                            plot.change_settings({\n                                specs: !Gx.specs\n                            });\n                        } else if (keyCode === 112) { // 'p'\n                            plot.change_settings({\n                                p_cuts: !Gx.p_cuts\n                            });\n                        } else if (keyCode === 120) { // 'x'\n                            if (Gx.x_cut_press_on) {\n                                // leave xCut\n                                plot.xCut();\n                            } else if (Gx.xyKeys === \"pop-up\") {\n                                if (!Gx.x_pop_now) {\n                                    sigplot_show_x(plot);\n                                    Gx.x_pop_now = true;\n                                } else {\n                                    Gx.x_pop_now = false;\n                                }\n                            } else if ((Gx.lyr[0].hcb[\"class\"] === 1) && (Gx.xyKeys === \"automatic\")) {\n                                if (!Gx.x_pop_now) {\n                                    sigplot_show_x(plot);\n                                    Gx.x_pop_now = true;\n                                } else {\n                                    Gx.x_pop_now = false;\n                                }\n                            } else if ((Gx.xyKeys !== \"disable\") && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                // show xCut if xyKeys aren't disabled and the first layer is \n                                // type 2000 and y-cut isn't currently enabled (we already checked\n                                // that x_cut above)\n                                if (!Gx.y_cut_press_on) {\n                                    plot.xCut(pixel_to_real(plot, 0, Mx.ypos).y);\n                                }\n                            }\n                        } else if (keyCode === 121) { // 'y'\n                            if (Gx.y_cut_press_on) {\n                                plot.yCut();\n                            } else if (Gx.xyKeys === \"pop-up\") {\n                                if (!Gx.y_pop_now) {\n                                    sigplot_show_y(plot);\n                                    Gx.y_pop_now = true;\n                                } else {\n                                    Gx.y_pop_now = false;\n                                }\n                            } else if ((Gx.lyr[0].hcb[\"class\"] === 1) && (Gx.xyKeys === \"automatic\")) {\n                                if (!Gx.y_pop_now) {\n                                    sigplot_show_y(plot);\n                                    Gx.y_pop_now = true;\n                                } else {\n                                    Gx.y_pop_now = false;\n                                }\n                            } else if ((Gx.xyKeys !== \"disable\") && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                // show xCut if xyKeys aren't disabled and the first layer is \n                                // type 2000 and y-cut isn't currently enabled (we already checked\n                                // that y_cut above)\n                                if (!Gx.x_cut_press_on) {\n                                    plot.yCut(pixel_to_real(plot, Mx.xpos, 0).x);\n                                }\n                            }\n                        } else if (keyCode === 122) { // 'z'\n                            sigplot_show_z(plot);\n                        } else if (keyCode === 116) { // 't'\n                            sigplot_show_timecode(plot);\n                        } else if (keyCode === 109) { // 'm'\n                            if (!Gx.nomenu) {\n                                var evt = document.createEvent('Event');\n                                evt.initEvent('showmenu', true, true);\n                                evt.x = Mx.x;\n                                evt.y = Mx.y;\n                                var executeDefault = mx.dispatchEvent(Mx, evt);\n                                if (executeDefault) {\n                                    sigplot_mainmenu(plot);\n                                }\n                            }\n                        } else if (keyCode === 63) { // '?'\n                            mx.message(Mx, MAIN_HELP);\n                        } else if (keyCode === 102) { // 'f'\n                            mx.fullscreen(Mx);\n                            plot.refresh();\n                        } else if ((keyCode === 9) && (event.ctrlKey)) { // ctrl-i\n                            plot.change_settings({\n                                invert: null\n                            });\n                        } else if (keyCode === 107) { // 'k' show marker\n                            Gx.show_marker = !Gx.show_marker;\n                            plot.redraw();\n\n                        }\n                    }\n                };\n            }(this));\n\n            common.setKeypressHandler(this.onkeypress);\n        }\n\n        return this;\n    };\n\n    // Public methods\n\n    Plot.prototype = {\n        /** @lends Plot **/\n\n        /**\n         * Add a plugin to the plot\n         *\n         * @param plugin\n         *            the plugin object\n         *\n         * @param zorder\n         *            the zorder for the plugin to render, all plugins render as\n         *            overlays on top of the plot\n         */\n        add_plugin: function(plugin, zorder) {\n            if (zorder === undefined) {\n                zorder = Number.MAX_VALUE;\n            }\n            if (zorder <= 0) {\n                throw \"Invalid plugin zorder\";\n            }\n\n\n            plugin.init(this);\n\n            var canvas = document.createElement('canvas');\n            canvas.width = this._Mx.canvas.width;\n            canvas.height = this._Mx.canvas.height;\n\n            this._Gx.plugins.push({\n                impl: plugin,\n                zorder: zorder,\n                canvas: canvas\n            });\n\n            this._Gx.plugins.sort(function(a, b) {\n                return (a.zorder - b.zorder);\n            });\n\n\n            this.refresh();\n        },\n\n        /**\n         * Removes a plugin from the plot\n         *\n         * @param plugin\n         *            the plugin object\n         */\n        remove_plugin: function(plugin) {\n            var i = this._Gx.plugins.length;\n            while (i--) {\n                if (this._Gx.plugins[i].impl === plugin) {\n                    if (plugin.dispose) {\n                        plugin.dispose();\n                    }\n                    if (this._Gx.plugins[i].canvas.parentNode) {\n                        this._Gx.plugins[i].canvas.parentNode.removeElement(this._Gx.plugins[i].canvas);\n                    }\n                    this._Gx.plugins.splice(i, 1);\n                }\n            }\n            this._Gx.plugins.sort(function(a, b) {\n                return (a.zorder - b.zorder);\n            });\n\n            this.refresh();\n        },\n\n        /**\n         * Adds a listener to plot events.\n         *\n         * @example plot.addListener(what, function(event) {});\n         *\n         * @param what\n         *            the name of the event to listen to.  \"file_deoverlayed\" is\n         *            emitted when a file is deoverlayed (the name of the deoverlayed\n         *            file can be found in evt.filename), \"file_overlayed\" is emitted\n         *            when a file is overlayed (the name of the overlayed file can\n         *            be found in evt.filename), \"hidemenu\"\tis emitted when the\n         *            menu should be hidden (a selection is made or a mouse click\n         *            occurs away from the menu), \"mdown\"\tis emitted when the mouse\n         *            down event occurs (the evt has parts evt.xpos (the mouse x-position\n         *            relative to the canvas), evt.ypos (the mouse y-position relative\n         *            to the canvas), evt.x (the mouse x-position relative to the data),\n         *            evt.y (the mouse y-position relative to the data) and evt.which\n         *            (returns which mouse button was pressed for the event)) \"mmove\"\n         *            is emitted when a mouse move event occurs (the evt has parts\n         *            evt.xpos (the mouse x-position relative to the canvas), evt.ypos\n         *            (the mouse y-position relative to the canvas), evt.x (the mouse\n         *            x-position relative to the data), evt.y (the mouse y-position\n         *            relative to the data) and evt.which (returns which mouse button\n         *            was pressed for the event)), \"mtag\"\tis emitted when a mouse \"tag\"\n         *            event occurs (the evt of an mtag has different parts depending\n         *            on what triggered it. It will always contain evt.xpos (the mouse\n         *            x-position relative to the canvas), evt.ypos (the mouse y-position\n         *            relative to the canvas), evt.x (the mouse x-position relative\n         *            to the data), and evt.y (the mouse y-position relative to the data).\n         *            If the rubberboxes are enabled, evt.h and evt.w will contain\n         *            the width and height of the box. evt.shift will contain info\n         *            about the shift key if it is pressed), \"mmove\" is emitted when\n         *            a mouse move event has occurred, \"mdown\" is emitted when\n         *            a mouse down event has occurred (the evt has parts evt.xpos\n         *            (the mouse x-position relative to the canvas), evt.ypos (the\n         *            mouse y-position relative to the canvas), evt.x (the mouse\n         *            x-position relative to the data), evt.y (the mouse y-position\n         *            relative to the data) and evt.which (returns which mouse button\n         *            was pressed for the event)), \"mup\" is emitted when a mouse up\n         *            event occurs. (the evt has parts evt.xpos (the mouse x-position\n         *            relative to the canvas), evt.ypos (the mouse y-position relative\n         *            to the canvas), evt.x (the mouse x-position relative to the data),\n         *            evt.y (the mouse y-position relative to the data) and evt.which\n         *            (returns which mouse button was pressed for the event)),\n         *            \"reread\" is emitted when a reread has been performed, \"sigplotexit\"\n         *            is emitted when an exit plot event occurs, and \"showmenu\"\tis\n         *            emitted when the menu should be shown (the evt.x and evt.y\n         *            contain the coordinates on the plot where the menu will be displayed.\n         *\n         * @param [function]\n         *            callback the function that will be called when the event is heard\n         */\n        addListener: function(what, callback) {\n            var Mx = this._Mx;\n            mx.addEventListener(Mx, what, callback, false);\n        },\n\n        /**\n         * Removes a listener to plot events.\n         *\n         * @param what\n         *            the event that was listned to\n         * @param callback\n         */\n        removeListener: function(what, callback) {\n            var Mx = this._Mx;\n            mx.removeEventListener(Mx, what, callback, false);\n        },\n\n        /**\n         * Change one or more plot settings. For boolean types, passing null\n         * will toggle the setting.\n         *\n         * @example plot.change_settings({[settings]});\n         *\n         * @param settings\n         *            Key-value pairs whose values are the settings to change\n         *\n         * @param {Boolean}\n         *            settings.grid change grid visibility\n         *\n         * @param {Boolean}\n         *            settings.index change index setting\n         *\n         * @param {Boolean}\n         *            settings.all change the plot to show all data\n         *\n         * @param {Boolean}\n         *            settings.show_x_axis true displays the x axis\n         *\n         * @param {Boolean}\n         *            settings.show_y_axis true displays the y axis\n         *\n         * @param {Boolean}\n         *            settings.show_readout true displays the readout\n         *\n         * @param {Boolean}\n         *            settings.specs turns on and off specs\n         *\n         * @param {String}\n         *            settings.xcnt \"leftmouse\", \"continuous\", \"disable\",\n         *            \"enable\"\n         *\n         * @param {Boolean}\n         *            settings.legend true displays the legend\n         *\n         * @param {Boolean}\n         *            settings.pan true will display scrollbars and enable panning\n         *\n         * @param {Boolean}\n         *            settings.cross true displays cross hairs\n         *\n         * @param {String}\n         *            settings.rubberbox_action controls action of rubberbox.\n         *            \"zoom\" (default) = zoom to the selected area, \"select\" =\n         *            select the selected area, and \"null\" = disabled, no action\n         *\n         * @param {String}\n         *            settings.rubberbox_mode controls the behavior of the rubberbox.\n         *            \"zoom\" = zoom to the selected area, \"box\" = trigger an mtag\n         *            action on the selected area\n         *\n         * @param {String}\n         *            settings.rightclick_rubberbox_action controls action of\n         *            rubberbox on rightclick. \"zoom\" = zoom to the selected area,\n         *            \"select\" = select the selected area, and \"null\" (the default)\n         *            = disabled, no action\n         *\n         * @param {String}\n         *            settings.rightclick_rubberbox_mode controls the behavior of\n         *            the rubberbox on rightclck. \"zoom\" = zoom to the selected area,\n         *            \"box\" = trigger an mtag action on the selected area. By default\n         *            is null to disable right-click boxes\n         *\n         * @param {String}\n         *            settings.wheelscroll_mode_natural true indicates natural\n         *            mode, where scrolling the mousewheel forward will pan down\n         *            and backwards will pan up\n         *\n         * @param {String}\n         *            settings.cmode !!!! CHANGED\n         *\n         * @param {String}\n         *            settings.phunits The phase units \"D\" = Degrees, \"R\" = Radians,\n         *            \"C\" = Cycles\n         *\n         * @ param {Boolean}\n         *            settings.lg_colorbar true displays the large colorbar\n         *\n         * @param {Boolean}\n         *            settings.p_cuts true displays p_cuts on a 2D plot\n         */\n\n        change_settings: function(settings) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            for (var i = 0; i < Gx.lyr.length; i++) {\n                Gx.lyr[i].change_settings(settings);\n            }\n\n            if (settings.xyKeys !== undefined) {\n                if (settings.xyKeys === null) {\n                    Gx.xyKeys = \"automatic\";\n                } else {\n                    Gx.xyKeys = settings.xyKeys;\n                }\n            }\n\n            if (settings.grid !== undefined) {\n                if (settings.grid === null) {\n                    Gx.grid = !Gx.grid;\n                } else {\n                    Gx.grid = settings.grid;\n                }\n            }\n\n            if (settings.gridBackground !== undefined) {\n                Gx.gridBackground = settings.gridBackground;\n            }\n\n            if (settings.gridStyle !== undefined) {\n                Gx.gridStyle = settings.gridStyle;\n            }\n\n            if (settings.wheelZoom !== undefined) {\n                Gx.wheelZoom = settings.wheelZoom;\n            }\n\n            if (settings.wheelZoomPercent !== undefined) {\n                Gx.wheelZoomPercent = settings.wheelZoomPercent;\n            }\n\n            if (settings.autol !== undefined) {\n                Gx.autol = settings.autol;\n            }\n\n            if ((settings.index !== undefined) && (settings.index !== Gx.index)) {\n                if (settings.index === null) {\n                    Gx.index = !Gx.index;\n                } else {\n                    Gx.index = settings.index;\n                }\n\n                // the original sigplot.for fails\n                // to do this so that the specs area\n                // has the correct setting.\n                if ((Gx.index) && (Gx.iabsc !== 1)) {\n                    Gx.iabsc = 1;\n                } else if ((!Gx.index) && (Gx.iabsc === 1)) {\n                    Gx.iabsc = 0;\n                }\n\n                var xmin;\n                var xmax;\n                scale_base(this, {\n                    get_data: false\n                }, xmin, xmax);\n\n                // like sigplot, undo all zoom levels\n                this.unzoom();\n            }\n\n            if (settings.all !== undefined) {\n                if (settings.all === null) {\n                    Gx.all = !Gx.all;\n                } else {\n                    Gx.all = settings.all;\n                }\n            }\n\n            if (settings.show_x_axis !== undefined) {\n                if (settings.show_x_axis === null) {\n                    Gx.show_x_axis = !Gx.show_x_axis;\n                } else {\n                    Gx.show_x_axis = settings.show_x_axis;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.show_y_axis !== undefined) {\n                if (settings.show_y_axis === null) {\n                    Gx.show_y_axis = !Gx.show_y_axis;\n                } else {\n                    Gx.show_y_axis = settings.show_y_axis;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.show_readout !== undefined) {\n                if (settings.show_readout === null) {\n                    Gx.show_readout = !Gx.show_readout;\n                } else {\n                    Gx.show_readout = settings.show_readout;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.specs !== undefined) {\n                if (settings.specs === null) {\n                    Gx.specs = !Gx.specs;\n                } else {\n                    Gx.specs = settings.specs;\n                }\n                if (Gx.specs) {\n                    Gx.show_x_axis = true;\n                    Gx.show_y_axis = true;\n                    Gx.show_readout = true;\n                } else {\n                    Gx.show_x_axis = false;\n                    Gx.show_y_axis = false;\n                    Gx.show_readout = false;\n                }\n            }\n\n            if (settings.xcnt !== undefined) {\n                if (settings.xcnt === \"leftmouse\") {\n                    Gx.cntrls = 1;\n                } else if (settings.xcnt === \"continuous\") {\n                    Gx.cntrls = 2;\n                } else if ((settings.xcnt === \"disable\") && (Gx.cntrls > 0)) {\n                    Gx.cntrls = -1 * Gx.cntrls;\n                } else if ((settings.xcnt === \"enable\") && (Gx.cntrls < 0)) {\n                    Gx.cntrls = -1 * Gx.cntrls;\n                } else {\n                    Gx.cntrls = settings.xcnt;\n                }\n            }\n\n            if (settings.legend !== undefined) {\n                if (settings.legend === null) {\n                    Gx.legend = !Gx.legend;\n                } else {\n                    Gx.legend = settings.legend;\n                }\n            }\n\n            if (settings.pan !== undefined) {\n                if (settings.pan === null) {\n                    Gx.pan = !Gx.pan;\n                } else {\n                    Gx.pan = settings.pan;\n                }\n            }\n\n            if (settings.cross !== undefined) {\n                if (settings.cross === null) { // catch null or undefined here\n                    Gx.cross = !Gx.cross;\n                } else {\n                    Gx.cross = settings.cross;\n                }\n                if (!Gx.cross) {\n                    if (Gx.cross_xpos !== undefined) {\n                        mx.rubberline(Mx, Gx.cross_xpos, Mx.t, Gx.cross_xpos,\n                            Mx.b);\n                    }\n                    if (Gx.cross_ypos !== undefined) {\n                        mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r,\n                            Gx.cross_ypos);\n                    }\n                    Gx.cross_xpos = undefined;\n                    Gx.cross_ypos = undefined;\n                } else {\n                    Gx.cross_xpos = undefined;\n                    Gx.cross_ypos = undefined;\n                    if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                        draw_crosshairs(this);\n                    }\n                }\n            }\n\n            var cmode;\n            var address = settings.cmode === undefined ? \"\" : settings.cmode;\n            if (typeof address === \"string\") {\n                address = address + \"\";\n                cmode = address.toUpperCase();\n            } else {\n                cmode = address;\n            }\n\n            if (settings.cmode !== undefined) {\n                if ((cmode === \"MA\") || (cmode === \"INMA\") || (cmode === \"ABMA\") ||\n                    (cmode === \"__MA\") || (cmode === \"MAGNITUDE\") || (cmode === 1)) {\n                    cmode = 1;\n                }\n                if ((cmode === \"PH\") || (cmode === \"INPH\") || (cmode === \"ABPH\") ||\n                    (cmode === \"__PH\") || (cmode === \"PHASE\") || (cmode === 2)) {\n                    cmode = 2;\n                }\n                if ((cmode === \"RE\") || (cmode === \"INRE\") || (cmode === \"ABRE\") ||\n                    (cmode === \"__RE\") || (cmode === \"REAL\") || (cmode === 3)) {\n                    cmode = 3;\n                }\n                if ((cmode === \"IM\") || (cmode === \"INIM\") || (cmode === \"ABIM\") ||\n                    (cmode === \"__IM\") || (cmode === \"IMAGINARY\") || (cmode === 4)) {\n                    cmode = 4;\n                }\n                if ((cmode === \"LO\") || (cmode === \"D1\") || (cmode === \"INLO\") || (cmode === \"IND1\") ||\n                    (cmode === \"ABIM\") || (cmode === \"ABD1\") || (cmode === \"__LO\") ||\n                    (cmode === \"__D1\") || (cmode === \"10*LOG10\") || (cmode === 6)) {\n                    cmode = 6;\n                }\n                if ((cmode === \"L2\") || (cmode === \"D2\") || (cmode === \"INL2\") || (cmode === \"IND2\") ||\n                    (cmode === \"ABLO\") || (cmode === \"ABD2\") || (cmode === \"__L2\") ||\n                    (cmode === \"__D2\") || (cmode === \"20*LOG10\") || (cmode === 7)) {\n                    cmode = 7;\n                }\n                if ((cmode === \"RI\") || (cmode === \"IR\") || (cmode === \"INRI\") || (cmode === \"INIR\") ||\n                    (cmode === \"ABRI\") || (cmode === \"ABIR\") || (cmode === \"__RI\") ||\n                    (cmode === \"__IR\") || (cmode === \"IMAG/REAL\") || (cmode === \"REAL/IMAG\") || (cmode === 5)) {\n                    if (Gx.index) {\n                        alert(\"Imag/Real mode not permitted in INDEX mode\");\n                    } else {\n                        cmode = 5;\n                    }\n                }\n\n                changemode(this, cmode);\n            }\n\n            if (settings.phunits !== undefined) {\n                changephunits(this, settings.phunits);\n            }\n\n            if (settings.rubberbox_action !== undefined) {\n                Gx.default_rubberbox_action = settings.rubberbox_action;\n            }\n\n            if (settings.rubberbox_mode !== undefined) {\n                Gx.default_rubberbox_mode = settings.rubberbox_mode;\n            }\n\n            if (settings.rightclick_rubberbox_action !== undefined) {\n                Gx.default_rightclick_rubberbox_action = settings.rightclick_rubberbox_action;\n            }\n\n            if (settings.rightclick_rubberbox_mode !== undefined) {\n                Gx.default_rightclick_rubberbox_mode = settings.rightclick_rubberbox_mode;\n            }\n\n            if (settings.wheelscroll_mode_natural !== undefined) {\n                Gx.wheelscroll_mode_natural = settings.wheelscroll_mode_natural;\n            }\n\n            if (settings.colors !== undefined) {\n                if (!settings.colors.fg) {\n                    settings.colors.fg = Mx.fg;\n                }\n                if (!settings.colors.bg) {\n                    settings.colors.bg = Mx.bg;\n                }\n                mx.setbgfg(Mx, settings.colors.bg, settings.colors.fg, Mx.xi);\n            }\n\n            if (settings.cmap !== undefined) {\n                if (settings.cmap === null) {\n                    // default\n                    if (Gx.cmode === 2) {\n                        Gx.cmap = 2; // wheel\n                    } else {\n                        Gx.cmap = 1; // ramp\n                    }\n                } else {\n                    Gx.cmap = settings.cmap; // TODO support string lookup\n                }\n\n                setup_cmap(this, Gx.cmap);\n            }\n\n            if (settings.yinv !== undefined) {\n                if (settings.yinv) {\n                    Mx.origin = 4;\n                } else {\n                    Mx.origin = 1;\n                }\n            }\n\n            if (settings.rasterSmoothing !== undefined) {\n                if (settings.rasterSmoothing === null) {\n                    Gx.rasterSmoothing = !Gx.rasterSmoothing;\n                } else {\n                    Gx.rasterSmoothing = settings.rasterSmoothing;\n                }\n            }\n\n            if (settings.fillStyle !== undefined) {\n                Gx.fillStyle = settings.fillStyle;\n            }\n\n            if (settings.invert !== undefined) {\n                if (settings.invert === null) {\n                    mx.invertbgfg(Mx);\n                } else if (settings.invert === true) {\n                    mx.setbgfg(this, \"white\", \"black\");\n                } else {\n                    mx.setbgfg(this, \"black\", \"white\");\n                }\n            }\n\n            if (settings.nomenu !== undefined) {\n                if (settings.nomenu === null) {\n                    Gx.nomenu = !Gx.nomenu;\n                } else {\n                    Gx.nomenu = settings.nomenu;\n                }\n            }\n\n            if (settings.ymax !== undefined) {\n                if (settings.ymax === null) {\n                    Gx.autoy = Gx.autoy | 2;\n                    Gx.panymax = undefined;\n                    scale_base(this, {});\n                    Gx.ymax = Gx.panymax;\n                } else {\n                    // autoy must be set correctly before calling updateViewbox\n                    Gx.autoy = Gx.autoy & 0xD;\n                    Gx.ymax = settings.ymax;\n                    updateViewbox(this, Mx.stk[0].ymin, settings.ymax, \"Y\");\n                    this.redraw();\n                }\n            }\n\n            if (settings.ymin !== undefined) {\n                if (settings.ymin === null) {\n                    Gx.autoy = Gx.autoy | 1;\n                    Gx.panymin = undefined;\n                    scale_base(this, {});\n                    Gx.ymin = Gx.panymin;\n                } else {\n                    // autoy must be set correctly before calling updateViewbox\n                    Gx.autoy = Gx.autoy & 0xE;\n                    Gx.ymin = settings.ymin;\n                    updateViewbox(this, settings.ymin, Mx.stk[0].ymax, \"Y\");\n                    this.redraw();\n                }\n            }\n\n            // Check autoy setting after checking ymin/ymax\n            // so that explicitly setting autoy will override\n            // implicit settings via ymin/ymax\n            if (settings.autoy !== undefined) {\n                Gx.autoy = settings.autoy;\n                if (((Gx.autoy & 1) !== 0)) {\n                    Gx.ymin = undefined;\n                }\n                if (((Gx.autoy & 2) !== 0)) {\n                    Gx.ymax = undefined;\n                }\n            }\n\n            if (settings.xmin !== undefined) {\n                updateViewbox(this, settings.xmin, Mx.stk[0].xmax, \"X\");\n                Gx.autox = (Gx.autox & 2);\n                this.redraw();\n            }\n\n            if (settings.xmax !== undefined) {\n                updateViewbox(this, Mx.stk[0].xmin, settings.xmax, \"X\");\n                Gx.autox = (Gx.autox & 1);\n                this.redraw();\n            }\n\n            if (settings.zmin !== undefined) {\n                Gx.zmin = settings.zmin;\n                Gx.autoz = (Gx.autoz & 2);\n            }\n\n            if (settings.zmax !== undefined) {\n                Gx.zmax = settings.zmax;\n                Gx.autoz = (Gx.autoz & 1);\n            }\n\n            if (settings.autoz !== undefined) {\n                Gx.autoz = settings.autoz;\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = undefined;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = undefined;\n                }\n            }\n\n            if (settings.note !== undefined) {\n                Gx.note = settings.note;\n            }\n\n            if (settings.lg_colorbar !== undefined) {\n                // Change the plot area and then draw the large colorbar\n                Gx.lg_colorbar = !Gx.lg_colorbar;\n            }\n\n            if (settings.p_cuts !== undefined) {\n                // Change the plot area and then draw the p_cuts dipslay\n                if (settings.p_cuts === null) {\n                    Gx.p_cuts = !Gx.p_cuts;\n                } else {\n                    Gx.p_cuts = settings.p_cuts;\n                }\n            }\n\n            //this is a setting that is true if we are drawing an xcut\n            if (settings.xcut_now !== undefined) {\n                Gx.xcut_now = !Gx.xcut_now;\n            }\n\n            //this is a setting that is true if we are drawing a ycut\n            if (settings.ycut_now !== undefined) {\n                Gx.ycut_now = !Gx.ycut_now;\n            }\n\n            this.refresh();\n            if (settings.pan !== undefined) { // refactor - new code to handle\n                // disappearing specs\n                display_specs(this);\n            }\n        },\n\n        /**\n         * Reread all files and refresh the plot.\n         */\n        reread: function() {\n            var Gx = this._Gx;\n            var oldLayerData = [];\n            for (var k = 0; k < Gx.lyr.length; k++) { // make a copy of layer\n                // data before\n                // destroying Gx.lyr\n                // with the deoverlay\n                oldLayerData[k] = Gx.lyr[k];\n            }\n\n            var origHCB = Gx.HCB.slice();\n            this.deoverlay();\n            for (var i = 0; i < origHCB.length; i++) {\n                this.overlay_bluefile(origHCB[i]);\n            }\n\n            // propagate old layer attributes to re-read layers\n            for (var j = 0; j < Gx.lyr.length; j++) {\n                // TODO Assumes indices of old Gx.lyr and new Gx.lyr will match\n                // up correctly - should we instead use hcb and name to identify\n                Gx.lyr[j].symbol = oldLayerData[j].symbol;\n                Gx.lyr[j].radius = oldLayerData[j].radius;\n                // TODO re-copy other things like line type???\n            }\n            this.refresh();\n\n            // Notify listeners that a reread was performed\n            var evt = document.createEvent('Event');\n            evt.initEvent('reread', true, true);\n            mx.dispatchEvent(this._Mx, evt);\n        },\n\n        /**\n         * Placeholder for cleanup logic.\n         */\n        cleanup: function() {\n            // TODO not sure what we really want to do here yet\n        },\n\n        /**\n         * Reload data without adjusting other aspects about a plot\n         *\n         * @param {Number} n\n         *            the layer to push data into\n         * @param {Number[]} data\n         *            data to push\n         * @param {Object} hdrmod\n         *            optional changes to the file header\n         */\n        reload: function(n, data, hdrmod, rsync) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            if ((n < 0) || (n >= Gx.lyr.length)) {\n                return;\n            }\n\n            if (Gx.lyr[n].reload === undefined) {\n                return;\n            }\n\n            var xbnds = Gx.lyr[n].reload(data, hdrmod);\n\n            if (Mx.level === 0) {\n                // Unlike push(), always call scale_base\n                // when reload is invoked\n                scale_base(this, {\n                    get_data: false\n                }, xbnds.xmin, xbnds.xmax);\n            }\n\n            if (rsync) {\n                this._refresh();\n            } else {\n                this.refresh();\n            }\n\n        },\n\n        rescale: function() {\n            var Mx = this._Mx;\n\n            if (Mx.level === 0) {\n                scale_base(this, {\n                    get_data: false\n                }, undefined, undefined);\n            }\n\n            this.refresh();\n        },\n\n        /**\n         * Change the file header\n         *\n         * @param {Number} n\n         *            the layer to push header changes to\n         * @param {Object} hdrmod\n         *            changes to the file header\n         */\n        headermod: function(n, hdrmod) {\n            this.change_settings(hdrmod);\n            this.push(n, [], hdrmod);\n        },\n\n        /**\n         * Push data into a layer that was created with overlay_pipe\n         *\n         * @example plot.push(n, data);\n         *\n         * @param {Number} n\n         *            the layer to push data into\n         * @param {Number[]} data\n         *            data to push\n         * @param {Object} hdrmod\n         *            optional changes to the file header\n         * @param {boolean} [sync=false]\n         *            optional dispatch onpipewrite syncronously\n         * @param {boolean} [rsync=false]\n         *            optional dispatch refresh syncronously\n         */\n        push: function(n, data, hdrmod, sync, rsync) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            if ((n < 0) || (n >= Gx.lyr.length)) {\n                return;\n            }\n\n            if (Gx.lyr[n].push === undefined) {\n                return;\n            }\n\n            if (Gx.lyr[n].display === false) {\n                return;\n            }\n\n            var hdrmod_clone = hdrmod;\n\n            // quick deep copy of the header so we can\n            // add some necessary fields if this is\n            // a header-only push\n            if (hdrmod) {\n                var hdrmod_clone = JSON.parse(JSON.stringify(hdrmod));\n\n                // if it's a header-only push, the data should\n                // be an empty array\n                if (data.length === 0) {\n                    hdrmod_clone.xmin = Mx.stk[n].xmin;\n                    hdrmod_clone.xmax = Mx.stk[n].xmax;\n                    hdrmod_clone.ymin = Mx.stk[n].ymin;\n                    hdrmod_clone.ymax = Mx.stk[n].ymax;\n                }\n            }\n\n            var rescale = Gx.lyr[n].push(data, hdrmod_clone, sync);\n\n            if ((Mx.level === 0) && rescale) {\n                scale_base(this, {\n                    get_data: false\n                });\n            }\n\n            if (rsync) {\n                this._refresh();\n            } else {\n                this.refresh();\n            }\n        },\n\n        /**\n         * Create a plot layer with an array overlay\n         *\n         * @example plot.overlay_array(data, {[overrides]}, {[layerOptions]});\n         *\n         * @param data\n         *            data the data that you will be plotting\n         *\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_array: function(data, overrides, layerOptions) {\n            m.log.debug(\"Overlay array\");\n            var hcb = m.initialize(data, overrides);\n            return this.overlay_bluefile(hcb, layerOptions);\n        },\n\n        /**\n         * Create a plot layer to hold data\n         *\n         * @example plot.overlay_pipe({[overrides]},{[layerOptions]});\n         *\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_pipe: function(overrides, layerOptions) {\n            m.log.debug(\"Overlay pipe\");\n            if (!overrides) {\n                overrides = {};\n            }\n            overrides.pipe = true;\n            var hcb = m.initialize(null, overrides);\n            //console.log(\"pipe filename: \"+hcb.file_name);\n            return this.overlay_bluefile(hcb, layerOptions);\n        },\n\n        /**\n         * Create a plot layer to hold data\n         *\n         * @example plot.overlay_websocket({wsurl, {[overrides]}, {[layerOptions]}});\n         * @param {url:port_destination}\n         *            wsurl the url and port destination for the websocket being used\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_websocket: function(wsurl, overrides, layerOptions) {\n            m.log.debug(\"Overlay websocket: \" + wsurl);\n            var ws = new WebSocket(wsurl, \"plot-data\");\n            ws.binaryType = \"arraybuffer\";\n\n            var plot = this;\n            if (!overrides) {\n                overrides = {};\n            }\n            overrides.pipe = true;\n            var hcb = m.initialize(null, overrides);\n            hcb.ws = ws;\n\n            var layer_n = this.overlay_bluefile(hcb, layerOptions);\n\n            ws.onopen = function(evt) {};\n\n            ws.onmessage = (function(theSocket) {\n                return function(evt) {\n                    if (evt.data instanceof ArrayBuffer) {\n                        var data = hcb.createArray(evt.data);\n                        plot.push(layer_n, data);\n                    } else if (typeof evt.data === \"string\") {\n                        var Gx = plot._Gx;\n                        var hdr = Gx.lyr[layer_n].hcb;\n                        if (!hdr) {\n                            m.log.warning(\"Couldn't find header for layer \" + layer_n);\n                        }\n\n                        var newHdr = JSON.parse(evt.data);\n                        plot.push(layer_n, [], newHdr);\n                    }\n                };\n            })(ws);\n\n            return layer_n;\n        },\n\n        /**\n         * Create a plot layer from an HREF that points to a BLUEFILE or MATFILE\n         *\n         * @example plot.overlay_href(href, function() {}, {[layeroptions]});\n         *\n         * @param {String}\n         *            href the url to the bluefile or matfile\n         * @param [onload]\n         *            callback to be called when the file has been loaded\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framesize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n        overlay_href: function(href, onload, layerOptions) {\n            m.log.debug(\"Overlay href: \" + href);\n            try {\n                this.show_spinner();\n\n                var handleHeader = (function(plot, onload) {\n                    return function(hcb) {\n                        try {\n                            if (!hcb) {\n                                alert(\"Failed to load data\");\n                            } else {\n                                var i;\n                                if (href.endsWith(\".mat\")) {\n                                    i = plot.overlay_matfile(hcb, layerOptions);\n                                } else {\n                                    i = plot.overlay_bluefile(hcb, layerOptions);\n                                }\n                                if (onload) {\n                                    onload(hcb, i);\n                                }\n                            }\n                        } finally {\n                            plot.hide_spinner();\n                        }\n                    };\n                }(this, onload));\n\n                var reader;\n                if (href.endsWith(\".mat\")) {\n                    reader = new matfile.MatFileReader();\n                } else {\n                    reader = new bluefile.BlueFileReader();\n                }\n                reader.read_http(href, handleHeader);\n            } catch (error) {\n                console.error(error);\n                alert(\"Failed to load data\");\n                this.hide_spinner();\n            }\n        },\n\n        show_spinner: function() {\n            if (!this._Gx.spinner) {\n                SPINNER_OPTS.color = this._Mx.xwfg;\n                this._Gx.spinner = new Spinner(SPINNER_OPTS).spin(this._Gx.parent);\n            }\n        },\n\n        hide_spinner: function() {\n            if (this._Gx.spinner) {\n                this._Gx.spinner.stop();\n            }\n            this._Gx.spinner = undefined;\n        },\n\n        add_layer: function(layer) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            // Notify listeners that a file was overlayed\n            var evt = document.createEvent('Event');\n            evt.initEvent('lyradd', true, true);\n            evt.name = layer.name; // the name of the layer\n            evt.layer = layer;\n            var executeDefault = mx.dispatchEvent(Mx, evt);\n            if (executeDefault) {\n                Gx.lyr.push(layer);\n                layer.index = Gx.lyr.length - 1; // the new index of the layer\n                return true;\n            } else {\n                return false;\n            }\n        },\n\n        /**\n         * Get a layer of the plot\n         *\n         * @example plot.get_layer(n);\n         *\n         * @param {Number}\n         *              n the index of the layer\n         *\n         * @returns data_layer\n         *\n         */\n\n        get_layer: function(n) {\n            var Gx = this._Gx;\n            if ((n >= 0) && (n < Gx.lyr.length)) {\n                return Gx.lyr[n];\n            } else {\n                return null;\n            }\n        },\n\n        overlay_matfile: function(mfile, layerOptions) {\n            m.log.debug(\"Overlay matfile: \" + mfile.file_name);\n            return this.overlay_array(mfile.dview);\n        },\n\n        /**\n         * Create a plot layer backed by a bluefile header\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @returns the index of the new layer\n         */\n        overlay_bluefile: function(hcb, layerOptions) {\n            m.log.debug(\"Overlay bluefile: \" + hcb.file_name);\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var size = 0;\n\n            layerOptions = layerOptions || {};\n\n            var basefiles = (Gx.HCB.length === 0);\n\n            Gx.HCB.push(hcb);\n\n            if (Gx.HCB.length === 1) {\n                basefile(this, true);\n            }\n\n            var layers = null;\n\n            if (layerOptions.layerType === undefined) {\n                if (hcb[\"class\"] === 1) {\n                    layers = Layer1D.overlay(this, hcb, layerOptions);\n                } else if (hcb[\"class\"] === 2) {\n                    layers = Layer2D.overlay(this, hcb, layerOptions);\n                }\n            } else {\n                if (layerOptions.layerType === \"1D\") {\n                    layers = Layer1D.overlay(this, hcb, layerOptions);\n                } else if (layerOptions.layerType === \"2D\") {\n                    layers = Layer2D.overlay(this, hcb, layerOptions);\n                } else {\n                    layers = layerOptions.layerType.overlay(this, hcb, layerOptions);\n                }\n            }\n\n            if (layers === null || layers.length === 0) {\n                m.log.debug(\"failed to create layers\");\n                return;\n            }\n\n            // Allow the user to store aribitary data with the layer\n            if (layerOptions.user_data) {\n                layers.forEach(function(layer) {\n                    layer.user_data = layerOptions.user_data;\n                });\n            }\n\n            // TODO - do we want to alert like the XM plot did?\n            //if (!Gx.all && size > Gx.bufmax && Gx.HCB.length == 1) {\n            // alert(\"Plot truncated to buffer size. Use panning or /ALL\n            // switch\");\n            //}\n            // The original code has a bug here. Fixed by moving changemode\n            // outside of\n            // the !basefiles check.\n            // You can recreate with SIGPLOT ,,, IR\n            // And then loading a file.\n            changemode(this, Gx.cmode);\n\n            // if this is not the first set of layers added and\n            // we haven't asked for the plot to expand to accomodate\n            // this layers new range, then simply draw the new layer.\n            if (!basefiles && !layerOptions.expand) {\n                var plot = this;\n                layers.forEach(function(layer) {\n                    draw_layer(plot, layer);\n                });\n            } else {\n                if (Gx.HCB.length === 0) { // TODO dead code that cannot be reached\n                    basefile(this, false);\n                } else {\n                    Gx.basemode = Gx.cmode;\n                    var xmin;\n                    var xmax;\n                    if ((Gx.autox & 1) === 0) {\n                        xmin = Gx.xmin;\n                    }\n                    if ((Gx.autox & 2) === 0) {\n                        xmax = Gx.xmax;\n                    }\n                    scale_base(this, {\n                        get_data: true\n                    }, xmin, xmax);\n                    Mx.level = 0;\n                    if ((Gx.autox & 1) !== 0) {\n                        Gx.xmin = Mx.stk[0].xmin;\n                    }\n                    if ((Gx.autox & 2) !== 0) {\n                        Gx.xmax = Mx.stk[0].xmax;\n                    }\n                    if ((Gx.autoy & 1) !== 0) {\n                        Gx.ymin = Mx.stk[0].ymin;\n                    }\n                    if ((Gx.autoy & 2) !== 0) {\n                        Gx.ymax = Mx.stk[0].ymax;\n                    }\n                    Mx.resize = true;\n                    if (Gx.lyr[0].preferred_origin) {\n                        Mx.origin = Gx.lyr[0].preferred_origin;\n                    } else {\n                        Mx.origin = 1;\n                    }\n                }\n            }\n            form_plotnote(this);\n            this.refresh();\n\n            return (Gx.HCB.length - 1);\n        },\n\n        /**\n         * Load one or more files.\n         *\n         * @param {File[]}\n         *            a list of files to plot\n         */\n        load_files: function(files, layerType) {\n            var onload = (function(plot) {\n                return function(hdr) {\n                    plot.overlay_bluefile(hdr, layerType);\n                };\n            })(this);\n\n            for (var i = 0; i < files.length; i++) {\n                var f = files[i];\n                var br = new bluefile.BlueFileReader();\n                br.read(f, onload);\n            }\n        },\n\n        /**\n         * Reemove layers\n         *\n         * @example plot.get_layer(n);\n         *\n         * @param {Number}\n         *             The index of the layer. If not provided, all layers will\n         *             be removed\n         *\n         * @returns data_layer\n         *\n         */\n\n        deoverlay: function(index) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            if (Gx.HCB.length > 0) {\n                if (index === undefined) {\n                    for (var n = Gx.HCB.length - 1; n >= 0; n--) {\n                        this.remove_layer(n);\n                    }\n                } else if (index < 0) {\n                    var n = Gx.HCB.length + index;\n                    if (n < 0) {\n                        return;\n                    }\n                    this.remove_layer(n);\n                } else if (index < Gx.HCB.length) {\n                    this.remove_layer(index);\n                }\n            }\n            if (Gx.lyr.length === 0) {\n                basefile(this, false);\n                scale_base(this, {});\n            }\n        },\n\n        /**\n         * Remove a layer.\n         *\n         * @param index\n         *            the layer to remove\n         */\n        remove_layer: function(index) {\n            var Gx = this._Gx;\n\n            var fileName = \"\";\n            var HCB = null;\n\n            if ((index >= 0) && (index < Gx.HCB.length)) {\n                fileName = Gx.HCB[index].file_name;\n                // TODO if (Gx.modsource > 0) {\n                //\n                // }\n                HCB = Gx.HCB[index];\n                Gx.HCB[index] = null;\n                for (var n = index; n < Gx.HCB.length - 1; n++) {\n                    Gx.HCB[n] = Gx.HCB[n + 1];\n                }\n                Gx.HCB.length -= 1;\n            }\n\n            for (var n = Gx.lyr.length - 1; n >= 0; n--) {\n                if (Gx.lyr[n].hcb === HCB) {\n                    delete_layer(this, n);\n                }\n            }\n            form_plotnote(this);\n            this.refresh();\n\n            // Notify listeners that a file has been deoverlayed\n            var evt = document.createEvent('Event');\n            evt.initEvent('file_deoverlayed', true, true);\n            if (fileName !== \"\") {\n                evt.fileName = fileName; // The fileName that was\n            }\n            // de-overlayed\n            mx.dispatchEvent(this._Mx, evt);\n        },\n\n        /**\n         * Zoom onto a given pixel range.\n         */\n        pixel_zoom: function(x1, y1, x2, y2, continuous) {\n            var r1 = pixel_to_real(this, x1, y1);\n            var r2 = pixel_to_real(this, x2, y2);\n\n            this.zoom(r1, r2, continuous);\n        },\n\n        percent_zoom: function(xperc, yperc, continuous) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            var xadj = 0;\n            if (Math.abs(xperc) < 1) {\n                xadj = Math.abs(Mx.stk[Mx.level].xmax - Mx.stk[Mx.level].xmin);\n                xadj = (xadj * xperc) / 2;\n            }\n\n            var yadj = 0;\n            if (Math.abs(yperc) < 1) {\n                yadj = Math.abs(Mx.stk[Mx.level].ymax - Mx.stk[Mx.level].ymin);\n                yadj = (yadj * yperc) / 2;\n            }\n\n            var ul = {\n                x: Math.max(Mx.stk[Mx.level].xmin + xadj, Gx.panxmin),\n                y: Math.max(Mx.stk[Mx.level].ymin + yadj, Gx.panymin)\n            };\n\n            var lr = {\n                x: Math.min(Mx.stk[Mx.level].xmax - xadj, Gx.panxmax),\n                y: Math.min(Mx.stk[Mx.level].ymax - yadj, Gx.panymax)\n            };\n\n            this.zoom(ul, lr, continuous);\n        },\n\n        /**\n         * Zoom onto a given region.\n         *\n         * @param ul\n         *            the uppler left corner\n         * @param {Number}\n         *            ul.x the upper left x pos in real plot value\n         * @param {Number}\n         *            ul.y the upper left y pos in real plot values\n         *\n         * @param lr\n         *            the lower right corner\n         * @param {Number}\n         *            lr the lower right x pos in real plot value\n         * @param {Number}\n         *            lr the lower right y pos in real plot values\n         *\n         * @param continuous\n         *            enter continuous zoom mode.  This will create a\n         *            new if you are on level 0, but stay on the same level\n         *            otherwise\n         */\n        zoom: function(ul, lr, continuous) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            if (Mx.level >= 9) { // currently only allow 10 zooms\n                return;\n            }\n\n            if (ul.x === undefined) {\n                ul.x = Mx.stk[Mx.level].xmin;\n            }\n            if (ul.y === undefined) {\n                ul.y = Mx.stk[Mx.level].ymin;\n            }\n            if (lr.x === undefined) {\n                lr.x = Mx.stk[Mx.level].xmax;\n            }\n            if (lr.y === undefined) {\n                lr.y = Mx.stk[Mx.level].ymax;\n            }\n\n            if (lr.x < ul.x) {\n                var xtmp = lr.x;\n                lr.x = ul.x;\n                ul.x = xtmp;\n            }\n            if (lr.y < ul.y) {\n                var ytmp = lr.y;\n                lr.y = ul.y;\n                ul.y = ytmp;\n            }\n\n            var zstk = {};\n\n            // xscl/yscl are reset in sigplot.refresh\n            zstk.xscl = Mx.stk[Mx.level].xscl;\n            zstk.yscl = Mx.stk[Mx.level].yscl;\n\n            zstk.xmin = ul.x; // real world val at x1(origin=1,4) or\n            // x2(origin=2,4)\n            zstk.xmax = lr.x; // real world val at x2(origin=1,4) or\n            // x1(origin=2,4)\n            zstk.ymin = ul.y; // real world val at y2(origin=1,2) or\n            // y1(origin=3,4)\n            zstk.ymax = lr.y; // real world val at y1(origin=1,2) or\n            // y2(origin=3,4)\n            if (Gx.index) {\n                zstk.xmin = Math.min(zstk.xmin / Gx.xdelta);\n                zstk.xmax = Math.min(zstk.xmax / Gx.xdelta);\n            }\n\n            if (!continuous || (!Gx.inContinuousZoom)) {\n                // We aren't yet in continuous zoom mode\n                // so create a new level\n                Mx.stk.push(zstk);\n                Mx.level = Mx.stk.length - 1;\n            } else {\n                // Once in continuous zoom mode update the current level\n                Mx.stk[Mx.level] = zstk;\n            }\n            Gx.inContinuousZoom = continuous;\n\n            this.inZoom = true; // prevent recursive zooms\n            var evt = document.createEvent('Event');\n            evt.initEvent('zoom', true, true);\n            evt.level = Mx.level;\n            evt.inContinuousZoom = Gx.inContinuousZoom;\n            evt.xmin = Mx.stk[Mx.level].xmin;\n            evt.ymin = Mx.stk[Mx.level].ymin;\n            evt.xmax = Mx.stk[Mx.level].xmax;\n            evt.ymax = Mx.stk[Mx.level].ymax;\n            mx.dispatchEvent(Mx, evt); // TODO should we allow zoom to be cancelled?\n            this.inZoom = false;\n\n            this.refresh();\n        },\n\n        /**\n         * Unzoom one or more levels.\n         *\n         * @param [levels]\n         *            the number of levels to unzoom, if not provided unzoom\n         *            all.\n         */\n        unzoom: function(levels) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            if (Mx.level === 0) {\n                return;\n            }\n\n            if (!levels) {\n                levels = Mx.stk.length;\n            }\n\n            while (levels > 0) {\n                if (Mx.level === 0) {\n                    break;\n                }\n                Mx.stk.pop();\n                Mx.level = Mx.stk.length - 1;\n                levels -= 1;\n            }\n\n            // If we are back at level 0, then\n            // rescale\n            if (Mx.level === 0) {\n                this.rescale();\n            }\n\n            // After any unzooms you can no longer remain in\n            // continuous zoom\n            Gx.inContinuousZoom = false;\n\n            this.inZoom = true; // prevent recursive zoom\n            // Send the event to listeners\n            var evt = document.createEvent('Event');\n            evt.initEvent('unzoom', true, true);\n            evt.level = Mx.level;\n            evt.xmin = Mx.stk[Mx.level].xmin;\n            evt.ymin = Mx.stk[Mx.level].ymin;\n            evt.xmax = Mx.stk[Mx.level].xmax;\n            evt.ymax = Mx.stk[Mx.level].ymax;\n            mx.dispatchEvent(Mx, evt);\n            this.inZoom = false;\n\n            this.refresh();\n        },\n\n        /**\n         * Register this plot to mimic zoom/unzoom of other plot\n         *\n         * @param other\n         *     the other plot to mimic\n         *\n         * @param mask\n         *     the set of event to respond to\n         *\n         * @param mask.zoom\n         *     if true, respond to zoom events\n         *\n         * @param mask.xzoom\n         *     if true, respond to zoom events for the x-axis only\n         *\n         * @param mask.yzoom\n         *     if true, respond to zoom events for the y-axis only\n         *\n         * @param mask.unzoom\n         *     if true, respond to unzoom events\n         *\n         * @param mask.pan\n         *     if true, respond to pan events\n         *\n         * @param mask.xpan\n         *     if true, respond to pan events for the x-axis only\n         *\n         * @param mask.ypan\n         *     if true, respond to pan events for the y-axis only\n         */\n        mimic: function(other, mask) {\n            var self = this;\n\n            if (!mask) {\n                throw \"mimic must be called with at least one event mask\";\n            }\n\n            this.unmimic(other);\n\n            if (mask.zoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: event.xmin,\n                            y: event.ymin\n                        }, {\n                            x: event.xmax,\n                            y: event.ymax\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            } else if (mask.xzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: event.xmin,\n                            y: undefined\n                        }, {\n                            x: event.xmax,\n                            y: undefined\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            } else if (mask.yzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: undefined,\n                            y: event.ymin\n                        }, {\n                            x: undefined,\n                            y: event.ymax\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            }\n\n            if (mask.unzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    if (event.level < self._Mx.level) {\n                        self.unzoom(self._Mx.level - event.level);\n                    }\n                };\n                other.addListener(\"unzoom\", f);\n                this.mimicListeners.listeners.unzoom = f;\n            }\n\n            if (mask.pan || mask.xpan) {\n                var f = function(event) {\n                    if (self.inPan) {\n                        return;\n                    }\n                    updateViewbox(self, event.xmin, event.xmax, \"X\");\n                };\n                other.addListener(\"xpan\", f);\n                this.mimicListeners.listeners.xpan = f;\n            }\n\n            if (mask.pan || mask.ypan) {\n                var f = function(event) {\n                    if (self.inPan) {\n                        return;\n                    }\n                    updateViewbox(self, event.ymin, event.ymax, \"Y\");\n                };\n                other.addListener(\"ypan\", f);\n                this.mimicListeners.listeners.ypan = f;\n            }\n\n            this.mimicListeners.other = other;\n        },\n\n\n        /**\n         * Unregister zoom/unzoom listeners added via previous call to unmimic.\n         */\n        unmimic: function(other) {\n            var other = this.mimicListeners.other;\n            if (other) {\n                var that = this;\n                Object.keys(this.mimicListeners.listeners).forEach(function(evt) {\n                    if (that.mimicListeners.listeners[evt]) {\n                        other.removeListener(evt, that.mimicListeners.listeners[evt]);\n                    }\n                });\n            }\n            this.mimicListeners = {\n                other: null,\n                listeners: {\n                    zoom: null,\n                    unzoom: null,\n                    xpan: null,\n                    ypan: null\n                }\n            };\n        },\n\n        /**\n         * Like refresh, but doesn't rerender data\n         *\n         * @example plot.redraw();\n         */\n        redraw: function() {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n            var ctx = Mx.canvas.getContext(\"2d\");\n            if (!Gx.plotData.valid) {\n                this.refresh();\n            } else {\n                ctx.drawImage(Gx.plotData,\n                    Mx.l - 1,\n                    Mx.t - 1, (Mx.r - Mx.l) + 2, (Mx.b - Mx.t) + 2,\n                    Mx.l - 1,\n                    Mx.t - 1, (Mx.r - Mx.l) + 2, (Mx.b - Mx.t) + 2\n                );\n\n                draw_plugins(this);\n\n                Gx.cross_xpos = undefined;\n                Gx.cross_ypos = undefined;\n                if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                    draw_crosshairs(this);\n                }\n\n                if (Gx.always_show_marker || Gx.show_marker) {\n                    draw_marker(this);\n                }\n            }\n        },\n\n        /**\n         * Refresh the entire plot\n         *\n         * @example plot.refresh();\n         */\n        refresh: function() {\n            if (!this._Gx.initialized || this._Gx.refresh_after_ctr > 0) {\n                return;\n            }\n            var self = this;\n            mx.render(this._Mx, function() {\n                self._refresh();\n            });\n        },\n\n        /**\n         * Refresh the entire plot after a function has been called.\n         *\n         * The plot will be guaranteed to have refresh called after\n         * the provided function is executed; while the function is\n         * executed all plot refreshes will be disabled.\n         *\n         * In most cases, you should not need to use this function because\n         * SigPlot will do the right thing and refresh when necessary.  The\n         * primary reason for using this is to temporarily disable refreshes\n         * while many actions are occuring, but guarantee that the refresh\n         * occurs after all those actions have been applied.\n         *\n         * While calls to refresh() are disabled until after the callback has\n         * completed, any calls to _refresh() will continue to be processed.\n         *\n         * @param {refreshAfterCallback} cb\n         *     The function to execute\n         * @callback refreshAfterCallback\n         * @param {Plot} the plot\n         *\n         * @example plot.refresh_after((plot) => {plot.push(n, data)});\n         */\n        refresh_after: function(cb) {\n            this._Gx.refresh_after_ctr += 1;\n            try {\n                cb(this);\n            } finally {\n                this._Gx.refresh_after_ctr =\n                    Math.max(this._Gx.refresh_after_ctr - 1, 0);\n                if (this._Gx.refresh_after_ctr === 0) {\n                    this.refresh();\n                }\n            }\n        },\n\n        /**\n         * Enable listeners for events on plot\n         */\n\n        enable_listeners: function() {\n            var Mx = this._Mx;\n            mx.addEventListener(Mx, \"mousedown\", this.onmousedown, false);\n            mx.addEventListener(Mx, \"mousemove\", this.throttledOnMouseMove, false);\n            window.addEventListener(\"mouseup\", Mx.onmouseup, false);\n            window.addEventListener(\"keydown\", Mx.onkeydown, false);\n            window.addEventListener(\"keyup\", Mx.onkeyup, false);\n            window.addEventListener(\"resize\", this.onresize, false);\n            document.addEventListener(\"mouseup\", this.docMouseUp, false);\n            mx.addEventListener(Mx, \"mouseup\", this.mouseup, false);\n            window.addEventListener(\"mousedown\", this.dragMouseDownHandler, false);\n            window.addEventListener(\"mousemove\", this.throttledDragOnMouseMove, false);\n            window.addEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n            window.addEventListener(\"wheel\", this.wheelHandler, false);\n            window.addEventListener(\"mousewheel\", this.wheelHandler, false);\n            window.addEventListener(\"DOMMouseScroll\", this.wheelHandler, false);\n            window.addEventListener(\"keypress\", this.onkeypress, false);\n        },\n\n        /**\n         * Enable listeners for events on plot\n         */\n\n        disable_listeners: function() {\n            var Mx = this._Mx;\n\n            mx.removeEventListener(Mx, \"mousedown\", this.onmousedown, false);\n            mx.removeEventListener(Mx, \"mousemove\", this.throttledOnMouseMove,\n                false);\n            mx.removeEventListener(Mx, \"mouseup\", this.mouseup, false);\n            window.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n            window.removeEventListener(\"keydown\", Mx.onkeydown, false);\n            window.removeEventListener(\"keyup\", Mx.onkeyup, false);\n            window.removeEventListener(\"resize\", this.onresize, false);\n            document.removeEventListener(\"mouseup\", this.docMouseUp, false);\n            window.removeEventListener(\"mousedown\", this.dragMouseDownHandler,\n                false);\n            window.removeEventListener(\"mousemove\", this.throttledDragOnMouseMove,\n                false);\n            window.removeEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n            window.removeEventListener(\"wheel\", this.wheelHandler, false);\n            window.removeEventListener(\"mousewheel\", this.wheelHandler, false);\n            window.removeEventListener(\"DOMMouseScroll\", this.wheelHandler, false);\n            window.removeEventListener(\"keypress\", this.onkeypress, false);\n        },\n\n        checkresize: function() {\n            if (mx.checkresize(this._Mx)) {\n                this.refresh();\n            }\n        },\n        addColorMaps: function(colormaps) {\n            colormaps.forEach(function(cmap) {\n                if (cmap.hasOwnProperty(\"name\")) {\n                    m.Mc.colormap.push(cmap);\n                }\n\n            });\n\n        },\n\n        /**\n         * Display an xCut\n         *\n         * @param ypos\n         *     the y-position to extract the x-cut, leave undefined to\n         *     leave xCut\n         */\n        xCut: function(ypos) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            //display the x-cut of the raster\n            if (ypos !== undefined) {\n\n                // Stash important values\n                Gx.cut_stash = {};\n                Gx.cut_stash.ylabel = Gx.ylabel;\n                Gx.cut_stash.xlabel = Gx.xlabel;\n                Gx.cut_stash.level = Mx.level;\n                Gx.cut_stash.stk = JSON.parse(JSON.stringify(Mx.stk));\n                Gx.cut_stash.panymin = Gx.panymin;\n                Gx.cut_stash.panymax = Gx.panymax;\n                Gx.cut_stash.panxmin = Gx.panxmin;\n                Gx.cut_stash.panxmax = Gx.panxmax;\n\n                if (!Gx.p_cuts) {\n                    Gx.x_cut_data = [];\n                    var width = Gx.lyr[0].xframe;\n                    var row = Math.round((ypos - Gx.lyr[0].ystart) / Gx.lyr[0].ydelta);\n                    if ((row < 0) || (row > Gx.lyr[0].lps)) {\n                        return;\n                    }\n                    var start = row * width;\n                    var finish = start + width;\n                    Gx.x_cut_data = Gx.lyr[0].buf.slice(start, finish);\n                }\n\n                //adjust for the values of the xcut\n                Gx.old_drawmode = Gx.lyr[0].drawmode;\n                Gx.old_autol = Gx.autol;\n                this.change_settings({\n                    drawmode: \"undefined\",\n                    autol: -1\n                });\n\n                var cx = ((Gx.lyr.length > 0) && Gx.lyr[0].cx);\n                if (Gx.cmode === 1) {\n                    Gx.ylabel = m.UNITS[28][0];\n                } else if (Gx.cmode === 2) {\n                    Gx.ylabel = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    Gx.ylabel = m.UNITS[21][0];\n                } else if (Gx.cmode === 4) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 5) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 6) {\n                    Gx.ylabel = m.UNITS[26][0];\n                } else if (Gx.cmode === 7) {\n                    Gx.ylabel = m.UNITS[27][0];\n                } else {\n                    Gx.ylabel = \"Intensity\";\n                }\n\n                if ((m.UNITS[Gx.xlab][0] !== \"None\") && (m.UNITS[Gx.xlab][0] !== \"Unknown\")) {\n                    Gx.xlabel = m.UNITS[Gx.xlab][0];\n                } else {\n                    Gx.xlabel = \"Frequency\";\n                }\n                Gx.xlabel += \"    CURRENTLY IN X_CUT MODE\";\n                Mx.origin = 1;\n                Gx.xcut_layer = this.overlay_array(Gx.x_cut_data, {\n                    xstart: Gx.lyr[0].xstart,\n                    xdelta: Gx.lyr[0].xdelta\n                }, {\n                    name: \"x_cut_data\",\n                    line: 3\n                });\n                Gx.xcut_layer = Gx.lyr.length - 1;\n                //do not display any other layers\n                for (var i = 0; i < Gx.xcut_layer; i++) {\n                    Gx.lyr[i].display = !Gx.lyr[i].display;\n                }\n                Gx.x_cut_press_on = true;\n\n                // The y-axis is now the z-values\n                var mxmn = m.vmxmn(Gx.x_cut_data, Gx.lyr[0].xframe);\n                var ymax = mxmn.smax;\n                var ymin = mxmn.smin;\n                var yran = ymax - ymin;\n                if (yran < 0.0) {\n                    ymax = ymin;\n                    ymin = ymax + yran;\n                    yran = -yran;\n                }\n                if (yran <= 1.0e-20) {\n                    ymin = ymin - 1.0;\n                    ymax = ymax + 1.0;\n                } else {\n                    ymin = ymin - 0.02 * yran;\n                    ymax = ymax + 0.02 * yran;\n                }\n\n                Gx.panymin = mxmn.smin;\n                Gx.panymax = mxmn.smax;\n                for (var h = 1; h < Mx.level + 1; h++) {\n                    Mx.stk[h].ymin = ymin;\n                    Mx.stk[h].ymax = ymax;\n                    Mx.stk[h].yscl = (Mx.stk[h].ymax - Mx.stk[h].ymin) / (Mx.b - Mx.t);\n                }\n                this.rescale();\n\n            } else if (Gx.x_cut_press_on) {\n                // ypos wasn't provided so turn x-cut off\n                Gx.x_cut_press_on = false;\n                for (var h = 0; h < Gx.xcut_layer; h++) {\n                    Gx.lyr[h].display = !Gx.lyr[h].display;\n                }\n                delete_layer(this, Gx.xcut_layer);\n\n                // Restore settings\n                Gx.xlabel = Gx.cut_stash.xlabel;\n                Gx.ylabel = Gx.cut_stash.ylabel;\n                Mx.level = Gx.cut_stash.level;\n                Mx.stk = JSON.parse(JSON.stringify(Gx.cut_stash.stk));\n                Gx.panymin = Gx.cut_stash.panymin;\n                Gx.panymax = Gx.cut_stash.panymax;\n                Gx.panxmin = Gx.cut_stash.panxmin;\n                Gx.panxmax = Gx.cut_stash.panxmax;\n                Gx.cut_stash = undefined;\n\n                this.rescale();\n                this.refresh();\n                Gx.xcut_layer = undefined;\n                this.change_settings({\n                    drawmode: Gx.old_drawmode,\n                    autol: Gx.old_autol\n                });\n            }\n        },\n\n        /**\n         * Display an yCut\n         *\n         * @param xpos\n         *     the x-position to extract the y-cut, leave undefined to\n         *     leave yCut\n         */\n        yCut: function(xpos) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            //display the y-cut of the raster\n            if (xpos !== undefined) {\n                // Stash important values\n                Gx.cut_stash = {};\n                Gx.cut_stash.xlabel = Gx.xlabel;\n                Gx.cut_stash.ylabel = Gx.ylabel;\n                Gx.cut_stash.level = Mx.level;\n                Gx.cut_stash.stk = JSON.parse(JSON.stringify(Mx.stk));\n                Gx.cut_stash.ymax = Mx.stk[Mx.level].ymax;\n                Gx.cut_stash.panymin = Gx.panymin;\n                Gx.cut_stash.panymax = Gx.panymax;\n                Gx.cut_stash.panxmin = Gx.panxmin;\n                Gx.cut_stash.panxmax = Gx.panxmax;\n\n                if (!Gx.p_cuts) {\n                    var height = Gx.lyr[0].lps;\n                    var width = Gx.lyr[0].xframe;\n                    var i = 0;\n\n                    Gx.y_cut_data = [];\n                    var col = Math.round((xpos - Gx.lyr[0].xstart) / Gx.lyr[0].xdelta);\n                    for (i = col; i < (width * height); i += width) {\n                        Gx.y_cut_data.push(Gx.lyr[0].buf[i]);\n                    }\n                }\n\n                //adjust for the values of the xcut\n                Gx.old_drawmode = Gx.lyr[0].drawmode;\n                Gx.old_autol = Gx.autol;\n                this.change_settings({\n                    drawmode: \"undefined\",\n                    autol: -1\n                });\n\n\n                var cx = ((Gx.lyr.length > 0) && Gx.lyr[0].cx);\n                if (Gx.cmode === 1) {\n                    Gx.ylabel = m.UNITS[28][0];\n                } else if (Gx.cmode === 2) {\n                    Gx.ylabel = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    Gx.ylabel = m.UNITS[21][0];\n                } else if (Gx.cmode === 4) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 5) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 6) {\n                    Gx.ylabel = m.UNITS[26][0];\n                } else if (Gx.cmode === 7) {\n                    Gx.ylabel = m.UNITS[27][0];\n                } else {\n                    Gx.ylabel = \"Intensity\";\n                }\n\n                if ((m.UNITS[Gx.ylab][0] !== \"None\") && (m.UNITS[Gx.ylab][0] !== \"Unknown\")) {\n                    Gx.xlabel = m.UNITS[Gx.ylab][0];\n                } else {\n                    Gx.xlabel = \"Time\";\n                }\n                Gx.xlabel += \"    CURRENTLY IN Y_CUT MODE\";\n                Mx.origin = 1;\n                Gx.ycut_layer = this.overlay_array(Gx.y_cut_data, {\n                    xstart: Gx.lyr[0].ystart,\n                    xdelta: Gx.lyr[0].ydelta\n                }, {\n                    name: \"y_cut_data\",\n                    line: 3\n                });\n                Gx.ycut_layer = Gx.lyr.length - 1;\n                //do not display any other layers\n                for (var k = 0; k < Gx.ycut_layer; k++) {\n                    Gx.lyr[k].display = !Gx.lyr[k].display;\n                }\n                Gx.y_cut_press_on = true;\n\n                // The y-axis is now the z-values\n                var mxmn = m.vmxmn(Gx.y_cut_data, Gx.lyr[0].lps);\n                var ymax = mxmn.smax;\n                var ymin = mxmn.smin;\n                var yran = ymax - ymin;\n                if (yran < 0.0) {\n                    ymax = ymin;\n                    ymin = ymax + yran;\n                    yran = -yran;\n                }\n                if (yran <= 1.0e-20) {\n                    ymin = ymin - 1.0;\n                    ymax = ymax + 1.0;\n                } else {\n                    ymin = ymin - 0.02 * yran;\n                    ymax = ymax + 0.02 * yran;\n                }\n\n                Gx.panymin = mxmn.smin;\n                Gx.panymax = mxmn.smax;\n                for (var h = 1; h < Mx.level + 1; h++) {\n                    // the x-axis is now the yvalues\n                    Mx.stk[h].xmin = Mx.stk[h].ymin;\n                    Mx.stk[h].xmax = Mx.stk[h].ymax;\n                    Mx.stk[h].xscl = (Mx.stk[h].xmax - Mx.stk[h].xmin) / (Mx.r - Mx.t);\n\n                    // the y-axis is now the zvalues\n                    Mx.stk[h].ymin = ymin;\n                    Mx.stk[h].ymax = ymax;\n                    Mx.stk[h].yscl = (Mx.stk[h].ymax - Mx.stk[h].ymin) / (Mx.b - Mx.t);\n                }\n\n                this.rescale();\n            } else if (Gx.y_cut_press_on) {\n                Gx.y_cut_press_on = false;\n                for (var j = 0; j < Gx.ycut_layer; j++) {\n                    Gx.lyr[j].display = !Gx.lyr[j].display;\n                }\n                delete_layer(this, Gx.ycut_layer);\n\n                // Restore settings\n                Gx.xlabel = Gx.cut_stash.xlabel;\n                Gx.ylabel = Gx.cut_stash.ylabel;\n                Mx.level = Gx.cut_stash.level;\n                Mx.stk = JSON.parse(JSON.stringify(Gx.cut_stash.stk));\n                Gx.panymin = Gx.cut_stash.panymin;\n                Gx.panymax = Gx.cut_stash.panymax;\n                Gx.panxmin = Gx.cut_stash.panxmin;\n                Gx.panxmax = Gx.cut_stash.panxmax;\n                Gx.cut_stash = undefined;\n\n                this.rescale();\n                this.refresh();\n                Gx.ycut_layer = undefined;\n                this.change_settings({\n                    drawmode: Gx.old_drawmode,\n                    autol: Gx.old_autol\n                });\n            }\n        },\n\n        _refresh: function() {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var ctx = Mx.canvas.getContext(\"2d\");\n            var plugin_index = 0;\n\n            if (Gx.hold) {\n                return;\n            }\n            var font_width = Mx.font_width;\n            if (Mx.font_scaled) {\n                font_width = Math.min(Mx.font_width, Mx.width / 64);\n            }\n            mx.set_font(Mx, font_width);\n            Gx.pthk = Mx.text_w * 1.5;\n\n            if (Gx.specs) {\n                var ytimecode = false;\n                if (Gx.ylab === 4) { //time-based tics\n                    ytimecode = true;\n                }\n                // Set left and right edges\n                if (Gx.show_y_axis === true) {\n                    Mx.l = Mx.text_w * 6;\n                    if (ytimecode) {\n                        // If we are in ytimecode, determine if we need the extra\n                        // space to hold the entire YYYY:MM:DD\n                        var need_full_ymd = ((Math.abs(Mx.stk[0].ymin) >= 31536000) ||\n                            (Math.abs(Mx.stk[0].ymax) >= 31536000));\n                        if (need_full_ymd) {\n                            Mx.l = Mx.text_w * 11;\n                        }\n                    }\n                } else {\n                    Mx.l = 1;\n                }\n                if (Gx.pan === true) {\n                    Mx.r = Mx.width - (Gx.pthk + 2 * Mx.text_w);\n                } else {\n                    Mx.r = Mx.width - 5;\n                }\n\n                // Set top and bottom\n                if (Gx.show_readout) {\n                    Mx.t = Mx.text_h * 2;\n                    if (Gx.show_x_axis) {\n                        Mx.b = Mx.height - Mx.text_h * 4;\n                    } else {\n                        Mx.b = Mx.height - Mx.text_h * 3;\n                    }\n                } else if (Gx.x_scrollbar_location === \"bottom\") {\n                    Mx.t = Mx.text_h * 2;\n                    if (Gx.pan) {\n                        if (Gx.show_x_axis) {\n                            Mx.b = Mx.height - Mx.text_h * 3;\n                        } else {\n                            Mx.b = Mx.height - Mx.text_h * 2;\n                        }\n                    } else {\n                        if (Gx.show_x_axis) {\n                            Mx.b = Mx.height - Mx.text_h * 2;\n                        } else {\n                            Mx.b = Mx.height - 5;\n                        }\n                    }\n                } else {\n                    if (Gx.pan) {\n                        Mx.t = Gx.pthk + 2 * Mx.text_w;\n                    } else {\n                        Mx.t = 1;\n                    }\n                    if (Gx.show_x_axis) {\n                        Mx.b = Mx.height - (Mx.text_h * 3) / 2;\n                    } else {\n                        Mx.b = Mx.height - 2;\n                    }\n                }\n\n                // set left and right edges for X scrollbar\n                if (Gx.show_readout) {\n                    // If there is a readout, show it in the bottom-right\n                    // next to the readout\n                    Gx.pl = Mx.text_w * 50;\n                } else {\n                    // Otherwise, by default it conforms to legacy\n                    // behaviour and renders at the top next to the label\n                    if (Gx.x_scrollbar_location === \"bottom\") {\n                        Gx.pl = Mx.l;\n                    } else {\n                        Gx.pl = Mx.text_w * 35;\n                    }\n                }\n                Gx.pr = Math.max(Gx.pl + Mx.text_w * 9, Mx.r);\n\n                // set top scrollbar edge for X scrollbar\n                if (Gx.show_readout) {\n                    if (Gx.show_x_axis) {\n                        Gx.pt = Mx.b + Mx.text_h + (Mx.height - Mx.b - Mx.text_h - Gx.pthk) / 2;\n                    } else {\n                        Gx.pt = Mx.b + (Mx.height - Mx.b - Gx.pthk) / 2;\n                    }\n                } else {\n                    // Otherwise, by default it conforms to legacy\n                    // behaviour and renders at the top\n                    if (Gx.x_scrollbar_location === \"bottom\") {\n                        if (Gx.show_x_axis) {\n                            Gx.pt = Mx.b + Mx.text_h + (Mx.height - Mx.b - Mx.text_h - Gx.pthk) / 2;\n                        } else {\n                            Gx.pt = Mx.b + (Mx.height - Mx.b - Gx.pthk) / 2;\n                        }\n                    } else {\n                        Gx.pt = (Mx.t - Gx.pthk) / 2;\n                    }\n                }\n                Gx.lbtn = Mx.text_h + Mx.text_w + 2;\n            } else {\n                if (Gx.pan) {\n                    Mx.t = Gx.pthk + 2 * Mx.text_w;\n                    Mx.r = Mx.width - (Gx.pthk + Mx.text_w);\n                } else {\n                    Mx.t = 1;\n                    Mx.r = Mx.width - 2;\n                }\n                Mx.b = Mx.height - 2;\n                Mx.l = 1;\n                Gx.pl = Mx.l;\n                Gx.pr = Mx.r;\n                Gx.pt = (Mx.t - Gx.pthk) / 2;\n                Gx.lbtn = 0;\n            }\n\n            // pan select ranges\n            Gx.pyl = Mx.r + (Mx.width - Mx.r - Gx.pthk) / 2 + 1;\n\n            if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                // Move the plot over to make room\n                var prev_Mx_r = Mx.r;\n                Mx.r = prev_Mx_r - 100;\n\n            }\n\n            if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                //turn cross hairs on\n                Gx.cross = true;\n\n                //Move the plot over to make room\n                var prev_Mx_r = Mx.r;\n                Mx.r = prev_Mx_r - 100;\n\n                //Move the plot up to make room\n                var prev_Mx_b = Mx.b;\n                Mx.b = prev_Mx_b - 100;\n            }\n\n            if (Gx.xcut_now) {\n                Mx.canvas.width = Gx.x_box_w - 1;\n                Mx.canvas.height = Gx.x_box_h;\n                Mx.r = Gx.x_box_w - 1;\n                Mx.l = 0;\n                Mx.b = Gx.x_box_h;\n                Mx.t = 0;\n            }\n\n            if (Gx.ycut_now) {\n                Mx.canvas.width = Gx.y_box_h - 1;\n                Mx.canvas.height = Gx.y_box_w;\n                Mx.r = Gx.y_box_h - 1;\n                Mx.l = 0;\n                Mx.b = Gx.y_box_w;\n                Mx.t = 0;\n            }\n\n            // set virtual window size/pos/scaling for current level\n            var k = Mx.level;\n            Mx.stk[k].x1 = Mx.l;\n            Mx.stk[k].y1 = Mx.t;\n            Mx.stk[k].x2 = Mx.r;\n            Mx.stk[k].y2 = Mx.b;\n            Mx.stk[k].xscl = (Mx.stk[k].xmax - Mx.stk[k].xmin) / (Mx.r - Mx.l);\n            Mx.stk[k].yscl = (Mx.stk[k].ymax - Mx.stk[k].ymin) / (Mx.b - Mx.t);\n\n            // In case things have rescaled\n            var re = pixel_to_real(this, Mx.xpos, Mx.ypos);\n            Gx.retx = re.x;\n            Gx.rety = re.y;\n\n            // modify stack for section plotting\n            //if (Gx.sections) {\n            // TODO\n            //}\n\n            if (Gx.panning === 0 || Gx.panning !== 0) { // TODO Gx.panning !==\n                // 0?? Does this work?\n                Gx.plotData.valid = false;\n                mx.clear_window(Mx);\n            } //else if (!Gx.specs) {\n            // TODO\n            //} else if (Gx.panning === 1) {\n            // TODO\n            //} else {\n            // TODO\n            //}\n\n            var xlab = Gx.xlab;\n            var ylab = Gx.ylab;\n\n            if (xlab === undefined) {\n                xlab = 30;\n            }\n            if (Gx.index) {\n                xlab = 0;\n            }\n\n            if (ylab === undefined) {\n                var cx = ((Gx.lyr.length > 0) && Gx.lyr[0].cx);\n                if (Gx.cmode === 1) {\n                    ylab = 28;\n                } else if (Gx.cmode === 2) {\n                    ylab = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    ylab = 21;\n                } else if (Gx.cmode === 4) {\n                    ylab = 22;\n                } else if (Gx.cmode === 5) {\n                    ylab = 22;\n                    xlab = 21;\n                } else if (Gx.cmode === 6) {\n                    ylab = 26;\n                } else if (Gx.cmode === 7) {\n                    ylab = 27;\n                } else {\n                    ylab = 0;\n                }\n            }\n\n            if (Gx.specs) {\n                if (Gx.sections === 0) {\n                    var drawaxis_flags = {\n                        grid: Gx.grid\n                    };\n                    if (Gx.panning === 2) {\n                        drawaxis_flags.noxtlab = true;\n                    } // TODO Does this work??\n                    if (!Gx.show_x_axis) {\n                        drawaxis_flags.noxtics = true;\n                        drawaxis_flags.noxtlab = true;\n                        drawaxis_flags.noxplab = true;\n                    }\n                    if (!Gx.show_y_axis) {\n                        drawaxis_flags.noytics = true;\n                        drawaxis_flags.noytlab = true;\n                        drawaxis_flags.noyplab = true;\n                    }\n                    if (Gx.specs && !Gx.show_readout && !Gx.pan) {\n                        drawaxis_flags.noyplab = true;\n                        drawaxis_flags.noxplab = true;\n                    }\n                    if (Gx.gridBackground) {\n                        drawaxis_flags.fillStyle = Gx.gridBackground;\n                    }\n                    if (Gx.gridStyle) {\n                        drawaxis_flags.gridStyle = Gx.gridStyle;\n                    }\n                    if (Gx.xmult) {\n                        drawaxis_flags.xmult = Gx.xmult;\n                    }\n                    if (Gx.ymult) {\n                        drawaxis_flags.ymult = Gx.ymult;\n                    }\n                    if (xlab === 4) { //time-based tics\n                        drawaxis_flags.xtimecode = true;\n                    }\n                    if (ylab === 4) { //time-based tics\n                        drawaxis_flags.ytimecode = true;\n                    }\n                    if (Gx.xlabel !== undefined) {\n                        drawaxis_flags.xlabel = Gx.xlabel;\n                    }\n                    if (Gx.ylabel !== undefined) {\n                        drawaxis_flags.ylabel = Gx.ylabel;\n                    }\n                    mx.drawaxis(Gx, Mx, Gx.xdiv, Gx.ydiv, xlab, ylab, drawaxis_flags);\n                } //else {\n                // Not implemented yet\n                //}\n\n                var i = Gx.lbtn - 2;\n\n                if (Gx.show_readout && Gx.pan && !Gx.no_legend_button) {\n                    if (Gx.legend) {\n                        Gx.legendBtnLocation = {\n                            x: Mx.width - Gx.lbtn,\n                            y: 2,\n                            width: i,\n                            height: i\n                        };\n                        mx.shadowbox(Mx, Mx.width - Gx.lbtn, 2, i, i, 1, -2,\n                            'L');\n                    } else {\n                        Gx.legendBtnLocation = {\n                            x: Mx.width - Gx.lbtn,\n                            y: 2,\n                            width: i,\n                            height: i\n                        };\n                        mx.shadowbox(Mx, Mx.width - Gx.lbtn, 2, i, i, 1,\n                            2, 'L');\n                    }\n                    display_specs(this);\n                } else {\n                    Gx.legendBtnLocation = null;\n                }\n            } else if (Gx.grid && Gx.sections >= 0) {\n                var drawaxis_flags = {\n                    grid: true,\n                    noaxisbox: true,\n                    noxtics: true,\n                    noxtlab: true,\n                    noxplab: true,\n                    noytics: true,\n                    noytlab: true,\n                    noyplab: true\n                };\n                mx.drawaxis(Gx, Mx, Gx.xdiv, Gx.ydiv, xlab, ylab,\n                    drawaxis_flags);\n            }\n\n            draw_layers(this);\n\n            draw_accessories(this, 4);\n\n\n\n            draw_plugins(this);\n\n\n            Gx.cross_xpos = undefined;\n            Gx.cross_ypos = undefined;\n            if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                draw_crosshairs(this);\n                if (!Gx.y_cut_press_on && !Gx.x_cut_press_on && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                    draw_p_cuts(this);\n                }\n            }\n\n            if (Gx.always_show_marker || Gx.show_marker) {\n                draw_marker(this);\n            }\n        }\n\n    };\n\n    // /////////////////////////////////////////////////////////////////////////\n    // Private methods and objects\n    // /////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Map integer cmode to string equivalent.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var cxm = [\"Ma\", \"Ph\", \"Re\", \"Im\", \"IR\", \"Lo\", \"L2\"];\n\n    /**\n     * Map integer abscissa mode to string equivalent.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var cam = [\"(absc)\", \"(indx)\", \"(1/ab)\", \"(dydx)\"];\n\n\n\n    /**\n     * This object holds the data associated with layers in the plot.\n     *\n     * @constructor\n     * @memberOf sigplot\n     * @private\n     */\n    function SIGPLOTLAYER() {\n\n        this.xbuf = undefined; // raw (ArrayBuffer) of ABSC data\n        this.ybuf = undefined; // raw (ArrayBuffer) of ORD data\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n        // xbufn = xbuf.byteLength\n        // ybufn = ybuf.byteLength\n        this.size = 0;\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n\n        this.options = {};\n    }\n\n    /**\n     * The graphics structure object used to hold state about the plot.\n     *\n     * @constructor\n     * @memberOf sigplot\n     * @private\n     */\n    function GX() {\n        this.initialized = false;\n        this.xptr = undefined; // xpoints as anything \"array-like\"...\n        this.yptr = undefined; // ypoints as anything \"array-like\"...\n\n        this.retx = 0.0; // absc coord. at mouse location\n        this.rety = 0.0;\n        this.xmrk = 0.0; // absc coord of mark\n        this.ymrk = 0.0;\n        this.aretx = 0.0; // absc coord. at mouse location\n        this.arety = 0.0;\n\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n\n        this.panxmin = 0.0;\n        this.panxmax = 0.0;\n        this.panymin = 0.0;\n        this.panymax = 0.0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.xmult = undefined;\n        this.ymin = 0.0;\n        this.ymax = 0.0;\n        this.ymult = undefined;\n        this.zmin = undefined;\n        this.zmax = undefined;\n        this.zoff = 0;\n        this.dbmin = 0.0;\n        this.pxscl = 0.0;\n        this.pyscl = 0.0;\n        this.pmt = 0.0;\n\n        this.note = \"\";\n        // this.mouse unnecssary because we don't have res table\n        this.format = \"\";\n\n        this.pl = 0;\n        this.pr = 0;\n        this.pt = 0;\n        this.pb = 0;\n        this.px1 = 0; // specifies plotting field\n        this.px2 = 0;\n        this.py1 = 0;\n        this.py2 = 0;\n\n        this.pyl = 0;\n        this.pthk = 0; // thickness of pan drag box\n\n        this.modlayer = 0;\n        this.modsource = 0;\n        this.modified = false;\n        this.modmode = 0;\n\n        this.xdiv = 0;\n        this.ydiv = 0;\n\n        this.all = false;\n        this.expand = false;\n        this.cross = false;\n        this.grid = true;\n        this.gridBackground = undefined;\n        this.index = false;\n        this.pan = true;\n        this.specs = true;\n        this.legend = true;\n        this.xdata = false;\n\n        this.show_x_axis = true;\n        this.show_y_axis = true;\n        this.show_readout = true;\n        this.hide_note = false;\n        this.autohide_readout = false;\n        this.autohide_panbars = false;\n        this.panning = undefined;\n        this.panmode = 0; // TODO Is this a good default value? Where is this\n        // changed?\n        this.hold = false;\n\n        this.sections = 0; // number of plot sections, -1 for layers\n        this.iysec = 0;\n        this.nsec = 0; // actual number of sections\n        this.isec = 0; // current sections\n\n        this.xlab = undefined;\n        this.xlabel = undefined;\n        this.ylab = undefined;\n        this.ylabel = undefined;\n\n        // 0 - use HTML5 canvas smoothing\n        // 1 - average\n        // 2 - min\n        // 3 - max\n        // 4 - first\n        // 5 - max abs\n        this.xcompression = 0;\n\n        this.default_rubberbox_action = \"zoom\";\n        this.default_rubberbox_mode = \"box\";\n\n        this.wheelscroll_mode_natural = true;\n        this.scroll_time_interval = 10;\n\n        this.repeatPanning = undefined;\n        this.stillPanning = undefined; // TODO maybe merge this variable with\n        // Gx.panning in future?\n\n        this.autol = -1;\n\n        this.lineSmoothing = false; // not implemented\n        this.rasterSmoothing = false;\n\n        this.wheelZoom = false;\n        this.wheelZoomPercent = 0.2;\n        this.inContinuousZoom = false;\n\n        this.lyr = [];\n        this.HCB = [];\n        this.plugins = [];\n\n        this.plotData = document.createElement(\"canvas\");\n        this.plotData.valid = false;\n\n        // Large colorbar info, like button locations\n        this.lg_colorbar = false;\n\n        // Colorbar button top or bottom positions\n        this.cbb_top_x1 = 0;\n        this.cbb_top_y1 = 0;\n        this.cbb_bot_x1 = 0;\n        this.cbb_bot_y1 = 0;\n        this.cbb_width = 0;\n        this.cbb_height = 0;\n\n        //P_cuts info\n        this.p_cuts = false;\n        this.x_box_x = 0;\n        this.x_box_y = 0;\n        this.x_box_h = 0;\n        this.x_box_w = 0;\n        this.y_box_x = 0;\n        this.y_box_y = 0;\n        this.y_box_h = 0;\n        this.y_box_w = 0;\n        this.p_cuts_xpos = undefined;\n        this.p_cuts_ypos = undefined;\n        this.x_cut_data = [];\n        this.y_cut_data = [];\n        //the plot to hold the x-cut on bottom\n        this.xcut = undefined;\n        //layer xcut that will be displayed on pop-up\n        this.xcut_layer = undefined;\n        this.x_cut_press_on = false;\n        //variable that is true if the bottom xcut is being drawn\n        this.xcut_now = false;\n        //the plot to hold the y-cut\n        this.ycut = undefined;\n        //layer ycut that will be displayed on pop-up\n        this.ycut_layer = undefined;\n        this.y_cut_press_on = false;\n        //variable that is true if the ycut is being drawn\n        this.ycut_now = false;\n        this.ylabel_stash = undefined;\n        this.cut_stash = undefined;\n        //div to hold x-cut\n        this.element1 = undefined;\n        //div to hold y cut\n        this.element2 = undefined;\n\n        //x and y sticky key configuration (\"automatic\" displays point on\n        //1D and cut on 2D, \"disable\" doesn't display anything, \"pop-up\"\n        //displays point on both, and \"cuts\" displays only cuts on 2D)\n        this.xyKeys = \"automatic\";\n        //true if the x value is being displayed on plot\n        this.x_pop_now = false;\n        //true if the y value is being displayed on plot\n        this.y_pop_now = false;\n\n        //the drawmode and autol before the x or y cut was showing\n        this.old_drawmode = undefined;\n        this.old_autol = undefined;\n\n        // refresh-reference-counter\n        this.refresh_after_ctr = 0;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function setup_cmap(plot, cmap) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        // If a color map array was provided make a custom map\n        if (Array.isArray(cmap)) {\n            var custom_cmap = {\n                name: \"Custom\",\n                colors: cmap\n            };\n            if (m.Mc.colormap[m.Mc.colormap.length - 1].name === \"Custom\") {\n                m.Mc.colormap[m.Mc.colormap.length - 1].colors = cmap;\n            } else {\n                m.Mc.colormap.push(custom_cmap);\n            }\n            Gx.cmap = m.Mc.colormap.length - 1;\n        } else if (typeof cmap === \"string\") {\n            Gx.cmap = -1;\n            for (var xc = 0; xc < m.Mc.colormap.length; xc++) {\n                if (m.Mc.colormap[xc].name === cmap) {\n                    Gx.cmap = xc;\n                    break;\n                }\n            }\n        } else {\n            Gx.cmap = cmap;\n        }\n\n        if (Gx.ncolors < 0) {\n            Gx.ncolors = -1 * Gx.ncolors;\n            Gx.cmap = Math.max(1, Gx.cmap);\n        }\n        if ((Gx.cmap < 0) || (Gx.cmap > m.Mc.colormap.length)) {\n            if (Gx.cmode === 2) {\n                Gx.cmap = 2; // wheel\n            } else {\n                Gx.cmap = 1; // ramp\n            }\n        }\n\n        mx.colormap(Mx, m.Mc.colormap[Gx.cmap].colors, Gx.ncolors);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_x(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ls = Gx.aretx.toString();\n        if (Gx.iabsc === 1) {\n            mx.message(Mx, \"INDEX = \" + ls);\n        } else if (Gx.iabsc === 2) {\n            mx.message(Mx, \"1/X = \" + ls);\n        } else {\n            //if (Gx.xlab === 4) {\n            // TODO\n            //}\n            mx.message(Mx, \"X = \" + ls);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_timecode(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.lyr.length > 0) {\n            //var hcb = Gx.HCB[Gx.lyr[0].hcb];\n            var hcb = Gx.lyr[0].hcb; // mmm-TODO-needs investigation\n            if ((hcb[\"class\"] === 1) && ((hcb.xunits === 1) || (hcb.xunits === 4))) {\n                mx.message(Mx, \"Time = \" + m.sec2tod(hcb.timecode + Gx.retx), true);\n            } else if ((hcb[\"class\"] === 2) && ((hcb.yunits === 1) || (hcb.yunits === 4))) {\n                mx.message(Mx, \"Time = \" + m.sec2tod(hcb.timecode + Gx.rety), true);\n            } else {\n                mx.message(Mx, \"Time = UNK\");\n            }\n\n        }\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_y(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ls = Gx.arety.toString();\n        if (Gx.iabsc === 2) {\n            mx.message(Mx, \"1/Y = \" + ls);\n        } else {\n            //if (Gx.xlab === 4) {\n            // TODO\n            //}\n            mx.message(Mx, \"Y = \" + ls);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_z(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.zmin && Gx.zmax) { // at least one layer has a z dimension\n            var msg = \"\";\n            if (Gx.lyr.length === 1) {\n                var msg = \"Z = \" + Gx.lyr[0].get_z(Gx.retx, Gx.rety).toString();\n            } else {\n                var msg = \"TODO\"; // TODO we need to think of what we want to display here\n            }\n            mx.message(Mx, msg);\n        }\n    }\n\n    /**\n     * Constructs a menu for updating the pan scale of the plot.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param command\n     *            The scroll direction to use. Either \"XPAN\" or \"YPAN\" are\n     *            acceptable.\n     * @private\n     */\n    function sigplot_scrollScaleMenu(plot, command) {\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        mx.menu(Mx, {\n            title: \"SCROLLBAR\",\n            refresh: function() {\n                plot.refresh();\n            },\n            finalize: function() {\n                mx.addEventListener(Mx, \"mousedown\",\n                    plot.onmousedown, false);\n                plot.refresh();\n            },\n            items: [{\n                text: \"Expand Range\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_EXPAND, command);\n                }\n            }, {\n                text: \"Shrink Range\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_SHRINK, command);\n                }\n            }, {\n                text: \"Expand Full\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_FULL, command);\n                }\n            }]\n        });\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_mainmenu(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        // show mainmenu\n        //\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        // Sub-menus\n        var CONTROLS_MENU = {\n            text: \"Cntrls...\",\n            menu: {\n                title: \"CONTROLS OPTIONS\",\n                items: [{\n                    text: \"Continuous (Disabled)\",\n                    checked: Gx.cntrls === -2,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: -2\n                        });\n                    }\n                }, {\n                    text: \"LM Click (Disabled)\",\n                    checked: Gx.cntrls === -1,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: -1\n                        });\n                    }\n                }, {\n                    text: \"Off\",\n                    checked: Gx.cntrls === 0,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 0\n                        });\n                    }\n                }, {\n                    text: \"LM Click\",\n                    checked: Gx.cntrls === 1,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 1\n                        });\n                    }\n                }, {\n                    text: \"Continuous\",\n                    checked: Gx.cntrls === 2,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 2\n                        });\n                    }\n                }]\n            }\n        };\n\n        var CXMODE_MENU = {\n            text: \"CX Mode...\",\n            menu: {\n                title: \"COMPLEX MODE\",\n                items: [{\n                    text: \"Magnitude\",\n                    checked: Gx.cmode === 1,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 1\n                        });\n                    }\n                }, {\n                    text: \"Phase\",\n                    checked: Gx.cmode === 2,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 2\n                        });\n                    }\n                }, {\n                    text: \"Real\",\n                    checked: Gx.cmode === 3,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 3\n                        });\n                    }\n                }, {\n                    text: \"Imaginary\",\n                    checked: Gx.cmode === 4,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 4\n                        });\n                    }\n                }, {\n                    text: \"IR: Imag/Real\",\n                    checked: Gx.cmode === 5,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 5\n                        });\n                    }\n                }, {\n                    text: \"10*Log10\",\n                    checked: Gx.cmode === 6,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 6\n                        });\n                    }\n                }, {\n                    text: \"20*Log10\",\n                    checked: Gx.cmode === 7,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 7\n                        });\n                    }\n                }]\n            }\n        };\n\n        var SCALING_MENU = {\n            text: \"Scaling...\",\n            menu: {\n                title: \"SCALING\",\n                items: [{\n                    text: \"Y Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autoy === 0),\n                    handler: function() {\n                        Gx.autoy = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"Y Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Mx.stk[Mx.level].ymax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        updateViewbox(\n                                            plot,\n                                            Mx.stk[Mx.level].ymin,\n                                            parseFloat(finalValue),\n                                            \"Y\");\n                                    } else {\n                                        plot.refresh();\n                                    }\n                                }, Mx.stk[Mx.level].ymax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Mx.stk[Mx.level].ymin) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    updateViewbox(plot,\n                                        parseFloat(finalValue),\n                                        Mx.stk[Mx.level].ymax,\n                                        \"Y\");\n                                } else {\n                                    plot.refresh();\n                                }\n\n                            }, Mx.stk[Mx.level].ymin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autoy === 1),\n                    handler: function() {\n                        Gx.autoy = 1;\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autoy === 2),\n                    handler: function() {\n                        Gx.autoy = 2;\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autoy === 3),\n                    handler: function() {\n                        Gx.autoy = 3;\n                    }\n                }, {\n                    text: \"X Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autox === 0),\n                    handler: function() {\n                        Gx.autox = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"X Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Mx.stk[Mx.level].xmax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        updateViewbox(\n                                            plot,\n                                            Mx.stk[Mx.level].xmin,\n                                            parseFloat(finalValue),\n                                            \"X\");\n                                    } else {\n                                        plot.refresh();\n                                    }\n                                }, Mx.stk[Mx.level].xmax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Mx.stk[Mx.level].xmin) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    updateViewbox(plot,\n                                        parseFloat(finalValue),\n                                        Mx.stk[Mx.level].xmax,\n                                        \"X\");\n                                } else {\n                                    plot.refresh();\n                                }\n                            }, Mx.stk[Mx.level].xmin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autox === 1),\n                    handler: function() {\n                        Gx.autox = 1;\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autox === 2),\n                    handler: function() {\n                        Gx.autox = 2;\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autox === 3),\n                    handler: function() {\n                        Gx.autox = 3;\n                    }\n                }, {\n                    text: \"Z Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autoz === 0),\n                    handler: function() {\n                        Gx.autoz = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"Z Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Gx.zmax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        plot.change_settings({\n                                            zmax: finalValue\n                                        });\n                                    }\n                                }, Gx.zmax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Z Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.zmin) {\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    plot.change_settings({\n                                        zmin: finalValue\n                                    });\n                                }\n                            }, Gx.zmin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autoz === 1),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 1\n                        });\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autoz === 2),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 2\n                        });\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autoz === 3),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 3\n                        });\n                    }\n                }]\n            }\n        };\n\n        var GRID_MENU = {\n            text: \"Grid\",\n            handler: function() {\n                plot.change_settings({\n                    grid: !Gx.grid\n                });\n            }\n        };\n\n        var SETTINGS_MENU = {\n            text: \"Settings...\",\n            menu: {\n                title: \"SETTINGS\",\n                items: [{\n                    text: \"ALL Mode\",\n                    checked: Gx.all,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            all: !Gx.all\n                        });\n                    }\n                }, {\n                    text: \"Controls...\",\n                    menu: {\n                        title: \"CONTROLS OPTIONS\",\n                        items: [{\n                            text: \"Continuous (Disabled)\",\n                            checked: Gx.cntrls === -2,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: -2\n                                });\n                            }\n                        }, {\n                            text: \"LM Click (Disabled)\",\n                            checked: Gx.cntrls === -1,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: -1\n                                });\n                            }\n                        }, {\n                            text: \"Off\",\n                            checked: Gx.cntrls === 0,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 0\n                                });\n                            }\n                        }, {\n                            text: \"LM Click\",\n                            checked: Gx.cntrls === 1,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 1\n                                });\n                            }\n                        }, {\n                            text: \"Continuous\",\n                            checked: Gx.cntrls === 2,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 2\n                                });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Mouse...\",\n                    menu: {\n                        title: \"MOUSE OPTIONS\",\n                        items: [{\n                            text: \"LM Drag (Zoom)\",\n                            checked: Gx.default_rubberbox_action === \"zoom\",\n                            handler: function() {\n                                Gx.default_rubberbox_action = \"zoom\";\n                            }\n                        }, {\n                            text: \"LM Drag (Select)\",\n                            checked: Gx.default_rubberbox_action === \"select\",\n                            handler: function() {\n                                Gx.default_rubberbox_action = \"select\";\n                            }\n                        }, {\n                            text: \"LM Drag (Disabled)\",\n                            checked: Gx.default_rubberbox_action === null,\n                            handler: function() {\n                                Gx.default_rubberbox_action = null;\n                            }\n                        }, {\n                            text: \"RM Drag (Zoom)\",\n                            checked: Gx.default_rightclick_rubberbox_action === \"zoom\",\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = \"zoom\";\n                            }\n                        }, {\n                            text: \"RM Drag (Select)\",\n                            checked: Gx.default_rightclick_rubberbox_action === \"select\",\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = \"select\";\n                            }\n                        }, {\n                            text: \"RM Drag (Disabled)\",\n                            checked: Gx.default_rightclick_rubberbox_action === null,\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = null;\n                            }\n                        }, {\n                            text: \"Mode...\",\n                            menu: {\n                                title: \"MOUSE Mode\",\n                                items: [{\n                                    text: \"Box\",\n                                    checked: Gx.default_rubberbox_mode === \"box\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"box\";\n                                    }\n\n                                }, {\n                                    text: \"Horizontal\",\n                                    checked: Gx.default_rubberbox_mode === \"horizontal\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"horizontal\";\n                                    }\n                                }, {\n                                    text: \"Vertical\",\n                                    checked: Gx.default_rubberbox_mode === \"vertical\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"vertical\";\n                                    }\n                                }]\n                            }\n                        }, {\n                            text: \"CROSShairs...\",\n                            menu: {\n                                title: \"Crosshairs Mode\",\n                                items: [{\n                                    text: \"Off\",\n                                    checked: !Gx.cross,\n                                    handler: function() {\n                                        Gx.cross = false;\n                                    }\n\n                                }, {\n                                    text: \"On\",\n                                    checked: Gx.cross === true,\n                                    handler: function() {\n                                        Gx.cross = true;\n                                    }\n                                }, {\n                                    text: \"Horizontal\",\n                                    checked: Gx.cross === \"horizontal\",\n                                    handler: function() {\n                                        Gx.cross = \"horizontal\";\n                                    }\n                                }, {\n                                    text: \"Vertical\",\n                                    checked: Gx.cross === \"vertical\",\n                                    handler: function() {\n                                        Gx.cross = \"vertical\";\n                                    }\n                                }]\n                            }\n                        }, {\n                            text: \"Mousewheel Natural Mode\",\n                            checked: Gx.wheelscroll_mode_natural,\n                            style: \"checkbox\",\n                            handler: function() {\n                                plot\n                                    .change_settings({\n                                        wheelscroll_mode_natural: !Gx.wheelscroll_mode_natural\n                                    });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"CROSShairs\",\n                    checked: Gx.cross,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            cross: !Gx.cross\n                        });\n                    }\n                }, {\n                    text: \"GRID\",\n                    checked: Gx.grid,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            grid: !Gx.grid\n                        });\n                    }\n                }, {\n                    text: \"INDEX Mode\",\n                    checked: Gx.index,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            index: !Gx.index\n                        });\n                    }\n                }, {\n                    text: \"LEGEND\",\n                    checked: Gx.legend,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            legend: !Gx.legend\n                        });\n                    }\n                }, {\n                    text: \"PAN Scrollbars\",\n                    checked: Gx.pan,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            pan: !Gx.pan\n                        });\n                    }\n                }, {\n                    text: \"PHase UNITS...\",\n                    menu: {\n                        title: \"PHASE UNITS\",\n                        items: [{\n                            text: \"Radians\",\n                            checked: Gx.plab === 23,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'R'\n                                });\n                            }\n\n                        }, {\n                            text: \"Degrees\",\n                            checked: Gx.plab === 24,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'D'\n                                });\n                            }\n                        }, {\n                            text: \"Cycles\",\n                            checked: Gx.plab === 25,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'C'\n                                });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"SPECS\",\n                    checked: Gx.specs,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            specs: !Gx.specs\n                        });\n                    }\n                }, {\n                    text: \"P-Cuts\",\n                    checked: Gx.p_cuts,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            p_cuts: !Gx.p_cuts\n                        });\n                    }\n                }, {\n                    text: \"Large Colorbar\",\n                    checked: Gx.lg_colorbar,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            lg_colorbar: !Gx.lg_colorbar\n                        });\n                    }\n                }, {\n                    text: \"XDIVisions...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            var maxXDIV = m.trunc(Mx.width / 2); // TODO\n                            // Make value an option on the plot?\n                            // Maybe still a little too high\n                            // while dotted-line grids are\n                            // being drawn?\n                            if (isValid.valid && value > maxXDIV) {\n                                return {\n                                    valid: false,\n                                    reason: \"Exceeds maximum number of divisions (\" + maxXDIV + \").\"\n                                };\n                            } else {\n                                return isValid;\n                            }\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Divisions:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.xdiv) { // Only\n                                    // update if different value\n                                    if (finalValue === \"\") {\n                                        finalValue = 1;\n                                    }\n                                    Gx.xdiv = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.xdiv, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"XLABel...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            console.log(\"The value is \" + value);\n                            var isValid = mx.intValidator(value);\n                            return isValid;\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Units:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.xlab) { // Only\n                                    // update if different value\n                                    if (finalValue < 0) {\n                                        finalValue = 0;\n                                    }\n                                    Gx.xlab = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.xlab, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"YDIVisions...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            var maxYDIV = m.trunc(Mx.height / 2); // TODO\n                            // Make value an option on the plot?\n                            // Maybe still a little too high\n                            // while dotted-line grids are\n                            // being drawn?\n                            if (isValid.valid && value > maxYDIV) {\n                                return {\n                                    valid: false,\n                                    reason: \"Exceeds maximum number of divisions (\" + maxYDIV + \").\"\n                                };\n                            } else {\n                                return isValid;\n                            }\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Divisions:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.ydiv) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 1;\n                                    }\n                                    Gx.ydiv = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.ydiv, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"YINVersion\",\n                    checked: (Mx.origin === 4),\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            yinv: (Mx.origin !== 4)\n                        });\n                    }\n                }, {\n                    text: \"YLABel...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            return isValid;\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Units:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.ylab) { // Only\n                                    // update if different value\n                                    if (finalValue < 0) {\n                                        finalValue = 0;\n                                    }\n                                    Gx.ylab = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.ylab, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"X-axis\",\n                    checked: Gx.show_x_axis,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_x_axis: !Gx.show_x_axis\n                        });\n                    }\n                }, {\n                    text: \"Y-axis\",\n                    checked: Gx.show_y_axis,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_y_axis: !Gx.show_y_axis\n                        });\n                    }\n                }, {\n                    text: \"Readout\",\n                    checked: Gx.show_readout,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_readout: !Gx.show_readout\n                        });\n                    }\n                }, {\n                    text: \"Invert Colors\",\n                    checked: Mx.xi,\n                    style: \"checkbox\",\n                    handler: function() {\n                        mx.invertbgfg(Mx);\n                    }\n                }]\n            }\n        };\n\n        var COLORMAP_MENU = {\n            text: \"Colormap...\",\n            menu: {\n                title: \"COLORMAP\",\n                items: []\n            }\n        };\n\n        var colormap_handler = function(item) {\n            plot.change_settings({\n                cmap: this.cmap\n            });\n        };\n\n        for (var xc = 0; xc < m.Mc.colormap.length; xc++) {\n            var menuitem = {\n                text: m.Mc.colormap[xc].name,\n                cmap: xc,\n                checked: (Gx.cmap === xc),\n                handler: colormap_handler\n            };\n            COLORMAP_MENU.menu.items.push(menuitem);\n        }\n\n        var traceoptionsmenu = function(index) {\n            return {\n                title: \"TRACE OPTIONS\",\n                items: [{\n                    text: \"Dashed...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var thk = 1;\n                        if (index !== undefined) {\n                            thk = Math.abs(plot._Gx.lyr[index].thick);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n\n                            thk = Math.abs(plot._Gx.lyr[0].thick);\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                                    thk = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Line thickness:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                    plot._Gx.lyr[index].thick = -1 * finalValue;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                        plot._Gx.lyr[ii].line = 3;\n                                        plot._Gx.lyr[ii].thick = -1 * finalValue;\n                                        plot._Gx.lyr[ii].symbol = 0;\n                                    }\n                                }\n                            }, thk);\n                    }\n                }, {\n                    text: \"Colors...\",\n                    menu: {\n                        title: \"COLORS\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"Red\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"red\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"red\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"red\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Pink\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"pink\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"pink\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"pink\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Hot Pink\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#ff009e\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"#ff009e\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"#ff009e\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Orange\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"orange\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"orange\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"orange\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Yellow\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"yellow\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"yellow\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"yellow\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Lime Green\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#80f741\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"#80f741\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"#80f741\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Green\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"green\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"green\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"green\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Blue\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"blue\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"blue\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"blue\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Purple\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"purple\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"purple\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"purple\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Custom Hexcode\",\n                            handler: function() {\n                                setupPrompt(\n                                    plot,\n                                    \"Color code (requires #):\",\n                                    mx.hexValidator,\n                                    function(finalValue) {\n                                        if (index !== undefined) {\n                                            plot._Gx.lyr[index].color = finalValue;\n                                        } else {\n                                            for (var ii = 0; ii < Gx.lyr.length; index++) {\n                                                plot._Gx.lyr[ii].color = finalValue;\n                                            }\n                                        }\n                                    }, undefined, undefined, undefined, undefined);\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Dots...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var radius = 3;\n                        if (index !== undefined) {\n                            radius = Math.abs(plot._Gx.lyr[index].radius);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                if (radius !== Math.abs(plot._Gx.lyr[i].radius)) {\n                                    radius = 3;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Radius/Shape:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                var sym;\n                                var rad;\n                                if (finalValue < 0) {\n                                    sym = 3; // square\n                                    rad = Math.abs(finalValue);\n                                } else if (finalValue > 0) {\n                                    sym = 2; // circle\n                                    rad = finalValue;\n                                } else {\n                                    sym = 1;\n                                    rad = 0;\n                                }\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                    plot._Gx.lyr[index].radius = rad;\n                                    plot._Gx.lyr[index].symbol = sym;\n                                } else {\n                                    var i;\n                                    for (i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                        plot._Gx.lyr[i].radius = rad;\n                                        plot._Gx.lyr[i].symbol = sym;\n                                    }\n                                }\n                            }, radius);\n                    }\n                }, {\n                    text: \"Radius...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var radius = 3;\n                        if (index !== undefined) {\n                            radius = Math.abs(plot._Gx.lyr[index].radius);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                if (radius !== Math.abs(plot._Gx.lyr[i].radius)) {\n                                    radius = 3;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Radius:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                var sym;\n                                var rad;\n                                if (finalValue < 0) {\n                                    rad = Math.abs(finalValue);\n                                } else if (finalValue > 0) {\n                                    rad = finalValue;\n                                } else {\n                                    sym = 1;\n                                    rad = 0;\n                                }\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                    plot._Gx.lyr[index].radius = rad;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                        plot._Gx.lyr[i].radius = rad;\n                                    }\n                                }\n                            }, radius);\n                    }\n                }, {\n                    text: \"Solid...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var thk = 1;\n                        if (index !== undefined) {\n                            thk = Math.abs(plot._Gx.lyr[index].thick);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n\n                            thk = Math.abs(plot._Gx.lyr[0].thick);\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                                    thk = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Line thickness:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                    plot._Gx.lyr[index].thick = finalValue;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    var i;\n                                    for (i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 3;\n                                        plot._Gx.lyr[i].thick = finalValue;\n                                        plot._Gx.lyr[i].symbol = 0;\n                                    }\n                                }\n                            }, thk);\n                    }\n                }, {\n                    text: \"Toggle\",\n                    style: (index !== undefined) ? \"checkbox\" : undefined,\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].display : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].display = !plot._Gx.lyr[index].display;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].display = !plot._Gx.lyr[i].display;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Symbols...\",\n                    menu: {\n                        title: \"SYMBOLS\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"None\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 0;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 0;\n                                        plot._Gx.lyr[i].symbol = 0;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Pixels\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 1;\n                                    plot._Gx.lyr[index].symbol = 1;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 1;\n                                        plot._Gx.lyr[i].symbol = 1;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Circles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 2;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 2;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Squares\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 3;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 3;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Plusses\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 4 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 4;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 4;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"X's\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 5 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 5;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 5;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Triangles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 6 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 6;\n                                    plot._Gx.lyr[index].symbol = 6;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 6;\n                                        plot._Gx.lyr[i].symbol = 6;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Downward Triangles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 7 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 6;\n                                    plot._Gx.lyr[index].symbol = 7;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 6;\n                                        plot._Gx.lyr[i].symbol = 7;\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Line Type...\",\n                    menu: {\n                        title: \"LINE TYPE\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"None\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Verticals\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 1;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 1;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Horizontals\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 2;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 2;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Connecting\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 3;\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Thickness...\",\n                    handler: function() {\n                        var thickness = 1;\n                        if (index !== undefined) {\n                            thickness = plot._Gx.lyr[index].thick;\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Thickness\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (finalValue === \"\") {\n                                    finalValue = 1;\n                                }\n                                finalValue = Math.max(0, finalValue);\n\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].thick = finalValue;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].thick = finalValue;\n                                    }\n                                }\n                            }, thickness, undefined,\n                            undefined, undefined);\n                    }\n                }, {\n                    text: \"Opacity...\",\n                    handler: function() {\n                        var opacity = 1.0;\n                        if (index !== undefined) {\n                            opacity = plot._Gx.lyr[index].opacity;\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Opacity:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (finalValue === \"\") {\n                                    finalValue = 1.0;\n                                }\n                                finalValue = Math.max(0, finalValue);\n                                finalValue = Math.min(1, finalValue);\n\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].opacity = finalValue;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].opacity = finalValue;\n                                    }\n                                }\n                            }, opacity, undefined,\n                            undefined, undefined);\n                    }\n                }, {\n                    text: \"XCompression...\",\n                    menu: {\n                        title: \"XCOMPRESSION\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"Smoothing\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 0\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 0\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Average\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 1\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 1\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Minimum\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 2\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 2\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Maximum\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 3\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 3\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"First\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 4 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 4\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 4\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Max (Abs)\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 5 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 5\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 5\n                                        });\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }]\n            };\n        };\n\n        var VIEW_MENU = {\n            text: \"View...\",\n            menu: {\n                title: \"VIEW\",\n                items: [{\n                    text: \"Reset\",\n                    handler: function() {\n                        plot.unzoom();\n                    }\n                }, {\n                    text: \"Y Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Expand Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_EXPAND, \"YPAN\");\n                    }\n                }, {\n                    text: \"Shrink Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_SHRINK, \"YPAN\");\n                    }\n                }, {\n                    text: \"Expand Full\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_FULL, \"YPAN\");\n                    }\n                }, {\n                    text: \"X Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Expand Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_EXPAND, \"XPAN\");\n                    }\n                }, {\n                    text: \"Shrink Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_SHRINK, \"XPAN\");\n                    }\n                }, {\n                    text: \"Expand Full\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_FULL, \"XPAN\");\n                    }\n                }]\n            }\n        };\n\n        var TRACES_MENU = {\n            text: \"Traces...\",\n            menu: function() {\n                var Gx = plot._Gx;\n                var tracemenu = {\n                    title: \"TRACE\",\n                    items: []\n                };\n                // Add the ALL option\n                tracemenu.items.push({\n                    text: \"All\",\n                    menu: traceoptionsmenu()\n                });\n                // Add all the active layers\n                for (var i = 0; i < Gx.lyr.length; i++) {\n                    tracemenu.items.push({\n                        text: Gx.lyr[i].name,\n                        menu: traceoptionsmenu(i)\n                    });\n                }\n                return tracemenu;\n            }\n        };\n\n        var FILES_MENU = {\n            text: \"Files...\",\n            menu: {\n                title: \"FILES OPTIONS\",\n                items: [\n                    // Overlay File... is disabled\n                    // because it's actually very\n                    // difficult to bring up a\n                    // a file upload browse dialog\n                    /*\n                     * { text: \"Overlay File...\", handler: function() {\n                     * plot.change_settings( {phunits: 'R'} ); } },\n                     */\n                    {\n                        text: \"Deoverlay File...\",\n                        menu: function() {\n                            var Gx = plot._Gx;\n                            var deoverlaymenu = {\n                                title: \"DEOVERLAY\",\n                                items: []\n                            };\n                            deoverlaymenu.items.push({\n                                text: \"Deoverlay All\",\n                                handler: function() {\n                                    plot.deoverlay();\n                                }\n                            });\n                            /* jshint -W083 */\n                            /* TODO figure out how to not create functions within a loop */\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                var handler = (function(index) {\n                                    return function() {\n                                        plot.deoverlay(index);\n                                    };\n                                }(i));\n\n                                deoverlaymenu.items.push({\n                                    text: Gx.lyr[i].name,\n                                    handler: handler\n                                });\n                            }\n                            /* jshint +W083 */\n                            return deoverlaymenu;\n                        }\n                    }\n                ]\n            }\n        };\n\n        var PLUGINS_MENU = {\n            text: \"Plugins...\",\n            menu: {\n                title: \"PLUGINS\",\n                items: (function() { // Immediately\n                    // Invoked\n                    // Function\n                    var result = [];\n                    for (var i = 0; i < Gx.plugins.length; i++) {\n                        var plugin = Gx.plugins[i];\n                        if (plugin.impl.menu) {\n                            if (typeof plugin.impl.menu === 'function') {\n                                result.push(plugin.impl.menu());\n                            } else {\n                                result.push(plugin.impl.menu);\n                            }\n                        }\n                    }\n                    return result;\n                }())\n            }\n        };\n\n        var SAVE_MENU = {\n            text: \"Save as...\",\n            menu: {\n                title: \"SAVE AS\",\n                items: [{\n                    text: \"PNG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/png\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".png\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }, {\n                    text: \"JPG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/jpg\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".jpg\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }, {\n                    text: \"SVG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/svg\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".svg\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }]\n            }\n        };\n\n        var REFRESH_ITEM = {\n            text: \"Refresh\"\n            // no handler, just let the finalizer deal with it\n        };\n\n        var KEYPRESSINFO_ITEM = {\n            text: \"Keypress Info\",\n            handler: function() {\n                mx.message(Mx, KEYPRESS_HELP);\n            }\n        };\n\n        var EXIT_ITEM = {\n            text: \"Exit\",\n            handler: function() {\n                var evt = document.createEvent('Event');\n                evt.initEvent('sigplotexit', true, true);\n                mx.dispatchEvent(Mx, evt);\n            }\n        };\n\n        // Main Menu\n        var MAINMENU = {\n            title: \"SIG-PLOT\",\n            finalize: function() {\n                if (!Mx.prompt) {\n                    // A prompt may have been\n                    // created by a menu handler\n                    // - let it deal with\n                    // eventListener re-setting\n                    mx.addEventListener(Mx, \"mousedown\", plot.onmousedown,\n                        false);\n                }\n                plot.refresh();\n            },\n            items: [REFRESH_ITEM, CONTROLS_MENU, CXMODE_MENU, SCALING_MENU, VIEW_MENU,\n                GRID_MENU, SETTINGS_MENU, COLORMAP_MENU, TRACES_MENU, FILES_MENU,\n                PLUGINS_MENU, KEYPRESSINFO_ITEM, SAVE_MENU, EXIT_ITEM\n            ]\n        };\n\n        mx.menu(Mx, MAINMENU);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_legend_menu(plot, index) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        var DASHED = {\n            text: \"Dashed...\",\n            handler: function() {\n                // Figure out the current thickness\n                var thk = 1;\n                if (index !== undefined) {\n                    thk = Math.abs(plot._Gx.lyr[index].thick);\n                } else {\n                    if (Gx.lyr.length === 0) {\n                        return;\n                    }\n\n                    thk = Math.abs(plot._Gx.lyr[0].thick);\n                    for (var i = 0; i < Gx.lyr.length; i++) {\n                        if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                            thk = 1;\n                            break;\n                        }\n                    }\n                }\n                setupPrompt(\n                    plot,\n                    \"Line thickness:\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                            plot._Gx.lyr[index].thick = -1 * finalValue;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                plot._Gx.lyr[ii].line = 3;\n                                plot._Gx.lyr[ii].thick = -1 * finalValue;\n                                plot._Gx.lyr[ii].symbol = 0;\n                            }\n                        }\n                    }, thk);\n            }\n\n        };\n\n        var COLORS = {\n            text: \"Colors...\",\n            menu: {\n                title: \"COLORS\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"Red\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"red\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"red\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"red\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Pink\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"pink\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"pink\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"pink\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Hot Pink\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#ff009e\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"#ff009e\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"#ff009e\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Orange\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"orange\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"orange\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"orange\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Yellow\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"yellow\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"yellow\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"yellow\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Lime Green\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#80f741\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"#80f741\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"#80f741\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Green\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"green\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"green\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"green\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Blue\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"blue\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"blue\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"blue\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Purple\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"purple\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"purple\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"purple\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Custom Hexcode\",\n                    handler: function() {\n                        setupPrompt(\n                            plot,\n                            \"Color code (requires #):\",\n                            mx.hexValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = finalValue;\n                                } else {\n                                    for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                        plot._Gx.lyr[ii].color = finalValue;\n                                    }\n                                }\n                            }, undefined, undefined, undefined, undefined);\n                    }\n                }]\n            }\n        };\n\n        var SOLID = {\n            text: \"Solid...\",\n            handler: function() {\n                // Figure out the current thickness\n                var thk = 1;\n                if (index !== undefined) {\n                    thk = Math.abs(plot._Gx.lyr[index].thick);\n                } else {\n                    if (Gx.lyr.length === 0) {\n                        return;\n                    }\n\n                    thk = Math.abs(plot._Gx.lyr[0].thick);\n                    var i;\n                    for (i = 0; i < Gx.lyr.length; i++) {\n                        if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                            thk = 1;\n                            break;\n                        }\n                    }\n                }\n                setupPrompt(\n                    plot,\n                    \"Line thickness:\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                            plot._Gx.lyr[index].thick = finalValue;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 3;\n                                plot._Gx.lyr[i].thick = finalValue;\n                                plot._Gx.lyr[i].symbol = 0;\n                            }\n                        }\n                    }, thk);\n            }\n        };\n\n        var TOGGLE = {\n            text: \"Toggle\",\n            style: (index !== undefined) ? \"checkbox\" : undefined,\n            checked: (index !== undefined) ? plot._Gx.lyr[index].display : undefined,\n            handler: function() {\n                if (index !== undefined) {\n                    plot._Gx.lyr[index].display = !plot._Gx.lyr[index].display;\n                } else {\n                    for (var i = 0; i < Gx.lyr.length; i++) {\n                        plot._Gx.lyr[i].display = !plot._Gx.lyr[i].display;\n                    }\n                }\n            }\n        };\n\n        var SYMBOLS = {\n            text: \"Symbols...\",\n            menu: {\n                title: \"SYMBOLS\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"None\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 0 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 0;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 0;\n                                plot._Gx.lyr[i].symbol = 0;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Pixels\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 1 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 1;\n                            plot._Gx.lyr[index].symbol = 1;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 1;\n                                plot._Gx.lyr[i].symbol = 1;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Circles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 2 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 2;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 2;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Squares\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 3 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 3;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 3;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Plusses\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 4 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 4;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 4;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"X's\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 5 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 5;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 5;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Triangles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 6 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 6;\n                            plot._Gx.lyr[index].symbol = 6;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 6;\n                                plot._Gx.lyr[i].symbol = 6;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Downward Triangles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 7 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 6;\n                            plot._Gx.lyr[index].symbol = 7;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 6;\n                                plot._Gx.lyr[i].symbol = 7;\n                            }\n                        }\n                    }\n                }]\n            }\n        };\n\n        var LINE_TYPE = {\n            text: \"Line Type...\",\n            menu: {\n                title: \"LINE TYPE\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"None\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 0 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 0;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 0;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Verticals\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 1 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 1;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 1;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Horizontals\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 2 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 2;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 2;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Connecting\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 3 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 3;\n                            }\n                        }\n                    }\n                }]\n            }\n        };\n\n        var THICKNESS = {\n            text: \"Thickness...\",\n            handler: function() {\n                var thickness = 1;\n                if (index !== undefined) {\n                    thickness = plot._Gx.lyr[index].thick;\n                }\n                setupPrompt(\n                    plot,\n                    \"Thickness\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (finalValue === \"\") {\n                            finalValue = 1;\n                        }\n                        finalValue = Math.max(0, finalValue);\n\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].thick = finalValue;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].thick = finalValue;\n                            }\n                        }\n                    }, thickness, undefined,\n                    undefined, undefined);\n            }\n        };\n\n        var OPACITY = {\n            text: \"Opacity...\",\n            handler: function() {\n                var opacity = 1.0;\n                if (index !== undefined) {\n                    opacity = plot._Gx.lyr[index].opacity;\n                }\n                setupPrompt(\n                    plot,\n                    \"Opacity:\",\n                    mx.floatValidator,\n                    function(finalValue) {\n                        if (finalValue === \"\") {\n                            finalValue = 1.0;\n                        }\n                        finalValue = Math.max(0, finalValue);\n                        finalValue = Math.min(1, finalValue);\n\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].opacity = finalValue;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].opacity = finalValue;\n                            }\n                        }\n                    }, opacity, undefined,\n                    undefined, undefined);\n            }\n        };\n\n        var LEGEND_TRACE = {\n            title: Gx.lyr[index].name,\n            finalize: function() {\n                if (!Mx.prompt) {\n                    // A prompt may have been\n                    // created by a menu handler\n                    // - let it deal with\n                    // eventListener re-setting\n                    mx.addEventListener(Mx, \"mousedown\", plot.onmousedown,\n                        false);\n                }\n                plot.refresh();\n            },\n            items: [DASHED, COLORS, SOLID, TOGGLE, SYMBOLS, LINE_TYPE, THICKNESS, OPACITY]\n        };\n\n        mx.menu(Mx, LEGEND_TRACE);\n    }\n\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function rubberbox_cb(plot, triggerEvent) {\n        return function(event, xo, yo, xl, yl, action, mode) {\n            var Gx = plot._Gx;\n            var Mx = plot._Mx;\n\n            var x = Math.min(xo, xl);\n            var y = Math.min(yo, yl);\n            var w = Math.abs(xl - xo);\n            var h = Math.abs(yl - yo);\n\n            var takeAction = false;\n            if (event.which === triggerEvent) {\n                // On some browsers, a click will actually be sent as\n                // mousedown/mousemove/mouseup so\n                // don't make insanely small zooms...instead treat them as a\n                // click\n                if (mode === \"horizontal\") {\n                    takeAction = (w > 2);\n                } else if (mode === \"vertical\") {\n                    takeAction = (h > 2);\n                } else {\n                    takeAction = ((w > 2) && (h > 2));\n                }\n            }\n\n            if (!takeAction) {\n                // The mouse didn't shift enough to be considered\n                // as a rubberbox action so treat it as mouseup\n                plot.mouseup(event);\n            } else {\n                // action === null is disabled, but undefined is default\n                if ((action === undefined) || (action === \"zoom\")) {\n                    plot.pixel_zoom(xo, yo, xl, yl);\n                    plot.refresh();\n                } else if (action === \"select\") {\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('mtag', true, true);\n                    var re = pixel_to_real(plot, x, y);\n                    var rwh = pixel_to_real(plot, x + w, y + h);\n                    evt.x = re.x;\n                    evt.y = re.y;\n                    evt.xpos = x;\n                    evt.ypos = y;\n                    evt.w = Math.abs(rwh.x - re.x);\n                    evt.h = Math.abs(rwh.y - re.y);\n                    evt.wpxl = w;\n                    evt.hpxl = h;\n                    evt.shift = event.shiftKey;\n                    mx.dispatchEvent(Mx, evt);\n                }\n            }\n        };\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function plot_init(plot, o) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if (!o.xlab) {\n            o.xlab = 0;\n        }\n        if (!o.ylab) {\n            o.ylab = 0;\n        }\n\n        //Convert xunits and yunits to numbers if they are strings\n        o.xlab = m.unit_lookup(o.xlab);\n        o.ylab = m.unit_lookup(o.ylab);\n\n        // Equivalent to reading cmd line args\n        Gx.xmin = o.xmin === undefined ? 0.0 : o.xmin;\n        Gx.xmax = o.xmax === undefined ? 0.0 : o.xmax;\n        var havexmin = (o.xmin !== undefined);\n        var havexmax = (o.xmax !== undefined);\n        var address;\n        if (typeof o.cmode === \"number\") {\n            switch (o.cmode) {\n                case 1:\n                    address = \"MA\";\n                    break;\n                case 2:\n                    address = \"PH\";\n                    break;\n                case 3:\n                    address = \"RE\";\n                    break;\n                case 4:\n                    address = \"IM\";\n                    break;\n                case 5:\n                    address = \"IR\";\n                    break;\n                case 6:\n                    address = \"LO\";\n                    break;\n                case 7:\n                    address = \"L2\";\n                    break;\n                default:\n                    throw new RangeError(\"Invalid cmode value\");\n            }\n        } else {\n            address = o.cmode === undefined ? \"\" : o.cmode.toUpperCase();\n        }\n        var line = o.line === undefined ? 3 : o.line;\n        Gx.ylab = o.ylab;\n        Gx.ylabel = o.ylabel;\n        Gx.ymin = o.ymin === undefined ? 0.0 : o.ymin;\n        Gx.ymax = o.ymax === undefined ? 0.0 : o.ymax;\n        var haveymin = (o.ymin !== undefined);\n        var haveymax = (o.ymax !== undefined);\n        Gx.zmin = o.zmin;\n        Gx.zmax = o.zmax;\n        var havezmin = (o.zmin !== undefined);\n        var havezmax = (o.zmax !== undefined);\n\n        if (o.colors !== undefined) {\n            mx.setbgfg(Mx, o.colors.bg, o.colors.fg, Mx.xi);\n        }\n\n        if (o.xi) {\n            mx.invertbgfg(Mx);\n        }\n\n        Gx.forcelab = o.forcelab === undefined ? true : o.forcelab;\n\n        Gx.all = o.all === undefined ? false : o.all;\n        // By default, SIGPLOT auto-scales only on the first buffer size.\n        // \"expand\" is a feature added for websigplot that when\n        // combined with \"all\" will expand the y-range automaticall\n        // to accomodate all of the samples\n        Gx.expand = o.expand === undefined ? false : o.expand;\n\n        // TODO Gx.mimic = M$GET_SWITCH ('MIMIC')\n        Gx.xlab = o.xlab;\n        Gx.xlabel = o.xlabel;\n        Gx.segment = o.segment === undefined ? false : o.segment;\n        Gx.plab = 24;\n\n        var phunits = (o.phunits === undefined) ? 'D' : o.phunits;\n        if (phunits[0] === 'R') {\n            Gx.plab = 23;\n        } else if (phunits[0] === 'C') {\n            Gx.plab = 25;\n        }\n        Gx.xdiv = o.xdiv === undefined ? 5 : o.xdiv;\n        Gx.ydiv = o.ydiv === undefined ? 5 : o.ydiv;\n\n        Gx.xcompression = o.xcmp || 0;\n        Gx.rasterSmoothing = o.smoothing || false;\n\n        Mx.origin = 1;\n        if (o.yinv) {\n            Mx.origin = 4;\n        }\n        Gx.pmt = o.pmt === undefined ? 1.0 : o.pmt;\n        Gx.bufmax = o.bufmax === undefined ? 32768 : o.bufmax;\n        Gx.sections = o.nsec === undefined ? 0 : o.nsec;\n        Gx.anno_type = o.anno_type === undefined ? 0 : o.anno_type;\n\n        Gx.xfmt = o.xfmt === undefined ? \"\" : o.xfmt;\n        Gx.yfmt = o.yfmt === undefined ? \"\" : o.yfmt;\n\n        // TODO Gx.xf.msgid = M$GET_SWITCH ('MSGID')\n        // Gx.xf.msgmask = max (0, M$GET_SWITCH ('MASK'))\n\n        Gx.index = o.index === undefined ? false : o.index;\n        var imode = (Gx.index || (address.slice(0, 2) === \"IN\"));\n        if (imode) {\n            if (havexmin && (Gx.xmin === 1.0)) {\n                havexmin = false;\n            }\n            if (havexmax && (Gx.xmin === 1.0)) {\n                havexmax = false;\n            }\n        }\n\n        Gx.xdata = false;\n        Gx.note = \"\";\n        Gx.hold = 0;\n        Gx.always_show_marker = o.always_show_marker || false;\n\n        m.vstype('D');\n\n        if (!o.inputs) {\n            basefile(plot, false);\n        } else {\n            // TODO load files\n        }\n\n        var cmode = address;\n\n        if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n            Gx.cmode = 1;\n        } else {\n            Gx.cmode = 3;\n        }\n\n        if ((cmode === \"MA\") || (cmode === \"INMA\") || (cmode === \"ABMA\") ||\n            (cmode === \"__MA\") || (cmode === \"MAGNITUDE\")) {\n            Gx.cmode = 1;\n        }\n        if ((cmode === \"PH\") || (cmode === \"INPH\") || (cmode === \"ABPH\") ||\n            (cmode === \"__PH\") || (cmode === \"PHASE\")) {\n            Gx.cmode = 2;\n        }\n        if ((cmode === \"RE\") || (cmode === \"INRE\") || (cmode === \"ABRE\") ||\n            (cmode === \"__RE\") || (cmode === \"REAL\")) {\n            Gx.cmode = 3;\n        }\n        if ((cmode === \"IM\") || (cmode === \"INIM\") || (cmode === \"ABIM\") ||\n            (cmode === \"__IM\") || (cmode === \"IMAGINARY\")) {\n            Gx.cmode = 4;\n        }\n        if ((cmode === \"LO\") || (cmode === \"D1\") || (cmode === \"INLO\") || (cmode === \"IND1\") ||\n            (cmode === \"ABIM\") || (cmode === \"ABD1\") || (cmode === \"__LO\") ||\n            (cmode === \"__D1\") || (cmode === \"10*LOG10\")) {\n            Gx.cmode = 6;\n        }\n        if ((cmode === \"L2\") || (cmode === \"D2\") || (cmode === \"INL2\") || (cmode === \"IND2\") ||\n            (cmode === \"ABLO\") || (cmode === \"ABD2\") || (cmode === \"__L2\") ||\n            (cmode === \"__D2\") || (cmode === \"20*LOG10\")) {\n            Gx.cmode = 7;\n        }\n        if ((cmode === \"RI\") || (cmode === \"IR\") || (cmode === \"INRI\") || (cmode === \"INIR\") ||\n            (cmode === \"ABRI\") || (cmode === \"ABIR\") || (cmode === \"__RI\") ||\n            (cmode === \"__IR\") || (cmode === \"IMAG/REAL\") || (cmode === \"REAL/IMAG\")) {\n            if (Gx.index) {\n                alert(\"Imag/Real mode not permitted in INDEX mode\");\n            } else {\n                Gx.cmode = 5;\n            }\n        }\n\n        Gx.basemode = Gx.cmode;\n\n        plot.change_settings({\n            cmode: Gx.cmode\n        });\n\n        // if ( (Gx.forcelab) .and. (Gx.xlab .le. 0) .and.\n        // & (Gx.ylab .le. 0) ) then\n        // call M$WARNING\n        // & ('/xlab or /ylab is missing with /forcelab usage')\n        // Gx.forcelab = .false.\n        // endif\n\n        Gx.dbmin = 1.0e-20;\n        if (Gx.cmode >= 6) {\n            var dbscale = 10.0;\n            if (Gx.cmode === 7) {\n                dbscale = 20.0;\n            }\n            if ((cmode[0] === \"L\") || (cmode[0] === \"1\") || (cmode[0] === \"2\")) {\n                if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                    Gx.ymin = Math.max(Gx.ymin, 1e-10);\n                    Gx.ymax = Math.max(Gx.ymax, 1e-10);\n                } else {\n                    Gx.ymin = Math.max(Gx.ymin, 1e-20);\n                    Gx.ymax = Math.max(Gx.ymax, 1e-20);\n                }\n                Gx.ymin = m.log10(Gx.ymin) * dbscale;\n                Gx.ymax = m.log10(Gx.ymax) * dbscale;\n            } else if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                Gx.ymin = Math.max(-18.0 * dbscale, Gx.ymin);\n                Gx.ymax = Math.max(-18.0 * dbscale, Gx.ymax);\n                Gx.dbmin = 1e-37;\n            } else if (Math.min(Gx.ymin, Gx.ymax) < -20.0 * dbscale) {\n                Gx.ymin = Math.max(-37.0 * dbscale, Gx.ymin);\n                Gx.ymax = Math.max(-37.0 * dbscale, Gx.ymax);\n                Gx.dbmin = Math.pow(10, Math.min(Gx.ymin, Gx.ymax) / dbscale);\n            }\n        }\n\n        Mx.level = 0;\n        if (imode && !Gx.index) {\n            if (havexmin) {\n                Gx.xmin = Gx.xstart + Gx.xdelta * (Gx.xmin - 1.0);\n            }\n            if (havexmin) {\n                Gx.xmax = Gx.xstart + Gx.xdelta * (Gx.xmax - 1.0);\n            }\n        }\n        Gx.xmult = o.xmult;\n        Gx.ymult = o.xmult;\n\n        //Convert string inputs of autox to numbers\n        switch (o.autox) {\n            case \"none\":\n                o.autox = -1;\n                break;\n            case \"min\":\n                o.autox = 1;\n                break;\n            case \"max\":\n                o.autox = 2;\n                break;\n            case \"full\":\n                o.autox = 3;\n                break;\n        }\n\n        Gx.autox = o.autox === undefined ? -1 : o.autox;\n        if (Gx.autox < 0) {\n            Gx.autox = 0;\n            if (!havexmin) {\n                Gx.autox += 1;\n            }\n            if (!havexmax) {\n                Gx.autox += 2;\n            }\n        }\n\n        //Convert string inputs of autoy to numbers\n\n        switch (o.autoy) {\n            case \"none\":\n                o.autoy = -1;\n                break;\n            case \"min\":\n                o.autoy = 1;\n                break;\n            case \"max\":\n                o.autoy = 2;\n                break;\n            case \"full\":\n                o.autoy = 3;\n                break;\n        }\n\n        Gx.autoy = o.autoy === undefined ? -1 : o.autoy;\n        if (Gx.autoy < 0) {\n            Gx.autoy = 0;\n            if (!haveymin) {\n                Gx.autoy += 1;\n            }\n            if (!haveymax) {\n                Gx.autoy += 2;\n            }\n        }\n\n        //Convert string inputs of autoz to numbers\n\n        switch (o.autoz) {\n            case \"none\":\n                o.autoz = -1;\n                break;\n            case \"min\":\n                o.autoz = 1;\n                break;\n            case \"max\":\n                o.autoz = 2;\n                break;\n            case \"full\":\n                o.autoz = 3;\n                break;\n        }\n\n        Gx.autoz = o.autoz === undefined ? -1 : o.autoz;\n        if (Gx.autoz < 0) {\n            Gx.autoz = 0;\n            if (!havezmin) {\n                Gx.autoz += 1;\n            }\n            if (!havezmax) {\n                Gx.autoz += 2;\n            }\n        }\n        Gx.autol = o.autol === undefined ? -1 : o.autol;\n\n        if (!havexmin) {\n            Gx.xmin = undefined;\n        }\n        if (!havexmax) {\n            Gx.xmax = undefined;\n        }\n\n        scale_base(plot, {\n            get_data: true\n        }, Gx.xmin, Gx.xmax, Gx.xlab, Gx.ylab);\n\n        if (!havexmin) {\n            Gx.xmin = Mx.stk[0].xmin;\n        }\n        if (!havexmax) {\n            Gx.xmax = Mx.stk[0].xmax;\n        }\n        if (!haveymin) {\n            Gx.ymin = Mx.stk[0].ymin;\n        }\n        if (!haveymax) {\n            Gx.ymax = Mx.stk[0].ymax;\n        }\n\n        if (Gx.xmin > Gx.xmax) {\n            Mx.stk[0].xmin = Gx.xmax;\n            Gx.xmax = Gx.xmin;\n            Gx.xmin = Mx.stk[0].xmin;\n        }\n        if (Gx.ymin > Gx.ymax) {\n            Mx.stk[0].ymin = Gx.ymax;\n            Gx.ymax = Gx.ymin;\n            Gx.ymin = Mx.stk[0].ymin;\n        }\n        Mx.stk[0].xmin = Gx.xmin;\n        Mx.stk[0].xmax = Gx.xmax;\n        Mx.stk[0].ymin = Gx.ymin;\n        Mx.stk[0].ymax = Gx.ymax;\n\n        Gx.panxmin = Math.min(Gx.panxmin, Gx.xmin);\n        Gx.panxmax = Math.max(Gx.panxmax, Gx.xmax);\n        Gx.panymin = Math.min(Gx.panymin, Gx.ymin);\n        Gx.panymax = Math.max(Gx.panymax, Gx.ymax);\n\n        Gx.panxpad = o.panxpad;\n        Gx.panypad = o.panypad;\n\n        var xran = (Gx.panxmax - Gx.panxmin);\n        var yran = (Gx.panymax - Gx.panymin);\n\n        Gx.panxmin -= m.pad(xran, Gx.panxpad);\n        Gx.panxmax += m.pad(xran, Gx.panxpad);\n        Gx.panymin -= m.pad(yran, Gx.panypad);\n        Gx.panymax += m.pad(yran, Gx.panypad);\n\n        Gx.xmin = Mx.stk[0].xmin;\n        Gx.ymin = Mx.stk[0].ymin;\n\n        if (o.font_family) {\n            Mx.font_family = o.font_family;\n        }\n        if (o.font_width) {\n            Mx.font_width = o.font_width;\n        }\n        if (o.font_scaled) {\n            Mx.font_scaled = true;\n        }\n\n        var font_width = Mx.font_width;\n        if (Mx.font_scaled) {\n            font_width = Math.min(Mx.font_width, Mx.width / 64);\n        }\n        mx.set_font(Mx, font_width);\n\n        Gx.ncolors = o.ncolors === undefined ? 500 : o.ncolors;\n        Gx.cmap = null;\n        if (o.cmap) {\n            Gx.cmap = o.cmap;\n        } else {\n            Gx.cmap = o.xc === undefined ? -1 : o.xc;\n        }\n\n        setup_cmap(plot, Gx.cmap);\n\n        // TODO setup annotate, boxes and points facilities\n\n        // TODO initialize layer structure line types\n\n        if (o.xcnt === \"leftmouse\") {\n            Gx.cntrls = 1;\n        } else if (o.xcnt === \"continuous\") {\n            Gx.cntrls = 2;\n        } else {\n            Gx.cntrls = o.xcnt === undefined ? 1 : o.xcnt;\n        }\n\n        Gx.default_rubberbox_mode = o.rubberbox_mode === undefined ? \"box\" : o.rubberbox_mode;\n        Gx.default_rubberbox_action = o.rubberbox_action === undefined ? \"zoom\" : o.rubberbox_action;\n        Gx.default_rightclick_rubberbox_mode = o.rightclick_rubberbox_mode === undefined ? \"box\" : o.rightclick_rubberbox_mode;\n        Gx.default_rightclick_rubberbox_action = o.rightclick_rubberbox_action === undefined ? null : o.rightclick_rubberbox_action;\n\n        Gx.cross = o.cross === undefined ? false : o.cross;\n        Gx.grid = o.nogrid === undefined ? true : !o.nogrid;\n        Gx.fillStyle = o.fillStyle;\n        Gx.gridBackground = o.gridBackground;\n        Gx.gridStyle = o.gridStyle;\n        Gx.wheelZoom = o.wheelZoom;\n        Gx.wheelZoomPercent = o.wheelZoomPercent;\n        Gx.legend = o.legend === undefined ? false : o.legend;\n        Gx.no_legend_button = o.no_legend_button === undefined ? false : o.no_legend_button;\n        Gx.legendBtnLocation = null;\n        Gx.pan = o.nopan === undefined ? true : !o.nopan;\n        Gx.nomenu = o.nomenu === undefined ? false : o.nomenu;\n\n        // TODO Gx.lmap.ip = 0\n        Gx.modmode = 0;\n        Gx.modlayer = -1; // 0-based indexing instead of 1\n        Gx.modsource = 0;\n        Gx.modified = (o.mod && Gx.lyr.length > 0);\n        // TODO Gx.marks(5) = 5\n        Gx.nmark = 0;\n        Gx.iabsc = 0;\n        if (Gx.index) {\n            Gx.iabsc = 1;\n        }\n        // TODO if (o.specs > 0) Gx.iabsc = M$SEARCH('IRS',c(1:1))\n        Gx.specs = !o.nospecs;\n\n        Gx.scroll_time_interval = o.scroll_time_interval === undefined ? Gx.scroll_time_interval : o.scroll_time_interval;\n\n        Gx.autohide_readout = o.autohide_readout;\n        Gx.autohide_panbars = o.autohide_panbars;\n        Gx.x_scrollbar_location = o.x_scrollbar_location;\n        if (Gx.specs) {\n            Gx.show_x_axis = !o.noxaxis;\n            Gx.show_y_axis = !o.noyaxis;\n            Gx.show_readout = !o.noreadout;\n            if (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout) {\n                Gx.specs = true;\n            } else {\n                Gx.specs = false;\n            }\n        } else {\n            Gx.show_x_axis = false;\n            Gx.show_y_axis = false;\n            Gx.show_readout = false;\n        }\n        Gx.hide_note = o.hide_note || false;\n\n        Gx.xmrk = 0.0;\n        Gx.ymrk = 0.0;\n\n        if (!o.nodragdrop) {\n            mx.addEventListener(Mx, \"dragover\", function(evt) {\n                evt.preventDefault();\n            }, false);\n\n            mx.addEventListener(Mx, \"drop\", (function(plot) {\n                return function(evt) {\n                    var files = evt.dataTransfer.files;\n                    if (files.length > 0) {\n                        evt.preventDefault();\n                        plot.load_files(files);\n                    }\n                };\n            }(plot)), false);\n        }\n\n        Gx.initialized = true;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function basefile(plot, open) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        // != BASEFILE(false)\n\n        // unlike SIGPLOT, where if Gx.index == 1\n        // then xstart = 1.0 and xdelta = 1.0...technically\n        // Gx.retx is supposed to be the real X coordinate\n        // and Gx.aretx is supposed to be the X coordinate in the\n        // current abscissa mode\n        if (open) {\n            var hcb = Gx.HCB[0];\n            Gx.xstart = hcb.xstart;\n            Gx.xdelta = hcb.xdelta;\n            Mx.origin = 1;\n        } else {\n            Gx.xstart = 0.0;\n            Gx.xdelta = 1.0;\n            Gx.autol = -1;\n            Mx.origin = 1;\n        }\n\n        // if (!open) {\n        // Gx.lay[0].cx = false;\n        // }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_accessories(plot, mode) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        if (mode > 0) {\n            if ((mode >= 4) && (Gx.show_readout) && (!Gx.hide_note)) {\n                var ln = Gx.note.length;\n                mx.text(Mx, Mx.width - Gx.lbtn - (ln + 1) * Mx.text_w,\n                    Mx.text_h, Gx.note);\n            }\n            if (mode >= 4) {\n                draw_panbars(plot);\n            }\n            if ((mode >= 1) && (Gx.legend)) {\n                draw_legend(plot);\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_plugins(plot) {\n        var Gx = plot._Gx;\n        var ctx = plot._Mx.canvas.getContext(\"2d\");\n        var canvas;\n\n        var plugin_index = 0;\n        while (plugin_index < Gx.plugins.length) {\n            var plugin = Gx.plugins[plugin_index].impl;\n            if (plugin.refresh) {\n                canvas = Gx.plugins[plugin_index].canvas;\n\n                // Ensure the plugin canvas has the same size as the plot\n                if (canvas.width !== plot._Mx.canvas.width) {\n                    canvas.width = plot._Mx.canvas.width;\n                }\n                if (canvas.height !== plot._Mx.canvas.height) {\n                    canvas.height = plot._Mx.canvas.height;\n                }\n\n                // If the plugin canvas is visible, draw it\n                if (canvas.height !== 0 && canvas.width !== 0) {\n                    if (canvas.width !== plot._Mx.canvas.width) {\n                        canvas.width = plot._Mx.canvas.width;\n                    }\n                    if (canvas.height !== plot._Mx.canvas.height) {\n                        canvas.height = plot._Mx.canvas.height;\n                    }\n                    canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n                    Gx.plugins[plugin_index].impl.refresh(canvas);\n                    ctx.drawImage(canvas, 0, 0);\n                }\n            }\n            plugin_index = plugin_index + 1;\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_legend(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        //Gx.always_show_marker = true;\n        var ctx = Mx.canvas.getContext(\"2d\");\n\n        var i = 0;\n        var n = 0; // integer*4\n        var ix = 0; // integer*4\n        var iy = 0; // integer*4\n        var ln = 0; // integer*4\n        var tw = 0; // integer*4\n        var xc = 0; // integer*4\n        var yc = 0; // integer*4\n        var xs = 0; // integer*4\n        var ys = 0; // integer*4\n        var thk = 0; // integer*4\n        var ic = 0; // integer*4\n\n        tw = Mx.text_w;\n        xs = tw * 23;\n        ys = (Gx.lyr.length + 1) * Mx.text_h;\n        xc = Mx.r - xs;\n        yc = Mx.t;\n\n        var legendPos = {\n            x: xc + 2,\n            y: yc + 2,\n            width: xs - 5,\n            height: ys - 5\n        }; // default legend size\n\n        // Determine legend position and label offset based on label sizes\n        var defLabelWidth = 98; // a magic number - default width of pixels\n        var maxLabelWidth = 0;\n        var labelOffset = 0;\n        for (n = 0; n < Gx.lyr.length; n++) { // figure out maximum label\n            // length\n            var labelLength = ctx.measureText(Gx.lyr[n].name).width;\n            if (labelLength > maxLabelWidth) {\n                maxLabelWidth = labelLength;\n            }\n        }\n        if (maxLabelWidth > defLabelWidth) {\n            labelOffset = (maxLabelWidth - defLabelWidth);\n            legendPos.width += labelOffset;\n            legendPos.x -= labelOffset;\n        }\n\n        ctx.strokeStyle = Mx.fg; // Mx.xwfg swapped in for FGColor\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(legendPos.x, legendPos.y, legendPos.width,\n            legendPos.height); // Creating a filled box instead of using\n        // clear_area\n        ctx.strokeRect(legendPos.x, legendPos.y, legendPos.width,\n            legendPos.height);\n\n        for (n = 0; n < Gx.lyr.length; n++) {\n            ix = xc + 4 * tw;\n            iy = yc + n * Mx.text_h + Mx.text_h; // additional text_h to\n            // account for 0-based\n            // indexing\n            if (n === Gx.modlayer) {\n                mx.text(Mx, xc + tw - labelOffset, iy + Math.floor(Mx.text_w / 2), '**'); // Added text_w/2\n                // offset\n            }\n            if (Gx.lyr[n].display) {\n                ic = Gx.lyr[n].color;\n                if (Gx.lyr[n].line > 0) {\n                    thk = m.sign(Math.min(tw, Math.abs(Gx.lyr[n].thick)),\n                        Gx.lyr[n].thick);\n                    // added magic -3 offset to y coordinates to center lines\n                    // with text\n                    if (thk < 0 || thk === mx.L_dashed) {\n                        mx.draw_line(Mx, ic, ix - labelOffset, iy - 3, (ix + tw * 2) - labelOffset, iy - 3, Math.abs(thk), {\n                            mode: \"dashed\",\n                            on: 4,\n                            off: 4\n                        });\n                    } else {\n                        mx.draw_line(Mx, ic, ix - labelOffset, iy - 3, (ix + tw * 2) - labelOffset, iy - 3, Math.abs(thk));\n                    }\n                }\n                if (Gx.lyr[n].symbol > 0) {\n                    // New logic here with 0.6*tw to help with legend symbol\n                    // sizing\n                    if (Gx.lyr[n].radius < 0) {\n                        thk = -m.trunc(0.6 * tw);\n                    } else {\n                        thk = Math.min(Gx.lyr[n].radius, m.trunc(0.6 * tw));\n                    }\n\n                    mx.draw_symbol(Mx, ic, ix + tw - labelOffset, iy - 3,\n                        Gx.lyr[n].symbol, thk);\n                }\n                if (Gx.lyr[n].hcb[\"class\"] === 2) {\n                    //draw colormap\n                    mx.legend_colorbar(Mx, legendPos.x + 10, legendPos.y + (legendPos.height / 4),\n                        (legendPos.width / 4) - 10, legendPos.height / 2);\n                }\n            }\n            ix = ix + tw * 3;\n            iy = iy + Mx.text_h * 0.3;\n            mx.text(Mx, ix - labelOffset, iy, Gx.lyr[n].name);\n        }\n        // a variable to hold the legend y positon of each layer\n        var layerheight = legendPos.height / Gx.lyr.length;\n\n        for (i = 0; i < Gx.lyr.length; i++) {\n            if ((legendPos.x <= Mx.xpos) && ((legendPos.x + legendPos.width) >= Mx.xpos) &&\n                ((legendPos.y <= Mx.ypos)) && (legendPos.y + layerheight) >= Mx.ypos) {\n                //find a way to pull up the menu\n                sigplot_legend_menu(plot, i);\n            }\n            legendPos.y += layerheight;\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function form_plotnote(plot) {\n        var Gx = plot._Gx;\n        if (Gx.HCB.length === 0) {\n            Gx.note = \"\";\n        } else if (Gx.HCB[0].plotnote === undefined) {\n            var files = [];\n            for (var n = 0; n < Gx.HCB.length; n++) {\n                if (Gx.HCB[n].file_name) {\n                    files.push(Gx.HCB[n].file_name);\n                }\n            }\n            Gx.note = files.join(\"|\").toUpperCase();\n        }\n    }\n\n    function draw_pcut_x(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((Gx.zmin === undefined) || (Gx.zmax === undefined)) {\n            return;\n        }\n\n        //fill variables to draw x-cut box along bottom\n        // one-pixel lines need to be draw on half-pixel boundaries\n        var plot_width = Mx.r - Mx.l;\n        Gx.x_box_x = Math.floor(Mx.l - 2) + 0.5;\n        Gx.x_box_y = Math.floor(Mx.b + 25) + 0.5;\n        Gx.x_box_w = Math.floor(plot_width + 4);\n        Gx.x_box_h = Math.floor((5 * Mx.text_h) + 20);\n\n        mx.draw_box(Mx, Mx.fg, Gx.x_box_x, Gx.x_box_y, Gx.x_box_w, Gx.x_box_h, 1, Mx.bg);\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = Mx.fg;\n\n        var x = null;\n        var y = null;\n        for (var ii = 0; ii < plot._Gx.x_cut_data.length; ii++) {\n            var z = plot._Gx.x_cut_data[ii]; // the real z-value\n            // constrain to bounds\n            z = Math.min(Math.max(z, Gx.zmin), Gx.zmax);\n            var zrt = plot._Gx.x_box_h / (Gx.zmax - Gx.zmin); // the z-value to pixel ratio\n            var zpx = Math.round((z - Gx.zmin) * zrt);\n\n            var xrt = plot._Gx.x_box_w / plot._Gx.x_cut_data.length;\n            var xpx = Math.round(ii * xrt);\n\n            var xnew = plot._Gx.x_box_x + xpx;\n            var ynew = (plot._Gx.x_box_y + plot._Gx.x_box_h - zpx);\n\n            if (ii === 0) {\n                ctx.moveTo(xnew, ynew);\n            } else if ((xnew !== x) || (ynew !== y)) {\n                // only draw the line if we are moving to a new point\n                ctx.lineTo(xnew, ynew);\n                x = xnew;\n                y = ynew;\n            }\n        }\n        ctx.stroke();\n    }\n\n    function draw_pcut_y(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((Gx.zmin === undefined) || (Gx.zmax === undefined)) {\n            return;\n        }\n\n        var plot_height = Mx.b - Mx.t;\n\n        //fill variables to draw y-cut box along right sidea\n        // one-pixel lines need to be draw on half-pixel boundaries\n        Gx.y_box_x = Math.floor(Mx.r + 25) + 0.5;\n        Gx.y_box_y = Math.floor(Mx.t - 2) + 0.5;\n        Gx.y_box_w = Math.floor((5 * Mx.text_w) + 20);\n        Gx.y_box_h = Math.floor(plot_height + 2);\n\n        if (Gx.lg_colorbar) { //move over box if large colorbar displayed\n            Gx.y_box_x += 100;\n        }\n\n        //draw y-cut box\n        mx.draw_box(Mx, Mx.fg, Gx.y_box_x, Gx.y_box_y, Gx.y_box_w, Gx.y_box_h, 1, Mx.bg);\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = Mx.fg;\n\n        var x = null;\n        var y = null;\n        for (var ii = 0; ii < plot._Gx.y_cut_data.length; ii++) {\n            var z = plot._Gx.y_cut_data[ii]; // the real z-value\n            // constrain to bounds\n            z = Math.min(Math.max(z, Gx.zmin), Gx.zmax);\n            var zrt = plot._Gx.y_box_w / (Gx.zmax - Gx.zmin); // the z-value to pixel ratio\n            var zpx = Math.round((z - Gx.zmin) * zrt);\n\n            var yrt = plot._Gx.y_box_h / plot._Gx.y_cut_data.length;\n            var ypx = Math.round(ii * yrt);\n\n            var xnew = (plot._Gx.y_box_x + zpx);\n            var ynew = plot._Gx.y_box_y + ypx;\n\n            if (ii === 0) {\n                ctx.moveTo(xnew, ynew);\n            } else if ((xnew !== x) || (ynew !== y)) {\n                // only draw the line if we are moving to a new point\n                ctx.lineTo(xnew, ynew);\n                x = xnew;\n                y = ynew;\n            }\n        }\n        ctx.stroke();\n    }\n\n    function draw_layers(plot) {\n        var layers = plot._Gx.lyr;\n        for (var n = 0; n < layers.length; n++) {\n            //if (Gx.sections !== 0) {\n            // TODO\n            //}\n            draw_layer(plot, layers[n]);\n        }\n    }\n\n    /**\n     * Draws the specified layer.\n     *\n     * This is expected to be called after clearing the plot.\n     *\n     * @param {sigplot.Plot}\n     *            the plot object\n     * @param {Number}\n     *            the layer to draw\n     * @private\n     * @memberOf sigplot\n     */\n    function draw_layer(plot, layer) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((!layer.display) || (Gx.hold !== 0)) {\n            return;\n        }\n\n        layer.draw();\n\n        // TODO consider if this is a source of performance\n        // issues on streaming plots\n        var evt = document.createEvent('Event');\n        evt.initEvent('lyrdraw', true, true);\n        evt.index = layer.index;\n        evt.name = layer.name; // the name of the layer\n        evt.layer = layer;\n        mx.dispatchEvent(Mx, evt);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function delete_layer(plot, n) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        //if (n < Gx.modlayer) Gx.modlayer = Gx.modlayer - 1;\n        //if (n < Gx.modsource) Gx.modsource = Gx.modsource - 1;\n\n        // Notify listeners that a layer is about to be deleted\n        var evt = document.createEvent('Event');\n        evt.initEvent('lyrdel', true, true);\n        evt.index = n;\n        evt.name = Gx.lyr[n].name; // the name of the layer\n        evt.layer = Gx.lyr[n];\n        var executeDefault = mx.dispatchEvent(Mx, evt);\n        if (!executeDefault) {\n            return; // Delete was prevented\n        }\n\n        Gx.lyr[n].ybufn = 0;\n        Gx.lyr[n].ybuf = null;\n        if (n < Gx.lyr.length - 1) {\n            var lyr = Gx.lyr[n];\n            for (var i = n; i < Gx.lyr.length - 1; i++) {\n                Gx.lyr[i] = Gx.lyr[i + 1];\n            }\n        }\n        Gx.lyr.length -= 1;\n\n        if (Gx.HCB.length > 0) {\n            Gx.panxmin = 1.0;\n            Gx.panxmax = -1.0;\n            Gx.panymin = 1.0;\n            Gx.panymax = -1.0;\n        }\n    }\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n\n    function draw_p_cuts(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        if (Gx.lyr[0].hcb[\"class\"] !== 2) {\n            return;\n        }\n\n        var plot_height = Mx.b - Mx.t;\n        var plot_width = Mx.r - Mx.l;\n        var height = Gx.lyr[0].yframe;\n        var width = Gx.lyr[0].xframe;\n\n        if (Gx.p_cuts) {\n            if (!Gx.lyr[0].hcb.pipe) {\n                if (((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r) && (Gx.p_cuts_xpos !== Mx.xpos))) {\n                    var line = 0;\n                    var i = 0;\n\n                    //fill data for y_cut for this mouse xpos\n                    Gx.y_cut_data = [];\n                    line = Math.floor((width * (Mx.xpos - Mx.l)) / plot_width);\n                    for (i = line; i < (width * height); i += width) {\n                        Gx.y_cut_data.push(Gx.lyr[0].zbuf[i]);\n                    }\n                    draw_pcut_y(plot);\n                    Gx.p_cuts_xpos = Mx.xpos;\n                }\n                if (((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b) && (Gx.p_cuts_ypos !== Mx.ypos))) {\n                    var row = 0;\n                    var start = 0;\n                    var finish = 0;\n                    var i = 0;\n\n                    //fill data for x_cut for this mouse ypos\n                    row = Math.floor((height * (Mx.ypos - Mx.t)) / plot_height);\n                    start = row * width;\n                    finish = start + width;\n                    Gx.x_cut_data = Gx.lyr[0].zbuf.slice(start, finish);\n                    draw_pcut_x(plot);\n\n                    Gx.p_cuts_ypos = Mx.ypos;\n                }\n            } else {\n                if ((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r)) {\n                    var line = 0;\n                    var i = 0;\n                    height = Gx.lyr[0].lps;\n                    //fill data for y_cut for this mouse xpos\n                    Gx.y_cut_data = [];\n                    line = Math.floor((width * (Mx.xpos - Mx.l)) / plot_width);\n                    for (i = line; i < (width * height); i += width) {\n                        Gx.y_cut_data.push(Gx.lyr[0].zbuf[i]);\n                    }\n                    draw_pcut_y(plot);\n                }\n\n                if ((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b)) {\n                    var row = 0;\n                    var start = 0;\n                    var finish = 0;\n                    //fill data for x_cut for this mouse ypos\n                    Gx.x_cut_data = [];\n                    row = Math.floor((height * (Mx.ypos - Mx.t)) / plot_height);\n                    start = row * width;\n                    finish = start + width;\n                    Gx.x_cut_data = Gx.lyr[0].zbuf.slice(start, finish);\n                    draw_pcut_x(plot);\n                }\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_crosshairs(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.cross) {\n            if ((Gx.cross === \"vertical\") || (Gx.cross === true)) {\n                if ((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r) && (Gx.cross_xpos !== Mx.xpos)) {\n                    if (Gx.cross_xpos !== undefined) {\n                        mx.rubberline(Mx, Gx.cross_xpos, Mx.t, Gx.cross_xpos, Mx.b);\n                    }\n                    mx.rubberline(Mx, Mx.xpos, Mx.t, Mx.xpos, Mx.b);\n                    Gx.cross_xpos = Mx.xpos;\n                }\n            }\n            if ((Gx.cross === \"horizontal\") || (Gx.cross === true)) {\n                if ((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b) && (Gx.cross_ypos !== Mx.ypos)) {\n                    if (Gx.cross_ypos !== undefined) {\n                        mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r, Gx.cross_ypos);\n                    }\n\n                    mx.rubberline(Mx, Mx.l, Mx.ypos, Mx.r, Mx.ypos);\n                    Gx.cross_ypos = Mx.ypos;\n                }\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_marker(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.xmrk !== null && Gx.ymrk !== null) {\n            var pix = mx.real_to_pixel(Mx, Gx.xmrk, Gx.ymrk);\n            if ((Gx.lyr.length > 0) && (Gx.lyr[0].hcb[\"class\"] === 1)) {\n                if (pix.clipped) {\n                    return;\n                }\n            } else if ((Gx.lyr.length > 0) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                if (pix.clipped_x || !pix.clipped_y) {\n                    return;\n                }\n            }\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            ctx.beginPath();\n            ctx.strokeStyle = Mx.xwfg;\n            ctx.fillStyle = Mx.xwfg;\n            ctx.arc(pix.x, pix.y, 2, 0, 360);\n            ctx.stroke(); // just draw the arc's outline\n\n            // TODO add x/y coord\n            ctx.textBaseline = \"alphabetic\";\n            ctx.textAlign = \"left\";\n            ctx.fillStyle = Mx.fg;\n            ctx.font = Mx.font.font;\n\n            var text = \"x:\" + mx.format_g(Gx.xmrk, 6, 3, true);\n            ctx.fillText(text, pix.x + 5, pix.y - 5);\n            text = \"y:\" + mx.format_g(Gx.ymrk, 6, 3, true);\n            ctx.fillText(text, pix.x + 5, pix.y - 5 + Mx.text_h);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function changephunits(plot, newphunits) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        var newplab = Gx.plab;\n        if (newphunits === 'R') {\n            newplab = 23;\n        } else if (newphunits === 'D') {\n            newplab = 24;\n        }\n        if (newphunits === 'C') {\n            newplab = 25;\n        }\n        if (newplab !== Gx.plab) {\n            var phscale = [Math.PI, 180.0, 0.5];\n            var dscl = phscale[newplab - 23] / phscale[Gx.plab - 23];\n            Gx.plab = newplab;\n            if (Gx.cmode === 2) {\n                for (var i = 0; i <= Mx.level; i++) {\n                    Mx.stk[i].ymin = Mx.stk[i].ymin * dscl;\n                    Mx.stk[i].ymax = Mx.stk[i].ymax * dscl;\n                    Mx.stk[i].yscl = Mx.stk[i].yscl * dscl;\n                }\n\n                Gx.panymin = Gx.panymin * dscl;\n                Gx.panymax = Gx.panymax * dscl;\n                plot.refresh();\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function changemode(plot, newmode) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        Gx.xdata = false;\n        for (var n = 0; n < Gx.lyr.length; n++) {\n            if (newmode === 5) {\n                Gx.lyr[n].xdata = true;\n            } else {\n                Gx.lyr[n].xdata = false; // TODO (Gx.lyr(n).xsub > 0)\n            }\n            if (Gx.lyr[n].xdata) {\n                Gx.xdata = true;\n            }\n        }\n\n        if (newmode === Gx.cmode) {\n            return;\n        } else if (newmode === 5 && Gx.index) {\n            alert(\"Imag/Real mode not permitted in INDEX mode\");\n        } else if (Gx.lyr.length <= 0) {\n            Gx.cmode = newmode;\n            // The call to display specs isn't found in sigplot.for;\n            // which causes a small bug where the plot mode is\n            // changed but the mode label in the specs area\n            // isn't updated.\n            display_specs(plot);\n        } else if (newmode > 0) {\n            var oldmode = Gx.cmode;\n            Gx.cmode = newmode;\n\n            var autox = Gx.autox;\n            var autoy = Gx.autoy;\n            Gx.autox = 3;\n            Gx.autoy = 3;\n\n            if ((newmode === 5) || (oldmode === 5)) {\n                Gx.panxmin = 1.0;\n                Gx.panxmax = -1.0;\n                Gx.panymin = 1.0;\n                Gx.panymax = -1.0;\n                Mx.level = 0;\n\n                if (newmode === Gx.basemode) {\n                    Mx.stk[0].xmin = Gx.xmin;\n                    Mx.stk[0].xmax = Gx.xmax;\n                    Mx.stk[0].ymin = Gx.ymin;\n                    Mx.stk[0].ymax = Gx.ymax;\n                } else if ((newmode === 5) || (Gx.basemode === 5)) {\n                    scale_base(plot, {\n                        get_data: true\n                    });\n                } else {\n                    Mx.stk[0].xmin = Gx.xmin;\n                    Mx.stk[0].xmax = Gx.xmax;\n                    scale_base(plot, {\n                        get_data: true\n                    }, Gx.xmin, Gx.xmax);\n                }\n            } else {\n                if ((Gx.HCB.length === 0) && (newmode === Gx.basemode)) {\n                    Gx.panymin = 1.0;\n                    Gx.panymax = -1.0;\n                    Mx.stk[0].ymin = Gx.ymin;\n                    Mx.stk[0].ymax = Gx.ymax;\n                } else {\n                    scale_base(plot, {}, Mx.stk[Mx.level].xmin,\n                        Mx.stk[Mx.level].xmax);\n                }\n                for (var n = 1; n <= Mx.level; n++) {\n                    Mx.stk[n].ymin = Mx.stk[0].ymin;\n                    Mx.stk[n].ymax = Mx.stk[0].ymax;\n                }\n            }\n            Gx.autox = autox;\n            Gx.autoy = autoy;\n            plot.refresh();\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_panbars(plot) {\n        var k; // integer*4\n        //var i1; // integer*4\n        //var itext; // integer*4\n\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((!Gx.pan) || (Mx.widget)) {\n            return;\n        }\n\n        k = Mx.level; // Y scrollbar\n\n        var out = {\n            ps: Mx.stk[k].ymin,\n            pe: Mx.stk[k].ymax\n        };\n        var need_y_scrollbar = ((out.ps !== Gx.panymin) || (out.pe !== Gx.panymax));\n        need_y_scrollbar = need_y_scrollbar && (Mx.level > 0);\n\n        if (Gx.autohide_panbars && (!need_y_scrollbar || !plot.mouseOnCanvas) && !Gx.panning) {\n            var ctx = Mx.canvas.getContext(\"2d\");\n            ctx.fillStyle = Mx.bg;\n            ctx.fillRect(Gx.pyl, Mx.t, Gx.pyl + Gx.pthk, Mx.b - Mx.t);\n        } else {\n            var i1 = mx.scrollbar(Mx, 0, Gx.pyl, Gx.pyl + Gx.pthk, Mx.t, Mx.b, out,\n                Gx.panymin, Gx.panymax, undefined, Mx.scrollbar_y);\n            Mx.stk[k].ymin = out.ps;\n            Mx.stk[k].ymax = out.pe;\n        }\n\n        if (Gx.pl < Mx.width) { // X scrollbar\n            out = {\n                ps: Mx.stk[k].xmin,\n                pe: Mx.stk[k].xmax\n            };\n            var need_x_scrollbar = ((out.ps !== Gx.panxmin) || (out.pe !== Gx.panxmax));\n            need_x_scrollbar = need_x_scrollbar && (!Gx.all || (Mx.level > 0));\n\n            if (Gx.autohide_panbars && (!need_x_scrollbar || !plot.mouseOnCanvas) && !Gx.panning) {\n                var ctx = Mx.canvas.getContext(\"2d\");\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(Gx.pl, Gx.pt - 1, Gx.pr - Gx.pl, Gx.pthk + 4);\n            } else {\n                var i1 = mx.scrollbar(Mx, 0, Gx.pl, Gx.pr, Gx.pt, Gx.pt + Gx.pthk, out,\n                    Gx.panxmin, Gx.panxmax, undefined, Mx.scrollbar_x);\n                Mx.stk[k].xmin = out.ps;\n                Mx.stk[k].xmax = out.pe;\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function pan(plot, action, flag, mouseEvent) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var i; // an integer*4\n        var k; // an integer*4\n        // var ih // an integer*4\n        // var iw; // an integer*4\n        // var imin; // an integer*4\n        // var imax; // an integer*4\n        var j; // an integer*4\n        var xmin; // a real*8\n        var xmax; // a real*8\n        var xran; // a real*8\n        // var xtemp; // a real*8\n        var ymin; // a real*8\n        var ymax; // a real*8\n        var yran; // a real*8\n        // var ytemp; // a real*8\n        var warn; // a logical*4\n\n        var scrollbarState;\n\n        var sbx = new mx.SCROLLBAR(); // a SCROLLBAR\n        var sby = new mx.SCROLLBAR(); // a SCROLLBAR\n\n        var SIGPLOT_PAN = false;\n        k = Mx.level;\n        if (Gx.panmode > 0) {\n            sbx.flag = 11;\n            sby.flag = 11;\n        } else {\n            sbx.flag = -12;\n            sby.flag = -12;\n        }\n        if (flag === 0) {\n            sbx.action = 0;\n            sby.action = 0;\n        }\n\n        warn = true;\n        if (action.substring(0, 1) === 'Y') {\n            ymin = Mx.stk[k].ymin;\n            ymax = Mx.stk[k].ymax;\n            yran = ymax - ymin;\n            if (action === 'YPAN') {\n                scrollbarState = Mx.scrollbar_y;\n\n                var out = {\n                    ps: ymin,\n                    pe: ymax\n                };\n                i = mx\n                    .scrollbar(Mx, sby, Gx.pyl, Gx.pyl + Gx.pthk, Mx.t,\n                        Mx.b, out, Gx.panymin, Gx.panymax, mouseEvent,\n                        scrollbarState);\n                ymin = out.ps;\n                ymax = out.pe;\n                // TODO: Warn only if Scrollbar arrow is pressed and no\n                // movement.\n                if (sby.action !== 0) {\n                    j = mx.scroll(Mx, sby, mx.XW_UPDATE, undefined,\n                        scrollbarState);\n                }\n                warn = false;\n            } else if (action === 'YCENTER') {\n                // Orig code : ymin = ymin - yran * (Mx.ypos - (Mx.t + Mx.b) /\n                // 2) / (Mx.b - Mx.t) // TODO Worry about any int division here?\n                ymin = ymin - yran * (Mx.ypos - (Mx.t + Mx.b) / 2) / (Mx.b - Mx.t);\n                ymax = ymin + yran;\n                warn = false;\n            }\n\n            if (ymin !== Mx.stk[k].ymin || ymax !== Mx.stk[k].ymax) {\n                Mx.stk[k].ymin = ymin;\n                Mx.stk[k].ymax = ymax;\n                if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                    Gx.ymin = Math.min(Gx.ymin, ymin);\n                    Gx.ymax = Math.max(Gx.ymax, ymax);\n                }\n\n                this.inPan = true; // prevent recursive pans\n                var evt = document.createEvent('Event');\n                evt.initEvent('ypan', true, true);\n                evt.level = Mx.level;\n                evt.xmin = Mx.stk[Mx.level].xmin;\n                evt.ymin = Mx.stk[Mx.level].ymin;\n                evt.xmax = Mx.stk[Mx.level].xmax;\n                evt.ymax = Mx.stk[Mx.level].ymax;\n                mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n                this.inPan = false;\n\n                plot.refresh();\n                // MSGDO(MSK_PANY, Mx.level); // just sets plotinfo.xmin and\n                // xmax into the MQD for the menu\n                SIGPLOT_PAN = true;\n            }\n            // TODO Later - Implement a messagebox status method\n            // else if (warn) {\n            // mx.message('All panned out', -1.0);\n            // }\n        } else {\n            xmin = Mx.stk[k].xmin;\n            xmax = Mx.stk[k].xmax;\n            xran = xmax - xmin;\n            if (action === 'XPAN') {\n                scrollbarState = Mx.scrollbar_x;\n\n                var out = {\n                    ps: xmin,\n                    pe: xmax\n                };\n                i = mx\n                    .scrollbar(Mx, sbx, Gx.pl, Gx.pr, Gx.pt, Gx.pt + Gx.pthk, out, Gx.panxmin, Gx.panxmax,\n                        mouseEvent, scrollbarState);\n                xmin = out.ps;\n                xmax = out.pe;\n                // TODO: Warn only if Scrollbox arrow is pressed and no\n                // movement.\n                if (sbx.action !== 0) {\n                    j = mx.scroll(Mx, sbx, mx.XW_UPDATE, undefined,\n                        scrollbarState);\n                }\n                warn = false;\n            } else if (action === 'XCENTER') {\n                // Original code : xmin = xmin + xran * (Mx.xpos - (Mx.l + Gx.r)\n                // / 2) / (Mx.r - Mx.l) // TODO Worry about any int division\n                // here?\n                xmin = xmin + xran * (Mx.xpos - (Mx.l + Mx.r) / 2) / (Mx.r - Mx.l);\n                if (xmin !== Mx.stk[k].xmin) {\n                    xmax = xmin + xran;\n                }\n                warn = false;\n            }\n\n            if (Mx.stk[k].xmin !== xmin || Mx.stk[k].xmax !== xmax) {\n                Mx.stk[k].xmin = xmin;\n                Mx.stk[k].xmax = xmax;\n                if (!Gx.xdata && Mx.level === 1) {\n                    Gx.xmin = Mx.stk[1].xmin;\n                    Gx.xmax = Mx.stk[1].xmax;\n                }\n\n                this.inPan = true; // prevent recursive pans\n                var evt = document.createEvent('Event');\n                evt.initEvent('xpan', true, true);\n                evt.level = Mx.level;\n                evt.xmin = Mx.stk[Mx.level].xmin;\n                evt.ymin = Mx.stk[Mx.level].ymin;\n                evt.xmax = Mx.stk[Mx.level].xmax;\n                evt.ymax = Mx.stk[Mx.level].ymax;\n                mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n                this.inPan = false;\n\n                plot.refresh();\n                // MSGDO (MSK_PANX, Mx.level); // just sets plotinfo.xmin and\n                // xmax into the MQD for the menu\n                SIGPLOT_PAN = true;\n            }\n            // TODO Later - Implement a messagebox status method\n            // else if (warn) {\n            // mx.message('All panned out', -1.0);\n            // }\n        }\n\n        return SIGPLOT_PAN;\n    }\n\n    /**\n     * Direct method to handle the dragging of a scrollbar.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param scrollAction\n     *            The scroll action being performed. Either \"YPAN\" or \"XPAN\" are\n     *            accepted.\n     * @param event\n     *            The mouse move event.\n     * @private\n     * @memberOf sigplot\n     */\n    function drag_scrollbar(plot, scrollAction, event) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        var min;\n        var max;\n\n        // ----- Retrieve appropriate SCROLLBAR -----\n        var scrollbar;\n        if (scrollAction === \"XPAN\") {\n            scrollbar = plot._Mx.scrollbar_x;\n        } else if (scrollAction === \"YPAN\") {\n            scrollbar = plot._Mx.scrollbar_y;\n        } else {\n            throw \"Unable to drag scrollbar - scrollAction is not 'XPAN' or 'YPAN'!!\";\n        }\n\n        // ----- OLD SIGPLOT.PAN Logic -----\n        scrollbar.flag = -12; // TODO Necessary?\n        var k = Mx.level;\n        if (scrollAction === \"XPAN\") {\n            min = Mx.stk[k].xmin;\n            max = Mx.stk[k].xmax;\n        } else if (scrollAction === \"YPAN\") {\n            min = Mx.stk[k].ymin;\n            max = Mx.stk[k].ymax;\n        } else {\n            min = undefined;\n            max = undefined;\n        }\n\n        // ----- MX.SCROLLBAR Logic -----\n        var rangeOut = {\n            \"min\": min,\n            \"max\": max\n        };\n        drag_updateRange(Mx, Gx, scrollbar, scrollAction, rangeOut, event);\n        min = rangeOut.min;\n        max = rangeOut.max;\n\n        // ----- UPDATE SCROLLBAR -----\n        scrollbar.smin = min;\n        scrollbar.srange = max - min;\n        mx.redrawScrollbar(scrollbar, Mx, undefined);\n\n        // ----- Update the viewbox -----\n        updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange,\n            scrollAction.slice(0, 1));\n\n        this.inPan = true; // prevent recursive pans\n        var evt = document.createEvent('Event');\n        if (scrollAction === \"XPAN\") {\n            evt.initEvent('xpan', true, true);\n        } else if (scrollAction === \"YPAN\") {\n            evt.initEvent('ypan', true, true);\n        }\n        evt.level = Mx.level;\n        evt.xmin = Mx.stk[Mx.level].xmin;\n        evt.ymin = Mx.stk[Mx.level].ymin;\n        evt.xmax = Mx.stk[Mx.level].xmax;\n        evt.ymax = Mx.stk[Mx.level].ymax;\n        mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n        this.inPan = false;\n\n        scrollbar.action = 0; // TODO New step - reset action of the scrollbar\n        // after drag is done...\n        plot.refresh();\n    }\n\n    /**\n     * Method to update plot range based on a drag event. Takes the mouse offset\n     * introduced by the drag and adds a scale factor.\n     *\n     * @param Gx\n     *            The GX Context to work with.\n     * @param scrollbar\n     *            The Scrollbar to use.\n     * @param scrollAction\n     *            The scroll action being performed. Either \"YPAN\" or \"XPAN\" are\n     *            accepted.\n     * @param range\n     *            The plot' min and max range values to update.\n     * @param event\n     *            The mouse move event.\n     *\n     * @private\n     * @memberOf sigplot\n     */\n    function drag_updateRange(Mx, Gx, scrollbar, scrollAction, range, event) {\n        scrollbar.action = mx.SB_DRAG;\n\n        if (scrollAction === \"YPAN\") {\n            var scaleFactor = Mx.scrollbar_y.trange / Mx.scrollbar_y.h;\n            if (scrollbar.origin === 4) { // inverted y\n                scaleFactor *= -1;\n            }\n            var mouseOffset = event.screenY - Gx.panning.ypos;\n            var realOffset = mouseOffset * scaleFactor;\n\n            if ((Gx.panning.ymin - realOffset) < Gx.panymin) { // At the left\n                // edge\n                range.max = Gx.panymin + (range.max - range.min);\n                range.min = Gx.panymin;\n            } else if ((Gx.panning.ymax - realOffset) > Gx.panymax) { // At\n                // the\n                // right\n                // edge\n                range.min = Gx.panymax - (range.max - range.min);\n                range.max = Gx.panymax;\n            } else {\n                range.min = Gx.panning.ymin - realOffset;\n                range.max = Gx.panning.ymax - realOffset;\n            }\n        } else if (scrollAction === \"XPAN\") {\n            var scaleFactor = Mx.scrollbar_x.trange / Mx.scrollbar_x.w;\n            if (scrollbar.origin === 3) { // inverted x\n                scaleFactor *= -1;\n            }\n            var mouseOffset = event.screenX - Gx.panning.xpos;\n            var realOffset = mouseOffset * scaleFactor;\n\n            if ((Gx.panning.xmin + realOffset) < Gx.panxmin) { // At the left\n                // edge\n                range.max = Gx.panxmin + (range.max - range.min);\n                range.min = Gx.panxmin;\n            } else if ((Gx.panning.xmax + realOffset) > Gx.panxmax) { // At\n                // the\n                // right\n                // edge\n                range.min = Gx.panxmax - (range.max - range.min);\n                range.max = Gx.panxmax;\n            } else {\n                range.min = Gx.panning.xmin + realOffset;\n                range.max = Gx.panning.xmax + realOffset;\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function setupPrompt(plot, promptText, isValid, onSuccess, inputValue,\n        xpos, ypos, callback) {\n        var Mx = plot._Mx;\n\n        if (Mx.prompt) {\n            throw \"Prompt already exists! Can only have one prompt at a time!\";\n        }\n\n        // Disable Mx keypress/mouse listeners\n        mx.disableListeners(Mx);\n\n        // Disable Plot keypress/mouse listeners\n        plot.disable_listeners();\n\n        // Add on to the onSuccess method with plot specifics\n        var realOnSuccess = function(plot, onSuccess) {\n            return function(value) {\n                onSuccess(value);\n\n                // Re-enable Mx keypress/mouse listeners\n                mx.enableListeners(Mx);\n\n                // Re-enable Plot keypress/mouse listeners\n                plot.enable_listeners();\n\n                plot.refresh();\n\n                if (callback !== undefined) {\n                    callback();\n                }\n            };\n        };\n\n        var refresh = function() { // TODO Refactor this setup method to be\n            // more like mx.menu/main menu widget?\n            plot.refresh();\n        };\n\n        // Create the prompt\n        var errorMessageTimeout = 5000;\n\n        try {\n            mx.prompt(Mx, promptText, isValid, realOnSuccess(plot, onSuccess),\n                refresh, inputValue, xpos, ypos, errorMessageTimeout);\n        } catch (err) {\n            console.log(\"ERROR: Failed to set up prompt due to: \" + err);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function enable_listeners(plot) {\n        var Mx = plot._Mx;\n        mx.addEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n        mx.addEventListener(Mx, \"mousemove\", plot.throttledOnMouseMove, false);\n        document.addEventListener(\"mouseup\", plot.docMouseUp, false);\n        mx.addEventListener(Mx, \"mouseup\", plot.mouseup, false);\n        window.addEventListener(\"mousedown\", plot.dragMouseDownHandler, false);\n        window.addEventListener(\"mousemove\", plot.throttledDragOnMouseMove, false);\n        window.addEventListener(\"mouseup\", plot.dragMouseUpHandler, false);\n        window.addEventListener(\"wheel\", plot.wheelHandler, false);\n        window.addEventListener(\"mousewheel\", plot.wheelHandler, false);\n        window.addEventListener(\"DOMMouseScroll\", plot.wheelHandler, false);\n        window.addEventListener(\"keypress\", plot.onkeypress, false);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function disable_listeners(plot) {\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n        mx.removeEventListener(Mx, \"mousemove\", plot.throttledOnMouseMove,\n            false);\n        document.removeEventListener(\"mouseup\", plot.docMouseUp, false);\n        mx.removeEventListener(Mx, \"mouseup\", plot.mouseup, false);\n        window.removeEventListener(\"mousedown\", plot.dragMouseDownHandler,\n            false);\n        window.removeEventListener(\"mousemove\", plot.throttledDragOnMouseMove,\n            false);\n        window.removeEventListener(\"mouseup\", plot.dragMouseUpHandler, false);\n        window.removeEventListener(\"wheel\", plot.wheelHandler, false);\n        window.removeEventListener(\"mousewheel\", plot.wheelHandler, false);\n        window.removeEventListener(\"DOMMouseScroll\", plot.wheelHandler, false);\n        window.removeEventListener(\"keypress\", plot.onkeypress, false);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function display_specs(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var ctx = Mx.canvas.getContext(\"2d\");\n\n        // section logic\n        if (Gx.sections !== 0) {\n            // TODO\n        } else {\n            Gx.isec = 0;\n        }\n\n        // transform into realworld coordinates\n        // is already done by the mousemove listener\n        // adjust for abscissa mode\n        if (Mx.warpbox) {\n            var re = pixel_to_real(plot, Mx.warpbox.xo, Mx.warpbox.yo);\n            var rwh = pixel_to_real(plot, Mx.warpbox.xl, Mx.warpbox.yl);\n\n            Gx.aretx = re.x;\n            Gx.arety = re.y;\n            Gx.dretx = rwh.x - re.x;\n            Gx.drety = rwh.y - re.y;\n        } else {\n            Gx.aretx = Gx.retx;\n            Gx.arety = Gx.rety;\n            Gx.dretx = Gx.retx - Gx.xmrk;\n            Gx.drety = Gx.rety - Gx.ymrk;\n        }\n\n        if ((Gx.cmode === 5) && (Gx.iabsc === 1)) {\n            Gx.iabsc = 2;\n        } // R/I mode\n        if (Gx.iabsc === 1) { // index\n            Gx.aretx = Math.round((Gx.aretx - Gx.xstart) / Gx.xdelta);\n            if (!Gx.index) {\n                Gx.aretx += 1;\n            }\n            Gx.dretx = Math.round(Gx.dretx / Gx.xdelta);\n        } else if (Gx.iabsc === 2) { // 1/absc\n            if (Gx.aretx !== 0.0) {\n                Gx.aretx = 1.0 / Gx.aretx;\n            }\n            if (Gx.arety !== 0.0) {\n                Gx.arety = 1.0 / Gx.arety;\n            }\n            if (Gx.dretx !== 0.0) {\n                Gx.dretx = 1.0 / Gx.dretx;\n            }\n            if (Gx.drety !== 0.0) {\n                Gx.drety = 1.0 / Gx.drety;\n            }\n        }\n\n        if ((!Gx.show_readout) || (Mx.widget)) {\n            return;\n        }\n\n        // Clear the specs area\n        // First clear the y-row\n        ctx.fillStyle = Mx.bg;\n        var iy = Math.floor(Mx.height - 2.5 * Mx.text_h);\n        ctx.fillRect(Mx.text_w, iy - 1, 49 * Mx.text_w, iy + 1.5 * Mx.text_h);\n\n        // Then clear the x-row\n        iy = Math.floor(Mx.height - 0.5 * Mx.text_h);\n        var k = Math.max(Gx.pr + Mx.text_w, Mx.width - Mx.text_w * 2);\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(k, iy - Mx.text_h, Mx.text_w, Mx.text_h);\n\n        if (Gx.autohide_readout && !plot.mouseOnCanvas && !Gx.panning) {\n            return;\n        }\n\n        var xval, yval, xdelta, ydelta;\n        // TODO handle xfmt/yfmt using m.d2a_form equivalent\n        if ((Gx.iabsc === 0) && (Gx.ylab === 4)) {\n            yval = (m.sec2tspec(Gx.arety) + \"                \").substring(0, 16);\n            ydelta = (m.sec2tspec(Gx.drety, \"delta\") + \"                \").substring(0, 16);\n        } else {\n            yval = mx.format_g(Gx.arety, 16, 9, true);\n            ydelta = mx.format_g(Gx.drety, 16, 9);\n        }\n        if ((Gx.iabsc === 0) && (Gx.xlab === 4)) {\n            xval = (m.sec2tspec(Gx.aretx) + \"                \").substring(0, 16);\n            xdelta = (m.sec2tspec(Gx.dretx, \"delta\") + \"                \").substring(0, 16);\n        } else {\n            xval = mx.format_g(Gx.aretx, 16, 9, true);\n            xdelta = mx.format_g(Gx.dretx, 16, 9);\n        }\n\n        var chara = \"y: \" + yval + \" dy: \" + ydelta + \" L=\" + Mx.level + \" \" + cxm[Gx.cmode - 1];\n        var charb = \"x: \" + xval + \" dx: \" + xdelta + \" \" + cam[Gx.iabsc];\n        if (Gx.iabsc === 3) {\n            if (Gx.dretx === 0.0) {\n                chara = chara.substr(0, 20) + \"sl: Inf             \" + chara.substr(40, chara.length);\n            } else {\n                chara = chara.substr(0, 20) + \"sl: \" + mx.format_g(Gx.drety / Gx.dretx, 16, 9) + chara.substr(40, chara.length);\n            }\n        }\n\n        iy = Math.floor(Mx.height - 1.5 * Mx.text_h);\n        mx.text(Mx, Mx.text_w, iy, chara);\n        iy = Math.floor(Mx.height - 0.5 * Mx.text_h);\n        mx.text(Mx, Mx.text_w, iy, charb);\n\n        if (mx.LEGACY_RENDER) {\n            // display controls indicator\n            if (k < Mx.width) {\n                if (Gx.cntrls > 0) {\n                    mx.text(Mx, k, iy, 'C');\n                } else {\n                    mx.text(Mx, k, iy, ' ');\n                }\n            }\n        }\n\n        // draw color bar - large\n        var x = 0;\n        var y = 0;\n        var w = 0;\n        var h = 0;\n        if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n            var plot_height = Mx.b - Mx.t;\n\n            x = Mx.r + 35;\n            y = Mx.t + (1 / 8) * plot_height;\n            w = 5 * Mx.text_w;\n            h = (3 / 4) * plot_height;\n\n            // If I have a large color bar, I probably also want to add buttons\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            ctx.strokeStyle = \"rgba(124, 123, 121, 0.8)\";\n            ctx.fillStyle = \" rgba(124, 123, 121, 0.8)\";\n\n            // For more precise referencing\n            var colorbar_x = x;\n            var colorbar_y = y;\n            var colorbar_width = w;\n            var colorbar_height = h;\n            var button_width = colorbar_width - 2;\n            var button_height = button_width / 2;\n            var button_x = colorbar_x + ((colorbar_width - button_width) / 2);\n            var button_y = colorbar_y - 10;\n\n            // Draw the top button\n            ctx.beginPath();\n            ctx.moveTo(button_x, button_y);\n            ctx.lineTo(button_x + button_width, button_y);\n            ctx.lineTo(button_x + (1 / 2) * button_width, button_y - button_height);\n            ctx.lineTo(button_x, button_y);\n            ctx.stroke();\n            ctx.fill();\n\n            // Draw the bottom button\n            var button_y_2 = button_y + colorbar_height + 20;\n\n            ctx.beginPath();\n            ctx.moveTo(button_x, button_y_2);\n            ctx.lineTo(button_x + button_width, button_y_2);\n            ctx.lineTo(button_x + (1 / 2) * button_width, button_y_2 + button_height);\n            ctx.lineTo(button_x, button_y_2);\n            ctx.stroke();\n            ctx.fill();\n\n            // Store this info so we can access it later\n\n            Gx.cbb_top_x1 = button_x;\n            Gx.cbb_top_y1 = button_y;\n            Gx.cbb_bot_x1 = button_x;\n            Gx.cbb_bot_y1 = button_y_2;\n            Gx.cbb_width = button_width;\n            Gx.cbb_height = button_height;\n\n        } else { // draw a small colorbar\n            x = (49 * Mx.text_w) - 3;\n            y = Mx.height - Mx.text_h * 2.5;\n            w = Mx.text_w;\n            h = Mx.text_h * 2;\n        }\n\n        mx.colorbar(Mx, x, y, w, h);\n\n        //draw boxes for the p_cuts\n        if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n            draw_pcut_y(plot);\n            draw_pcut_x(plot);\n        }\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function scale_base(plot, mode, xxmin, xxmax, xlab, ylab) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var load = (mode.get_data === true);\n\n        Gx.panxmin = 1.0;\n        Gx.panxmax = -1.0;\n        Gx.panymin = 1.0;\n        Gx.panymax = -1.0;\n        var xmin = xxmin;\n        var xmax = xxmax;\n        var noxmin = (xmin === undefined);\n        var noxmax = (xmax === undefined);\n        if (Gx.lyr.length === 0) {\n            Gx.panxmin = -1.0;\n            Gx.panxmax = 1.0;\n            Gx.panymin = -1.0;\n            Gx.panymax = 1.0;\n        } else {\n            if (xlab === undefined) {\n                Gx.xlab = Gx.lyr[0].xlab;\n            }\n            if (ylab === undefined) {\n                Gx.ylab = Gx.lyr[0].ylab;\n            }\n\n            for (var n = 0; n < Gx.lyr.length; n++) {\n                if (Gx.lyr[n].display === false) {\n                    continue;\n                }\n                if (noxmin) {\n                    xmin = Gx.lyr[n].xmin;\n                }\n\n                if (noxmax) {\n                    xmax = Gx.lyr[n].xmax;\n                }\n\n                if (Gx.xlab !== Gx.lyr[n].xlab) {\n                    Gx.xlab = 0; // If the layers aren't consistent use None\n                }\n                if (Gx.ylab !== Gx.lyr[n].ylab) {\n                    Gx.ylab = 0; // If the layers aren't consistent use None\n                }\n\n                if (load) {\n                    Gx.lyr[n].get_data(xmin, xmax);\n                }\n\n                if (Gx.autox > 0 || Gx.autoy > 0) {\n                    while (xmin < xmax) {\n                        // get_data fills in the layer xbuf/ybuf with data\n                        Gx.lyr[n].get_data(xmin, xmax);\n\n                        // have the layer prep it's data to be rendered\n                        var npts = Gx.lyr[n].prep(xmin, xmax);\n\n                        // If both All and Expand are provided we\n                        // need to look at the entire file to auto-scale it\n                        if (Gx.all && Gx.expand) {\n                            if (Gx.lyr[n].size === 0) {\n                                xmin = xmax;\n                            } else {\n                                if (Gx.index) {\n                                    xmin = xmin + npts;\n                                } else {\n                                    if (Gx.lyr[n].xdelta >= 0) {\n                                        xmin = xmin + (Gx.lyr[n].size * Gx.lyr[n].xdelta);\n                                    } else {\n                                        xmax = xmax + (Gx.lyr[n].size * Gx.lyr[n].xdelta);\n                                    }\n                                }\n                            }\n                        } else {\n                            xmin = xmax;\n                        }\n                    }\n                } else {\n                    Gx.lyr[n].prep(1.0, -1.0);\n                }\n            }\n        }\n\n        var xran = Gx.panxmax - Gx.panxmin;\n        if (xran < 0.0) {\n            Gx.panxmax = Gx.panxmin;\n            Gx.panxmin = Gx.panxmax + xran;\n            xran = -xran;\n        }\n        if (xran <= 1.0e-20) {\n            Gx.panxmin = Gx.panxmin - 1.0;\n            Gx.panxmax = Gx.panxmax + 1.0;\n        }\n        xran = Gx.panxmax - Gx.panxmin;\n\n        Gx.panxmin -= m.pad(xran, Gx.panxpad);\n        Gx.panxmax += m.pad(xran, Gx.panxpad);\n\n        if (((Gx.autox & 1) !== 0) && noxmin) {\n            Mx.stk[0].xmin = Gx.panxmin;\n        }\n        if (((Gx.autox & 2) !== 0) && noxmax) {\n            Mx.stk[0].xmax = Gx.panxmax;\n            if (!(Gx.all || Gx.xdata)) {\n                for (var n = 0; n < Gx.lyr.length; n++) {\n                    xmax = Math.min(Gx.lyr[n].xmax, Mx.stk[0].xmax);\n                    var dpts = Math.abs((xmax - Gx.lyr[n].xmin) / Gx.lyr[n].xdelta) - Gx.bufmax + 1.0;\n                    if (dpts > 0) {\n                        Mx.stk[0].xmax = xmax - dpts * Math.abs(Gx.lyr[n].xdelta);\n                    }\n                }\n            }\n        }\n\n        if (((Gx.autoy & 1) !== 0)) {\n            Mx.stk[0].ymin = Gx.panymin;\n        }\n        if (((Gx.autoy & 2) !== 0)) {\n            Mx.stk[0].ymax = Gx.panymax;\n        }\n\n        var yran = (Gx.panymax - Gx.panymin);\n        Gx.panymin -= m.pad(yran, Gx.panypad);\n        Gx.panymax += m.pad(yran, Gx.panypad);\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function pixel_to_real(plot, xpos, ypos) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ret = mx.pixel_to_real(Mx, xpos, ypos);\n        if (Gx.index) {\n            ret.x = ret.x * Gx.xdelta;\n        }\n\n        return ret;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function coordsInRectangle(x, y, rect_x, rect_y, rect_width, rect_height) {\n        return (x >= rect_x && x <= rect_x + rect_width && y >= rect_y && y <= rect_y + rect_height);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function coordsInTriangle(x, y, tri_x1, tri_y1, tri_x2, tri_y2, tri_x3, tri_y3) {\n        // Uses barycentric coordinates\n        // https://en.wikipedia.org/wiki/Barycentric_coordinate_system ( and http://blackpawn.com/texts/pointinpoly/)\n\n        // Compute vectors\n        var v0 = [tri_x3 - tri_x1, tri_y3 - tri_y1];\n        var v1 = [tri_x2 - tri_x1, tri_y2 - tri_y1];\n        var v2 = [x - tri_x1, y - tri_y1];\n\n        // Compute dot products\n        var dot00 = (v0[0] * v0[0]) + (v0[1] * v0[1]);\n        var dot01 = (v0[0] * v1[0]) + (v0[1] * v1[1]);\n        var dot02 = (v0[0] * v2[0]) + (v0[1] * v2[1]);\n        var dot11 = (v1[0] * v1[0]) + (v1[1] * v1[1]);\n        var dot12 = (v1[0] * v2[0]) + (v1[1] * v2[1]);\n\n        var inv_denom = 1 / (dot00 * dot11 - dot01 * dot01);\n\n        var u = (dot11 * dot02 - dot01 * dot12) * inv_denom;\n        var v = (dot00 * dot12 - dot01 * dot02) * inv_denom;\n\n        /*\n        console.log(\"u \", u);\n        console.log(\"v \", v);\n        */\n\n        return (u >= 0 && v >= 0 && u + v < 1);\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function inPanRegion(plot, coord) {\n        var inPanRegion = false;\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var x = 0;\n        var y = 0;\n        if (coord === undefined) {\n            x = Mx.xpos;\n            y = Mx.ypos;\n\n            if (!plot.mouseOnCanvas) {\n                return false;\n            }\n        } else {\n            x = coord.x;\n            y = coord.y;\n        }\n\n        var command = ' ';\n\n        if (!Gx.pan) {\n            return false;\n        }\n\n        var outside_right_border = (x > Mx.r);\n        var above_top_border = (y <= Gx.pt + Gx.pthk + 2);\n        var below_bottom_border = (y > Gx.pt - 2);\n        var between_top_and_bottom = (y >= Mx.t && y <= Mx.b);\n        var between_left_and_right = (x >= Gx.pl && x <= Gx.pr);\n        var has_bottom_scrollbar = (Gx.show_readout || (Gx.x_scrollbar_location === \"bottom\"));\n\n        if (outside_right_border && between_top_and_bottom) { // YPAN\n            command = 'YPAN'; // Y scrollbar\n            // TODO do we want to\n            // reset the xposition?\n\n            if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                // Need to do an additional check since there is area outside Mx.r that is NOT the pan region\n                var right_of_colorbar = (x > Mx.r + 100); // Mx.r = Mx.r - 100 is how we moved it initally\n                if (right_of_colorbar) {\n                    inPanRegion = true;\n                } else {\n                    inPanRegion = false;\n                }\n\n            } else {\n                Mx.xpos = Gx.pyl + m.trunc(Gx.pthk / 2);\n                inPanRegion = true;\n            }\n            //possibly do another check for p_cuts as well;\n        } else if (has_bottom_scrollbar && between_left_and_right && below_bottom_border) {\n            command = 'XPAN'; // X scrollbar\n            Mx.ypos = Gx.pt + m.trunc(Gx.pthk / 2); // TODO Do we want to reset\n            // the yposition?\n            inPanRegion = true;\n        } else if (!has_bottom_scrollbar && between_left_and_right && above_top_border) {\n            command = 'XPAN'; // X scrollbar\n            Mx.ypos = Gx.pt + m.trunc(Gx.pthk / 2); // TODO Do we want to reset\n            // the yposition?\n            inPanRegion = true;\n        }\n\n        return {\n            inPanRegion: inPanRegion,\n            command: command\n        };\n    }\n\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function inPanCenterRegion(plot) {\n        var inCenterRegion = false;\n        var Mx = plot._Mx;\n        var x = Mx.xpos;\n        var y = Mx.ypos;\n        var th = Mx.text_h;\n        var tw = Mx.text_w;\n        var command = ' ';\n\n        if (x < Mx.l - tw && y <= Mx.b && y >= Mx.t) { // YCENTER\n            // Mx.canvas.getContext(\"2d\").strokeStyle = \"blue\";\n            // Mx.canvas.getContext(\"2d\").strokeRect(0, Mx.t, Mx.l - tw, Mx.b -\n            // Mx.t);\n            command = 'YCENTER';\n            inCenterRegion = true;\n        } else if (y > Mx.b + m.trunc(0.5 * tw) && y <= Mx.b + m.trunc(m.trunc(3 * th) / 2) && x >= Mx.l && x <= Mx.r) { // XCENTER\n            // Mx.canvas.getContext(\"2d\").strokeStyle = \"red\";\n            // Mx.canvas.getContext(\"2d\").strokeRect(Mx.l, Mx.b + m.trunc(.5 *\n            // tw),\n            // Mx.r - Mx.l, (Mx.b + m.trunc(m.trunc(3 * th) / 2)) - (Mx.b +\n            // m.trunc(.5 * tw)));\n            command = 'XCENTER';\n            inCenterRegion = true;\n        }\n\n        return {\n            inCenterRegion: inCenterRegion,\n            command: command\n        };\n    }\n\n    /**\n     * Returns true if position is within the given scrollbar's area. Depends on\n     * mx.scroll_real2pix method.\n     *\n     * @param position\n     *            An object containing 'x' and 'y' pixel values that represent a\n     *            position.\n     * @param scrollbar\n     *            The scrollbar object itself.\n     *\n     * @private\n     * @memberOf sigplot\n     */\n    function onScrollbar(position, scrollbar) {\n        var s1;\n        var sw;\n\n        /*\n         * Compute s, the offset in pixels from the 'origin' of the scrollbar's\n         * on-screen region.\n         */\n        var s;\n        if (scrollbar.origin & 1) {\n            s = position.x - scrollbar.x;\n            if (scrollbar.origin & 2) {\n                s = scrollbar.w - s;\n            }\n        } else {\n            s = position.y - scrollbar.y;\n            if (scrollbar.origin <= 2) {\n                s = scrollbar.h - s;\n            }\n        }\n\n        // Update s1 and sw values\n        var scrollReal2PixOut = mx.scroll_real2pix(scrollbar);\n        s1 = scrollReal2PixOut.s1;\n        sw = scrollReal2PixOut.sw;\n\n        // Determine if mouse is on scrollbar\n        if (s >= s1 && s <= s1 + sw) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Performs the middle-click scroll-menu action specified on the plot.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param action\n     *            The scrollbar action to perform.\n     * @param direction\n     *            The scroll direction to update. Acceptable directions are\n     *            either \"XPAN\" or \"YPAN\".\n     * @memberOf sigplot\n     * @private\n     */\n    function middleClickScrollMenuAction(plot, action, direction) {\n        var Mx = plot._Mx;\n\n        // Determine the appropriate scrollbar to work with\n        var scrollbar;\n        if (direction === \"XPAN\") {\n            scrollbar = Mx.scrollbar_x;\n        } else if (direction === \"YPAN\") {\n            scrollbar = Mx.scrollbar_y;\n        }\n\n        // Set scrollbar action\n        scrollbar.action = action;\n        scrollbar.step = 0.1 * scrollbar.srange;\n        scrollbar.page = 9 * scrollbar.step;\n        scrollbar.scale = 2.0;\n\n        // Update min and range to the appropriate values based on action\n        mx.scroll(Mx, scrollbar, mx.XW_COMMAND, undefined, scrollbar);\n\n        // Update the viewbox based on new min and max values\n        updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange,\n            direction.slice(0, 1));\n\n        this.inPan = true; // prevent recursive pans\n        var evt = document.createEvent('Event');\n        if (direction === \"XPAN\") {\n            evt.initEvent('xpan', true, true);\n        } else if (direction === \"YPAN\") {\n            evt.initEvent('ypan', true, true);\n        }\n        evt.level = Mx.level;\n        evt.xmin = Mx.stk[Mx.level].xmin;\n        evt.ymin = Mx.stk[Mx.level].ymin;\n        evt.xmax = Mx.stk[Mx.level].xmax;\n        evt.ymax = Mx.stk[Mx.level].ymax;\n        mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n        this.inPan = false;\n\n    }\n\n    /**\n     * Updates a plot's viewbox along a given axis to the provided min and max\n     * values.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param newMin\n     *            The new minimum axis value to use\n     * @param newMax\n     *            The new maximum axis value to use\n     * @param axis\n     *            The axis to update. Acceptable axis values are \"X\" or \"Y\".\n     * @memberOf sigplot\n     * @private\n     */\n    function updateViewbox(plot, newMin, newMax, axis) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var k = Mx.level;\n\n        if (axis === \"X\") {\n            var xmin = newMin;\n            var xmax = newMax;\n\n            if (Mx.stk[k].xmin !== xmin || Mx.stk[k].xmax !== xmax) {\n                Mx.stk[k].xmin = xmin;\n                Mx.stk[k].xmax = xmax;\n                if (!Gx.xdata && Mx.level === 1) {\n                    Gx.xmin = Mx.stk[1].xmin;\n                    Gx.xmax = Mx.stk[1].xmax;\n                }\n                plot.refresh();\n            }\n        } else if (axis === \"Y\") {\n            var ymin = newMin;\n            var ymax = newMax;\n\n            if (ymin !== Mx.stk[k].ymin || ymax !== Mx.stk[k].ymax) {\n                Mx.stk[k].ymin = ymin;\n                Mx.stk[k].ymax = ymax;\n                if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                    Gx.ymin = Math.min(Gx.ymin, ymin);\n                    Gx.ymax = Math.max(Gx.ymax, ymax);\n                }\n                plot.refresh();\n            }\n        }\n    }\n\n    sigplot.Plot = Plot;\n    module.exports = sigplot;\n\n}());\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plot } from 'sigplot';\n\n/**\n * SigPlot.js React wrapper class\n *\n * @version 0.1.2\n * @visibleName SigPlot.js React Wrapper\n */\nexport default class SigPlot extends Component {\n  static childContextTypes = {\n    plot: PropTypes.instanceOf(Plot),\n  }\n\n  static propTypes = {\n    /**\n     * Different Layer nodes (e.g., ArrayLayer, PipeLayer, etc.)\n     *\n     * @ignore\n     */\n    children: PropTypes.node,\n\n    /** Height of the wrapper div */\n    height: PropTypes.number,\n\n    /** Width of the wrapper div */\n    width: PropTypes.number,\n\n    /** CSS 'display' property */\n    display: PropTypes.string,\n\n    /** Styles object for any other CSS styles on the wrapper div */\n    styles: PropTypes.object,\n\n    /**\n     * SigPlot plot-level options\n     *\n     * @see See [sigplot.Plot Docs](http://sigplot.lgsinnovations.com/html/doc/sigplot.Plot.html)\n     */\n    options: PropTypes.object,\n  }\n\n  static defaultProps = {\n    height: 300,\n    width: 300,\n    display: 'inline-block',\n    options: {\n      all: true,\n      expand: true,\n      autol: 100,\n      autohide_panbars: true\n    },\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getChildContext() {\n    return {\n      plot: this.plot,\n    };\n  }\n\n  componentDidMount() {\n    const { options } = this.props;\n    this.plot = new Plot(this.element, options);\n\n    // Have to trigger context tree, setting state does that.\n    // eslint-disable-next-line react/no-did-mount-set-state\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ plot: this.plot });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { height, width, options } = this.props;\n    const {\n      height: newHeight,\n      width: newWidth,\n      options: newOptions\n    } = nextProps;\n\n    // When the outer div height/width changes,\n    // we need to explicitly tell SigPlot to resize;\n    // otherwise, it won't resize automatically.\n    if (newHeight !== height || newWidth !== width) {\n      this.plot.checkresize();\n    }\n\n    // If the options change at the plot level,\n    // we need to handle that\n    if (newOptions !== options) {\n      this.plot.change_settings(newOptions);\n    }\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      display,\n      styles,\n      children: propChildren,\n    } = this.props;\n    const { plot } = this;\n\n    /**\n     * Recall we're treating the `sigplot.layer1d` and\n     * `sigplot.layer2d` as (virtual) children nodes since\n     * they are simply manipulations/API calls that modify\n     * the underlying <canvas>.\n     *\n     * As such, the user should never have to access the\n     * `children` property outright, instead being able to\n     * write\n     *\n     *   <SigPlot>\n     *     <ArrayLayer ... />\n     *   </SigPlot>\n     *\n     * Anyway, the point of the following statement is\n     * to provide the `plot` object (controlled by the parent)\n     * to the child so it can mutate it.\n     */\n    const children = plot\n      ? React.Children.map(propChildren, (child) => {\n        if (child) {\n          return React.cloneElement(child, { plot });\n        }\n        return null;\n      }) : null;\n\n    return (\n      <div\n        style={{\n          height,\n          width,\n          display, // this will be deprecated\n          ...styles\n        }}\n        ref={element => this.element = element}\n      >\n        { children }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport { Plot } from 'sigplot';\n\n/**\n * Abstract base class for all Layers\n */\nexport default class Layer extends Component {\n  static contextTypes = {\n    plot: PropTypes.instanceOf(Plot)\n  }\n\n  static propTypes = {\n    /** Array of `Number` types */\n    data: PropTypes.arrayOf(PropTypes.number), // eslint-disable-line react/no-unused-prop-types\n\n    /** Header options for `data` */\n    options: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n\n    /**\n     * Options about the layer\n     *\n     * @see See [sigplot.layer1d](https://github.com/LGSInnovations/sigplot/blob/master/js/sigplot.layer1d.js)\n     * @see See [sigplot.layer2d](https://github.com/LGSInnovations/sigplot/blob/master/js/sigplot.layer2d.js)\n     */\n    layerOptions: PropTypes.object // eslint-disable-line react/no-unused-prop-types\n  }\n\n  /**\n   * On unmount, all we need to do is remove the layer\n   * from the plot.\n   */\n  componentWillUnmount() {\n    this.plot.remove_layer(this.layer);\n  }\n\n  /**\n   * Getter for the sigplot.Plot object\n   *\n   * The `plot` is 'given' to  the layer-children\n   * from the <SigPlot> parent component, so we receive\n   * it from the context.\n   */\n  get plot() {\n    const { plot } = this.context;\n    return plot;\n  }\n\n  /**\n   * The layer components don't _actually_ render to the DOM.\n   *\n   * They are merely abstractions of canvas-manipulations.\n   */\n  render() {\n    return false;\n  }\n}\n","import React from 'react'; // eslint-disable-line no-unused-vars\nimport Layer from './layer';\n\n/**\n * ArrayLayer wrapper for sigplot.layer1d and sigplot.layer2d\n *\n * This layer is meant for static 1D and 2D (or 1D with `framesize`)\n * JS arrays/ArrayBuffers. A typical use case looks like\n *\n * For a 1-D spectral or time-series plot:\n *\n *   <SigPlot>\n *     <ArrayLayer data={[1, 2, 3]}/>\n *   </SigPlot>\n *\n * For a 2-D raster/heatmap:\n *\n *   <SigPlot>\n *     <ArrayLayer data={[[1, 2, 3], [2, 3, 4]]}/>\n *   </SigPlot>\n */\nexport default class ArrayLayer extends Layer {\n  /**\n   * Handles ArrayLayer being mounted onto the DOM\n   *\n   * All we need to do when the component 'mounts',\n   * is call `plot.overlay_array` with the relevant\n   * data and options. This will return our layer object.\n   *\n   * A large portion of the time, especially for dynamic\n   * systems, this will look like\n   * `this.plot.overlay_array([], undefined)` upon mount.\n   */\n  componentDidMount() {\n    const { data, options, layerOptions } = this.props;\n    this.layer = this.plot.overlay_array(data, options, layerOptions);\n  }\n\n  /**\n   * Handles new properties being passed into <ArrayLayer/>\n   *\n   * This will be replaced by\n   *\n   *     static getDerivedStateFromProps(nextProps, prevState)\n   *\n   * in React 17.\n   *\n   * This sits in the lifecycle right before `shouldComponentUpdate`,\n   * `componentWillUpdate`, and most importantly `render`, so this is\n   * where we will call the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   */\n  componentWillReceiveProps(nextProps) {\n    const {\n      data: currentData,\n      options: currentOptions,\n      layerOptions: currentLayerOptions\n    } = this.props;\n\n    const {\n      data: nextData,\n      options: nextOptions,\n      layerOptions: nextLayerOptions\n    } = nextProps;\n\n    // if the data changes, we'll go ahead\n    // and do a full `reload`;\n    // otherwise, we only need to headermod\n    // with the new options\n    if (nextData !== currentData) {\n      this.plot.reload(this.layer, nextData, nextOptions);\n    } else if (nextOptions !== currentOptions) {\n      this.plot.headermod(this.layer, nextOptions);\n    } else if (nextLayerOptions !== currentLayerOptions) {\n      this.plot.get_layer(this.layer).change_settings(nextLayerOptions);\n    }\n\n    return false;\n  }\n}\n","import React from 'react'; // eslint-disable-line no-unused-vars\nimport Layer from './layer';\n\n/**\n * Wrapper around sigplot.Plot.overlay_pipe\n *\n * This wrapper is for streaming 1-D plots or\n * 2-D raster waterfall plots.\n *\n * Typical use of this would look like\n *\n *   <SigPlot>\n *     <PipeLayer options={options} data={data}/>\n *   </SigPlot>\n *\n * where options is populated before data begins flowing\n */\nexport default class PipeLayer extends Layer {\n  /**\n   * On mount, the only action we can take is to overlay the\n   * pipe with the specified header (`options`) information\n   *\n   * It isn't until data begins coming that we can begin to\n   */\n  componentDidMount() {\n    const { options, data } = this.props;\n\n    // start by setting the header of the pipe\n    this.layer = this.plot.overlay_pipe(options);\n\n    // if data is provided and non-empty, go ahead and\n    // begin plotting data\n    if (data !== undefined && data.length > 0) {\n      this.plot.push(this.layer, data);\n    }\n  }\n\n  /**\n   * Handles new properties being passed into <PipeLayer/>\n   *\n   * This will be replaced by\n   *\n   *     static getDerivedStateFromProps(nextProps, prevState)\n   *\n   * in React 17.\n   *\n   * This sits in the lifecycle right before `shouldComponentUpdate`,\n   * `componentWillUpdate`, and most importantly `render`, so this is\n   * where we will call the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   *\n   * @TODO Handle headermod updates\n   */\n  componentWillReceiveProps(nextProps) {\n    const {\n      data: currentData,\n      options: currentOptions,\n      layerOptions: currentLayerOptions\n    } = this.props;\n    const {\n      data: nextData,\n      options: nextOptions,\n      layerOptions: nextLayerOptions\n    } = nextProps;\n\n    // if new data has come in, plot that\n    if (nextData && nextData !== currentData) {\n      this.plot.push(this.layer, nextData, nextOptions);\n    } else if (nextOptions !== currentOptions) {\n      this.plot.headermod(this.layer, nextOptions);\n    } else if (nextLayerOptions !== currentLayerOptions) {\n      this.plot.get_layer(this.layer).change_settings(nextLayerOptions);\n    }\n\n    return false;\n  }\n}\n","import React from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport Layer from './layer';\n\n/**\n * Wrapper around sigplot.Plot.overlay_href\n *\n * Typical use of this layer looks like\n *   <SigPlot>\n *     <HrefLayer href={'/path/to/file.tmp'}/>\n *   </SigPlot>\n */\nexport default class HrefLayer extends Layer {\n  static propTypes = {\n    /**\n     * URI to BLUEFILE or MATFILE to plot\n     *\n     * This can either be local 'file:///path/to/file' or\n     * remote 'http://myfile.com/file.tmp'\n     *\n     * Keep in mind that if the file is on a different domain,\n     * most browsers/web-servers will block cross origin requests.\n     *\n     * Since this layer doesn't take any numeric data,\n     * we are omitting the use of the `data` prop here.\n     */\n    href: PropTypes.string,\n\n    /** Callback that executes once the file loads */\n    onload: PropTypes.func,\n\n    /** Layer options */\n    options: PropTypes.object,\n  }\n\n  static defaultProps = {\n    href: '',\n    onload: null,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onloadWrapper.bind(this);\n  }\n\n  onloadWrapper(onload) {\n    return (hcb, i) => {\n      this.layer = i;\n      return onload(hcb, i);\n    };\n  }\n\n  /**\n   * On mount, all we need to do is call overlay_href\n   */\n  componentDidMount() {\n    const { href, onload, options } = this.props;\n    this.plot.overlay_href(href, this.onloadWrapper(onload), options);\n  }\n\n  /**\n   * Handles new properties being passed into <HrefLayer/>\n   *\n   * This will be replaced by\n   *\n   *     static getDerivedStateFromProps(nextProps, prevState)\n   *\n   * in React 17.\n   *\n   * This sits in the lifecycle right before `shouldComponentUpdate`,\n   * `componentWillUpdate`, and most importantly `render`, so this is\n   * where we will call the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   */\n  componentWillReceiveProps(nextProps) {\n    const {\n      href: oldHref,\n      options: oldOptions,\n    } = this.props;\n\n    const {\n      href: newHref,\n      onload: newOnload,\n      options: newOptions,\n    } = nextProps;\n\n    // we only care if `href` or `options` changes\n    if (newHref !== oldHref) {\n      this.plot.deoverlay(this.layer);\n      this.plot.overlay_href(newHref, this.onloadWrapper(newOnload), newOptions);\n    } else if (this.layer !== undefined && newOptions !== oldOptions) {\n      this.plot.get_layer(this.layer).change_settings(newOptions);\n    }\n\n    return false;\n  }\n}\n","import React from 'react'; // eslint-disable-line no-unused-vars\nimport Layer from './layer';\n\n/**\n * BlueLayer wrapper for sigplot.layer1d and sigplot.layer2d\n *\n * This layer is meant for Bluefiles\n * ArrayBuffers. A typical use case looks like\n *\n * For a 1-D spectral or time-series plot:\n *\n *   <SigPlot>\n *     <BlueLayer data={hcb}/>\n *   </SigPlot>\n *\n * For a 2-D raster/heatmap:\n *\n *   <SigPlot>\n *     <BlueLayer data={hcb}\n *           layerOptions={{\n *             subsize: 8,\n *             layerType: \"2D\"\n *         }}\n *       />\n *   </SigPlot>\n */\nexport default class BlueLayer extends Layer {\n  /**\n   * Handles BlueLayer being mounted onto the DOM\n   *\n   * All we need to do when the component 'mounts',\n   * is call `plot.overlay_bluefile` with the relevant\n   * data and options. This will return our layer object.\n   */\n  componentDidMount() {\n    const { data, layerOptions } = this.props;\n    this.layer = this.plot.overlay_bluefile(data, layerOptions);\n  }\n\n  /**\n   * Handles new properties being passed into <BlueLayer/>\n   *\n   * This will be replaced by\n   *\n   *     static getDerivedStateFromProps(nextProps, prevState)\n   *\n   * in React 17.\n   *\n   * This sits in the lifecycle right before `shouldComponentUpdate`,\n   * `componentWillUpdate`, and most importantly `render`, so this is\n   * where we will call the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   */\n  componentWillReceiveProps(nextProps) {\n    const {\n      data: currentData,\n      options: currentOptions,\n      layerOptions: currentLayerOptions\n    } = this.props;\n\n    const {\n      data: nextData,\n      options: nextOptions,\n      layerOptions: nextLayerOptions\n    } = nextProps;\n\n    // if the data changes, we'll go ahead\n    // and do a full `reload`;\n    // otherwise, we only need to headermod\n    // with the new options\n    if (nextData !== currentData) {\n      this.plot.reload(this.layer, nextData, nextOptions);\n    } else if (nextOptions !== currentOptions) {\n      this.plot.headermod(this.layer, nextOptions);\n    } else if (nextLayerOptions !== currentLayerOptions) {\n      this.plot.get_layer(this.layer).change_settings(nextLayerOptions);\n    }\n\n    return false;\n  }\n}\n","import React from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport Layer from './layer';\n\n/**\n * Wrapper around sigplot.Plot.overlay_websocket\n *\n * Typical use of this layer looks like\n *   <SigPlot>\n *     <WebsocketLayer wsurl={'ws://localhost:8080'}/>\n *   </SigPlot>\n */\nexport default class WebsocketLayer extends Layer {\n  static propTypes = {\n    /**\n     * URI to websocket server\n     *\n     * This usually looks like ws://<some URI>:<some port>\n     *\n     * Keep in mind that if the websocket server is on a different domain,\n     * most browsers/web-servers will block cross origin requests.\n     *\n     * Since this layer doesn't take any numeric data,\n     * we are omitting the use of the `data` prop here.\n     */\n    wsurl: PropTypes.string,\n\n    /** Key-value pairs whose values alter plot settings */\n    overrides: PropTypes.object,\n\n    /** Layer options */\n    options: PropTypes.object,\n  }\n\n  static defaultProps = {\n    wsurl: '',\n  }\n\n  /**\n   * On mount, all we need to do is call overlay_websocket\n   */\n  componentDidMount() {\n    const { wsurl, overrides, options } = this.props;\n    this.layer = this.plot.overlay_websocket(wsurl, overrides, options);\n  }\n\n  /**\n   * Handles new properties being passed into <HrefLayer/>\n   *\n   * This will be replaced by\n   *\n   *     static getDerivedStateFromProps(nextProps, prevState)\n   *\n   * in React 17.\n   *\n   * This sits in the lifecycle right before `shouldComponentUpdate`,\n   * `componentWillUpdate`, and most importantly `render`, so this is\n   * where we will call the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   *\n   * @TODO Investigate whether deoverlay is necessary here\n   */\n  componentWillReceiveProps(nextProps) {\n    const {\n      wsurl: oldWsurl,\n      options: oldOptions,\n    } = this.props;\n\n    const {\n      wsurl: newWsurl,\n      overrides: newOverrides,\n      options: newOptions,\n    } = nextProps;\n\n    // we only care if `wsurl` or `options` changes;\n    if (newWsurl !== oldWsurl) {\n      this.plot.deoverlay(this.layer);\n      this.layer = this.plot.overlay_websocket(\n        newWsurl,\n        newOverrides,\n        newOptions\n      );\n    } else if (this.layer !== undefined && newOptions !== oldOptions) {\n      this.plot.get_layer(this.layer).change_settings(newOptions);\n    }\n\n    return false;\n  }\n}\n","import React, { Component } from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport { Plot } from 'sigplot';\n\n/**\n * Abstract base class for all Plugins\n */\nexport default class Plugin extends Component {\n  static contextTypes = {\n    plot: PropTypes.instanceOf(Plot)\n  }\n\n  static propTypes = {\n    /**\n     * Options about the plugin\n     *\n     * @see See [plugins](https://github.com/LGSInnovations/sigplot/blob/master/js/plugins.js)\n     */\n    pluginOptions: PropTypes.object // eslint-disable-line react/no-unused-prop-types\n  }\n\n  /**\n   * On unmount, all we need to do is remove the plugin\n   * from the plot.\n   */\n  componentWillUnmount() {\n    this.plot.remove_plugin(this.plugin);\n  }\n\n  /**\n   * Getter for the sigplot.Plot object\n   *\n   * The `plot` is 'given' to  the plugin-children\n   * from the <SigPlot> parent component, so we receive\n   * it from the context.\n   */\n  get plot() {\n    const { plot } = this.context;\n    return plot;\n  }\n\n  /**\n   * The plugin components don't _actually_ render to the DOM.\n   *\n   * They are merely abstractions of canvas-manipulations.\n   */\n  render() {\n    return false;\n  }\n}\n","export { default as SigPlot } from './sigplot';\nexport { default as ArrayLayer } from './arraylayer';\nexport { default as PipeLayer } from './pipelayer';\nexport { default as HrefLayer } from './hreflayer';\nexport { default as BlueLayer } from './bluelayer';\nexport { default as WebsocketLayer } from './websocketlayer';\nexport { default as Layer } from './layer';\nexport { default as Plugin } from './plugin';\n","/**\n * @license\n * File: common.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\nmodule.exports = {};\n\nif (window.ArrayBuffer) {\n    if (!ArrayBuffer.prototype.slice) {\n        //Monkey Patching for iOS and early Firefox\n        ArrayBuffer.prototype.slice = function(start, end) {\n            var that = new Uint8Array(this);\n            if (end === undefined) {\n                end = that.length;\n            }\n            var result = new ArrayBuffer(end - start);\n            var resultArray = new Uint8Array(result);\n            for (var i = 0; i < resultArray.length; i++) {\n                resultArray[i] = that[i + start];\n            }\n            return result;\n        };\n    }\n}\n\n// Shim for requestAnimationFrame compatibility\nwindow.requestAnimFrame = (function(callback) {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n        function(callback) {\n            return window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nwindow.cancelAnimFrame = (function(callback) {\n    return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCanelAnimationFrame ||\n        function(timeoutID) {\n            window.clearTimeout(timeoutID);\n    };\n})();\n\n// Handle various ways to draw dashed lines\nmodule.exports.dashOn = function(ctx, on, off) {\n    if (ctx.setLineDash) {\n        ctx.setLineDash([on, off]);\n        return true;\n    } else if (ctx.mozDash !== undefined) { // Gecko 7.0+\n        ctx.mozDash = [on, off];\n        return true;\n    } else if (ctx.webkitLineDash && ctx.webkitLineDash.length === 0) {\n        ctx.webkitLineDash = [on, off];\n        return true;\n    }\n    return false;\n};\n\nmodule.exports.dashOff = function(ctx) {\n    if (ctx.setLineDash) {\n        ctx.setLineDash([]);\n    } else if (ctx.mozDash) { // Gecko 7.0+\n        ctx.mozDash = null;\n    } else if (ctx.webkitLineDash) {\n        ctx.webkitLineDash = [];\n    }\n};\n\n// Firefox behaves differntly for keypress events\nmodule.exports.getKeyCode = function(e) {\n    e = window.event || e;\n    e = e.charCode || e.keyCode;\n    return e;\n};\n\nmodule.exports.setKeypressHandler = function(handler) {\n    if (window.addEventListener) { window.addEventListener('keypress', handler, false); }\n    else if (window.attachEvent) {\n        window.attachEvent('onkeypress', handler);\n    }\n};\n\n// endsWith() is part of ECMAScript 6, include the Mozilla\n// Polyfill from https://developer.mozilla.org\nif (!String.prototype.endsWith) {\n    String.prototype.endsWith = function(search, this_len) {\n        if (this_len === undefined || this_len > this.length) {\n            this_len = this.length;\n        }\n        return this.substring(this_len - search.length, this_len) === search;\n    };\n}\n\nif (!Uint8Array.prototype.slice) {\n    Object.defineProperty(Uint8Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Int8Array.prototype.slice) {\n    Object.defineProperty(Int8Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Int16Array.prototype.slice) {\n    Object.defineProperty(Int16Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Int32Array.prototype.slice) {\n    Object.defineProperty(Int32Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Float32Array.prototype.slice) {\n    Object.defineProperty(Float32Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Float64Array.prototype.slice) {\n    Object.defineProperty(Float64Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\n// Array.isArray\n// FF 4+\n// IE 9+\n// SF 5+\n// http://kangax.github.io/es5-compat-table/#Array.isArray\nif (!Array.isArray) {\n    Array.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\n    };\n}\n\nif (!window.Float64Array) {\n    //Monkey Patching for iOS\n    // This is essentially ReadOnly because\n    // if someone does x[i] = 5\n    // the value will be set in the array\n    // but not in the underlying buffer\n    window.Float64Array = (function() {\n        return window.Float64Array ||\n            function(buffer, byteOffset, length) {\n                if (!(buffer instanceof ArrayBuffer)) {\n                    throw \"Invalid type\";\n                }\n                var dv = new DataView(buffer);\n                var b = [];\n                var maxlength = (buffer.byteLength - byteOffset) / 8;\n                if (length === undefined) {\n                    b.length = maxlength;\n                } else {\n                    b.length = Math.min(length, maxlength);\n                }\n\n                for (var i = 0; i < b.length; i++) {\n                    b[i] = dv.getFloat64(i * 8 + byteOffset, true);\n                }\n                b.subarray = function(begin, end) {\n                    return b.slice(begin, end);\n                };\n                return b;\n        };\n    })();\n}\n\n// Shims\n(function() {\n    /* console shim*/\n    var f = function() {};\n    if (!window.console) {\n        window.console = {\n            log: f,\n            info: f,\n            warn: f,\n            debug: f,\n            error: f\n        };\n    }\n\n    // Firefox 4 has a glaring subarray bug\n    // http://ryanberdeen.com/2011/04/16/firefox-subarray-bug.html\n    if (new Int8Array([0, 1, 0]).subarray(1).subarray(1)[0]) {\n        var subarray = function(begin, end) {\n            if (arguments.length === 0) {\n                begin = 0;\n                end = this.length;\n            } else {\n                if (begin < 0) {\n                    // relative to end\n                    begin += this.length;\n                }\n                // clamp to 0, length\n                begin = Math.max(0, Math.min(this.length, begin));\n                if (arguments.length === 1) {\n                    // slice to end\n                    end = this.length;\n                } else {\n                    if (end < 0) {\n                        // relative to end\n                        end += this.length;\n                    }\n                    // clamp to begin, length\n                    end = Math.max(begin, Math.min(this.length, end));\n                }\n            }\n\n            var byteOffset = this.byteOffset + begin * this.BYTES_PER_ELEMENT;\n            return new this.constructor(this.buffer, byteOffset, end - begin);\n        };\n\n        var typedArrays = [Int8Array, Uint8Array, Int16Array, Uint16Array,\n            Int32Array, Uint32Array, Float32Array, Float64Array\n        ];\n        typedArrays.forEach(function(cls) {\n            cls.prototype.subarray = subarray;\n        });\n    }\n\n}());\n\n// https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel?redirectlocale=en-US&redirectslug=DOM%2FMozilla_event_reference%2Fwheel#Listening_to_this_event_across_browser\n// creates a global \"addWheelListener\" method\n// example: addWheelListener( elem, function( e ) { console.log( e.deltaY ); e.preventDefault(); } );\n(function(window, document) {\n\n    var prefix = \"\",\n        _addEventListener, onwheel, support;\n\n    // detect event model\n    if (window.addEventListener) {\n        _addEventListener = \"addEventListener\";\n    } else {\n        _addEventListener = \"attachEvent\";\n        prefix = \"on\";\n    }\n\n    // detect available wheel event\n    support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n    document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n    \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n    window.addWheelListener = function(elem, callback, useCapture) {\n        _addWheelListener(elem, support, callback, useCapture);\n\n        // handle MozMousePixelScroll in older Firefox\n        if (support === \"DOMMouseScroll\") {\n            _addWheelListener(elem, \"MozMousePixelScroll\", callback, useCapture);\n        }\n    };\n\n    /* jshint -W030 */\n    function _addWheelListener(elem, eventName, callback, useCapture) {\n        elem[_addEventListener](prefix + eventName, support === \"wheel\" ? callback : function(originalEvent) {\n            !originalEvent && (originalEvent = window.event);\n\n            // create a normalized event object\n            var event = {\n                // keep a ref to the original event object\n                originalEvent: originalEvent,\n                target: originalEvent.target || originalEvent.srcElement,\n                type: \"wheel\",\n                deltaMode: originalEvent.type === \"MozMousePixelScroll\" ? 0 : 1,\n                deltaX: 0,\n                delatZ: 0,\n                preventDefault: function() {\n                    originalEvent.preventDefault ?\n                        originalEvent.preventDefault() :\n                        originalEvent.returnValue = false;\n                }\n            };\n\n            // calculate deltaY (and deltaX) according to the event\n            if (support === \"mousewheel\") {\n                event.deltaY = -1 / 40 * originalEvent.wheelDelta;\n                // Webkit also support wheelDeltaX\n                originalEvent.wheelDeltaX && (event.deltaX = -1 / 40 * originalEvent.wheelDeltaX);\n            } else {\n                event.deltaY = originalEvent.detail;\n            }\n\n            // it's time to fire the callback\n            return callback(event);\n\n        }, useCapture || false);\n    }\n    /* jshint +W030 */\n\n})(window, document);\n//Add Proxy poly fill https://github.com/GoogleChrome/proxy-polyfill\nif(!window.Proxy){\n/* jshint ignore:start */\n(function(){function l(){function n(a){return a?\"object\"===typeof a||\"function\"===typeof a:!1}var p=null;var g=function(a,b){function f(){}if(!n(a)||!n(b))throw new TypeError(\"Cannot create proxy with a non-object as target or handler\");p=function(){f=function(a){throw new TypeError(\"Cannot perform '\"+a+\"' on a proxy that has been revoked\");}};var e=b;b={get:null,set:null,apply:null,construct:null};for(var k in e){if(!(k in b))throw new TypeError(\"Proxy polyfill does not support trap '\"+k+\"'\");b[k]=e[k]}\"function\"===\ntypeof e&&(b.apply=e.apply.bind(e));var c=this,g=!1,q=!1;\"function\"===typeof a?(c=function(){var h=this&&this.constructor===c,d=Array.prototype.slice.call(arguments);f(h?\"construct\":\"apply\");return h&&b.construct?b.construct.call(this,a,d):!h&&b.apply?b.apply(a,this,d):h?(d.unshift(a),new (a.bind.apply(a,d))):a.apply(this,d)},g=!0):a instanceof Array&&(c=[],q=!0);var r=b.get?function(a){f(\"get\");return b.get(this,a,c)}:function(a){f(\"get\");return this[a]},v=b.set?function(a,d){f(\"set\");b.set(this,\na,d,c)}:function(a,b){f(\"set\");this[a]=b},t={};Object.getOwnPropertyNames(a).forEach(function(b){if(!((g||q)&&b in c)){var d={enumerable:!!Object.getOwnPropertyDescriptor(a,b).enumerable,get:r.bind(a,b),set:v.bind(a,b)};Object.defineProperty(c,b,d);t[b]=!0}});e=!0;Object.setPrototypeOf?Object.setPrototypeOf(c,Object.getPrototypeOf(a)):c.__proto__?c.__proto__=a.__proto__:e=!1;if(b.get||!e)for(var m in a)t[m]||Object.defineProperty(c,m,{get:r.bind(a,m)});Object.seal(a);Object.seal(c);return c};g.revocable=\nfunction(a,b){return{proxy:new g(a,b),revoke:p}};return g};var u=\"undefined\"!==typeof process&&\"[object process]\"==={}.toString.call(process)||\"undefined\"!==typeof navigator&&\"ReactNative\"===navigator.product?global:self;u.Proxy||(u.Proxy=l(),u.Proxy.revocable=u.Proxy.revocable);})();\n/* jshint ignore:end */\n}\n\n//Updates destenation object with source values\nmodule.exports.update = function update(dst, src) {\n    for (var prop in src) {\n        var val = src[prop];\n        if (typeof val === \"object\") { // recursive\n            update(dst[prop], val);\n        } else {\n            dst[prop] = val;\n        }\n    }\n    return dst; // return dst to allow method chaining\n};\n\n}());\n","/**\n * @license\n * File: m.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true*/\n\n//Uses Immediately-invoked Function Expressions (IIFE)s for namespaces\n//See http://addyosmani.com/blog/essential-js-namespacing/ for details.\n\n/* global module */\n/* global require */\n\n(function() {\n    'use strict';\n\n    var bluefile = require(\"./bluefile\");\n    var loglevel = require(\"loglevel\");\n\n    function m() {}\n\n    m.log = loglevel;\n\n    /**\n     *\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var PointArray = null;\n\n    /**\n     * True if we detected that we are on an iOS device\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);\n    if ((iOS) || // iOS doesn't support Float64\n        (typeof Float64Array === 'undefined') || // If it's undefined it's obviously not supported\n        (Float64Array.emulated) || // If it's emulated, don't waste time on extra precision\n        (!Float64Array.BYTES_PER_ELEMENT)) { // If bytes per element isn't defined, it's a buggy implementation (i.e. PhantomJS)\n        m.PointArray = Float32Array;\n    } else {\n        m.PointArray = Float64Array;\n    }\n\n\n    /** UNITS Structure:\n     *\t\t0: [\"None\", \"U\"],\n     *\t\t1: [\"Time\", \"sec\"],\n     *\t\t2: [\"Delay\", \"sec\"],\n     *\t\t3: [\"Frequency\", \"Hz\"],\n     *\t\t4: [\"Time code format\", \"\"],\n     *\t\t5: [\"Distance\", \"m\"],\n     *\t\t6: [\"Speed\", \"m/s\"],\n     *\t\t7: [\"Acceleration\", \"m/sec^2\"],\n     *\t\t8: [\"Jerk\", \"m/sec^3\"],\n     *\t\t9: [\"Doppler\", \"Hz\"],\n     *\t\t10: [\"Doppler rate\", \"Hz/sec\"],\n     *\t\t11: [\"Energy\", \"J\"],\n     *\t\t12: [\"Power\", \"W\"],\n     *\t\t13: [\"Mass\", \"g\"],\n     *\t\t14: [\"Volume\", \"l\"],\n     *\t\t15: [\"Angular power density\", \"W/ster\"],\n     *\t\t16: [\"Integrated power density\", \"W/rad\"],\n     *\t\t17: [\"Spatial power density\", \"W/m^2\"],\n     *\t\t18: [\"Integrated power density\", \"W/m\"],\n     *\t\t19: [\"Spectral power density\", \"W/MHz\"],\n     *\t\t20: [\"Amplitude\", \"U\"],\n     *\t\t21: [\"Real\", \"U\"],\n     *\t\t22: [\"Imaginary\", \"U\"],\n     *\t\t23: [\"Phase\", \"rad\"],\n     *\t\t24: [\"Phase\", \"deg\"],\n     *\t\t25: [\"Phase\", \"cycles\"],\n     *\t\t26: [\"10*Log\", \"U\"],\n     *\t\t27: [\"20*Log\", \"U\"],\n     *\t\t28: [\"Magnitude\", \"U\"],\n     *\t\t29: [\"Unknown\", \"U\"],\n     *\t\t30: [\"Unknown\", \"U\"],\n     *\t\t31: [\"General dimensionless\", \"\"],\n     *\t\t32: [\"Counts\", \"\"],\n     *\t\t33: [\"Angle\", \"rad\"],\n     *\t\t34: [\"Angle\", \"deg\"],\n     *\t\t35: [\"Relative power\", \"dB\"],\n     *\t\t36: [\"Relative power\", \"dBm\"],\n     *\t\t37: [\"Relative power\", \"dBW\"],\n     *\t\t38: [\"Solid angle\", \"ster\"],\n     *\t\t40: [\"Distance\", \"ft\"],\n     *\t\t41: [\"Distance\", \"nmi\"],\n     *\t\t42: [\"Speed\", \"ft/sec\"],\n     *\t\t43: [\"Speed\", \"nmi/sec\"],\n     *\t\t44: [\"Speed\", \"knots=nmi/hr\"],\n     *\t\t45: [\"Acceleration\", \"ft/sec^2\"],\n     *\t\t46: [\"Acceleration\", \"nmi/sec^2\"],\n     *\t\t47: [\"Acceleration\", \"knots/sec\"],\n     *\t\t48: [\"Acceleration\", \"G\"],\n     *\t\t49: [\"Jerk\", \"G/sec\"],\n     *\t\t50: [\"Rotation\", \"rps\"],\n     *\t\t51: [\"Rotation\", \"rpm\"],\n     *\t\t52: [\"Angular velocity\", \"rad/sec\"],\n     *\t\t53: [\"Angular velocity\", \"deg/sec\"],\n     *\t\t54: [\"Angular acceleration\", \"rad/sec^2\"],\n     *\t\t55: [\"Angular acceleration\", \"deg/sec^2\"],\n     *\t\t60: [\"Latitude\", \"deg\"],\n     *\t\t61: [\"Longitude\", \"deg\"],\n     *\t\t62: [\"Altitude\", \"ft\"],\n     *\t\t63: [\"Altitude\", \"m\"]\n     * @global\n     */\n    var UNITS = {\n        0: [\"None\", \"U\", true, true],\n        1: [\"Time\", \"sec\", true, true],\n        2: [\"Delay\", \"sec\", true, false],\n        3: [\"Frequency\", \"Hz\", true, true],\n        4: [\"Time code format\", \"\", true, false],\n        5: [\"Distance\", \"m\", true, true],\n        6: [\"Speed\", \"m/s\", true, true],\n        7: [\"Acceleration\", \"m/sec^2\", true, true],\n        8: [\"Jerk\", \"m/sec^3\", true, true],\n        9: [\"Doppler\", \"Hz\", true, false],\n        10: [\"Doppler rate\", \"Hz/sec\", true, true],\n        11: [\"Energy\", \"J\", true, true],\n        12: [\"Power\", \"W\", true, true],\n        13: [\"Mass\", \"g\", true, true],\n        14: [\"Volume\", \"l\", true, true],\n        15: [\"Angular power density\", \"W/ster\", true, true],\n        16: [\"Integrated power density\", \"W/rad\", true, true],\n        17: [\"Spatial power density\", \"W/m^2\", true, true],\n        18: [\"Integrated power density\", \"W/m\", false, true],\n        19: [\"Spectral power density\", \"W/MHz\", true, true],\n        20: [\"Amplitude\", \"U\", true, false],\n        21: [\"Real\", \"U\", true, false],\n        22: [\"Imaginary\", \"U\", true, false],\n        23: [\"Phase\", \"rad\", true, true],\n        24: [\"Phase\", \"deg\", false, true],\n        25: [\"Phase\", \"cycles\", false, true],\n        26: [\"10*Log\", \"U\", true, false],\n        27: [\"20*Log\", \"U\", true, false],\n        28: [\"Magnitude\", \"U\", true, false],\n        29: [\"Unknown\", \"U\", true, false],\n        30: [\"Unknown\", \"U\", false, false],\n        31: [\"General dimensionless\", \"\", true, true],\n        32: [\"Counts\", \"\", true, false],\n        33: [\"Angle\", \"rad\", true, false],\n        34: [\"Angle\", \"deg\", false, false],\n        35: [\"Relative power\", \"dB\", true, true],\n        36: [\"Relative power\", \"dBm\", false, true],\n        37: [\"Relative power\", \"dBW\", false, true],\n        38: [\"Solid angle\", \"ster\", true, true],\n        40: [\"Distance\", \"ft\", false, true],\n        41: [\"Distance\", \"nmi\", false, true],\n        42: [\"Speed\", \"ft/sec\", false, true],\n        43: [\"Speed\", \"nmi/sec\", false, true],\n        44: [\"Speed\", \"knots=nmi/hr\", false, true],\n        45: [\"Acceleration\", \"ft/sec^2\", false, true],\n        46: [\"Acceleration\", \"nmi/sec^2\", false, true],\n        47: [\"Acceleration\", \"knots/sec\", false, true],\n        48: [\"Acceleration\", \"G\", false, true],\n        49: [\"Jerk\", \"G/sec\", false, true],\n        50: [\"Rotation\", \"rps\", true, false],\n        51: [\"Rotation\", \"rpm\", false, false],\n        52: [\"Angular velocity\", \"rad/sec\", true, true],\n        53: [\"Angular velocity\", \"deg/sec\", false, true],\n        54: [\"Angular acceleration\", \"rad/sec^2\", true, true],\n        55: [\"Angular acceleration\", \"deg/sec^2\", false, true],\n        60: [\"Latitude\", \"deg\", true, false],\n        61: [\"Longitude\", \"deg\", true, false],\n        62: [\"Altitude\", \"ft\", true, false],\n        63: [\"Altitude\", \"m\", false, false]\n    };\n\n    m.UNITS = UNITS;\n\n    /** Common structure\n     * @private\n     */\n    m.Mc = {\n        // Colormaps are stored as 7 element tables which are then\n        //\tinterpolated to the number of colors actually used in a graphics routine\n        //\tcall to MX$COLORMAP.\n\n        // There are 4 colormap tables stored in the environment: A GREYSCALE,\n        // COLORRAMP, COLORWHEEL, COLORSPECTRUM, or SUNSET.  The specific values that\n        // are listed here are from xcolordef.prm (use the XCOLORMAP widget).\n        //\n        // The actual values are a result of tribal knowledge and years of experience\n        colormap: [{\n                name: \"Greyscale\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 60,\n                    red: 50,\n                    green: 50,\n                    blue: 50\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }]\n            }, {\n                name: \"Ramp Colormap\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 0,\n                    blue: 15\n                }, {\n                    pos: 10,\n                    red: 0,\n                    green: 0,\n                    blue: 50\n                }, {\n                    pos: 31,\n                    red: 0,\n                    green: 65,\n                    blue: 75\n                }, {\n                    pos: 50,\n                    red: 0,\n                    green: 85,\n                    blue: 0\n                }, {\n                    pos: 70,\n                    red: 75,\n                    green: 80,\n                    blue: 0\n                }, {\n                    pos: 83,\n                    red: 100,\n                    green: 60,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }]\n            }, {\n                name: \"Color Wheel\",\n                colors: [{\n                    pos: 0,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 20,\n                    red: 0,\n                    green: 80,\n                    blue: 40\n                }, {\n                    pos: 30,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 50,\n                    red: 10,\n                    green: 10,\n                    blue: 0\n                }, {\n                    pos: 65,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 88,\n                    red: 100,\n                    green: 40,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }]\n            }, {\n                name: \"Spectrum\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 75,\n                    blue: 0\n                }, {\n                    pos: 22,\n                    red: 0,\n                    green: 90,\n                    blue: 90\n                }, {\n                    pos: 37,\n                    red: 0,\n                    green: 0,\n                    blue: 85\n                }, {\n                    pos: 49,\n                    red: 90,\n                    green: 0,\n                    blue: 85\n                }, {\n                    pos: 68,\n                    red: 90,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 80,\n                    red: 90,\n                    green: 90,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 95,\n                    green: 95,\n                    blue: 95\n                }]\n            }, {\n                name: \"calewhite\",\n                colors: [{\n                    pos: 0,\n                    red: 100,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 16.666,\n                    red: 0,\n                    green: 0,\n                    blue: 100\n                }, {\n                    pos: 33.333,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 50,\n                    red: 0,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 66.666,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 83.333,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 0,\n                    blue: 100\n                }]\n            }, {\n                name: \"HotDesat\",\n                colors: [{\n                    pos: 0,\n                    red: 27.84,\n                    green: 27.84,\n                    blue: 85.88\n                }, {\n                    pos: 14.2857,\n                    red: 0,\n                    green: 0,\n                    blue: 35.69\n                }, {\n                    pos: 28.571,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 42.857,\n                    red: 0,\n                    green: 49.8,\n                    blue: 0\n                }, {\n                    pos: 57.14286,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 71.42857,\n                    red: 100,\n                    green: 37.65,\n                    blue: 0\n                }, {\n                    pos: 85.7143,\n                    red: 41.96,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 87.84,\n                    green: 29.8,\n                    blue: 29.8\n                }]\n            }, {\n                name: \"Sunset\",\n                colors: [{\n                    pos: 0,\n                    red: 10,\n                    green: 0,\n                    blue: 23\n                }, {\n                    pos: 18,\n                    red: 34,\n                    green: 0,\n                    blue: 60\n                }, {\n                    pos: 36,\n                    red: 58,\n                    green: 20,\n                    blue: 47\n                }, {\n                    pos: 55,\n                    red: 74,\n                    green: 20,\n                    blue: 28\n                }, {\n                    pos: 72,\n                    red: 90,\n                    green: 43,\n                    blue: 0\n                }, {\n                    pos: 87,\n                    red: 100,\n                    green: 72,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 76\n                }]\n            },\n            {\n                name: \"Hot\",\n                colors: [\"#000000\", \"#7f0000\", \"#b30000\", \"#d7301f\", \"#ef6548\", \"#fc8d59\", \"#fdbb84\", \"#fdd49e\", \"#fee8c8\", \"#fff7ec\", \"#ffffff\"]\n            }, {\n                name: \"Cold\",\n                colors: [\"#000000\", \"#023858\", \"#045a8d\", \"#0570b0\", \"#3690c0\", \"#74a9cf\", \"#a6bddb\", \"#d0d1e6\", \"#ece7f2\", \"#fff7fb\", \"#ffffff\"]\n            },\n            {\n                name: \"Purple\",\n                colors: [\"#230022\", \"#4d004b\", \"#810f7c\", \"#88419d\", \"#8c6bb1\", \"#8c96c6\", \"#9ebcda\", \"#bfd3e6\", \"#e0ecf4\", \"#f7fcfd\"]\n            }, {\n                name: \"BuGn\",\n                colors: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b']\n            }, {\n                name: \"YlOrBr\",\n                colors: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506']\n            }, {\n                name: \"YlGnBu\",\n                colors: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58']\n            }, {\n                name: \"YlOrRd\",\n                colors: [\"#000000\", \"#662506\", \"#993404\", \"#cc4c02\", \"#ec7014\", \"#fe9929\", \"#fec44f\", \"#fee391\", \"#fff7bc\", \"#ffffe5\", \"#ffffff\"]\n            }, {\n                name: \"GreyNRed\",\n                colors: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'].reverse()\n            }\n        ]\n    };\n\n    /** Pipe Size\n     * @private\n     */\n    m.PIPESIZE = 1024 * 1024;\n\n    /**\n     * Converts unit strings to number code\n     * @param\t{string}\tunitInput\tUser unit input\n     */\n    m.unit_lookup = function(unitInput) {\n        for (var i = 0; i < 64; i++) {\n            var u;\n            if (UNITS[i] === undefined) {\n                u = UNITS[0];\n            } else {\n                u = UNITS[i];\n            }\n            var first = u[0];\n            var second = u[1];\n            var comparer1 = u[0] + \" \" + u[1];\n            var comparer2 = u[0] + \"_\" + u[1];\n            if (unitInput === first) {\n                if (u[2]) {\n                    return i;\n                }\n            } else if (unitInput === second) {\n                if (u[3]) {\n                    return i;\n                }\n            } else if ((unitInput === comparer1) || (unitInput === comparer2)) {\n                return i;\n            }\n        }\n        return unitInput;\n    };\n\n    /**\n     * Creates new file with header initialized to type-1000 defaults\n     * and data appended. (tbd)\n     * @param\t{string}\tfilename\tName of File to Create\n     * @param  \t{array}\t\tdata\t\tInput data buffer\n     * @param  \t{array}\t  \toverrides\tList of fields/values to be overridden in the bluefile header\n     * @return \t{header} \thcb\t\tReturn <hcb> type-1000 bluefile header, filename=null\n     */\n    m.initialize = function(data, overrides) {\n        var hcb = new bluefile.BlueHeader(null);\n\n        hcb.version = 'BLUE';\n        hcb.size = 0;\n        hcb.type = 1000;\n        hcb.format = 'SF';\n        hcb.timecode = 0.0;\n        hcb.xstart = 0.0;\n        hcb.xdelta = 1.0;\n        hcb.xunits = 0;\n        hcb.subsize = 1;\n        hcb.ystart = 0.0;\n        hcb.ydelta = 1.0;\n        hcb.yunits = 0;\n        hcb.enabled_streaming_pcut = false;\n\n        if (!overrides) {\n            /* if no overrides provided...set it to empty*/\n            overrides = {};\n        }\n\n        for (var field in overrides) {\n            hcb[field] = overrides[field];\n        }\n\n        //Convert xunits and yunits to numbers if they are strings\n        hcb[\"xunits\"] = m.unit_lookup(hcb[\"xunits\"]);\n        hcb[\"yunits\"] = m.unit_lookup(hcb[\"yunits\"]);\n\n\n        // Force type 2000 is subsize is specified\n        if (hcb[\"subsize\"] > 1) {\n            hcb.type = 2000;\n        } else if (Array.isArray(data) && Array.isArray(data[0])) {\n            //If this is a 2-D array automatically set subsize\n            hcb.type = 2000;\n            hcb.subsize = data[0].length;\n            hcb.size = data.length;\n        }\n        hcb[\"class\"] = hcb.type / 1000;\n        // If this is a type 2000 , subsize *must* be provided\n        if ((hcb[\"class\"] === 2) && (hcb[\"subsize\"] === undefined)) {\n            throw \"subsize must be provided with type 2000 files\";\n        }\n\n\n        if (!overrides.pipe) {\n            hcb.setData(data);\n        } else {\n            hcb.pipe = true;\n            hcb.in_byte = 0;\n            hcb.out_byte = 0;\n            // TODO round pipe size to nearest number of elements\n            var pipesize = overrides.pipesize || m.PIPESIZE;\n\n            hcb.buf = new ArrayBuffer(pipesize);\n            hcb.setData(hcb.buf);\n            hcb.data_free = hcb.dview.length;\n        }\n\n        return hcb;\n    };\n\n    /**\n     * Convert type-2000 header internals to force GRAB and FILAD routines to treat file as a 1000-type file.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     */\n    m.force1000 = function(hcb) {\n        if (hcb[\"class\"] === 2) {\n            if ((hcb.size) && (!hcb.pipe)) {\n                hcb.size = hcb.subsize * hcb.size;\n            } else {\n                // assume the size is 0\n                hcb.size = 0;\n            }\n            hcb.bpe = hcb.bpe / hcb.subsize;\n            hcb.ape = 1;\n        }\n    };\n\n    /**\n     * Get data from file at specified start location.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{array}\t\tbufview\t\tData buffer to receive data\n     * @param\t{number}\tstart\t\tStart location\n     * @param\t{number}\tnget\t\tNumber of requested data\n     * @return\t{number}\tngot\t\tNumber of received data\n     */\n    m.grab = function(hcb, bufview, start, nget) {\n        if (!hcb.dview) {\n            return 0;\n        }\n\n        // TODO reformat\n        if (hcb.format[0] === 'C') {\n            start = start * 2;\n        }\n\n        nget = hcb.ape * nget; // TODO - this is never used????\n\n        //var ngot = Math.min(bufview.length, (hcb.dview.length-start)); //mmm\n        var ngot = Math.min(bufview.length, (hcb.dview.length - start));\n        // iOS doesn't have .set on TypedArrays\n        if (bufview.set === undefined) {\n            for (var i = 0; i < ngot; i++) {\n                bufview[i] = hcb.dview[start + i];\n            }\n        } else {\n            bufview.set(hcb.dview.subarray(start, start + ngot));\n        }\n        if (hcb.format[0] === 'C') {\n            ngot = ngot / 2;\n        }\n        return ngot;\n    };\n\n    /**\n     * Append data buffer to file specified in the bluefile header control block.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{array}\t\tdata\t\tData buffer\n     * @param   {boolean}       [sync=false]    dispatch onpipewrite syncronously\n     */\n    m.filad = function(hcb, data, sync) {\n        if (hcb.data_free < data.length) {\n            throw \"Pipe full\";\n        }\n        var sidx = hcb.in_byte / hcb.dview.BYTES_PER_ELEMENT;\n        var eidx = (sidx + data.length);\n        if (eidx > hcb.dview.length) {\n            var head = hcb.dview.length - sidx;\n            var tail = data.length - head;\n            if (data.subarray) {\n                hcb.dview.set(data.subarray(0, head), sidx);\n                hcb.dview.set(data.subarray(head, data.length), 0);\n            } else {\n                hcb.dview.set(data.slice(0, head), sidx);\n                hcb.dview.set(data.slice(head, data.length), 0);\n            }\n            hcb.in_byte = (tail * hcb.dview.BYTES_PER_ELEMENT);\n        } else {\n            hcb.dview.set(data, sidx);\n            hcb.in_byte = (eidx * hcb.dview.BYTES_PER_ELEMENT) % hcb.buf.byteLength;\n        }\n        hcb.data_free -= data.length;\n        if (hcb.onwritelisteners) {\n            for (var i = 0; i < hcb.onwritelisteners.length; i++) {\n                if (!sync) {\n                    window.setTimeout(hcb.onwritelisteners[i], 0);\n                } else {\n                    hcb.onwritelisteners[i]();\n                }\n            }\n        }\n    };\n\n    /**\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @return\t{number}\telements available\n     * @private\n     */\n    m.pavail = function(hcb) {\n        return hcb.dview.length - hcb.data_free;\n    };\n\n    /**\n     * Get data from file in dataflow fashion.\n     * @param\t{array}\t\thcb\tBluefile header control block\n     * @param \t{array}\t\tdview\tData buffer to receive data\n     * @param\t{number}\tnget\tInput variable name of parameter to receive data\n     * @param\t{number}\toffset\tOffset into file\n     * @return\t{number}\tngot\tNumber of data values gotten\n     */\n    // WARNING - nget is number of scalars...which differs from the normal API\n    m.grabx = function(hcb, dview, nget, offset) {\n        var navail = hcb.dview.length - hcb.data_free;\n        if (offset === undefined) {\n            offset = 0;\n        }\n        if (!nget) {\n            nget = Math.min(dview.length - offset, navail);\n        } else if (nget > dview.length - offset) {\n            throw \"m.grabx : nget larger then available buffer space\";\n        }\n        if (nget < 0) {\n            throw \"m.grabx : nget cannot be negative\";\n        }\n        if (nget > navail) {\n            return 0;\n        }\n\n        var sidx = hcb.out_byte / hcb.dview.BYTES_PER_ELEMENT;\n        var eidx = (sidx + nget);\n        if (eidx >= hcb.dview.length) {\n            var head = hcb.dview.length - sidx;\n            eidx = eidx - hcb.dview.length;\n            dview.set(hcb.dview.subarray(sidx, hcb.dview.length), offset);\n            dview.set(hcb.dview.subarray(0, eidx), offset + head);\n        } else {\n            dview.set(hcb.dview.subarray(sidx, eidx), offset);\n        }\n        hcb.out_byte = (eidx * hcb.dview.BYTES_PER_ELEMENT) % hcb.buf.byteLength;\n        hcb.data_free += nget;\n        var ngot = nget;\n        return ngot;\n    };\n\n\n    /**\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{number}\tonwrite\t\t-\n     * @private\n     */\n    m.addPipeWriteListener = function(hcb, onwrite) {\n        if (!hcb.onwritelisteners) {\n            hcb.onwritelisteners = [];\n        }\n        if (hcb.onwritelisteners.indexOf(onwrite) === -1) {\n            hcb.onwritelisteners.push(onwrite);\n        }\n    };\n\n    /**\n     * Returns ASCII description of units code\n     * @param \t{number}\tUNITS array index (see global UNITS)\n     * @return \t{string}\tASCII code pair\n     */\n    // ~= M$UNITS_NAME\n    m.units_name = function(units) {\n        var u = UNITS[units];\n        return u[0] + \" (\" + u[1] + \")\";\n    };\n\n    /**\n     * Extract filename from full path\n     * @param \t{string}\tpathfilename\tFull path, including filename\n     * @return\t{string}\tfilename\t    Trimmed filename\n     */\n    m.trim_name = function(pathfilename) {\n        var i = pathfilename.indexOf(']');\n        if (i === -1) {\n            i = pathfilename.indexOf('/');\n        }\n        if (i === -1) {\n            i = pathfilename.indexOf(':');\n        }\n        var j = pathfilename.substr(i + 1, pathfilename.length).indexOf('.');\n        if (j < 0) {\n            j = pathfilename.length - i;\n        }\n        var filename = pathfilename.substr(i + 1, i + j + 1);\n        return filename;\n    };\n\n    /**\n     * Takes an integer code for units and a multiplier and returns the string representation of the two.\n     * Example: l = m.label(1,1.0e3) ==> l =  Time (Ksec)\n     * @param \t{number}\tunits\tInteger code for Unit (see global UNITS)\n     * @param \t{number} \tmult\tUnits multiplier (i.e 1.0e3 ==> 'K')\n     * @return {string} representation of units and multiplier\n     */\n    // ~= M$LABEL\n    m.label = function(units, mult) {\n        var u = [\"Unknown\", \"U\"];\n\n        if (typeof units === \"string\") {\n            u = [units, null];\n        } else if (Array.isArray(units)) {\n            u = units;\n        } else {\n            u = UNITS[units];\n            if (u === undefined) {\n                u = [\"Unknown\", \"U\"];\n            }\n        }\n\n        var prefix = m.mult_prefix(mult);\n\n        if (u[1]) {\n            return u[0] + \" (\" + prefix + u[1] + \")\";\n        } else {\n            return u[0];\n        }\n    };\n\n    /**\n     * @method bound\n     * @param a\n     * @param b\n     * @param c\n     */\n    m.bound = function(a, b, c) {\n        return a < b ? b : (a > c ? c : a);\n    };\n\n    m.touch_distance = function(touchA, touchB) {\n        var xd = (touchA.pageX - touchB.pageX);\n        var yd = (touchA.pageY - touchB.pageY);\n        return Math.sqrt((xd * xd) + (yd * yd));\n    };\n\n    m.mult_prefix = function(mult) {\n        var prefix = \"?\";\n\n        /* jshint -W116 */\n        if (mult == 1) {\n            prefix = \"\";\n        } else if (mult == 10) {\n            prefix = 'da';\n        } else if (mult == 0.1) {\n            prefix = 'd';\n        } else if (mult == 100) {\n            prefix = 'h';\n        } else if (mult == 0.01) {\n            prefix = 'c';\n        } else if (mult == 1.0e3) {\n            prefix = 'K';\n        } else if (mult == 1.0e-3) {\n            prefix = 'm';\n        } else if (mult == 1.0e6) {\n            prefix = 'M';\n        } else if (mult == 1.0e-6) {\n            prefix = 'u';\n        } else if (mult == 1.0e9) {\n            prefix = 'G';\n        } else if (mult == 1.0e-9) {\n            prefix = 'n';\n        } else if (mult == 1.0e12) {\n            prefix = 'T';\n        } else if (mult == 1.0e-12) {\n            prefix = 'p';\n        }\n        /* jshint +W116 */\n\n        return prefix;\n    };\n\n    /**\n     * @private\n     */\n    var VECTOR = {\n        MV: 'F', // vector type\n        MS: 'F', // scalar type...not really necessary in javascript\n        nbpt: 4,\n        view: undefined\n    };\n\n\n    /**\n     * Sets data type for all subsequent calls to vector libraries.  Remains in effect until another call to this routine.\n     * @param ctype\n     */\n    // ~= VSTYPE - not really necessary\n    m.vstype = function(ctype) {\n        VECTOR.MS = ctype;\n        VECTOR.MV = ctype;\n        if (VECTOR.MV === 'D') {\n            VECTOR.nbpt = 8;\n        } else if ((VECTOR.MV === 'L') || (VECTOR.MV === 'F')) {\n            VECTOR.nbpt = 4;\n        } else if (VECTOR.MV === 'I') {\n            VECTOR.nbpt = 2;\n        } else if (VECTOR.MV === 'B') {\n            VECTOR.nbpt = 1;\n        } else {\n            alert(\"Unsupported vector type\");\n        }\n    };\n\n    m.log10 = function(v, lo_thresh) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        return Math.log(Math.max(v, lo_thresh)) / Math.log(10);\n    };\n\n    /**\n     * For each vector element in <src>, determine the max of <src> element and <lo_thresh>, returns the log(base10) of that value in <dst>\n     * @param\t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number} \tlo_thresh\tUser-set minimum log threshold (if not defined, set default=1.0e-20). Prevent computing log of 0 or negative values.\n     * @param \t{array}\t\tdst\t\tOuput vector.  If undefined, <src> elements will be overwritten.\n     */\n    // ~= M$VLOG10- not really necessary\n    m.vlog10 = function(src, lo_thresh, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        for (var i = 0; i < src.length; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = Math.log(Math.max(src[i], lo_thresh)) / Math.log(10);\n        }\n    };\n\n    /**\n     * Same as vlog10 but multiply each output value by a scale factor <dbscale>.\n     * @param \t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number}\tlo_thresh\tUser-set minimum log threshold.\n     *                                              If undefined, defaults to 1.0e-20. Prevent computing log of 0 or negative values.\n     * @param \t{number}\tdbscale\t\tOutput scale factor. If undefined, defaults to 1.\n     * @param \t{array}\t\tdst\t\tOutput vector. If undefined, <src> elements will be overwritten.\n     * @private\n     */\n    m.vlogscale = function(src, lo_thresh, dbscale, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dbscale === undefined) {\n            dbscale = 1;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        for (var i = 0; i < src.length; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = Math.log(Math.abs(Math.max(src[i], lo_thresh))) / Math.log(10);\n            dst[i] = dst[i] * dbscale;\n        }\n    };\n\n    /**\n     * Same as vlogscale but computes magnitude squared.\n     *\n     * @param \t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number}\tlo_thresh\tUser-set minimum log threshold.\n     *                                              If undefined, defaults to 1.0e-20. Prevent computing log of 0 or negative values.\n     * @param \t{number}\tdbscale\t\tOutput scale factor. If undefined, defaults to 1.\n     * @param \t{array}\t\tdst\t\tOutput vector. If undefined, <src> elements will be overwritten.\n     * @private\n     */\n    m.cvmag2logscale = function(src, lo_thresh, dbscale, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dbscale === undefined) {\n            dbscale = 1;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        var j = 0;\n        for (var i = 0; i < dst.length; i++) {\n            j = 2 * i + 1;\n            if (j >= src.length) {\n                break;\n            }\n            dst[i] = (src[j - 1] * src[j - 1]) + (src[j] * src[j]);\n            dst[i] = Math.log(Math.abs(Math.max(dst[i], lo_thresh))) / Math.log(10);\n            dst[i] = dst[i] * dbscale;\n        }\n    };\n\n    /**\n     * Multiply <count> elements of <src> by <mul>, store results in <dst>\n     * @param\t{array} \tsrc\t\tInput vector.\n     * @param\t{number}\tmul\t\tVector multiplier.\n     * @param\t{array}\t\tdst\t\tOutput vector. If not defined, <src> elements will be overwritten.\n     * @param\t{number}\tcount\t\tNumber of elements to apply multiplier, starting with first <src> element.\n     */\n    // ~= M$VSMUL\n    m.vsmul = function(src, mul, dst, count) {\n        if (dst === undefined) {\n            dst = src;\n        }\n        if (count === undefined) {\n            count = dst.length;\n        }\n        count = Math.min(dst.length, count);\n        count = Math.min(src.length, count);\n\n        for (var i = 0; i < count; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = src[i] * mul;\n        }\n    };\n\n    /**\n     * Finds max and min values in vector <vec> and returns values.\n     * @param \t{array}\t\tvec\t\tInput vector.\n     * @param\t{number}\tsize\t\tNumber of elements to search to find max.min values.\n     * @return \t{array}\t\tmxmin\t\tIndex and value of min and max elements in <vec>.\n     */\n    // ~= M$VMXMN\n    m.vmxmn = function(vec, size) {\n        // Originally this code used an object to hold the values\n        // but Chrome 34.0.1847.131 seemed to have a bug where\n        // these values would somehow get messed up...oddly\n        // putting printouts or breakpoints prevented the\n        // problem from showing up.\n        var smax = vec[0];\n        var smin = vec[0];\n        var imax = 0;\n        var imin = 0;\n        size = Math.min(size, vec.length);\n        for (var i = 0; i < size; i++) {\n            if (vec[i] > smax) {\n                smax = vec[i];\n                imax = i;\n            }\n            if (vec[i] < smin) {\n                smin = vec[i];\n                imin = i;\n            }\n        }\n        return {\n            smax: smax,\n            smin: smin,\n            imax: imax,\n            imin: imin\n        };\n    };\n\n    /**\n     * Move <count> elements from <src> to <dest>.  Stride is the distance between each array element in either or both the input and output vectors.\n     * @param {array}\tsrc\t\tInput vector.\n     * @param {number}\tsstride\t\tInput stride.\n     * @param {array}\tdest\t\tOutput vector.\n     * @param {number}\tdstride\t\tOutput stride.\n     * @param {number}\tcount\t\tNumber of input vector elements to move, starting with 0th element of <vec>. Cannot exceed vector lengths,\n     *\t\t\t\t\ttaking into account the strides.\n     */\n    m.vmov = function(src, sstride, dest, dstride, count) {\n        if (count === undefined) {\n            count = src.length;\n        }\n        count = Math.min(src.length, count);\n        //count = Math.min(src.length, count, (count)*(dest.length)*(dstride)); //mmm-TODO\n\n        for (var i = 0; i < count; i++) {\n            var s = i * sstride;\n            var d = i * dstride;\n            if (s >= src.length) {\n                break;\n            }\n            if (d >= dest.length) {\n                break;\n            }\n            dest[d] = src[s];\n        }\n    };\n\n    /**\n     * Initialize <count> consecutive elements of input vector <vec> with value <inpval>.\n     * @param\t{array}\t\tvec\t\tInput vector\n     * @param\t{number}\tinpval\t\tValue\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <vec>.  If undefined, entire <vec> is written.\n     */\n    // ~= M$VFILL\n    // TODO - more optimal version?\n    m.vfill = function(vec, inpval, count) {\n        if (count === undefined) {\n            count = vec.length;\n        }\n        count = Math.min(vec.length, count);\n        for (var i = 0; i < count; i++) {\n            vec[i] = inpval;\n        }\n    };\n\n    /**\n     * Compute the absolute value of <count> elements in <vec> and write to output vector <dest>\n     * @param \t{array}\t\tvec\t\tInput vector.\n     * @param \t{array}\t\tdest\t\tOuput vector. If <dest> is undefined, overwrite input vector <vec>.\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <vec>. Cannot exceed vector lengths.\n     */\n    m.vabs = function(vec, dest, count) {\n        if (count === undefined) {\n            count = vec.length;\n        }\n        if (dest === undefined) {\n            dest = vec;\n        }\n        //count = Math.min(dest.length, count, vec.length); //mmm-TODO\n        for (var i = 0; i < count; i++) {\n            dest[i] = Math.abs(vec[i]);\n        }\n    };\n\n\n    /**\n     * Computes the magnitude of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVMAG\n    m.cvmag = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        for (var i = 0; i < count; i++) {\n            var j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            dest[i] = Math.sqrt((cxvec[j - 1] * cxvec[j - 1]) + (cxvec[j] * cxvec[j]));\n        }\n    };\n\n    /**\n     * Computes the magnitude squared of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVMAG2\n    m.cvmag2 = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        var j = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            dest[i] = (cxvec[j - 1] * cxvec[j - 1]) + (cxvec[j] * cxvec[j]);\n        }\n    };\n\n    /**\n     * Computes phase in radians of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVPHA\n    m.cvpha = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        var j = 0;\n        var re = 0;\n        var im = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            re = cxvec[j - 1];\n            im = cxvec[j];\n            if ((re === 0.0) && (im === 0.0)) {\n                re = 1.0;\n            }\n            dest[i] = Math.atan2(im, re);\n        }\n    };\n\n    /**\n     * Computes the phase in degrees of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVPHAD\n    m.cvphad = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n\n        var j = 0;\n        var re = 0;\n        var im = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            re = cxvec[j - 1];\n            im = cxvec[j];\n            if ((re === 0.0) && (im === 0.0)) {\n                re = 1.0;\n            }\n            dest[i] = Math.atan2(im, re) * (180.0 / Math.PI);\n        }\n    };\n\n    /**\n     * @param n\n     * @private\n     */\n    // ~= INT(), DINT\n    m.trunc = function(n) {\n        return n - n % 1;\n    };\n\n    /**\n     * @param a1\n     * @param a2\n     * @private\n     */\n    // Transfer of sign function from Fortran\n    m.sign = function(a1, a2) {\n        if (a2 >= 0) {\n            return Math.abs(a1);\n        } else {\n            return -Math.abs(a1);\n        }\n    };\n\n    /**\n     * @method pad2\n     * @param number\n     * @private\n     */\n\n    function pad2(number) {\n        return (number < 10 ? '0' : '') + number;\n    }\n\n    /**\n     * Convert J1950 time or seconds-since-Epoch (midnight Dec-31-1949) to time-of-day. Fractional seconds accurate to milliseconds.\n     * @param \t{number}\tsec\t\tNumber of seconds.\n     * @return\t{string}\ttod\t\tTime of day\n     */\n\n    /* Output string can be in different forms as follows:\n     * -31536000 <  sec < 0                   -DDD::HH:MM:SS\n     *         0 <= sec < 86400                     HH:MM:SS\n     *         86400 <= sec < 31536000         DDD::HH:MM:SS\n     *         31536000 <=sec            YYYY:MM:DD:HH:MM:SS.<FFFFFF>\n     *                                    where FFFFFF is in microseconds\n     *\n     */\n\n    m.sec2tod = function(sec, trim_trailing_zeros) {\n        var tod = \"\";\n        var j1950 = Date.UTC(1950, 0, 1); //From 1950 to 1970\n        var j1950Date = new Date(j1950); //debug var\n        var j1949 = Date.UTC(1949, 11, 31);\n        var j1949Date = new Date(j1949); //debug var\n        var d = new Date();\n        var midnightToday = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0, 0);\n        var diffDaySecs = 86400; //    86400 secs = 24*60*60\n        var diffYearSecs = 31536000; // 31536000 secs = 365*24*60*60\n        var negDiffYearSecs = -1 * diffYearSecs; //-31536000 secs\n\n        if (sec >= 0) {\n            if (sec < diffDaySecs) {\n                // hh:mm:ss\n                var millisecs = midnightToday.getTime() + (sec * 1000);\n                var d = new Date(millisecs);\n                tod = pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n            } else if (sec === 86400) {\n                tod = \"24:00:00\";\n            } else if (sec < diffYearSecs) {\n                // ddd:hh:mm:ss\n                var days = sec / diffDaySecs;\n                days = [days > 0 ? Math.floor(days) : Math.ceil(days)];\n                var d = new Date((sec * 1000) + midnightToday.getTime());\n                tod = days.toString() + \"::\" + pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n            } else {\n                // convert to j1950\n                var secMilli = Math.floor(sec * 1000) + j1950;\n                d = new Date(secMilli);\n                tod = d.getUTCFullYear() + \":\" + pad2(d.getUTCMonth() + 1) + \":\" + pad2(d.getUTCDate()) + \"::\" +\n                    pad2(d.getUTCHours()) + \":\" + pad2(d.getUTCMinutes()) + \":\" + pad2(d.getUTCSeconds());\n            }\n        } else {\n            if (sec > negDiffYearSecs) {\n                // -ddd:hh:mm:ss\n                var days = sec / diffDaySecs;\n                days = (days <= 0) ? Math.ceil(days) : Math.floor(days);\n                var d = new Date(Math.abs(sec * 1000) + midnightToday.getTime());\n                if (days === 0) {\n                    days = \"-0\";\n                } else {\n                    days = days.toString();\n                }\n                tod = days + \"::\" + pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n            } else {\n                // convert to j1950\n                var secMilli = Math.floor(sec * 1000) + j1950;\n                d = new Date(secMilli);\n                tod = d.getUTCFullYear() + \":\" + pad2(d.getUTCMonth() + 1) + \":\" + pad2(d.getUTCDate()) + \"::\" +\n                    pad2(d.getUTCHours()) + \":\" + pad2(d.getUTCMinutes()) + \":\" + pad2(d.getUTCSeconds());\n            }\n        }\n\n        // violate legacy behavior, include full precision always\n        // even if we are on a full second boundary, otherwise\n        // on rising/falling rasters it can look like the display\n        // is flickering\n        var fractional = (sec % 1);\n        if (fractional === 0.0) {\n            tod += \".000000\";\n        } else {\n            tod += \".\" + Math.abs(sec % 1).toPrecision(6).slice(2, 8);\n        }\n\n        if (trim_trailing_zeros) {\n            var dloc = tod.indexOf(\".\");\n            var zloc = -1;\n            // If there is a 'decimal point'\n            if (dloc !== -1) {\n                zloc = tod.substr(dloc, tod.length).indexOf(\"0\");\n            }\n            if (zloc !== -1) {\n                tod = tod.substr(0, dloc + zloc);\n            }\n        }\n        return tod;\n\n    };\n\n    /**\n     * The offset to convert midnight Jan 1st 1970 to\n     * midnight Jan 1st 1950.\n     *\n     * @private\n     */\n    var j1950offset = (20.0 * 365.0 + 5.0) * (24 * 3600);\n\n    /**\n     * 0.0 - 86400 == m.sec2tod\n     * >86400 then modulo 86400\n     *   if modulo <= 0 return m.sec2tod(modulo)+86400\n     *   if module <\n     */\n    m.sec2tspec = function(sec, mode, trim_trailing_zeros) {\n        mode = mode || \"\";\n        if (sec >= 0 && sec <= 86400) {\n            return m.sec2tod(sec, trim_trailing_zeros);\n        } else {\n            sec = sec % 86400;\n            if (mode !== \"delta\" && sec <= 0) {\n                return m.sec2tod(sec + 86400, trim_trailing_zeros);\n            } else if (mode === \"delta\" && sec <= 0) {\n                return \"-\" + m.sec2tod(-1 * sec, trim_trailing_zeros);\n            } else {\n                return m.sec2tod(sec, trim_trailing_zeros);\n            }\n        }\n    };\n\n    /**\n     * @param \t{number}\tsec\t\tNumber of seconds.\n     * @return\t{string}\ttod\t\tTime of day\n     */\n\n    m.sec2tod_j1970 = function(sec) {\n        var tod = \"\";\n        var d;\n        if ((sec >= 0) && (sec < 86400)) {\n            // hh:mm:ss\n            d = new Date(sec * 1000);\n            tod = pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n\n        } else if ((sec < 0) && (sec > -31536000)) {\n            // -ddd:hh:mm:ss\n            var days = -1 * (sec / (24 * 60 * 60));\n            d = new Date(sec * 1000);\n            tod = days.toString() + \"::\" + pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n        } else {\n            // convert to j1950\n            d = new Date((sec - j1950offset) * 1000);\n            tod = d.getFullYear() + \":\" + pad2(d.getMonth()) + \":\" + pad2(d.getDate()) + \"::\" +\n                pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n        }\n        if ((sec % 1) !== 0) {\n            tod += \".\" + (sec % 1).toPrecision(6).slice(2, 8);\n        }\n        return tod;\n    };\n\n    m.j1970toj1950 = function(t) {\n        if (t.getTime !== undefined) {\n            return ((t.getTime() / 1000) + j1950offset);\n        } else {\n            return (t + j1950offset);\n        }\n    };\n\n    m.j1950toj1970 = function(t) {\n        return (t - j1950offset);\n    };\n\n    /**\n     * @private\n     */\n    // Throttle calls to \"callback\" routine and ensure that it\n    // is not invoked any more often than \"delay\" milliseconds.\n    //\n    m.throttle = function(delay, callback) {\n        var previousCall = new Date().getTime();\n        return function() {\n            var time = new Date().getTime();\n\n            //\n            // if \"delay\" milliseconds have expired since\n            // the previous call then propagate this call to\n            // \"callback\"\n            //\n            if ((time - previousCall) >= delay) {\n                previousCall = time;\n                callback.apply(null, arguments);\n            }\n        };\n    };\n\n    m.pad = function(value, padamt) {\n        if (!padamt) {\n            return 0;\n        }\n        if (typeof padamt === 'string') {\n            if (padamt.endsWith(\"%\")) {\n                padamt = value * (parseFloat(padamt) / 100.0);\n            } else {\n                padamt = parseFloat(padamt);\n            }\n        }\n\n        return padamt;\n    };\n\n    // Node: Export function\n    module.exports = m;\n\n}());\n","/**\n * @license\n * File: mx.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true*/\n\n//Uses Immediately-invoked Function Expressions (IIFE)s for namespaces\n//See http://addyosmani.com/blog/essential-js-namespacing/ for details.\n\n/**\n * This namespace includes generic graphical routines and functions\n * the manipulate a canvas.\n *\n * @namespace\n */\n\n/* global module */\n/* global require */\n/* global requestAnimFrame */\n/* global cancelAnimFrame */\n\n(function() {\n\n    var tinycolor = require(\"tinycolor2\");\n    var ColorMap = require(\"./ColorMap\");\n    var common = require(\"./common\");\n    var CanvasInput = require(\"./CanvasInput\");\n    var m = require(\"./m\");\n\n    function mx() {}\n\n\n    mx.XW_INIT = -3;\n    mx.XW_DRAW = 1;\n    mx.XW_EVENT = 2;\n    mx.XW_UPDATE = 3;\n    mx.XW_COMMAND = 5;\n    mx.SB_EXPAND = 1;\n    mx.SB_SHRINK = 2;\n    mx.SB_FULL = 3;\n    mx.SB_STEPINC = 4;\n    mx.SB_STEPDEC = 5;\n    mx.SB_PAGEINC = 6;\n    mx.SB_PAGEDEC = 7;\n    mx.SB_DRAG = 8;\n    mx.SB_WHEELUP = 9;\n    mx.SB_WHEELDOWN = 10;\n\n    // Grayscale colors:\n    // \"15%,15%,10%\" - very dark gray\n    // \"25%,25%,20%\" - dark gray\n    // \"35%,35%,30%\" - medium gray\n    // \"40%,40%,35%\" - light medium gray\n    // \"60%,60%,55%\" - light gray\n    // \"70%,70%,65%\" - very light gray\n    // \"80%,80%,75%\" - very very light gray\n\n    mx.L_ArrowLeft = 1001;\n    mx.L_ArrowRight = 1002;\n    mx.L_ArrowUp = 1003;\n    mx.L_ArrowDown = 1004;\n    mx.L_dashed = 801;\n    mx.GBorder = 3; // TODO Is this a good original value to use...?\n    mx.L_RModeOff = 900;\n    mx.L_RModeOn = 901;\n    mx.L_PixelSymbol = 1;\n    mx.L_CircleSymbol = 2;\n    mx.L_SquareSymbol = 3;\n    mx.L_PlusSymbol = 4;\n    mx.L_XSymbol = 5;\n    mx.L_TriangleSymbol = 6;\n    mx.L_ITriangleSymbol = 7;\n    mx.L_HLineSymbol = 8;\n    mx.L_VLineSymbol = 9;\n\n    /**\n     * Set to True for a retro look that would make hipsters proud\n     */\n    mx.LEGACY_RENDER = false;\n\n    /**\n     * The zoom stack structure object\n     * @private\n     */\n    mx.STKSTRUCT = function() {\n        this.xmin = 0.0; // real world val at x1(origin=1,4) or x2(origin=2,4)\n        this.xmax = 0.0; // real world val at x2(origin=1,4) or x1(origin=2,4)\n        this.ymin = 0.0; // real world val at y2(origin=1,2) or y1(origin=3,4)\n        this.ymax = 0.0; // real world val at y1(origin=1,2) or y2(origin=3,4)\n        this.xscl = 0.0; // ratio of X real world units to pixel units\n        this.yscl = 0.0; // ratio of Y real world units to pixel units\n        this.x1 = 0; // left edge relative to window (pixels)\n        this.y1 = 0; // top edge relative to window (pixels)\n        this.x2 = 0; // right edge relative to window (pixels)\n        this.y2 = 0; // bottom edge relative to window (pixels)\n    };\n\n    /**\n     * The scrollbar structure object used to hold state about scrolling\n     * @private\n     */\n    mx.SCROLLBAR = function() {\n        this.flag = null; // int_4 // flag field for MX$SCROLLBAR routine\n        this.action = null; // int_4 // returned action performed (XW_EVENT)\n        this.smin = null;\n        this.srange = null; // real_8 // real_8 // min and range values of scroll\n        // bar\n        this.tmin = null;\n        this.trange = null; // real_8 // real_8 // min and range values of trough\n        this.step = null; // real_8 // ratios of smin to move for step\n        this.page = null; // real_8 // ratios of smin to move for page\n        this.scale = null; // real_8 // ratio to scale by for expand/shrink\n        this.dragoutline = null; // bool_4 // FALSE = smooth scroll, TRUE = drag &\n        // drop\n        this.initial_pause = null; // real_4\n        this.repeat_pause = null; // real_4\n\n        this.x = null;\n        this.y = null;\n        this.w = null;\n        this.h = null; // int_2 // These fields are private and are to be\n        this.s1 = null;\n        this.sw = null;\n        this.swmin = null;\n        this.soff = null; // int_2 // set through other interfaces\n        this.a1 = null;\n        this.a2 = null;\n        this.arrow = null; // int_2\n        this.mxevent = null; // bool_1\n        this.origin = null; // int_1\n        this.repeat_count = null; // int_4\n    };\n\n    /**\n     * @method WARPBOX\n     * @private\n     */\n    function WARPBOX() {\n        this.xo = 0;\n        this.yo = 0;\n        this.xl = 0;\n        this.yl = 0;\n        this.xmin = 0;\n        this.xmax = 0;\n        this.ymin = 0;\n        this.ymax = 0;\n        this.func = undefined;\n        this.mode = undefined;\n    }\n\n    /**\n     * Defines 2 canvas layers, canvas and wid_canvas\n     * @method MX\n     * @param element\n     * @private\n     */\n    function MX(element) { // this is where the canvases are setup/defined\n        this.root = element;\n\n        // Create a div to hold all the various canvas layers\n        this.parent = document.createElement('div');\n        this.parent.style.position = \"relative\";\n        //this.parent.style.height = \"100%\"; //element.clientHeight;\n        //this.parent.style.width = \"100%\"; //element.clientHeight;\n        //this.parent.clientWidth = element.clientWidth;\n        this.parent.width = element.clientWidth;\n        this.parent.height = element.clientHeight;\n        element.appendChild(this.parent);\n\n        // Create the canvas that will hold the plot\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0px\";\n        this.canvas.style.left = \"0px\";\n        this.canvas.width = element.clientWidth;\n        this.canvas.height = element.clientHeight;\n\n        this.parent.appendChild(this.canvas);\n        this.active_canvas = this.canvas;\n\n        // This canvas holds all widgets and reacts to mouse events\n        this.wid_canvas = document.createElement('canvas');\n        this.wid_canvas.style.position = \"absolute\";\n        this.wid_canvas.style.top = \"0px\";\n        this.wid_canvas.style.left = \"0px\";\n        this.wid_canvas.style.zIndex = 1;\n        this.wid_canvas.width = element.clientWidth;\n        this.wid_canvas.height = element.clientHeight;\n\n        this.parent.appendChild(this.wid_canvas);\n\n        //if ((this.canvas.height <= 0) || (this.canvas.width <= 0)) {\n        //\tthrow \"Plot could not be instantiated correctly; did you specify a size for your placeholder?\";\n        //}\n\n        this.font = undefined; // the full calculated font string\n        this.font_family = \"Courier New, monospace\"; // default font family\n        this.font_width = 8;\n        this.font_scaled = false;\n        this.text_w = 0; // text width\n        this.text_h = 0; // text height\n        this.level = 0; // current zoom level\n        this.width = this.parent.width; // width of window\n        this.height = this.parent.height; // height of window\n        this.xpos = 0; // x-pixel loc of mouse during event\n        this.ypos = 0; // y-pixel loc of mouse during event\n        this.xmrk = 0.0; // absc coord of mark\n        this.ymrk = 0.0;\n        this.origin = 1;\n        this.stk = [new mx.STKSTRUCT()]; // zoom stack\n\n        mx.setbgfg(this, \"black\", \"white\");\n\n        // Custom stuff for the Javascript implementation\n        this.event_cb = undefined;\n        this.warpbox = undefined;\n\n        // draw_mode flags;\n        this.rmode = false;\n        this.linewidth = 1;\n        this.style = undefined;\n        this.xi = false;\n\n        // Button Eventing variables\n        this.button_release = 0;\n        this.button_press = 0;\n        this.state_mask = 0;\n\n        // Specifies display field\n        this.l = 0;\n        this.r = this.width;\n        this.t = 0;\n        this.b = this.height;\n\n        // Scrollbar state\n        this.scrollbar_x = new mx.SCROLLBAR();\n        this.scrollbar_y = new mx.SCROLLBAR();\n\n        // Prompt mode state variable\n        this.prompt = undefined;\n\n        // Colormap\n        this.pixel = undefined;\n\n        // Render Canvas\n        this._renderCanvas = document.createElement(\"canvas\");\n        // Syncronous render should only be used for testing\n        this._syncRender = false;\n    }\n\n    /* This is used as a helper function for defining highlight ranges/\n     */\n\n    function in_fill_range(ele, range_begin, range_end) {\n        var left = false;\n        var right = false;\n\n        if (ele >= range_begin) {\n            left = true;\n        }\n\n\n        if (ele <= range_end) {\n            right = true;\n        }\n\n        if (left === true && right === true) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Create Canvas and it's Mx structure and functions\n     * @param {element}\telement \tReference to a DOM window element\n     */\n    /* Step #5*/\n    mx.open = function(element) {\n        var Mx = new MX(element); /* Step #6*/\n\n        Mx.wid_canvas.oncontextmenu = function(event) {\n            event.preventDefault();\n            return false;\n        };\n\n        this._ctx = Mx.active_canvas.getContext(\"2d\");\n\n        Mx.onmousemove = (function(Mx) {\n            return function(e) {\n                var rect = e.target.getBoundingClientRect();\n                // Screen x/y of mouse\n                Mx.x = e.x || e.clientX;\n                Mx.y = e.y || e.clientY;\n                // Plot relative x/y of mouse\n                Mx.xpos = (e.offsetX === undefined) ? (e.pageX - rect.left - window.scrollX) : e.offsetX;\n                Mx.ypos = (e.offsetX === undefined) ? (e.pageY - rect.top - window.scrollY) : e.offsetY;\n\n                //\t\t\t\tMx.xpos = (e.offsetX === undefined) ? e.layerX : e.offsetX;\n                //\t\t\t\tMx.ypos = (e.offsetY === undefined) ? e.layerY : e.offsetY;\n\n                if (Mx.warpbox) {\n                    if ((e.ctrlKey || e.metaKey) && (Mx.warpbox.alt_style !== undefined)) {\n                        Mx.warpbox.style = Mx.warpbox.alt_style;\n                    } else {\n                        Mx.warpbox.style = Mx.warpbox.def_style;\n                    }\n                    mx.redraw_warpbox(Mx);\n                }\n\n                mx.widget_callback(Mx, e);\n            };\n        })(Mx);\n\n        Mx.onmouseup = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    mx.onWidgetLayer(Mx, function() {\n                        mx.erase_window(Mx);\n                    });\n\n                    var old_warpbox = Mx.warpbox;\n                    Mx.warpbox = undefined;\n\n                    if (event.which === 1 || event.which === 3) {\n                        if (old_warpbox.func) {\n                            var xo = old_warpbox.xo;\n                            var yo = old_warpbox.yo;\n                            var xl = old_warpbox.xl;\n                            var yl = old_warpbox.yl;\n\n                            if (old_warpbox.mode === \"vertical\") {\n                                xo = Mx.l;\n                                xl = Mx.r;\n                            } else if (old_warpbox.mode === \"horizontal\") {\n                                yo = Mx.t;\n                                yl = Mx.b;\n                            } // else \"box\"\n                            old_warpbox.func(event, xo, yo, xl, yl,\n                                old_warpbox.style.return_value,\n                                old_warpbox.mode);\n                        }\n                    }\n\n                }\n                mx.widget_callback(Mx, event);\n            };\n        })(Mx);\n\n        Mx.onmousedown = (function(Mx) {\n            return function(event) {\n                event.preventDefault();\n                mx.widget_callback(Mx, event);\n                return false;\n            };\n        })(Mx);\n\n        Mx.onkeydown = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    var keyCode = common.getKeyCode(event);\n                    if (((keyCode === 17) || // Ctrl\n                            (keyCode === 224) || // Mac Command Firefox\n                            (keyCode === 91) || // Safari/Chrome Left-command\n                            (keyCode === 93)) && // Safari/Chrome Right-command\n                        (Mx.warpbox.style !== Mx.warpbox.alt_style)) {\n                        Mx.warpbox.style = Mx.warpbox.alt_style;\n                        mx.redraw_warpbox(Mx);\n                    }\n                }\n\n                mx.widget_callback(Mx, event);\n            };\n        })(Mx);\n\n        Mx.onkeyup = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    var keyCode = common.getKeyCode(event);\n                    if (((keyCode === 17) || // Ctrl\n                            (keyCode === 224) || // Mac Command Firefox\n                            (keyCode === 91) || // Safari/Chrome Left-command\n                            (keyCode === 93)) && // Safari/Chrome Right-command\n                        (Mx.warpbox.style !== Mx.warpbox.def_style)) {\n                        Mx.warpbox.style = Mx.warpbox.def_style;\n                        mx.redraw_warpbox(Mx);\n                    }\n                }\n            };\n        })(Mx);\n\n        Mx.ontouchend = (function(Mx) {\n            return function(event) {\n                Mx.onmouseup({\n                    which: 1\n                });\n            };\n        })(Mx);\n\n        Mx.ontouchmove = (function(Mx) {\n            return function(event) {\n                // Compute the total offset - consider caching offset and only calculating on resize\n                var element = Mx.canvas;\n                var offsetX = 0;\n                var offsetY = 0;\n                if (element.offsetParent !== undefined) {\n                    do {\n                        offsetX += element.offsetLeft;\n                        offsetY += element.offsetTop;\n                    } while ((element = element.offsetParent));\n                }\n\n                Mx.xpos = event.targetTouches[0].pageX - offsetX;\n                Mx.ypos = event.targetTouches[0].pageY - offsetY;\n                mx.redraw_warpbox(Mx);\n            };\n        })(Mx);\n\n        mx.enableListeners(Mx);\n\n        return Mx;\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.enableListeners = function(Mx) {\n        mx.addEventListener(Mx, \"mousemove\", Mx.onmousemove, false);\n        window.addEventListener(\"mouseup\", Mx.onmouseup, false);\n        mx.addEventListener(Mx, \"mousedown\", Mx.onmousedown, false);\n        window.addEventListener(\"keydown\", Mx.onkeydown, false);\n        window.addEventListener(\"keyup\", Mx.onkeyup, false);\n        //mx.addEventListener(Mx, \"touchend\", Mx.ontouchend);\n        //mx.addEventListener(Mx, 'touchmove', Mx.ontouchmove, false);\n\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.disableListeners = function(Mx) {\n        mx.removeEventListener(Mx, \"mousemove\", Mx.onmousemove, false);\n        window.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n        mx.removeEventListener(Mx, \"mousedown\", Mx.onmousedown, false);\n        window.removeEventListener(\"keydown\", Mx.onkeydown, false);\n        window.removeEventListener(\"keyup\", Mx.onkeyup, false);\n        //mx.addEventListener(Mx, \"touchend\", Mx.ontouchend);\n        //mx.addEventListener(Mx, 'touchmove', Mx.ontouchmove, false);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @param callback\n     * @param useCapture\n     * @private\n     */\n    mx.addEventListener = function(Mx, event, callback, useCapture) {\n        return Mx.wid_canvas.addEventListener(event, callback, useCapture);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @param callback\n     * @param useCapture\n     * @private\n     */\n    mx.removeEventListener = function(Mx, event, callback, useCapture) {\n        return Mx.wid_canvas.removeEventListener(event, callback, useCapture);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @private\n     */\n    mx.dispatchEvent = function(Mx, event) {\n        return Mx.wid_canvas.dispatchEvent(event);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.onWidgetLayer = function(Mx, func) {\n        mx.onCanvas(Mx, Mx.wid_canvas, func);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.onCanvas = function(Mx, canvas, func) {\n        var current_active = Mx.active_canvas;\n        Mx.active_canvas = canvas;\n        try {\n            if (func) {\n                return func();\n            }\n        } finally {\n            Mx.active_canvas = current_active;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.withWidgetLayer = function(Mx, func) {\n        var f = function() {\n            mx.onWidgetLayer(Mx, func);\n        };\n        return f;\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.render = function(Mx, func) {\n        if (!func) {\n            return;\n        }\n\n        var active_canvas = Mx.active_canvas;\n\n        if (Mx._syncRender === false) {\n            if (!active_canvas._animationFrameHandle) {\n                active_canvas._animationFrameHandle = requestAnimFrame(function() {\n                    active_canvas._animationFrameHandle = undefined;\n                    func();\n                });\n            }\n        } else {\n            func();\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param value\n     * @private\n     */\n    mx.fullscreen = function(Mx, value) {\n        if (value === undefined) {\n            value = !Mx.fullscreen;\n        }\n        if (value) {\n            Mx.fullscreen = {\n                position: Mx.root.style.position,\n                height: Mx.root.style.height,\n                width: Mx.root.style.width,\n                left: Mx.root.style.left,\n                top: Mx.root.style.top,\n                zIndex: Mx.root.style.zIndex\n            };\n            Mx.root.style.position = \"fixed\";\n            Mx.root.style.height = \"100%\";\n            Mx.root.style.width = \"100%\";\n            Mx.root.style.left = \"0px\";\n            Mx.root.style.top = \"0px\";\n            Mx.root.style.zIndex = 16777271; // http://www.puidokas.com/max-z-index/\n        } else {\n            Mx.root.style.position = Mx.fullscreen.position;\n            Mx.root.style.height = Mx.fullscreen.height;\n            Mx.root.style.width = Mx.fullscreen.width;\n            Mx.root.style.left = Mx.fullscreen.left;\n            Mx.root.style.top = Mx.fullscreen.top;\n            Mx.root.style.zIndex = Mx.fullscreen.zIndex;\n            Mx.fullscreen = undefined;\n        }\n        mx.checkresize(Mx);\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.checkresize = function(Mx) {\n        var canvas = Mx.canvas;\n        if ((canvas.height !== Mx.root.clientHeight) || (canvas.width !== Mx.root.clientWidth)) {\n\n            Mx.height = Mx.root.clientHeight;\n            Mx.width = Mx.root.clientWidth;\n\n            Mx.canvas.height = Mx.height;\n            Mx.canvas.width = Mx.width;\n            Mx.wid_canvas.height = Mx.height;\n            Mx.wid_canvas.width = Mx.width;\n\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.invertbgfg = function(Mx) {\n        mx.setbgfg(Mx, Mx.fg, Mx.bg, !Mx.xi);\n    };\n\n    /**\n     * @param color1\n     * @param color2\n     * @param color3\n     * @private\n     */\n    mx.mixcolor = function(color1, color2, perc1to2) {\n        var c1 = tinycolor(color1).toRgb();\n        var c2 = tinycolor(color2).toRgb();\n        var mix = 1.0 - perc1to2;\n        c2.r = c1.r * mix + c2.r * perc1to2;\n        c2.g = c1.g * mix + c2.g * perc1to2;\n        c2.b = c1.b * mix + c2.b * perc1to2;\n        return tinycolor(c2).toHexString(true);\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param fillStyle\n     * @private\n     */\n    mx.linear_gradient = function(Mx, x, y, w, h, fillStyle) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        var step_size = 1.0 / fillStyle.length;\n        var lingrad = ctx.createLinearGradient(x, y, w, h);\n        for (var i = 0; i < fillStyle.length - 1; i++) {\n            lingrad.addColorStop(step_size * (i), fillStyle[i]);\n        }\n        lingrad.addColorStop(1, fillStyle[fillStyle.length - 1]);\n        return lingrad;\n    };\n\n    /**\n     * Set's the background and foreground\n     * xwfg : usually used for text on a widget\n     * xwbg : background for a widget\n     * @param Mx\n     * @param bg\n     * @param fg\n     * @param xi\n     * @private\n     */\n    mx.setbgfg = function(Mx, bg, fg, xi) {\n        Mx.bg = tinycolor(bg).toHexString();\n        Mx.fg = tinycolor(fg).toHexString();\n        Mx.xi = tinycolor(xi).toHexString();\n\n        if ((tinycolor.equals(Mx.bg, \"black\")) && (tinycolor.equals(Mx.fg, \"white\"))) { ///mmm\n            Mx.xwfg = Mx.fg; // X-Widget Foreground color\n            Mx.xwbg = \"rgb(35%,35%,30%)\"; // X-Widget Background color\n            Mx.xwts = \"rgb(60%,60%,55%)\"; // X-Widget top shadow color\n            Mx.xwbs = \"rgb(25%,25%,20%)\"; // X-Widget bottom shadow color\n            Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n            Mx.xwlo = \"rgb(15%,15%,10%)\"; // X-Widget top shadow color\n            Mx.hi = Mx.xwts; //  Highlight color\n        } else if ((tinycolor.equals(Mx.bg, \"white\")) && (tinycolor.equals(Mx.fg, \"black\"))) {\n            Mx.xwfg = Mx.fg; // X-Widget Foreground color\n            Mx.xwbg = \"rgb(60%,60%,55%)\"; // X-Widget Background color\n            Mx.xwts = \"rgb(80%,80%,75%)\"; // X-Widget top shadow color\n            Mx.xwbs = \"rgb(40%,40%,35%)\"; // X-Widget bottom shadow color\n            Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n            Mx.xwlo = \"rgb(70%,70%,65%)\";\n            Mx.hi = Mx.xwbs; //  Highlight color\n        } else {\n            var clr = tinycolor(Mx.bg).toRgb();\n            var hsp = Math.sqrt( // HSP equation from http://alienryderflex.com/hsp.html\n                0.299 * (clr.r * clr.r) +\n                0.587 * (clr.g * clr.g) +\n                0.114 * (clr.b * clr.b)\n            );\n            if (hsp > 127.5) { // light\n                Mx.xwfg = \"black\";\n                Mx.xwbg = \"rgb(60%,60%,55%)\"; // X-Widget Background color\n                Mx.xwts = \"rgb(80%,80%,75%)\"; // X-Widget top shadow color\n                Mx.xwbs = \"rgb(40%,40%,35%)\"; // X-Widget bottom shadow color\n                Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n                Mx.xwlo = \"rgb(70%,70%,65%)\";\n                Mx.hi = Mx.xwts;\n            } else { // dark\n                Mx.xwfg = \"white\";\n                Mx.xwbg = \"rgb(35%,35%,30%)\"; // X-Widget Background color\n                Mx.xwts = \"rgb(60%,60%,55%)\"; // X-Widget top shadow color\n                Mx.xwbs = \"rgb(25%,25%,20%)\"; // X-Widget bottom shadow color\n                Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n                Mx.xwlo = \"rgb(15%,15%,10%)\"; // X-Widget top shadow color\n                Mx.hi = Mx.xwbs;\n            }\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param theme\n     * @private\n     */\n    mx.settheme = function(Mx, theme) {\n        Mx.bg = theme.bg;\n        Mx.fg = theme.fg;\n        Mx.xi = theme.xi;\n        Mx.xwfg = theme.xwfg;\n        Mx.xwbg = theme.xwbg;\n        Mx.xwts = theme.xwts;\n        Mx.xwbs = theme.xwbs;\n        Mx.xwlo = theme.xwlo;\n        Mx.hi = theme.hi;\n    };\n\n    /**\n     * Close graphics windows.\n     * @param Mx\n     */\n    mx.close = function(Mx) {\n        var canvas = Mx.wid_canvas;\n        canvas.removeEventListener(\"mousemove\", Mx.onmousemove, false);\n        //canvas.removeEventListener(\"touchmove\", Mx.ontouchmove);\n        canvas.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n        //canvas.addEventListener(\"touchend\", Mx.onmouseup);\n\n        if (Mx.parent && Mx.parent.parentNode) {\n            Mx.parent.parentNode.removeChild(Mx.parent);\n        }\n    };\n\n    /**\n     * Draws and implements a scrollbar\n     * @param Mx\n     * @param sb\n     * @param xs\n     * @param xe\n     * @param ys\n     * @param ye\n     * @param out\n     * @param qs\n     * @param qe\n     * @param mouseEvent\n     * @param scrollbarState\n     */\n    //\n    // ~= MX$SCROLLBAR\n    //\n    mx.scrollbar = function(Mx, sb, xs, xe, ys, ye, out, qs, qe, mouseEvent, scrollbarState) {\n        // Param types:\n        // mx.SCROLLBAR* sb,\n        // int xs, int xe, int ys, int ye,\n        // real* ps, real* pe, real qs, real qe\n\n        var mode; // an int\n        var action; // an int\n        var origin; // an int\n        var stat = 0; // an int\n\n        var step; // a real_8\n        var page; // a real_8\n        var scale; // a real_8\n        var sblocal = new mx.SCROLLBAR(); // a SCROLLBAR\n\n        mode = (sb.flag !== undefined ? sb.flag : sb); // REFACTOR - if user sends in a number instead of a scrollbar\n        action = Math.abs(mode);\n\n        if (ye - ys > xe - xs) {\n            if (Mx.origin < 3) {\n                origin = 2; /* inverted Y scrollbar */\n            } else {\n                origin = 4; /* normal Y scrollbar */\n            }\n        } else {\n            if (Mx.origin & 2) {\n                origin = 3; /* inverted X scrollbar */\n            } else {\n                origin = 1; /* normal X scrollbar */\n            }\n        }\n\n        if (action < 10) {\n            sb = sblocal; /* use local SB structure */\n        }\n        if (action < 10 || sb.action === 0) {\n            /* re-init the SB structure */\n            mx.scroll(Mx, sb, mx.XW_INIT, undefined, scrollbarState);\n            sb.flag = mode;\n            /* Turn off repeated event handling in mx_scroll */\n            sb.initial_pause = -1.0;\n            mx.scroll_loc(sb, xs, ys, xe - xs + 1, ye - ys + 1, origin, scrollbarState);\n        }\n        sb.srange = out.pe - out.ps;\n\n        switch (action) {\n            case 0:\n                step = page = scale = 1.0;\n                break;\n            case 1:\n            case 11:\n                step = page = 0.9 * sb.srange;\n                scale = 2.0;\n                break;\n            case 2:\n            case 12:\n                step = 0.1 * sb.srange;\n                page = 9 * step;\n                scale = 2.0;\n                break;\n            case 3:\n            case 13:\n                step = 1.0;\n                page = sb.srange - 1.0;\n                scale = 1.0;\n                break;\n            default:\n                return 0;\n        }\n        mx.scroll_vals(sb, out.ps, sb.srange, qs, qe - qs, step, page, scale, scrollbarState);\n\n        if (mode === 0) {\n            mx.scroll(Mx, sb, mx.XW_DRAW, undefined, undefined); // No need for a mouse event\n        } else {\n            if (mx.scroll(Mx, sb, mx.XW_EVENT, mouseEvent, scrollbarState)) {\n                if (out.ps !== sb.smin) {\n                    out.ps = sb.smin;\n                    stat += 1;\n                }\n                if (out.pe !== sb.smin + sb.srange) {\n                    out.pe = sb.smin + sb.srange;\n                    stat += 2;\n                }\n            }\n        }\n        return stat;\n    };\n\n    /**\n     * Instantiate scrollbar on graphics window\n     * @param Mx\n     * @param sv\n     * @param op\n     * @param mouseEvent\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll\n    //\n    mx.scroll = function(Mx, sv, op, mouseEvent, scrollbarState) {\n        var btn; // an int\n        var smin; // a real_8\n        var srange; // a real_8\n        var s; // an int_4\n\n        if (sv === undefined) {\n            return false; /* an mx.SCROLLBAR */\n        }\n\n        switch (op) {\n            case mx.XW_INIT:\n                mx.scroll_loc(sv, 0, 0, Mx.width, 20, 1, scrollbarState);\n                mx.scroll_vals(sv, 0.0, 10.0, 0.0, 100.0, 1.0, 10.0, 1.0, scrollbarState);\n                sv.flag = 0;\n                sv.action = 0;\n                sv.initial_pause = 0.25;\n                sv.repeat_pause = 0.05;\n                sv.mxevent = true;\n                sv.repeat_count = 0;\n                break;\n            case mx.XW_EVENT:\n                /*  Determine which button, if any, was pressed/released\n                 */\n                btn = 0;\n                if (sv.mxevent) { // TODO make sure mxevent is set properly when an event goes off - how is this supposed to be set?\n                    btn = (Mx.button_release) ? -Mx.button_release : Mx.button_press;\n                } else if (mouseEvent.type === \"mousedown\" || mouseEvent.type === \"mouseup\") {\n                    // TODO Does this case ever happen?\n                    switch (mouseEvent.which) {\n                        case 1:\n                            btn = 1;\n                            break;\n                        case 2:\n                            btn = 2;\n                            break;\n                        case 3:\n                            btn = 3;\n                            break;\n                            /* Add these cases for the mouse wheel */\n                        case 4:\n                            btn = 4;\n                            break;\n                        case 5:\n                            btn = 5;\n                            break;\n                    }\n                    if (mouseEvent.type === \"mouseup\") {\n                        btn = -btn;\n                    }\n                } else if (mouseEvent.type === \"mousewheel\" || mouseEvent.type === \"DOM-MouseScroll\") {\n                    // TODO Does this case ever happen?\n                    if (mouseEvent.wheelDelta && mouseEvent.wheelDelta > 0) {\n                        btn = 4; // TODO is 4 right for negative scroll (aka a scroll forwards away from the user)\n                        // TODO Do we need to worry about a release here?\n                    } else if (mouseEvent.wheelDelta && mouseEvent.wheelDelta < 0) {\n                        btn = 5; // TODO is 5 right for negative scroll (aka a scroll backward towards the user)\n                        // TODO Do we need to worry about a release here?\n                    }\n                }\n\n                if (sv.action === 0) {\n                    /*  First-time action -- only interested in button presses\n                     *  1 or 2 within our bounds\n                     */\n                    /* If scroll wheel, pretend we're on vertical scroll bar */\n                    if (btn === 4 || btn === 5) {\n                        Mx.xpos = sv.x;\n                    }\n\n\n                    /* Button !=1,2,4,5 OR NOT on scroll bar */\n                    if ((btn !== 1 && btn !== 2 && btn !== 4 && btn !== 5) ||\n                        Mx.xpos < sv.x || Mx.ypos < sv.y ||\n                        Mx.xpos > sv.x + sv.w || Mx.ypos > sv.y + sv.h) {\n                        return false;\n                    }\n                } else if (btn < 0) {\n                    /* Any button release within a repeated action will make us exit */\n                    sv.action = sv.repeat_count = 0; // TODO Update scrollbarState's action?\n                    return true;\n                }\n\n                /*  Compute s, the offset in pixels from the 'origin' of\n                 *  the scrollbar's on-screen region.\n                 */\n                if (sv.origin & 1) {\n                    s = Mx.xpos - sv.x;\n                    if (sv.origin & 2) {\n                        s = sv.w - s;\n                    }\n                } else {\n                    s = Mx.ypos - sv.y;\n                    if (sv.origin <= 2) {\n                        s = sv.h - s;\n                    }\n                }\n\n                /*  Determine action */\n                if (sv.action === 0) {\n                    /* First-time action */\n\n                    sv.repeat_count = 0; // TODO Is repeat count necessary any more?\n\n                    var scrollReal2PixOut = mx.scroll_real2pix(sv);\n                    // UPDATE SCROLLBAR STATE as well\n                    sv.s1 = scrollbarState.s1 = scrollReal2PixOut.s1;\n                    sv.sw = scrollbarState.sw = scrollReal2PixOut.sw;\n                    sv.soff = scrollbarState.soff = s - sv.s1;\n                    if (sv.trange === 0.0) {\n                        // UPDATE SCROLLBAR STATE as well\n                        sv.smin = scrollbarState.smin = sv.tmin;\n                        sv.srange = scrollbarState.srange = 0.0;\n                    } else switch (btn) {\n                        case 1:\n                            if (s > sv.a1 && s < sv.a2) {\n                                /* on scroll trough */\n                                sv.action = (sv.soff > 0) ? mx.SB_PAGEINC : mx.SB_PAGEDEC;\n                            } else {\n                                /* on arrows */\n                                sv.action = (sv.soff > 0) ? mx.SB_STEPINC : mx.SB_STEPDEC;\n                            }\n                            break;\n                        case 4:\n                            sv.action = mx.SB_WHEELUP;\n                            break;\n                        case 5:\n                            sv.action = mx.SB_WHEELDOWN;\n                            break;\n                    }\n                } else {\n                    /* We're repeating sv.action */\n                    switch (sv.action) {\n                        case mx.SB_WHEELUP:\n                        case mx.SB_WHEELDOWN:\n                        case mx.SB_EXPAND:\n                            /* we don't want to repeat these */\n                        case mx.SB_SHRINK:\n                        case mx.SB_FULL:\n                            sv.action = sv.repeat_count = 0;\n                    }\n                }\n                /* FALL THROUGH!!! */\n                /* jshint -W086 */\n            case mx.XW_COMMAND:\n                /* jshint +W086 */\n\n                smin = sv.smin;\n                srange = sv.srange;\n\n                switch (sv.action) {\n                    case mx.SB_STEPINC:\n                        smin += sv.step;\n                        break;\n                    case mx.SB_STEPDEC:\n                        smin -= sv.step;\n                        break;\n                    case mx.SB_PAGEINC:\n                        smin += sv.page;\n                        break;\n                    case mx.SB_PAGEDEC:\n                        smin -= sv.page;\n                        break;\n                    case mx.SB_FULL:\n                        smin = sv.tmin;\n                        srange = sv.trange;\n                        break;\n                    case mx.SB_EXPAND:\n                        srange = srange * sv.scale;\n                        if (smin <= 0 && smin + sv.srange >= 0) {\n                            smin *= sv.scale;\n                        } else {\n                            smin -= (srange - sv.srange) / 2.0;\n                        }\n                        break;\n                    case mx.SB_SHRINK:\n                        srange = srange / sv.scale;\n                        if (smin < 0 && smin + sv.srange >= 0) {\n                            smin += srange / sv.scale; /* Plot crosses axis */\n                        } else if (smin === 0 && smin + sv.srange >= 0) {\n                            smin = srange / sv.scale; /* Plot touches axis */\n                        } else {\n                            smin += (sv.srange - srange) / 2.0; /* Plot is completely contained on positive side of axis */\n                        }\n                        break;\n                        /* The mouse wheel needs to scroll 1 page at a time, if you want an\n\t\t           application to scroll differently, change sv.page with\n\t\t           mx_scroll_vals in the application code */\n                    case mx.SB_WHEELUP:\n                        smin -= sv.page;\n                        break;\n                    case mx.SB_WHEELDOWN:\n                        smin += sv.page;\n                        break;\n                }\n\n                if (sv.trange > 0) {\n                    smin = Math.max(sv.tmin, Math.min(smin, sv.tmin + sv.trange - srange));\n                    srange = Math.min(srange, sv.trange);\n                } else {\n                    smin = Math.min(sv.tmin, Math.max(smin, sv.tmin + sv.trange - srange));\n                    srange = Math.max(srange, sv.trange);\n                }\n\n                if (sv.smin === smin && sv.srange === srange) {\n                    if (sv.action !== mx.SB_DRAG) {\n                        sv.action = sv.repeat_count = 0;\n                    }\n                } else {\n                    // UPDATE SCROLLBAR STATE as well\n                    sv.smin = scrollbarState.smin = smin;\n                    sv.srange = scrollbarState.srange = srange;\n                    sv.repeat_count++;\n                }\n\n                if (op === mx.XW_COMMAND) {\n                    mx.scroll(Mx, sv, mx.XW_UPDATE, undefined);\n                    sv.action = 0;\n                }\n\n                break;\n            case mx.XW_DRAW:\n            case mx.XW_UPDATE:\n                mx.redrawScrollbar(sv, Mx, op);\n\n        } /* switch */\n        return true;\n    };\n\n    /**\n     * Specify location and orientation of a scrollbar\n     * @param sv\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param origin\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll_loc\n    //\n    mx.scroll_loc = function(sv, x, y, w, h, origin, scrollbarState) {\n        // UPDATE local scrollbar and SCROLLBAR STATE\n        if (sv === undefined) {\n            return; /* mx.SCROLLBAR */\n        }\n        sv.x = scrollbarState.x = x; // int\n        sv.y = scrollbarState.y = y; // int\n        sv.w = scrollbarState.w = w; // int\n        sv.h = scrollbarState.h = h; // int\n        sv.origin = scrollbarState.origin = Math.max(1, Math.min(4, origin)); // int\n\n        if (sv.origin & 1) {\n            sv.a2 = scrollbarState.a2 = sv.w;\n            sv.arrow = scrollbarState.arrow = Math.min(m.trunc((sv.w - m.trunc(2 * mx.GBorder)) / 3), sv.h + mx.GBorder);\n        } else {\n            sv.a2 = scrollbarState.a2 = sv.h;\n            sv.arrow = scrollbarState.arrow = Math.min(m.trunc((sv.h - m.trunc(2 * mx.GBorder)) / 3), sv.w + mx.GBorder);\n        }\n        sv.a1 = scrollbarState.a1 = sv.arrow + mx.GBorder;\n        sv.a2 -= sv.arrow + mx.GBorder;\n        scrollbarState.a2 -= sv.arrow + mx.GBorder;\n        sv.swmin = scrollbarState.swmin = Math.min(10, sv.a2 - sv.a1);\n        sv.s1 = scrollbarState.s1 = 0;\n        sv.sw = scrollbarState.sw = 0;\n        sv.action = scrollbarState.action = 0;\n    };\n\n    /**\n     * Set coordinates in scrollbar structure\n     * @param sv\n     * @param smin\n     * @param srange\n     * @param tmin\n     * @param trange\n     * @param step\n     * @param page\n     * @param scale\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll_vals\n    //\n    mx.scroll_vals = function(sv, smin, srange, tmin, trange, step, page, scale, scrollbarState) {\n        // UPDATE SCROLLBAR STATE as well\n        if (sv === undefined) {\n            return; /* an mx.SCROLLBAR */\n        }\n        sv.smin = scrollbarState.smin = smin;\n        sv.srange = scrollbarState.srange = srange;\n        sv.tmin = scrollbarState.tmin = tmin;\n        sv.trange = scrollbarState.trange = trange;\n        sv.step = scrollbarState.step = step;\n        sv.page = scrollbarState.page = page;\n        sv.scale = scrollbarState.scale = Math.max(scale, 1.0);\n    };\n\n    /**\n     * Draw single symbol centered at pixel (x,y)\n     * @param Mx\n     * @param ic\n     * @param x\n     * @param y\n     * @param symbol\n     * @param rr\n     */\n    //\n    // ~= MX$DRAW_SYMBOL\n    //\n    mx.draw_symbol = function(Mx, ic, x, y, symbol, rr, n) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var r = 0; // int\n        var d = 0; // int\n        var d2 = 0; // int\n        var rmode = false; // bool\n        var fill = false; // bool\n        var tri = []; // XPoint array of size 4\n        for (var cnt = 0; cnt < 4; cnt++) { // initializing 4 points in the array\n            tri[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var c = ''; // char\n\n        fill = rr < 0;\n        r = Math.abs(rr);\n        d = r * 2;\n\n        // Set the foreground color\n        ctx.fillStyle = ic;\n        ctx.strokeStyle = ic;\n\n        if (typeof symbol === \"function\") {\n            symbol(ctx, n, x, y);\n        } else {\n            switch (symbol) {\n                case mx.L_CircleSymbol:\n                    ctx.beginPath();\n                    if (fill) {\n                        ctx.arc(x, y, r, 0, 360); // draw arc\n                        ctx.fill(); // fill in the area of the arc\n                    } else {\n                        ctx.arc(x, y, r, 0, 360);\n                        ctx.stroke(); // just draw the arc's outline\n                    }\n                    break;\n                case mx.L_SquareSymbol:\n                    if (fill) {\n                        fill_rectangle(ctx, x - r, y - r, d, d);\n                    } else {\n                        draw_rectangle(ctx, x - r, y - r, d, d);\n                    }\n                    break;\n                case mx.L_PixelSymbol:\n                    d = 1; // d = 2*GMaxLines; // TODO Do we care about a maximum number of lines?\n                    // No native way to draw just a pixel - so use a circle instead\n                    ctx.beginPath();\n                    ctx.arc(x, y, 1, 0, 2 * Math.PI, true);\n                    ctx.fill();\n                    break;\n                case mx.L_ITriangleSymbol:\n                    r = -r; // TODO Refactor without switch fall-through?\n                    /* jshint -W086 */\n                case mx.L_TriangleSymbol:\n                    /* jshint +W086 */\n                    d = m.trunc(r * 1.5);\n                    d2 = m.trunc(r * 0.80);\n\n                    // Coordinates of just the triangle itself\n                    tri[1].x = -d2;\n                    tri[1].y = d;\n                    tri[2].x = d2 * 2;\n                    tri[2].y = 0;\n                    tri[3].x = -d2;\n                    tri[3].y = -d;\n\n                    var tempTri = []; // XPoint array of size 4\n                    for (var cnt = 0; cnt < 4; cnt++) { // initializing 4 points in the array\n                        tempTri[cnt] = {\n                            x: 0,\n                            y: 0\n                        };\n                    }\n\n                    if (fill) {\n                        tempTri[0].x = x;\n                        tempTri[0].y = y - r;\n\n                        // Replacement for CoordModePrevious offset (updating coordinates to be relative to origin, instead of previous pt)\n                        tempTri[1].x = tempTri[0].x + tri[1].x;\n                        tempTri[1].y = tempTri[0].y + tri[1].y;\n                        tempTri[2].x = tempTri[1].x + tri[2].x;\n                        tempTri[2].y = tempTri[1].y + tri[2].y;\n                        tempTri[3].x = tempTri[2].x + tri[3].x;\n                        tempTri[3].y = tempTri[2].y + tri[3].y;\n\n                        fill_poly(ctx, tempTri);\n                    } else {\n                        tempTri[0].x = x;\n                        tempTri[0].y = y - r;\n\n                        // Replacement for CoordModePrevious offset (updating coordinates to be relative to origin, instead of previous pt)\n                        tempTri[1].x = tempTri[0].x + tri[1].x;\n                        tempTri[1].y = tempTri[0].y + tri[1].y;\n                        tempTri[2].x = tempTri[1].x + tri[2].x;\n                        tempTri[2].y = tempTri[1].y + tri[2].y;\n                        tempTri[3].x = tempTri[2].x + tri[3].x;\n                        tempTri[3].y = tempTri[2].y + tri[3].y;\n\n                        draw_poly(ctx, tempTri);\n                    }\n                    break;\n                case mx.L_PlusSymbol:\n                    draw_line(ctx, x, y + r, x, y - r);\n                    draw_line(ctx, x + r, y, x - r, y);\n                    break;\n                case mx.L_HLineSymbol:\n                    draw_line(ctx, x + r, y, x - r, y);\n                    break;\n                case mx.L_VLineSymbol:\n                    draw_line(ctx, x, y + r, x, y - r);\n                    break;\n                case mx.L_XSymbol:\n                    draw_line(ctx, x - r, y - r, x + r, y + r);\n                    draw_line(ctx, x + r, y - r, x - r, y + r);\n                    break;\n                default:\n                    c = symbol;\n                    r = m.trunc(Mx.text_w / 2); //tbd\n                    if (fill && !rmode) {\n                        ctx.fillText(c.substring(0, 2), x - r, y + r); // TODO Does this cover it? Do we need to also fill in a rectangle behind\n                    }\n                    break;\n            } // end switch (symbol)\n        }\n    };\n\n    /**\n     * Plot symbols at centers defined by an array of pixels\n     * @param Mx\n     * @param ic\n     * @param pixx\n     * @param pixy\n     * @param npix\n     * @param symbol\n     * @param rr\n     * @private\n     */\n    //\n    // ~= MX$DRAW_SYMBOLS\n    //\n    mx.draw_symbols = function(Mx, ic, pixx, pixy, npix, symbol, rr, istart) {\n        for (var i = 0; i < npix; i++) {\n            mx.draw_symbol(Mx, ic, pixx[i], pixy[i], symbol, rr, i + istart);\n        }\n    };\n\n    /* http://geomalgorithms.com/a01-_area.html\n     *   > 0 left\n     *   = 0 on\n     *   < 0 right\n     */\n    /**\n     * Test if a point is Left|On|Right of an infinite 2D line.\n     * @method isLeft\n     * @param p_x Point's x-coordinate\n     * @param p_y Point's y-coordinate\n     * @param e_x1 Lines's x1-coordinate\n     * @param e_y1 Lines's y1-coordinate\n     * @param e_x2 Lines's x2-coordinate\n     * @param e_y2 Lines's y2-coordinate\n     * @private\n     */\n    function isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) {\n        return ((e_x1 - p_x) * (e_y2 - p_y) - (e_x2 - p_x) * (e_y1 - p_y));\n    }\n\n    /**\n     * @method update_winding_number\n     * @param wn\n     * @param p_x\n     * @param p_y\n     * @param e_x1\n     * @param e_y1\n     * @param e_x2\n     * @param e_y2\n     * @private\n     */\n    function update_winding_number(wn, p_x, p_y, e_x1, e_y1, e_x2, e_y2) {\n        if (e_y1 <= p_y) { // start y <= P.y\n            if (e_y2 > p_y) { // an upward crossing\n                if (isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) > 0) {\n                    wn += 1;\n                }\n            }\n        } else { // start y > P.y (no test needed)\n            if (e_y2 <= p_y) { // a downward crossing\n                if (isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) < 0) {\n                    wn -= 1;\n                }\n            }\n        }\n        return wn;\n    }\n\n    /**\n     * Converts array of (x,y) coordinates to pixel coordinates, plots lines or dots\n     * @param Mx\n     * @param color\n     * @param xpoint\n     * @param ypoint\n     * @param npts\n     * @param skip\n     * @param line\n     * @param symb\n     * @param rad\n     * @param options\n     */\n    //\n    // ~= MX$TRACE\n    //\n    mx.trace = function(Mx, color, xpoint, ypoint, npts, istart, skip, line, symb, rad, options) {\n        if ((xpoint === undefined) || (ypoint === undefined)) {\n            throw \"mx.trace requires xpoint and ypoint\";\n        }\n\n        if (skip === undefined) {\n            skip = 1;\n        }\n\n        if (line === undefined) {\n            line = 1;\n        }\n\n        if (symb === undefined) {\n            symb = 0;\n        }\n\n        if (rad === undefined) {\n            rad = 0;\n        }\n\n        if (options === undefined) {\n            options = {};\n        }\n\n        if (npts <= 0) {\n            m.log.warn(\"No points to draw\");\n            return;\n        }\n\n        if ((line === 0) && (symb === 0)) {\n            m.log.warn(\"No line or symbol to draw\");\n            return;\n        }\n\n        var style;\n        if (options.dashed) {\n            style = {\n                mode: \"dashed\",\n                on: 4,\n                off: 4\n            };\n        }\n\n        var stk4 = mx.origin(Mx.origin, 4, Mx.stk[Mx.level]);\n        if ((stk4.xscl === 0.0) || (stk4.yscl === 0.0)) {\n            // the min and max are the same\n            return;\n        }\n\n        var left = stk4.x1;\n        var top = stk4.y1;\n\n        var xxmin = stk4.xmin;\n        var xscl = 1.0 / stk4.xscl;\n\n        var yymin = stk4.ymin;\n        var yscl = 1.0 / stk4.yscl;\n\n        if (!options.noclip) {\n            mx.clip(Mx, left, top, stk4.x2 - left + 1, stk4.y2 - top + 1);\n        }\n\n        var dx = Math.abs(stk4.xmax - stk4.xmin);\n        var dy = Math.abs(stk4.ymax - stk4.ymin);\n        var xmin = Math.min(stk4.xmin, stk4.xmax);\n        var ymin = Math.min(stk4.ymin, stk4.ymax);\n        var xmax = xmin + dx;\n        var ymax = ymin + dy;\n        //dx = dx * 0.5;\n        //if ((line == -1) || (line == 1)) {\n        //\tdy = dy * 10.0;\n        //} else {\n        //\tdy = dy * 0.5;\n        //}\n        //xmin = xmin - dx;\n        //ymin = ymin - dy;\n        //xmax = xmax + dx;\n        //ymax = ymax + dy;\n        // These buffers need to be able to hold 2 times the number of points.\n        // if all points are on screen, then we will will need 'n' points\n        // if all points are off the screen, then we will need (2*n)-2\n        var bufsize = 4 * Math.ceil(2 * xpoint.length);\n        var pixx = new Int32Array(new ArrayBuffer(bufsize));\n        var pixy = new Int32Array(new ArrayBuffer(bufsize));\n\n        var ib = 0;\n        if ((line === 0) && (symb !== 0)) {\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                var lvisible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n                if (lvisible) {\n                    pixx[0] = Math.round((x - xxmin) * xscl) + left;\n                    pixy[0] = Math.round((y - yymin) * yscl) + top;\n                    mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                }\n            }\n        }\n        if (options.vertsym === true) {\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                if ((x >= xmin) && (x <= xmax)) {\n                    var i = Math.round((x - xxmin) * xscl) + left;\n                    mx.draw_line(Mx, color, i, 0, i, Mx.height);\n                    if ((y >= ymin) && (y <= ymax)) {\n                        pixx[0] = i;\n                        pixy[0] = Math.round((y - yymin) * yscl) + top;\n                        mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                    }\n                }\n            }\n        }\n        if (options.horzsym === true) {\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                if ((y >= ymin) && (y <= ymax)) {\n                    var i = Math.round((y - yymin) * yscl) + top;\n                    mx.draw_line(Mx, color, 0, i, Mx.width, i);\n                    if ((x >= xmin) && (x <= xmax)) {\n                        pixx[0] = Math.round((x - xxmin) * xscl) + left;\n                        pixy[0] = i;\n                        mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                    }\n                }\n            }\n        } else if (line !== 0) {\n            var colors;\n            if ((options) && (options.highlight)) {\n                colors = [];\n                for (var sn = 0; sn < options.highlight.length; sn++) {\n                    if (options.highlight[sn].xstart >= xmax) {\n                        continue;\n                    }\n                    if (options.highlight[sn].xend <= xmin) {\n                        continue;\n                    }\n\n                    var xs = Math.max(options.highlight[sn].xstart, xmin);\n                    var xe = Math.min(options.highlight[sn].xend, xmax);\n\n                    if (xs < xe) {\n                        var rxs = Math.round((xs - xxmin) * xscl) + left;\n                        var rxe = Math.round((xe - xxmin) * xscl) + left;\n\n                        for (var cn = colors.length - 1; cn >= 0; cn--) {\n                            // This highlight overlaps the entire range of a previous\n                            // highlight...we can thus remove the color\n                            if ((rxs <= colors[cn].start) && (rxe >= colors[cn].end)) {\n                                colors.splice(cn, 1);\n                                continue;\n                            }\n                            // This highlight splits a previous highlight...we need\n                            // to create a new color range\n                            else if ((rxs >= colors[cn].start) && (rxe <= colors[cn].end)) {\n                                colors.push({\n                                    start: rxe,\n                                    end: colors[cn].end,\n                                    color: colors[cn].color\n                                });\n                                colors[cn].end = rxs;\n\n                            }\n                            // This highlight overlaps partially\n                            else if ((rxs <= colors[cn].start) && (rxe >= colors[cn].start)) {\n                                colors[cn].start = rxe;\n                            } else if ((rxs <= colors[cn].end) && (rxe >= colors[cn].end)) {\n                                colors[cn].end = rxs;\n                            }\n\n                            // See if this colors is still valid\n                            if (colors[cn].end <= colors[cn].start) {\n                                colors.splice(cn, 1);\n                            }\n                        }\n\n                        colors.push({\n                            start: rxs,\n                            end: rxe,\n                            color: options.highlight[sn].color\n                        });\n                    }\n                }\n\n                // The first color is the start of the plot\n                // in the base-line color\n                colors.push({\n                    start: left,\n                    color: color\n                });\n\n                colors.sort(function(a, b) {\n                    return a.start - b.start;\n                });\n\n            } else {\n                colors = color;\n            }\n\n            var wn = 0; // the winding number counter http://geomalgorithms.com/a03-_inclusion.html\n            var mid_x = (Mx.stk[Mx.level].xmax + Mx.stk[Mx.level].xmin) / 2.0;\n            var mid_y = (Mx.stk[Mx.level].ymax + Mx.stk[Mx.level].ymin) / 2.0;\n\n            var x = xpoint[0];\n            var y = ypoint[0];\n\n            wn = update_winding_number(wn, mid_x, mid_y, Mx.stk[Mx.level].xmin, Mx.stk[Mx.level].ymin, x, y);\n\n            var lvisible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n            // The first point is visible\n            if (lvisible) {\n                pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                ib += 1;\n                if (symb !== 0) {\n                    mx.draw_symbols(Mx, color, pixx, pixy, 1, symb, rad, istart);\n                }\n            } else {\n                ib = 0;\n            }\n\n            var ie = 0;\n            var visible = false;\n            for (var n = skip; n <= (skip * (npts - 1)); n += skip) {\n\n                var lx = x;\n                var ly = y;\n                x = xpoint[n];\n                y = ypoint[n];\n\n                wn = update_winding_number(wn, mid_x, mid_y, lx, ly, x, y);\n\n                visible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n                if ((lvisible) && (visible)) {\n                    // both the left point and right point are visible, so we can draw the trace\n                    pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                    pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                    ib += 1;\n                } else {\n                    // clipping necessary, either the left or right point are not visible\n                    lvisible = visible;\n                    // calculate the difference between the last point and this point\n                    dx = lx - x;\n                    dy = ly - y;\n                    if ((dx !== 0.0) || (dy !== 0.0)) {\n                        var o = {\n                            tL: 1.0,\n                            tE: 0.0\n                        };\n                        // Between the last point and the current point,\n                        // determine the ratio of the x and y porionts\n                        // that intersects the border.  If clipt returns\n                        // false then no portion of the line between the two\n                        // points is visible\n                        if (clipt(dx, xmin - x, o)) {\n                            if (clipt(-dx, x - xmax, o)) {\n                                if (clipt(dy, ymin - y, o)) {\n                                    if (clipt(-dy, y - ymax, o)) {\n                                        // If this point is starting the on-screen portion, start the line\n                                        if (o.tL < 1) {\n                                            pixx[ib] = Math.round((x - xxmin + o.tL * dx) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin + o.tL * dy) * yscl) + top;\n                                            ib += 1;\n                                        }\n\n                                        // If this point is ending the on-screen portion draw the line\n                                        if (o.tE > 0) {\n                                            pixx[ib] = Math.round((x - xxmin + o.tE * dx) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin + o.tE * dy) * yscl) + top;\n                                            ib += 1;\n                                            mx.draw_lines(Mx, colors, pixx.subarray(ie, ib), pixy.subarray(ie, ib), (ib - ie), line, style);\n\n                                            if (symb !== 0 && (ib - ie) > 2) {\n                                                mx.draw_symbols(Mx,\n                                                    color,\n                                                    pixx.subarray(ie + 1, ib - 1),\n                                                    pixy.subarray(ie + 1, ib - 1), (ib - ie - 2),\n                                                    symb,\n                                                    rad,\n                                                    istart + n - (ib - ie - 2));\n                                            }\n                                            ie = ib;\n                                        } else {\n                                            // otherwise add it to the line to be drawn\n                                            pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                                            ib += 1;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            wn = update_winding_number(wn, mid_x, mid_y, x, y, Mx.stk[Mx.level].xmax, Mx.stk[Mx.level].ymin);\n            wn = update_winding_number(wn, mid_x, mid_y, Mx.stk[Mx.level].xmax, Mx.stk[Mx.level].ymin, Mx.stk[Mx.level].xmin, Mx.stk[Mx.level].ymin);\n            if ((ib - ie) > 0) {\n                mx.draw_lines(Mx, colors, pixx.subarray(ie, ib), pixy.subarray(ie, ib), (ib - ie), line, style);\n                if (visible) {\n                    ie = ie + 1;\n                }\n                if (symb !== 0 && (ib - ie) > 1) {\n                    // TODO ib - 1 is used below because\n                    // otherwise the last point has undefined\n                    // for it's x/y coordinates...but this may\n                    // be a bug because it may neglect drawing\n                    // the last data point\n                    mx.draw_symbols(Mx,\n                        color,\n                        pixx.subarray(ie - 1, ib),\n                        pixy.subarray(ie - 1, ib),\n                        ib - ie - 1,\n                        symb,\n                        rad,\n                        n - ib + istart);\n                }\n            }\n\n            if (options.fillStyle && !Mx.fillMin && !Mx.fillMax) {\n                if ((ib > 1) || (wn !== 0)) {\n                    // if we have at least one point\n                    // or the entire plot area is in the fill zone\n                    mx.fill_trace(Mx, options.fillStyle, pixx, pixy, ib);\n                }\n            }\n\n            if (options.highlight) {\n                for (var i = 0; i < options.highlight.length; i++) {\n                    var highlight = options.highlight[i];\n                    if (!highlight.fill) {\n                        continue;\n                    }\n\n                    var x_start = highlight.xstart;\n                    var x_end = highlight.xend;\n\n                    console.log(\"x start \", x_start);\n                    console.log(\"x end \", x_end);\n\n                    if (x_start >= Mx.stk[Mx.level].xmax) {\n                        continue;\n                    }\n                    if (x_end <= Mx.stk[Mx.level].xmin) {\n                        continue;\n                    }\n\n                    if ((ib > 1) || (wn !== 0)) {\n\n                        var xstart_pixel_value = mx.real_to_pixel(Mx, x_start, 0);\n                        var xend_pixel_value = mx.real_to_pixel(Mx, x_end, 0);\n\n                        var pi_start = xstart_pixel_value.x;\n                        var pi_end = xend_pixel_value.x;\n                        //console.log('start: ', pi_start, 'end: ', pi_end);\n                        var pixx_new = [];\n                        var pixy_new = [];\n                        for (var q = 0; q < ib; q++) {\n                            var this_point = pixx[q];\n                            var this_point_y = pixy[q];\n                            //console.log(this_point);\n                            if (in_fill_range(this_point, pi_start, pi_end) === true) {\n                                //console.log('in range: ', this_point);\n                                pixx_new.push(this_point);\n                                pixy_new.push(this_point_y);\n\n                            }\n                        }\n\n                        if ((pixx_new.length > 0) || (wn !== 0)) {\n                            pi_start = Math.max(pi_start, pixx_new[0]);\n                            pi_end = Math.min(pi_end, pixx_new[pixx_new.length - 1]);\n                            mx.fill_trace(Mx, highlight.fill, pixx_new, pixy_new, pixx_new.length, pi_start, pi_end);\n                        }\n                    }\n\n                }\n            }\n\n\n        }\n\n        if (!options.noclip) {\n            mx.clip(Mx, 0, 0, 0, 0);\n        }\n    };\n\n    /**\n     * Set dashed or solid lines mode.\n     * @param Mx\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_MODE\n    //\n    mx.draw_mode = function(Mx, linewidth, style) {\n        Mx.linewidth = (linewidth === undefined) ? 1 : linewidth;\n        Mx.style = style;\n    };\n\n    /**\n     * @param Mx\n     * @param color\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_LINES\n    //\n    mx.draw_line = function(Mx, color, x1, y1, x2, y2, linewidth, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (linewidth === undefined) {\n            linewidth = Mx.linewidth;\n        }\n        if (style === undefined) {\n            style = Mx.style;\n        }\n        // Look up the color in Mx.pixels\n        if (typeof color === \"number\") {\n            if (!Mx.pixel) {\n                m.log.warn(\"COLORMAP not initialized, defaulting to foreground\");\n                color = Mx.fg;\n            } else {\n                if (isNaN(color)) {\n                    color = 0;\n                }\n                var cidx = Math.max(0, Math.min(Mx.pixel.map.length, color));\n                color = Mx.pixel.getColor(color);\n                color = to_rgb(\n                    color.red,\n                    color.green,\n                    color.blue);\n            }\n        }\n        draw_line(ctx, x1, y1, x2, y2, style, color, linewidth);\n    };\n\n    /**\n     * @param Mx\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     */\n    //\n    // ~= MX$RUBBERLINE\n    //\n    mx.rubberline = function(Mx, x1, y1, x2, y2) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        draw_line(ctx, x1, y1, x2, y2, {\n            mode: \"xor\"\n        }, \"white\", 1);\n    };\n\n    /**\n     * @param Mx\n     * @param fillStyle\n     * @param pixx\n     * @param pixy\n     * @param npts\n     * @private\n     */\n    mx.fill_trace = function(Mx, fillStyle, pixx, pixy, npts, l, r) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (Array.isArray(fillStyle)) {\n            ctx.fillStyle = mx.linear_gradient(Mx, 0, 0, 0, Mx.b - Mx.t, fillStyle);\n        } else {\n            ctx.fillStyle = fillStyle;\n        }\n\n        if (npts < 1) {\n            ctx.fillRect(Mx.l, Mx.t, (Mx.r - Mx.l), (Mx.b - Mx.t));\n            return;\n        }\n\n        if (l === undefined) {\n            l = Mx.l;\n        }\n        if (r === undefined) {\n            r = Mx.r;\n        }\n\n        if (fillStyle) {\n            var x = pixx[0];\n            var y = pixy[0];\n\n            ctx.beginPath();\n            if (y === Mx.t) {\n                ctx.lineTo(l, Mx.t);\n            } else {\n                ctx.lineTo(l, Mx.b);\n            }\n\n\n            ctx.lineTo(x, y);\n\n\n\n            for (var i = 1; i < npts; i++) {\n                x = pixx[i];\n                y = pixy[i];\n                ctx.lineTo(x, y);\n            }\n\n            if (y === Mx.t) {\n                ctx.lineTo(r, Mx.t);\n            }\n            ctx.lineTo(r, Mx.b);\n            if (pixy[0] === Mx.t) {\n                ctx.lineTo(l, Mx.b);\n            }\n\n            ctx.closePath();\n            ctx.fill(\"evenodd\");\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param colors\n     * @param pixx\n     * @param pixy\n     * @param npts\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_LINES\n    //\n    mx.draw_lines = function(Mx, colors, pixx, pixy, npts, linewidth, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (npts < 1) {\n            return;\n        }\n\n        var x = pixx[0];\n        var y = pixy[0];\n\n        if (linewidth === undefined) {\n            linewidth = Mx.linewidth;\n        }\n        if (style === undefined) {\n            style = Mx.style;\n        }\n\n        if ((style) && (style.mode === \"dashed\")) {\n            var dash_supported = common.dashOn(ctx, style.on, style.off);\n            if (!dash_supported) {\n                m.log.warn(\"WARNING: Dashed lines aren't supported on your browser\");\n            }\n        }\n\n        ctx.lineWidth = linewidth;\n        var current_color = 0;\n\n        if (typeof colors === \"string\") {\n            colors = [{\n                start: 0,\n                color: colors\n            }];\n        } else if (!(colors instanceof Array)) {\n            if (colors.start === undefined) {\n                colors.start = 0;\n            }\n            colors = [colors];\n        }\n\n        var n;\n        for (n = (colors.length - 1); n >= 0; n--) {\n            if ((colors[n].end != null) && (colors[n].end < x)) {\n                colors.splice(n, 1);\n            }\n        }\n\n        // Find the first valid color (expects colors to be sorted)\n        for (n = 0; n < colors.length; n++) {\n            if (colors[n].start < x) {\n                current_color = n;\n            }\n        }\n\n        ctx.strokeStyle = colors[current_color].color;\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n\n        for (var i = 0; i < npts; i++) {\n            if ((x === pixx[i]) && (y === pixy[i])) {\n                continue;\n            }\n            x = pixx[i];\n            y = pixy[i];\n\n            var newcolor = false;\n            if ((current_color > 0) && (colors[current_color].end != null) && (colors[current_color].end < x)) {\n                newcolor = true;\n                while ((colors[current_color].end != null) && (colors[current_color].end < x)) {\n                    colors.splice(current_color, 1);\n                    current_color -= 1;\n                    if (current_color === 0) {\n                        break;\n                    }\n                }\n            }\n\n            if (((current_color + 1) < colors.length) && (colors[current_color + 1].start <= x)) {\n                newcolor = true;\n                while (((current_color + 1) < colors.length) && (colors[current_color + 1].start <= x)) {\n                    current_color++;\n                }\n            }\n\n            ctx.lineTo(x, y);\n            if (newcolor) {\n                ctx.stroke();\n                ctx.strokeStyle = colors[current_color].color;\n                ctx.beginPath();\n                ctx.lineTo(x, y);\n            }\n        }\n        ctx.stroke();\n        common.dashOff(ctx);\n        ctx.beginPath();\n    };\n\n    /**\n     * @param Mx\n     * @param left\n     * @param top\n     * @param width\n     * @param height\n     */\n    //\n    // ~= MX$CLIP\n    //\n    mx.clip = function(Mx, left, top, width, height) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if ((left === 0) && (top === 0) && (width === 0) && (height === 0)) {\n            ctx.restore();\n            return;\n        }\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(left, top, width, height);\n        ctx.clip();\n    };\n\n    /**\n     * @param Mx\n     */\n    //\n    // ~= MX$CLEAR_WINDOW\n    //\n    mx.clear_window = function(Mx) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(0, 0, Mx.width, Mx.height);\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.erase_window = function(Mx) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        ctx.clearRect(0, 0, Mx.width, Mx.height);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @param mode\n     * @param def_style\n     * @param alt_style\n     */\n    //\n    // ~= MX$RUBBERBOX\n    // Unlike MX$RUBBERBOX, this is a non-blocking call.  As such the 'func' is a callback for then the rubberbox is finished.\n    //\n    // When CTRL is pressed, alt_style is used\n    //\n    mx.rubberbox = function(Mx, func, mode, def_style, alt_style) {\n        mx.warpbox(Mx, Mx.xpos, Mx.ypos, Mx.xpos, Mx.ypos, 0, Mx.width, 0, Mx.height, func, mode, def_style, alt_style);\n    };\n\n    /**\n     * @param Mx\n     * @param xo\n     * @param yo\n     * @param xl\n     * @param yl\n     * @param xmin\n     * @param xmax\n     * @param ymin\n     * @param ymax\n     * @param func\n     * @param mode\n     * @param def_style\n     * @param alt_style\n     */\n    //\n    // ~= MX$WARPBOX\n    // Unlike MX$WARPBOX, this is a non-blocking call.   As such the 'func' is a callback for then the rubberbox is finished.\n    //\n    mx.warpbox = function(Mx, xo, yo, xl, yl, xmin, xmax, ymin, ymax, func, mode, def_style, alt_style) {\n        if (!def_style) {\n            def_style = {};\n        }\n\n        Mx.warpbox = new WARPBOX();\n        Mx.warpbox.xo = xo;\n        Mx.warpbox.yo = yo;\n        Mx.warpbox.xl = xl;\n        Mx.warpbox.yl = yl;\n        Mx.warpbox.xmin = xmin;\n        Mx.warpbox.xmax = xmax;\n        Mx.warpbox.ymin = ymin;\n        Mx.warpbox.ymax = ymax;\n        Mx.warpbox.func = func;\n        Mx.warpbox.mode = mode;\n\n        Mx.warpbox.style = def_style;\n        Mx.warpbox.def_style = def_style;\n        Mx.warpbox.alt_style = alt_style;\n    };\n\n    /**\n     * @param inorigin\n     * @param outorigin\n     * @param instk\n     */\n    //\n    // ~= M$ORIGIN\n    //\n    mx.origin = function(inorigin, outorigin, instk) {\n        inorigin = Math.max(1, inorigin);\n        outorigin = Math.max(1, outorigin);\n\n        var outstk = new mx.STKSTRUCT();\n\n        outstk.xmin = instk.xmin;\n        outstk.xmax = instk.xmax;\n        outstk.ymin = instk.ymin;\n        outstk.ymax = instk.ymax;\n        outstk.xscl = instk.xscl;\n        outstk.yscl = instk.yscl;\n        outstk.x1 = instk.x1;\n        outstk.y1 = instk.y1;\n        outstk.x2 = instk.x2;\n        outstk.y2 = instk.y2;\n\n        if (inorigin !== outorigin) {\n            var diff = Math.abs(outorigin - inorigin); // used to simplify boolean logic\n            var sum = outorigin + inorigin;\n            if (diff === 2 || sum !== 5) { // (1<->3) (2<->4) (1<->2) (3<->4)\n                outstk.xmin = instk.xmax;\n                outstk.xmax = instk.xmin;\n                outstk.xscl = -instk.xscl;\n            }\n            if (diff === 2 || sum === 5) { // (1<->3) (2<->4) (1<->4) (2<->3)\n                outstk.ymin = instk.ymax;\n                outstk.ymax = instk.ymin;\n                outstk.yscl = -instk.yscl;\n            }\n        }\n        return outstk;\n    };\n\n    /**\n     * @param end1\n     * @param end2\n     */\n    //\n    // ~= MX$MULT\n    //\n    mx.mult = function(end1, end2) {\n        var absmax = Math.max(Math.abs(end1), Math.abs(end2));\n        if (absmax === 0) {\n            return 1.0;\n        }\n        var kengr = 0.1447648 * Math.log(absmax);\n        kengr = kengr | kengr; // Math.floor always rounds down, so -3.3 becomes -4 use this bitwise hack instead\n        if (absmax < 1.0) {\n            kengr = kengr - 1;\n        }\n        if (kengr < 0) {\n            return 1.0 / Math.pow(10, (-3 * kengr));\n        } else {\n            return Math.pow(10, (3 * kengr));\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @private\n     */\n    //\n    // event may be undefined or null\n    mx.widget_callback = function(Mx, event) {\n        if (Mx.prompt) {\n            if (event.which === 3) {\n                Mx.prompt.input.onsubmit();\n            }\n        }\n\n        if (Mx.widget) {\n            Mx.widget.callback(event);\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param promptText\n     * @param isValid\n     * @param onSuccess\n     * @param refresh\n     * @param inputValue\n     * @param xpos\n     * @param ypos\n     * @param errorTimeout\n     */\n    //\n    // ~= MX$DPROMPT - only higher-level\n    mx.prompt = function(Mx, promptText, isValid, onSuccess, refresh, inputValue, xpos, ypos, errorTimeout) {\n        if (inputValue !== undefined) {\n            var inputValid = isValid(inputValue);\n\n            if (!inputValid.valid) {\n                throw \"Prompt default input value not valid due to '\" + inputValid.reason + \"'\";\n            }\n        }\n\n        // TODO Validation - make sure promptText is not too long and isn't multi-line...\n        mx.onWidgetLayer(Mx, function() {\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            var maxNumChars = 30;\n\n            // Construct the input box\n            var pxIndex = ctx.font.indexOf('px');\n            var fontIndex = pxIndex + 3;\n            var fontSize = ctx.font.substr(0, pxIndex);\n            var fontFamily = ctx.font.substr(fontIndex, ctx.font.length).toString();\n\n            /* TODO Note: There is a scrolling bug - you can scroll to the right, but not the left of the value\n\t\t\tAnd... when truncating the width of an input field - it shows the value as though truncated\n\t\t\tfrom the right (say if its cut off by 1 and that one happened to be a negative sign, the value\n\t\t\twould look like a positive) .\n\t\t\t */\n            var canvasInput = new CanvasInput({\n                height: Mx.text_h,\n                fontFamily: fontFamily,\n                /* jshint -W053 */\n                fontSize: new Number(fontSize),\n                /* jshint +W053 */\n                backgroundColor: Mx.bg,\n                fontColor: Mx.fg,\n                borderWidth: 0,\n                borderRadius: 0,\n                padding: 0,\n                boxShadow: \"none\",\n                innerShadow: \"none\",\n                width: Mx.text_w * maxNumChars,\n                value: (inputValue !== undefined ? inputValue.toString() : \"\"),\n                disableBlur: true,\n                renderOnReturn: false,\n                tabToClear: true\n            });\n\n            var subHandlerCreator = function(messageX, messageY) {\n                return function() {\n                    var newValue = this.value();\n\n                    var inputValid = isValid(newValue);\n\n                    if (!inputValid.valid) {\n                        mx.message(Mx, \"Value: '\" + newValue + \"' isn't valid due to '\" + inputValid.reason + \"' - RETRY\", undefined, messageX, messageY);\n\n                        // Clear error message\n                        setTimeout(function() {\n                            mx.onWidgetLayer(Mx, function() {\n                                mx.erase_window(Mx);\n                            });\n                            Mx.widget = null;\n                            //refresh();\n                        }, errorTimeout != null ? errorTimeout : 4000);\n                    } else {\n                        Mx.prompt = undefined; // clear state variable\n\n                        // Kill CanvasInput\n                        this.cleanup();\n                        mx.onWidgetLayer(Mx, function() {\n                            mx.erase_window(Mx);\n                        });\n\n                        onSuccess(newValue);\n                    }\n                };\n            };\n\n            // Create redraw method\n            var redrawPromptCreator = function(Mx, input, promptText) {\n                return function(xpos, ypos) {\n                    mx.onWidgetLayer(Mx, function() {\n                        var GBorder = 3;\n\n                        // Calculate the position variables\n\n                        var xssPrompt = (promptText.length + 2) * Mx.text_w;\n                        var xss = xssPrompt + (maxNumChars + 1) * Mx.text_w;\n                        var yss = 2 * Mx.text_h;\n\n                        var xs = xss + 2 * GBorder;\n                        var ys = yss + 2 * GBorder;\n                        if (!xpos) {\n                            xpos = Mx.xpos;\n                        }\n                        if (!ypos) {\n                            ypos = Mx.ypos;\n                        }\n                        var xc = Math.max(0, Math.min(xpos, Mx.width - xs));\n                        var yc = Math.max(0, Math.min(ypos, Mx.height - ys));\n                        var xcc = xc + GBorder;\n                        var ycc = yc + GBorder;\n\n                        var yPos = ycc + Mx.text_h * 1.5;\n                        var inputXPos = xcc + Mx.text_w;\n\n                        // Draw the box and label text\n                        mx.widgetbox(Mx, xc, yc, xs, ys, xcc, ycc, 0, \"\");\n                        mx.text(Mx, inputXPos, yPos, promptText);\n\n                        var inputYPos = yPos - Mx.text_h * 1.15;\n\n                        // Redraw the input at the new location\n                        input.x(xcc + Mx.text_w + xssPrompt - Mx.text_w);\n                        input.y(inputYPos);\n\n                        input.onsubmit(subHandlerCreator(xc, inputYPos - 75)); // TODO Refactor positioning based on char length of reason code...\n                        if (!input.canvas()) {\n                            input.canvas(Mx.active_canvas);\n                        } else {\n                            input.render();\n                        }\n                    });\n                };\n            };\n\n            var redrawPrompt = redrawPromptCreator(Mx, canvasInput, promptText);\n\n            //refresh();\n            redrawPrompt(xpos, ypos);\n            canvasInput.focus();\n\n            // Set state variable\n            Mx.prompt = {\n                redraw: redrawPrompt,\n                input: canvasInput\n            };\n        });\n    };\n\n    /**\n     * Floating-point number validator. Verifies that value is a valid floating point\n     * number. Validation is loose by default - meaning empty strings are considered valid.\n     * @param value The value to validate.\n     * @param strict If strict is set to true - does not consider empty strings as valid floating point numbers.\n     * @private\n     */\n    mx.floatValidator = function(value, strict) {\n        if (!(((strict === undefined || strict === false) && value === \"\")) &&\n            isNaN(parseFloat(value)) || !isFinite(value)) {\n            return {\n                valid: false,\n                reason: \"Failed float validation: not a valid floating point number\"\n            };\n        }\n\n        return {\n            valid: true,\n            reason: \"\"\n        };\n    };\n\n    /**\n     * Integer number validator. Verifies that value is a valid integer.\n     * Validation is loose by default - meaning empty strings are considered valid.\n     * @param value The value to validate.\n     * @param strict If strict is set to true - does not consider empty strings as valid integers.\n     * @private\n     */\n    mx.intValidator = function(value, strict) {\n        if (((strict === undefined || strict === false) && value === \"\") ||\n            ((parseFloat(value) === parseInt(value, 10)) && !isNaN(value))) {\n            return {\n                valid: true,\n                reason: \"\"\n            };\n        } else {\n            return {\n                valid: false,\n                reason: \"Failed integer validation: not a valid integer\"\n            };\n        }\n    };\n\n    mx.hexValidator = function(value, strict) {\n        var regColorcode = /^(#)?([0-9a-fA-F]{3})([0-9a-fA-F]{3})?$/;\n        if (((strict === undefined || strict === false) && value === \"\") ||\n            (regColorcode.test(value) !== false)) {\n            return {\n                valid: true,\n                reason: \"\"\n            };\n        } else {\n            return {\n                valid: false,\n                reason: \"Failed hexcode validation: not a valid hexcode\"\n            };\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param msg\n     * @param time - unused?\n     * @param xpos\n     * @param ypos\n     */\n    //\n    // ~= MX$MESSAGE\n    //\n    mx.message = function(Mx, msg, time, xpos, ypos, type) {\n        mx.onWidgetLayer(Mx, function() {\n\n            mx.render_message_box(Mx, msg, xpos, ypos);\n\n            Mx.widget = {\n                type: type || \"ONESHOT\",\n                callback: function(event) {\n                    if ((event.type === \"mousedown\") || (event.type === \"keydown\")) {\n                        Mx.widget = null;\n                        mx.onWidgetLayer(Mx, function() {\n                            mx.erase_window(Mx);\n                        });\n                    }\n                }\n            };\n        });\n    };\n\n    mx.render_message_box = function(Mx, msg, xpos, ypos, textColor) {\n        var GBorder = 3;\n\n        // Unlike MX$MESSAGE, this implementaion if the message\n        // already contains newlines, the text will placed in the\n        // box as-is.\n        var beg = msg.split(/\\r\\n|\\r|\\n/g);\n        var linel = 0;\n        var center;\n        if (beg.length === 1) {\n            beg = [];\n            var MESSWIDTH = 40;\n\n            linel = Math.min((((Mx.width - 2 * GBorder) / Mx.text_w) - 2), msg.length);\n            if (linel <= 0) {\n                return;\n            }\n            while ((linel > MESSWIDTH) && (2.5 * Mx.text_h * msg.length < Mx.height * linel)) {\n                linel -= 5;\n            }\n\n            var cur = 0;\n            var bg = 0;\n            var i = 0;\n            var j = 0;\n            var end = 0;\n            var brk = 0;\n            var beg = [];\n\n            center = true;\n            while (bg < msg.length) {\n                end = bg + linel - 1;\n                brk = end = Math.min(end, msg.length - 1);\n                var endinreturn = false;\n                for (cur = bg; cur <= end && !endinreturn; cur++) {\n                    switch (msg[cur]) {\n                        case ',':\n                        case ';':\n                        case ' ':\n                        case ':':\n                            brk = cur;\n                            break;\n                        case '-':\n                        case '/':\n                            if (brk !== cur - 1) {\n                                brk = cur;\n                            }\n                            break;\n                        case '@':\n                        case '\\n':\n                        case '\\r':\n                            center = false;\n                            endinreturn = true;\n                            brk = cur;\n                            break;\n                    }\n                }\n                if (cur === msg.length) {\n                    brk = end;\n                }\n                if (endinreturn) {\n                    beg.push(msg.substring(bg, brk));\n                } else {\n                    // trim leading space\n                    var s = msg.substring(bg, brk + 1).replace(/^\\s+/, \"\");\n                    beg.push(s);\n                }\n                bg = brk + 1;\n                j = Math.max(j, beg[i].length);\n            }\n        } else {\n            for (var i = 0; i < beg.length; i++) {\n                linel = Math.min((((Mx.width - 2 * GBorder) / Mx.text_w) - 2), Math.max(linel, beg[i].length));\n            }\n        }\n\n        var lines = beg.length;\n        if (lines > 6) {\n            center = false;\n        }\n        var cur = 0;\n        var winlines = Math.max(1, Mx.height / Mx.text_h);\n        var lastline = Math.min(lines, cur + winlines - 1);\n\n        var xss = (linel + 2) * Mx.text_w;\n        var yss = (lastline - cur + 1) * Mx.text_h;\n\n        var xs = xss + 2 * GBorder;\n        var ys = yss + 2 * GBorder;\n        if (!xpos) {\n            xpos = Mx.xpos;\n        }\n        if (!ypos) {\n            ypos = Mx.ypos;\n        }\n        var xc = Math.max(Mx.l, Math.min(xpos, Mx.r - xs));\n        var yc = Math.max(Mx.t, Math.min(ypos, Mx.b - ys));\n        var xcc = xc + GBorder;\n        var ycc = yc + GBorder;\n\n        mx.widgetbox(Mx, xc, yc, xs, ys, xcc, ycc, 0, \"\");\n\n        var j = ycc + Mx.text_h / 3;\n        var i = xcc + Mx.text_w;\n        while (cur < lastline) {\n            j += Mx.text_h;\n            if (center) {\n                i = xc + xs / 2 - ((beg[cur].length * Mx.text_w) / 2);\n            }\n            mx.text(Mx, i, j, beg[cur], textColor);\n            cur++;\n        }\n    };\n\n    /**\n     * Based on http://js-bits.blogspot.co.uk/2010/07/canvas-rounded-corner-rectangles.html\n     *\n     * @param Mx\n     * @param color\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} w\n     * @param {Number} h\n     * @param fill_opacity\n     * @param fill_color\n     * @param {Number} radius The corner radius. Defaults to 5;\n     */\n    mx.draw_round_box = function(Mx, color, x, y, w, h, fill_opacity, fill_color, radius) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!radius) {\n            radius = 5;\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + w - radius, y);\n        ctx.quadraticCurveTo(x + w, y, x + w, y + radius);\n        ctx.lineTo(x + w, y + h - radius);\n        ctx.quadraticCurveTo(x + w, y + h, x + w - radius, y + h);\n        ctx.lineTo(x + radius, y + h);\n        ctx.quadraticCurveTo(x, y + h, x, y + h - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = color;\n        ctx.stroke();\n\n        if ((fill_opacity !== undefined) && (fill_opacity > 0)) {\n            var oldAlpha = ctx.globalAlpha;\n            ctx.globalAlpha = fill_opacity;\n            if (fill_color) {\n                ctx.fillStyle = fill_color;\n            } else {\n                ctx.fillStyle = color;\n            }\n            ctx.fill();\n            ctx.globalAlpha = oldAlpha;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param color\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param fill_opacity\n     * @param fill_color\n     */\n    //\n    // ~= MX$DRAW_BOX\n    //\n    mx.draw_box = function(Mx, color, x, y, w, h, fill_opacity, fill_color) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (color !== \"xor\") {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = color;\n            ctx.strokeRect(x, y, w, h);\n        } else {\n            if (typeof Uint8ClampedArray === 'undefined') {\n                // we don't have typed arrays, so canvas getImageData operations\n                // will be very slow, so use Mx.fg instead\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = Mx.fg;\n                ctx.strokeRect(x, y, w, h);\n            } else {\n                // TODO switch to using TypedArrays\n                x = Math.floor(x);\n                y = Math.floor(y);\n                w = Math.floor(w);\n                h = Math.floor(h);\n\n                // For now assume xor always uses the base canvas\n                // even if it draws on another canvas\n                var dctx = Mx.canvas.getContext(\"2d\");\n\n                var imgd = dctx.getImageData(x, y, w, 1);\n                var pix = imgd.data;\n                for (var c = 0; c < imgd.data.length; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y);\n\n                imgd = dctx.getImageData(x, y + h, w, 1);\n                pix = imgd.data;\n                for (var c = 0; c < imgd.data.length; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y + h);\n\n                var imgd = dctx.getImageData(x, y, 1, h);\n                var pix = imgd.data;\n                for (var c = 0; c < h; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y);\n\n                imgd = dctx.getImageData(x + w, y, 1, h);\n                pix = imgd.data;\n                for (var c = 0; c < h; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x + w, y);\n            }\n        }\n\n        if ((fill_opacity !== undefined) && (fill_opacity > 0)) {\n            var oldAlpha = ctx.globalAlpha;\n            ctx.globalAlpha = fill_opacity;\n            if (fill_color) {\n                ctx.fillStyle = fill_color;\n            } else {\n                ctx.fillStyle = color;\n            }\n            ctx.fillRect(x + 1, y + 1, w - 1, h - 1);\n            ctx.globalAlpha = oldAlpha;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param width\n     */\n    // ~= MX$SETFONT\n    mx.set_font = function(Mx, width) {\n        var ctx = Mx.canvas.getContext(\"2d\");\n        var ctx_wid = Mx.wid_canvas.getContext(\"2d\");\n\n        if ((Mx.font) && (Mx.font.width === width)) {\n            // use the cached font\n            ctx.font = Mx.font.font;\n            ctx_wid.font = Mx.font.font;\n        } else {\n            // figure out the font\n            var text_h = 1;\n            do {\n                text_h = text_h + 1;\n                ctx.font = text_h + \"px \" + Mx.font_family;\n                ctx_wid.font = text_h + \"px \" + Mx.font_family;\n                var font_size = ctx.measureText('M'); // the capital M is typically the same height and width\n                Mx.text_w = font_size.width;\n                Mx.text_h = text_h;\n            } while (Mx.text_w < width);\n            Mx.font = {\n                font: text_h + \"px \" + Mx.font_family,\n                width: width\n            };\n        }\n    };\n\n\n    /**\n     * @param Mx\n     * @param xstart\n     * @param ystart\n     * @param xend\n     * @param yend\n     * @param style\n     */\n    // ~= MX$FTEXTLINE\n    mx.textline = function(Mx, xstart, ystart, xend, yend, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (!style) {\n            style = {};\n        }\n        if (!style.color) {\n            style.color = Mx.fg;\n        }\n        if (!style.width) {\n            style.width = 1;\n        }\n        draw_line(ctx, xstart, ystart, xend, yend, style, style.color, style.width);\n    };\n\n    /**\n     * @param dmin\n     * @param dmax\n     * @param ndiv\n     */\n    // ~= MX$TICS\n    mx.tics = function(dmin, dmax, ndiv, timecode) {\n        var dtic = 1;\n        var dtic1 = dmin;\n\n        // handle degenerate case\n        if (dmax === dmin) {\n            return {\n                dtic: 1,\n                dtic1: dmin\n            };\n        }\n\n        // split up range into about ndiv 'nice' chunks\n        // zero is included only if   dmin < zero < dmax\n        var dran = Math.abs(dmax - dmin);\n        var df = dran / ndiv;\n        var sig = log10(Math.max(df, 1.0e-36));\n        var nsig;\n        if (sig < 0.0) {\n            nsig = Math.ceil(sig);\n            nsig = nsig - 1;\n        } else {\n            nsig = Math.floor(sig);\n        }\n\n        var ddf = df * Math.pow(10.0, (-nsig));\n        sig = Math.pow(10.0, nsig);\n        var dft = ddf * sig;\n        // If timecode has been requested and it looks like\n        // timecode\n        if (timecode && (dft >= 5.0 && dft <= 59.5 * 3600 * 24)) {\n            var dscl;\n            if (dft < 17.5) {\n                dscl = 5.0; // align to 5 sec tics\n            } else if (dft < 37.5) {\n                dscl = 15.0; // align to 15 sec tics\n            } else if (dft < 4.5 * 60) {\n                dscl = 60.0; // 1 minute tics\n            } else if (dft < 17.5 * 60) {\n                dscl = 5.0 * 60; // and so on\n            } else if (dft < 37.5 * 60) {\n                dscl = 15.0 * 60;\n            } else if (dft < 2.0 * 3600) {\n                dscl = 1.0 * 3600;\n            } else if (dft < 4.5 * 3600) {\n                dscl = 3.0 * 3600;\n            } else if (dft < 9.0 * 3600) {\n                dscl = 6.0 * 3600;\n            } else if (dft < 1.5 * 3600 * 24) {\n                dscl = 12.0 * 3600;\n            } else if (dft < 6.0 * 3600 * 24) {\n                dscl = 1.0 * 3600 * 24; // 1 day\n            } else {\n                dscl = 1.0 * 3600 * 24 * 7; // 1 week\n            }\n            dtic = Math.round(dft / dscl) * dscl;\n        } else {\n            if (ddf < 1.75) {\n                dtic = sig;\n            } else if (ddf < 2.25) {\n                dtic = 2.0 * sig;\n            } else if (ddf < 3.5) {\n                dtic = 2.50 * sig;\n            } else if (ddf < 7.0) {\n                dtic = 5.0 * sig;\n            } else {\n                dtic = 10.0 * sig;\n            }\n        }\n\n        // redefine dmin and dmax to line up on 'nice' boundaries\n        if (dtic === 0.0) {\n            dtic = 1.0;\n        }\n        var nseg;\n        if (dmax >= dmin) {\n            if (dmin >= 0.0) {\n                nseg = dmin / dtic + 0.995;\n            } else {\n                nseg = dmin / dtic - 0.005;\n            }\n            nseg = Math.floor(nseg); // floor\n            dtic1 = nseg * dtic;\n        } else {\n            if (dmin >= 0.0) {\n                nseg = dmin / dtic + 0.005;\n            } else {\n                nseg = dmin / dtic - 0.995;\n            }\n            nseg = Math.floor(nseg); // floor\n            dtic1 = nseg * dtic;\n            dtic = -1 * dtic;\n        }\n        if (dtic1 + dtic === dtic1) {\n            dtic = dmax - dmin;\n        }\n\n        return {\n            dtic: dtic,\n            dtic1: dtic1\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param xdiv\n     * @param ydiv\n     * @param xlab\n     * @param ylab\n     * @param flags\n     */\n    // ~= MX$FDRAWAXIS\n    mx.drawaxis = function(Gx, Mx, xdiv, ydiv, xlab, ylab, flags) {\n        var stk1 = mx.origin(Mx.origin, 1, Mx.stk[Mx.level]);\n        var iscl = 0;\n        var isct = 0;\n        var iscr = 0;\n        var iscb = 0;\n        var width = 0;\n        var height = 0;\n\n        xlab = (xlab === undefined) ? 30 : xlab;\n        ylab = (ylab === undefined) ? 30 : ylab;\n\n\n        if (flags.exactbox) {\n            iscl = Math.floor(stk1.x1);\n            isct = Math.floor(stk1.y1);\n            iscr = Math.floor(stk1.x2);\n            iscb = Math.floor(stk1.y2);\n            width = iscr - iscl;\n            height = iscb - isct;\n        } else {\n            iscl = Math.max(Math.floor(stk1.x1) - 2, 0);\n            isct = Math.max(Math.floor(stk1.y1) - 2, 0);\n            iscr = Math.min(Math.floor(stk1.x2) + 2, Mx.width);\n            iscb = Math.min(Math.floor(stk1.y2) + 2, Mx.height);\n            width = iscr - iscl - 4;\n            height = iscb - isct - 4;\n        }\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (flags.fillStyle) {\n            if (Array.isArray(flags.fillStyle)) {\n                ctx.fillStyle = mx.linear_gradient(Mx, 0, 0, 0, iscb - isct, flags.fillStyle);\n            } else {\n                ctx.fillStyle = flags.fillStyle;\n            }\n        } else {\n            ctx.fillStyle = Mx.bg;\n        }\n        ctx.fillRect(iscl, isct, iscr - iscl, iscb - isct);\n\n        if (!flags.noaxisbox) {\n            mx.textline(Mx, iscl, isct, iscr, isct);\n            mx.textline(Mx, iscr, isct, iscr, iscb);\n            mx.textline(Mx, iscr, iscb, iscl, iscb);\n            mx.textline(Mx, iscl, iscb, iscl, isct);\n        }\n\n        var xTIC = {\n            dtic: 0,\n            dtic1: 0\n        };\n        var yTIC = {\n            dtic: 0,\n            dtic1: 0\n        };\n\n        if (xdiv < 0) {\n            xTIC.dtic1 = stk1.xmin;\n            xTIC.dtic = (stk1.xmin - stk1.xmax) / xdiv;\n        } else {\n            xTIC = mx.tics(stk1.xmin, stk1.xmax, xdiv, flags.xtimecode);\n        }\n\n\n        var _xmult = 1.0;\n        if (flags.xmult) { // if xmult was provided\n            _xmult = flags.xmult;\n        } else if (!flags.xtimecode) {\n            _xmult = mx.mult(stk1.xmin, stk1.xmax);\n        }\n        if (ydiv < 0) {\n            yTIC.dtic1 = stk1.ymin;\n            yTIC.dtic = (stk1.ymin - stk1.ymax) / ydiv;\n        } else {\n            yTIC = mx.tics(stk1.ymin, stk1.ymax, ydiv, flags.ytimecode);\n        }\n        var _ymult = 1.0;\n        if (flags.ymult) { // if ymult was provided\n            _ymult = flags.ymult;\n        } else if (!flags.ytimecode) {\n            _ymult = mx.mult(stk1.ymin, stk1.ymax);\n        }\n\n        var xticlabels = !flags.noxtlab;\n        var yticlabels = !flags.noytlab;\n\n        // add labels\n        var ix = Math.max(0, iscl - 4 * Mx.text_w);\n        var iy = 0;\n        if (flags.ontop) {\n            iy = Math.min(Mx.height, Math.floor(iscb + 1.5 * Mx.text_h));\n        } else {\n            iy = Math.max(Mx.text_h, Math.floor(isct - 0.5 * Mx.text_h));\n        }\n\n        var xlabel;\n        var ylabel;\n\n        if (iy > 0) {\n            var ly = 0;\n            if (!flags.noyplab) {\n                if (flags.ylabel instanceof Function) {\n                    ylabel = flags.ylabel(ylab, _ymult);\n                } else if (flags.ylabel !== undefined) {\n                    ylabel = flags.ylabel;\n                } else {\n                    ylabel = m.label(ylab, _ymult);\n                }\n            }\n            if (!flags.noxplab) {\n                if (flags.xlabel instanceof Function) {\n                    xlabel = flags.xlabel(xlab, _xmult);\n                } else if (flags.xlabel !== undefined) {\n                    xlabel = flags.xlabel;\n                } else {\n                    xlabel = m.label(xlab, _xmult);\n                }\n            }\n        }\n\n        if (xlabel && ylabel) {\n            mx.text(Mx, ix, iy, ylabel + \" vs \" + xlabel);\n        } else if (xlabel) {\n            mx.text(Mx, ix, iy, xlabel);\n        } else if (ylabel) {\n            mx.text(Mx, ix, iy, ylabel);\n        }\n\n        var itext = 5.5 * Mx.text_w;\n        var jtext = 0;\n        if (flags.ontop) {\n            if (flags.inside) {\n                jtext = isct + 1.0 * Mx.text_h;\n            } else {\n                jtext = isct - 0.2 * Mx.text_h;\n            }\n        } else {\n            if (flags.inside) {\n                jtext = iscb - 0.5 * Mx.text_h;\n            } else {\n                jtext = iscb + 1.0 * Mx.text_h + 2;\n            }\n        }\n        var fact;\n        if (stk1.xmin !== stk1.xmax) {\n            fact = width / (stk1.xmax - stk1.xmin);\n        } else {\n            fact = width / 1.0;\n        }\n\n        var fmul;\n        if (_xmult !== 0) {\n            fmul = 1.0 / _xmult;\n        } else {\n            fmul = 1.0;\n        }\n\n        // Figure out how many characters can fit between tics\n        var xlbl_maxlen = Math.min(12, Math.round(fact * xTIC.dtic) / Mx.text_w);\n\n        // The sp flag decides if all tics should be labeled, or just the first tic.\n        // in LEGACY rendering when sp=0 you should get one tic at the start\n        // that then displays like XPOS += tic-delta\n        //\n        // The original logic basically says, if the tic-delta (i.e. dtic) is very small\n        // relative to the first tic, only render the first tic.  Specifically:\n        //    sp = (Math.abs(xTIC.dtic) / Math.max(Math.abs(xTIC.dtic1), Math.abs(xTIC.dtic)) > 1.0e-6);\n        //\n        // However, it's probably more important to decide this based off the significant digits of the\n        // tic labels.  In other words, if the tics cannot be labeled uniquely then you need to make sp=0.\n        var sp = 1;\n        var x;\n        var xlbl = \"\";\n        if (xticlabels) {\n            if (flags.xtimecode) {\n                xlbl = m.sec2tod(xTIC.dtic1);\n                // If the label is no longer than half of the total width display multiple labels\n                sp = (xlbl.length * Mx.text_w < (iscr - iscl) / 2);\n            } else {\n                // Ensure that all of the tic labels will render uniquely\n                var last_xlbl;\n                for (x = xTIC.dtic1; x <= stk1.xmax; x = x + xTIC.dtic) {\n                    xlbl = mx.format_f(x * fmul, xlbl_maxlen, xlbl_maxlen / 2);\n                    if (xlbl === last_xlbl) {\n                        sp = 0;\n                        break;\n                    }\n                    last_xlbl = xlbl;\n                }\n            }\n        }\n        if (xTIC.dtic === 0) {\n            xTIC.dtic = stk1.xmax - xTIC.dtic1 + 1.0;\n        }\n\n        var i;\n        ix = 0;\n        xlbl = \"\";\n        for (x = xTIC.dtic1; x <= stk1.xmax; x = x + xTIC.dtic) {\n            i = iscl + Math.round(fact * (x - stk1.xmin)) + 2;\n            if (i < iscl) {\n                continue;\n            }\n            if (flags.grid && flags.grid !== \"y\") {\n                if (!flags.gridStyle) {\n                    if (mx.LEGACY_RENDER) {\n                        flags.gridStyle = {\n                            mode: \"dashed\",\n                            on: 1,\n                            off: 3\n                        };\n                    } else {\n                        flags.gridStyle = {\n                            \"color\": Mx.xwms,\n                            mode: \"dashed\",\n                            on: 1,\n                            off: 3\n                        };\n                    }\n                }\n                mx.textline(Mx, i, iscb, i, isct, flags.gridStyle);\n            } else {\n                mx.textline(Mx, i, iscb - 2, i, iscb + 2);\n                mx.textline(Mx, i, isct - 2, i, isct + 2);\n            }\n            if (xticlabels) {\n                if (sp) {\n                    xlbl = null;\n                    if (flags.xtimecode) {\n                        // If we have enough space to draw the next tic label\n                        if (i > ix) {\n                            xlbl = m.sec2tod(x, true);\n                            ix = i + (Mx.text_w * (xlbl.length + 1));\n                        }\n                    } else {\n                        xlbl = mx.format_f(x * fmul, xlbl_maxlen, xlbl_maxlen / 2);\n                        xlbl = trimlabel(xlbl, true);\n                    }\n                    if (xlbl) {\n                        var itexti = Math.round(xlbl.length / 2) * Mx.text_w;\n                        if (flags.inside) {\n                            i = Math.max(iscl + itexti, i);\n                            i = Math.min(iscr - itexti, i);\n                        }\n                        if (i - itexti >= 0) {\n                            mx.text(Mx, i - itexti, jtext, xlbl);\n                        }\n                    }\n                } else if (x === xTIC.dtic1) {\n                    if (flags.xtimecode) {\n                        xlbl = m.sec2tod(x, true);\n                        if (flags.inside) {\n                            i = Math.floor(Math.max(iscl + itext, i));\n                        }\n                        mx.text(Mx, i - itext, jtext, xlbl + \" +\\u0394 \" + m.sec2tod(xTIC.dtic));\n                    } else {\n                        xlbl = (xTIC.dtic1 * fmul).toString();\n                        if (flags.inside) {\n                            i = Math.floor(Math.max(iscl + itext, i));\n                        }\n                        mx.text(Mx, i - itext, jtext, xlbl + \" +\\u0394 \" + (xTIC.dtic * fmul));\n                    }\n                }\n            }\n        }\n\n        // Add y-tick marks\n        if (flags.yonright) { // TODO - yonright probably doesn't work\n            if (flags.inside) {\n                itext = Math.min(iscr - 6 * Mx.text_w, Mx.width - 5 * Mx.text_w);\n            } else {\n                itext = Math.min(iscr + Mx.text_w, Mx.width - 5 * Mx.text_w);\n            }\n        } else {\n            if (flags.inside) {\n                itext = Math.max(0, iscl + Mx.text_w);\n            } else {\n                itext = Math.max(0, Math.floor(iscl - (Mx.l - 0.5) * Mx.text_w));\n            }\n        }\n        jtext = 0.4 * Mx.text_h;\n        if (stk1.ymin !== stk1.ymax) {\n            fact = -height / (stk1.ymax - stk1.ymin);\n        } else {\n            fact = -height / 1.0;\n        }\n        if (_ymult !== 0) {\n            fmul = 1.0 / _ymult;\n        } else {\n            fmul = 1;\n        }\n        var ytic, ytic1, endtic;\n        if (yTIC.dtic === 0) {\n            ytic = stk1.ymax - ytic1 + 1.0;\n        }\n        if (stk1.ymax >= stk1.ymin) {\n            endtic = function(val) {\n                return (val <= stk1.ymax);\n            };\n        } else {\n            endtic = function(val) {\n                return (val >= stk1.ymax);\n            };\n        }\n        var ylbl;\n        for (var y = yTIC.dtic1; endtic(y); y = y + yTIC.dtic) {\n            i = iscb + Math.round(fact * (y - stk1.ymin)) - 2;\n            if (i > iscb) {\n                continue;\n            }\n            if (flags.grid && flags.grid !== \"x\") {\n                if (!flags.gridStyle) {\n                    flags.gridStyle = {\n                        mode: \"dashed\",\n                        on: 1,\n                        off: 3\n                    };\n                }\n                mx.textline(Mx, iscl, i, iscr, i, flags.gridStyle);\n            } else {\n                mx.textline(Mx, iscl - 2, i, iscl + 2, i);\n                mx.textline(Mx, iscr - 2, i, iscr + 2, i);\n            }\n            if (yticlabels) {\n                // TODO\n                if (flags.inside &&\n                    ((i < isct + Mx.text_h) || (i > iscb - Mx.text_h * 2))) {\n                    // out of range for inside labels\n                } else if (flags.ytimecode) {\n                    ylbl = m.sec2tod(y); // don't trim zeros because we use them later\n                    // y-axis timecodes\n                    // use three lines\n                    // YYYY:MM:DD\n                    // HH:MM\n                    // SS.factional\n                    var k = i + jtext - Mx.text_h;\n                    var sep = ylbl.indexOf(\"::\");\n                    if (sep !== -1) {\n                        if (k > isct && k < iscb) {\n                            // it the label has space, draw it\n                            mx.text(Mx, itext, k, ylbl.substring(0, sep));\n                        }\n                        sep += 1; // adjust for the next stage\n                    }\n                    // The draw the primary portion\n                    mx.text(Mx, itext, Math.min(iscb, i + jtext), ylbl.substring(sep + 1, sep + 6));\n                    // Finally the sections portion if it fits on the screen\n                    // and is necessary\n                    k = i + jtext + Mx.text_h;\n                    if ((k > isct && k < iscb)) {\n                        if (ylbl.substring(sep + 7, sep + 9) !== \"00\") {\n                            // add the .00 which is safe to do unconditionally because\n                            // we truncate on the following line and we know that\n                            // sec2tod either returns no decimal places or 6 decimal places\n                            ylbl = ylbl + \".00\";\n                            mx.text(Mx, itext, k, ylbl.substring(sep + 7, sep + 12));\n                        }\n                    }\n                } else {\n                    ylbl = mx.format_f(y * fmul, 12, 6);\n                    ylbl = trimlabel(ylbl, flags.inside);\n                    mx.text(Mx, itext, Math.min(iscb, i + jtext), ylbl);\n                }\n            }\n        }\n    };\n\n    /**\n     * @param x\n     * @param y\n     * @param rect_x\n     * @param rect_y\n     * @param rect_width\n     * @param rect_height\n     * @private\n     */\n    mx.inrect = function(x, y, rect_x, rect_y, rect_width, rect_height) {\n        return (x >= rect_x && x <= rect_x + rect_width &&\n            y >= rect_y && y <= rect_y + rect_height);\n    };\n    /**\n     * @private\n     */\n    var MENU_CONSTANTS = {\n        GBorder: 3,\n        sidelab: 0,\n        toplab: 1,\n        n_show: 0\n    };\n\n    /**\n     * @method _menu_redraw\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_redraw(Mx, menu) {\n        if (menu.animationFrameHandle) {\n            return;\n        }\n        // Use the current mouse position and the size of the plot to determine available space\n        //var mouse_pos = Mx.ypos; TODO: Use mouse position\n        var plot_height = Mx.canvas.height;\n        var buffer_sz = 35; // estimate of how much of the canvas is spacing around plot\n        var avail_space = plot_height - 2 * buffer_sz;\n\n        // Calculate how many menu items can fit inside that space\n        var menu_item_height = Mx.text_h * 1.5;\n        var n_items = Math.floor(avail_space / menu_item_height);\n        if (n_items >= menu.items.length) {\n            MENU_CONSTANTS.n_show = menu.items.length;\n        } else {\n            MENU_CONSTANTS.n_show = n_items;\n        }\n\n\n        menu.animationFrameHandle = requestAnimFrame(mx.withWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n\n            menu.animationFrameHandle = undefined;\n            var yb = Mx.text_h * 1.5;\n            menu.x = Math.max(menu.x, 0);\n            menu.y = Math.max(menu.y, 0);\n            menu.x = Math.min(menu.x, Mx.width - menu.w);\n            menu.y = Math.min(menu.y, Mx.height - menu.h);\n\n            var xcc = menu.x + MENU_CONSTANTS.GBorder + Math.max(0, MENU_CONSTANTS.sidelab);\n            var ycc = menu.y + MENU_CONSTANTS.GBorder + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            var xss = menu.w - 2 * MENU_CONSTANTS.GBorder - Math.abs(MENU_CONSTANTS.sidelab);\n            var yss = menu.h - 2 * MENU_CONSTANTS.GBorder - MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            mx.widgetbox(Mx, menu.x, menu.y, menu.w, menu.h, xcc, ycc, xss, yss, menu.title);\n\n            //ctx.fillStyle = xwlo;\n            //ctx.fillRect(xcc, ycc, xss, yss);\n\n            var ctx = Mx.wid_canvas.getContext(\"2d\");\n            ctx.lineWidth = 1;\n\n            ctx.strokeStyle = Mx.xwbs; // xwbs\n            ctx.beginPath();\n            ctx.moveTo(xcc, ycc - 4 + 0.5);\n            ctx.lineTo(xcc + xss - 1, ycc - 4 + 0.5);\n            ctx.stroke();\n\n            ctx.strokeStyle = Mx.xwts; // xwts\n            ctx.beginPath();\n            ctx.moveTo(xcc, ycc - 3 + 0.5);\n            ctx.lineTo(xcc + xss - 1, ycc - 3 + 0.5);\n            ctx.stroke();\n\n            var i_begin = menu.queue[0];\n            var i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n            if (i_end === 0) {\n                // now we are starting over\n                for (var q = 0; q < MENU_CONSTANTS.n_show; q++) {\n                    menu.queue[q] = q;\n                }\n                i_begin = menu.queue[0];\n                i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n            }\n            var menu_counter = 0;\n            for (var i = i_begin; i <= i_end; i++) {\n                var item = menu.items[i];\n                var y = ycc + yb * menu_counter;\n                menu_counter = menu_counter + 1;\n\n                if (item.style === \"separator\") {\n                    ctx.fillStyle = Mx.xwbs;\n                    ctx.fillRect(xcc, y, xss, yb);\n\n                    ctx.beginPath();\n                    ctx.moveTo(xcc, y + 0.5);\n                    ctx.lineTo(xcc + xss, y + 0.5);\n                    ctx.stroke();\n\n                    ctx.textBaseline = \"middle\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = Mx.xwfg;\n                    ctx.fillText(\" \" + item.text + \" \", xcc + Mx.text_w * 2, y + yb / 2);\n                } else {\n                    if (mx.LEGACY_RENDER) {\n                        ctx.fillStyle = Mx.xwlo;\n                        ctx.fillRect(xcc, y, xss, yb);\n                        ctx.beginPath();\n                        ctx.moveTo(xcc, y + 0.5);\n                        ctx.lineTo(xcc + xss, y + 0.5);\n                        ctx.stroke();\n                        if (item.selected) {\n                            mx.shadowbox(Mx, xcc - 1, y, xss + 2, yb, 1, 2, \"\", 0.75);\n                        }\n                    } else {\n                        ctx.save();\n                        ctx.globalAlpha = 0.75;\n                        if (item.selected) {\n                            ctx.fillStyle = Mx.xwts;\n                        } else {\n                            ctx.fillStyle = Mx.xwlo;\n                        }\n                        ctx.fillRect(xcc, y, xss, yb);\n                        ctx.restore();\n                        ctx.strokeStyle = Mx.bg;\n                        ctx.beginPath();\n                        ctx.moveTo(xcc, y + 0.5);\n                        ctx.lineTo(xcc + xss, y + 0.5);\n                        ctx.stroke();\n                    }\n\n                    ctx.textBaseline = \"middle\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = Mx.xwfg;\n                    if (item.style === \"checkbox\") {\n                        ctx.fillText(\" \" + item.text + \" \", xcc + Mx.text_w * 2, y + yb / 2);\n                        ctx.strokeStyle = Mx.xwfg;\n                        ctx.strokeRect(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2), Mx.text_w, Mx.text_w);\n                        if (item.checked) {\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2));\n                            ctx.lineTo(xcc + 1 + Mx.text_w + Mx.text_w, y + ((yb - Mx.text_w) / 2) + Mx.text_w);\n                            ctx.stroke();\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1 + Mx.text_w + Mx.text_w, y + ((yb - Mx.text_w) / 2));\n                            ctx.lineTo(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2) + Mx.text_w);\n                            ctx.stroke();\n                        }\n                    } else {\n                        ctx.fillText(\" \" + item.text + \" \", xcc, y + yb / 2);\n\n                        // draw the triangle\n                        if (item.checked) {\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1, y + Mx.text_h / 4);\n                            ctx.lineTo(xcc + 1 + Mx.text_w - 2, y + Mx.text_h / 4 + Mx.text_h / 2);\n                            ctx.lineTo(xcc + 1, y + Mx.text_h / 4 + Mx.text_h);\n                            ctx.lineTo(xcc + 1, y + Mx.text_h / 4);\n                            ctx.fill();\n                        }\n                    }\n                }\n            }\n\n\n        }));\n    }\n\n    /**\n     * @method _menu_takeaction\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_takeaction(Mx, menu) {\n        mx.onWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n        });\n        Mx.menu = undefined;\n        Mx.widget = null;\n\n        for (var i = 0; i < menu.items.length; i++) {\n            var item = menu.items[i];\n            if (item.selected) {\n                if (item.handler) {\n                    item.handler();\n                } else if (item.menu) {\n                    var newmenu = item.menu;\n                    if (typeof item.menu === 'function') {\n                        newmenu = item.menu();\n                    }\n                    newmenu.finalize = menu.finalize;\n                    mx.menu(Mx, newmenu);\n                }\n                break;\n            }\n        }\n        if ((!Mx.menu) && (menu.finalize)) {\n            menu.finalize();\n        }\n    }\n\n    /**\n     * @method _menu_dismiss\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_dismiss(Mx, menu) {\n        mx.onWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n        });\n        Mx.menu = undefined;\n        Mx.widget = null;\n\n        if ((!Mx.menu) && (menu.finalize)) {\n            menu.finalize();\n        }\n    }\n\n    /**\n     * @method _menu_callback\n     * @param Mx\n     * @param menu\n     * @param event\n     * @private\n     */\n    function _menu_callback(Mx, menu, event) {\n        // Keep track of whats visible currently\n        var i_begin = menu.queue[0];\n        var i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n        if (event === undefined) {\n            // no event, just refresh the menu\n            _menu_redraw(Mx, menu);\n        } else if (event.type === \"mousemove\") {\n            // Update position\n            if (menu.drag_x !== undefined && menu.drag_y !== undefined && Math.abs(Mx.xpos - menu.drag_x) > 2 && Math.abs(Mx.ypos - menu.drag_y) > 2) {\n                menu.x += Mx.xpos - menu.drag_x;\n                menu.y += Mx.ypos - menu.drag_y;\n                menu.drag_x = Mx.xpos;\n                menu.drag_y = Mx.ypos;\n            }\n\n            // All of these variables suck and are common in other places...refactoring is necessary\n            var xcc = menu.x + MENU_CONSTANTS.GBorder + Math.max(0, MENU_CONSTANTS.sidelab);\n            var xss = menu.w - 2 * MENU_CONSTANTS.GBorder - Math.abs(MENU_CONSTANTS.sidelab);\n            var yb = Mx.text_h * 1.5;\n            var ycc = menu.y + MENU_CONSTANTS.GBorder + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            for (var i = i_begin; i <= i_end; i++) {\n                var y = ycc + yb * i;\n                var item = menu.items[i];\n                item.selected = false;\n                if (mx.inrect(Mx.xpos, Mx.ypos, xcc, y, xss, yb)) {\n                    item.selected = true;\n                }\n            }\n            _menu_redraw(Mx, menu);\n        } else if (event.type === \"mouseup\") {\n            // No longer dragging menu\n            if (event.which === 1) {\n                if ((menu.drag_x !== undefined) && (menu.drag_y !== undefined)) {\n                    menu.drag_x = undefined;\n                    menu.drag_y = undefined;\n                } else {\n                    _menu_takeaction(Mx, menu);\n                }\n            } else if (event.which === 3) {\n                _menu_dismiss(Mx, menu);\n            }\n        } else if (event.type === \"mousedown\") {\n            event.preventDefault();\n            if (event.which === 1) {\n                if (Mx.xpos > menu.x && Mx.xpos < (menu.x + menu.w) && Mx.ypos > menu.y && Mx.ypos < (menu.y + Mx.text_h * 1.5)) {\n                    menu.drag_x = Mx.xpos;\n                    menu.drag_y = Mx.ypos;\n                }\n            } else if (event.which === 2) {\n                _menu_takeaction(Mx, menu);\n            }\n        } else if (event.type === \"keydown\") {\n            // Remember that keydown triggers periodically while a key is held\n            if (Mx.menu) {\n                var menu = Mx.menu;\n                event.preventDefault();\n                var keyCode = common.getKeyCode(event);\n                if (keyCode === 13) { // enter\n                    _menu_takeaction(Mx, menu);\n                } else if (keyCode === 38) { // up arrow\n                    for (var i = i_begin; i < i_end; i++) {\n                        var item = menu.items[i];\n                        if (item.selected) {\n                            item.selected = false;\n                            if (menu.items[i - 1] !== undefined) {\n                                menu.items[i - 1].selected = true;\n                            }\n                            break;\n                        } else if (i === i_begin && i_begin !== 0) {\n                            // we are at the end of the list and nothing was selected so pick the last element\n                            //item.selected = true;\n                            menu.queue.pop();\n                            menu.queue.unshift(i_begin - 1);\n                            _menu_redraw(Mx, menu);\n                            menu.items[i_end - 1].selected = true;\n\n                        } else if (i_begin === 0 && menu.items[i_begin].selected === true) {\n                            _menu_redraw(Mx, menu);\n                            menu.items[0].selected = true;\n                        }\n                    }\n                    _menu_redraw(Mx, menu);\n                } else if (keyCode === 40) { // down arrow\n                    for (var i = i_begin; i < i_end; i++) {\n                        var item = menu.items[i];\n                        if (item.selected) {\n                            item.selected = false;\n                            if (menu.items[i + 1] !== undefined) {\n                                menu.items[i + 1].selected = true;\n                            }\n                            break;\n                        } else if (i === (i_end - 1)) {\n                            // nothing was selected so select the top\n                            var next_item = i_end + 1;\n\n                            if (i_end + 1 === menu.items.length) {\n                                next_item = 0;\n                            }\n\n                            menu.queue.shift();\n                            menu.queue.push(next_item);\n                            menu.items[i_end].selected = false;\n                            menu.items[next_item].selected = true;\n                            _menu_redraw(Mx, menu);\n                        }\n                    }\n                    _menu_redraw(Mx, menu);\n                } else if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 65 && keyCode <= 90)) {\n                    var inp = String.fromCharCode(keyCode).toUpperCase();\n\n                    if (menu.keypresses === undefined) {\n                        menu.keypresses = inp;\n                    } else {\n                        menu.keypresses = menu.keypresses + inp;\n                    }\n\n                    var matches = 0;\n                    for (var i = 0; i < menu.items.length; i++) {\n                        var item = menu.items[i];\n                        item.selected = false;\n                        if (!item.text) {\n                            continue;\n                        }\n\n                        if (item.text.toUpperCase().indexOf(menu.keypresses) === 0) {\n                            if (matches === 0) {\n                                item.selected = true;\n                            }\n                            matches++;\n                        }\n                    }\n\n                    if (matches === 0) {\n                        menu.keypresses = undefined;\n                        _menu_redraw(Mx, menu);\n                    } else if (matches === 1) {\n                        _menu_takeaction(Mx, menu);\n                    } else {\n                        _menu_redraw(Mx, menu);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    mx.menu = function(Mx, menu) {\n        var yb = Mx.text_h * 1.5;\n        //MENU_CONSTANTS.n_show = menu.items.length;\n\n        var plot_height = Mx.canvas.height;\n        var buffer_sz = 35; // estimate of how much of the canvas is spacing around plot\n        var avail_space = plot_height - 2 * buffer_sz;\n        // Calculate how many menu items can fit inside that space\n        var menu_item_height = Mx.text_h * 1.5;\n        var n_items = Math.floor(avail_space / menu_item_height);\n        if (n_items >= menu.items.length) {\n            MENU_CONSTANTS.n_show = menu.items.length;\n        } else {\n            MENU_CONSTANTS.n_show = n_items;\n        }\n\n        if (menu) {\n            if (!Mx.widget) {\n                menu.x = Mx.xpos;\n                menu.y = Mx.ypos;\n                menu.val = 0;\n\n                menu.h = MENU_CONSTANTS.GBorder * 2 + yb * MENU_CONSTANTS.n_show + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder) - 1;\n                menu.y = menu.y - ((MENU_CONSTANTS.toplab + (Math.max(1, menu.val)) - 0.5) * yb + (1 + MENU_CONSTANTS.toplab) * MENU_CONSTANTS.GBorder) + 1;\n\n                var xb = menu.title.length;\n                var yadj = 0;\n                for (var i = 0; i < menu.items.length; i++) {\n                    var item = menu.items[i];\n                    xb = Math.max(xb, item.text.length);\n                    if (item.style === \"checkbox\") {\n                        xb += 2;\n                    }\n                    if (item.style === \"separator\") {\n                        xb += 2;\n                    }\n                    if (item.checked && item.style !== \"checkbox\") {\n                        yadj = yb * i;\n                    }\n                }\n\n                menu.queue = [];\n\n                for (var q = 0; q < MENU_CONSTANTS.n_show; q++) {\n                    menu.queue.push(q);\n\n                }\n\n                menu.y = menu.y - yadj;\n                xb += 2;\n                xb = xb * Mx.text_w;\n\n                menu.w = MENU_CONSTANTS.GBorder * 2 + Math.abs(MENU_CONSTANTS.sidelab) + xb - 1;\n                menu.x = menu.x - menu.w / 2;\n\n                Mx.menu = menu;\n\n                Mx.widget = {\n                    type: \"MENU\",\n                    callback: function(event) {\n                        _menu_callback(Mx, menu, event);\n                    }\n                };\n            }\n            _menu_redraw(Mx, menu);\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param inx\n     * @param iny\n     * @param inw\n     * @param inh\n     * @param name\n     * @private\n     */\n    mx.widgetbox = function(Mx, x, y, w, h, inx, iny, inw, inh, name) {\n        var GBorder = 3;\n        mx.shadowbox(Mx, x, y, w, h, 1, 2, \"\", 0.75);\n        if (name) {\n            var length = name.length;\n            length = Math.min(length, w / Mx.text_w);\n            length = Math.max(length, 1);\n            var xt = x + (w - length * Mx.text_w) / 2;\n            y += GBorder;\n            var yt = y + (iny - y + 0.7 * Mx.text_h) / 2;\n\n            mx.text(Mx, xt, yt, name, Mx.xwfg);\n        }\n        if (inw > 0 && inh > 0) {\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            if (mx.LEGACY_RENDER) {\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(inx, iny, inw, inh);\n            } else {\n                ctx.save();\n                ctx.globalAlpha = 0.1;\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(inx, iny, inw, inh);\n                ctx.restore();\n            }\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param lbl\n     * @param color\n     * @private\n     */\n    //\n    // ~= MX$TEXT\n    //\n    mx.text = function(Mx, x, y, lbl, color) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        x = Math.max(0, x);\n        y = Math.max(0, y);\n        if ((x < 0) || (y < 0)) {\n            throw \"On No!\";\n        }\n        ctx.textBaseline = \"bottom\";\n        ctx.textAlign = \"left\";\n        ctx.font = Mx.font.font;\n        if (color === undefined) {\n            ctx.fillStyle = Mx.fg;\n        } else {\n            ctx.fillStyle = color;\n        }\n\n        ctx.fillText(lbl, x, y);\n    };\n\n    /**\n     * @method clipt\n     * @param denom\n     * @param num\n     * @param o\n     * @private\n     */\n    // ~= glibf1.for CLIPT\n    function clipt(denom, num, o) {\n        var accept = true;\n        var t;\n\n        t = num / denom;\n        if (denom > 0) {\n            if (t > o.tL) {\n                accept = false;\n            } else if (t > o.tE) {\n                o.tE = t;\n            }\n        } else if (denom < 0) {\n            if (t < o.tE) {\n                accept = false;\n            } else if (t < o.tL) {\n                o.tL = t;\n            }\n        } else {\n            if (num > 0) {\n                accept = false;\n            }\n        }\n\n        return accept;\n    }\n\n    /**\n     * Method which draws a line in a graphics context.\n     * In the graphics context provided, draws a line.\n     * Mimics XLib's XDrawLines method in at least the basic functionality.\n     * @method draw_line\n     * @param ctx\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param style\n     * @param color\n     * @param width\n     * @private\n     */\n    function draw_line(ctx, x1, y1, x2, y2, style, color, width) {\n        // For odd width lines (i.e. 1,3,5...) if you draw right\n        // on the pixel boundry the canvas will actually draw a slightly\n        // grey line 2 px wide.  You have to add .5 to get what you want.\n\n        // Handle boundary cases - instead of throwing an exception, just bound\n        // the value to 0\n        if (x1 < 0) {\n            x1 = 0;\n        }\n        if (y1 < 0) {\n            y1 = 0;\n        }\n        if (x2 < 0) {\n            x2 = 0;\n        }\n        if (y2 < 0) {\n            y2 = 0;\n        }\n\n        if (width) {\n            ctx.lineWidth = width;\n        }\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        if (ctx.lineWidth % 2 === 1) {\n            if (x1 === x2) {\n                x1 = Math.floor(x1) + 0.5;\n                x2 = x1;\n            }\n            if (y1 === y2) {\n                y1 = Math.floor(y1) + 0.5;\n                y2 = y1;\n            }\n        }\n\n        if (!style || !style.mode) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n            ctx.beginPath();\n        } else if (style.mode === \"dashed\") {\n            var dash_supported = common.dashOn(ctx, style.on, style.off);\n            if (dash_supported) {\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n                common.dashOff(ctx);\n                ctx.beginPath();\n            } else {\n                // Fallback that only supports vertical/horizontal\n                ctx.beginPath();\n                if (y1 === y2) {\n                    var x = Math.min(x1, x2);\n                    x2 = Math.max(x1, x2);\n                    while (x < x2) {\n                        ctx.moveTo(x, y1);\n                        ctx.lineTo(x + style.on, y1);\n                        ctx.stroke();\n                        x += (style.on + style.off);\n                    }\n                } else if (x1 === x2) {\n                    // vertical line\n                    var y = Math.min(y1, y2);\n                    y2 = Math.max(y1, y2);\n                    while (y < y2) {\n                        ctx.moveTo(x1, y);\n                        ctx.lineTo(x1, y + style.on);\n                        ctx.stroke();\n                        y += (style.on + style.off);\n                    }\n                } else {\n                    throw \"Only horizontal or vertical dashed lines are supported\";\n                }\n                ctx.beginPath();\n            }\n        } else if (style.mode === \"xor\") {\n            if (typeof Uint8ClampedArray === 'undefined') {\n                // we don't have typed arrays, so canvas getImageData operations\n                // will be very slow, so use color instead\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n                ctx.beginPath();\n            } else {\n                // currently xor-style is only supported for horizontal or vertical lines\n                var w = 0;\n                var h = 0;\n                if (y1 === y2) {\n                    w = Math.abs(x2 - x1);\n                    h = width;\n                    x1 = Math.min(x1, x2);\n                } else if (x1 === x2) {\n                    w = width;\n                    h = Math.abs(y2 - y1);\n                    y1 = Math.min(y1, y2);\n                } else {\n                    throw \"Only horizontal and vertical lines can be drawn with XOR\";\n                }\n\n                if ((w === 0) || (h === 0)) {\n                    return;\n                }\n\n                x1 = Math.floor(x1);\n                y1 = Math.floor(y1);\n                var imgd = ctx.getImageData(x1, y1, w, h);\n                var pix = imgd.data;\n                // Loop over each pixel and invert the color.\n                for (var i = 0, n = pix.length; i < n; i += 4) {\n                    pix[i] = 255 - pix[i]; // red\n                    pix[i + 1] = 255 - pix[i + 1]; // green\n                    pix[i + 2] = 255 - pix[i + 2]; // blue\n                    pix[i + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x1, y1);\n                ctx.clearRect(0, 0, 1, 1);\n            }\n        }\n    }\n\n    /**\n     * Method which draws a polygon in a graphics context.\n     * In the graphics context provided, draws a polygon.\n     * Mimics XLib's XDrawLines method in at least the basic functionality.\n     * @method draw_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param color - The color of the rectangle\n     * @param width - The line width to set.\n     * @private\n     */\n    function draw_poly(ctx, pix, color, width) { // TODO Should this be a public method?\n        start_poly(ctx, pix, width);\n\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        ctx.stroke(); // draw the shape outlined in the path\n        ctx.closePath();\n    }\n\n    /**\n     * Method which draws a filled polygon in a graphics context.\n     * In the graphics context provided draws a polygon, then fills it.\n     * Mimics XLib's XFillPolygon method in at least the basic functionality.\n     * Some differences between this and Xlib's method are:\n     *  -no way to specify convex/non-convex\n     *  -no way to specify CoordModeOrigin\n     *  -no need to specify the number of points to draw (plots all points in pix)\n     * @method fill_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param lineColor - The line color of the polygon\n     * @param fillColor - The fill color of the polygon\n     * @param lineWidth - The line width to set\n     * @private\n     */\n    function fill_poly(ctx, pix, lineColor, fillColor, width) { // TODO Should this be a public method?\n        start_poly(ctx, pix, width);\n\n        if (lineColor) {\n            ctx.strokeStyle = lineColor;\n        }\n        if (fillColor) {\n            ctx.fillStyle = fillColor;\n        }\n\n        ctx.fill(); // fill in the shape only, no outline drawn\n        ctx.closePath();\n    }\n\n    /**\n     * Helper method which starts drawing a polygon in a graphics context.\n     * In the graphics context provided, begins a path at the first point in pix,\n     * then draws lines from each point in pix to the next. It also sets the width\n     * of the line.\n     * @method start_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param width - The line width to set.\n     * @private\n     */\n    function start_poly(ctx, pix, width) {\n        if (pix.length < 1) {\n            return;\n        }\n\n        var x = pix[0].x;\n        var y = pix[0].y;\n\n        if (width) {\n            ctx.lineWidth = width;\n        } else {\n            ctx.lineWidth = 1; // Default\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n\n        for (var i = 0; i < pix.length; i++) {\n            x = pix[i].x;\n            y = pix[i].y;\n            ctx.lineTo(x, y);\n        }\n    }\n\n    /**\n     * Method which draws a rectangle (hollowed) in a graphics context.\n     * In the graphics context provided, draws a hollow rectangle.\n     * Mimics XLib's XDrawRectangle method in at least the basic functionality.\n     * @method draw_rectangle\n     * @param ctx - The graphics context to draw in\n     * @param x - The x coordinate\n     * @param y - The y coordinate\n     * @param width - The width of the rectangle\n     * @param height - The height of the rectangle\n     * @param color - The color of the rectangle\n     * @param lineWidth - The line width to set.\n     * @private\n     */\n    function draw_rectangle(ctx, x, y, width, height, color, lineWidth) { // TODO Should this be a public method?\n        if (lineWidth) {\n            ctx.lineWidth = lineWidth;\n        }\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        ctx.strokeRect(x, y, width, height);\n    }\n\n    /**\n     * Method which draws a rectangle (filled) in a graphics context.\n     * In the graphics context provided, draws a filled rectangle.\n     * Mimics XLib's XFillRectangle method in at least the basic functionality.\n     * @method fill_rectangle\n     * @param ctx - The graphics context to draw in\n     * @param x - The x coordinate\n     * @param y - The y coordinate\n     * @param width - The width of the rectangle\n     * @param height - The height of the rectangle\n     * @param fillColor - The fill color of the rectangle\n     * @param strokeColor - The line color of the rectangle\n     * @param lineWidth - The line width to set.\n     * @private\n     */\n    function fill_rectangle(ctx, x, y, width, height, fillColor, strokeColor, lineWidth) { // TODO Should this be a public method?\n        if (lineWidth) {\n            ctx.lineWidth = lineWidth;\n        }\n        if (strokeColor) {\n            ctx.strokeStyle = strokeColor;\n        }\n        if (fillColor) {\n            ctx.fillStyle = fillColor;\n        }\n\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * @method pc2px\n     * @param perc\n     * @private\n     */\n    function pc2px(perc) {\n        return Math.floor(Math.round(255 * (perc / 100)));\n    }\n\n    /**\n     * @method to_rgb\n     * @param red\n     * @param green\n     * @param blue\n     * @private\n     */\n    function to_rgb(red, green, blue) {\n        return \"rgb(\" + Math.round(red) + \", \" + Math.round(green) + \", \" + Math.round(blue) + \")\";\n    }\n\n    /**\n     *\n     * Instead of dealing with color tables and stuff, all we really need\n     * is the ability to on-the-fly generate a color from the map\n     * @param Mx\n     * @param map\n     * @param z\n     * @private\n     */\n    mx.getcolor = function(Mx, map, z) {\n        var iz = 0;\n        for (; iz < 6 && map[iz + 1].pos === 0; iz++) {}\n\n        while (z > map[iz].pos && iz < 6) {\n            iz++;\n        }\n        if ((iz === 0) || (z >= map[iz].pos)) {\n            // above, below, or directly on boundry\n            return to_rgb(\n                pc2px(map[iz].red),\n                pc2px(map[iz].green),\n                pc2px(map[iz].blue));\n        } else {\n            // interpolation my dear watson\n            var pf = (z - map[iz - 1].pos) / (map[iz].pos - map[iz - 1].pos);\n            var zf = pc2px(pf * 100);\n            var zf1 = 255 - zf;\n            return to_rgb(\n                (zf * (map[iz].red / 100) + zf1 * (map[iz - 1].red / 100)), (zf * (map[iz].green / 100) + zf1 * (map[iz - 1].green / 100)), (zf * (map[iz].blue / 100) + zf1 * (map[iz - 1].blue / 100)));\n        }\n    };\n\n    /**\n     * @method trimlabel\n     * @param lbl\n     * @param inside\n     * @private\n     */\n    // ~= glibf1.for TRIMLABEL\n    function trimlabel(lbl, inside) {\n        var k;\n        var j;\n        if (lbl.substring(5, 8) === \".000000\") { // this line seems to always evaluate to false\n            k = 4;\n        } else {\n            k = lbl.length - 1;\n            while (lbl[k] === \"0\") {\n                k = k - 1;\n            }\n        }\n        j = 0;\n        while ((lbl[j] === \" \") && ((k - j + 1 > 5) || inside)) {\n            j = j + 1;\n        }\n        var res = lbl.substring(j, k + 1);\n        if (res.indexOf(\".\") === -1) {\n            res += \".\";\n        }\n        return res;\n    }\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.redraw_warpbox = function(Mx) {\n        if (Mx.warpbox) {\n            if (Mx._animationFrameHandle) {\n                cancelAnimFrame(Mx._animationFrameHandle);\n            }\n            Mx._animationFrameHandle = requestAnimFrame(function() {\n                display_warpbox(Mx);\n            });\n        }\n    };\n\n    /**\n     * @method display_warpbox\n     * @param Mx\n     * @private\n     */\n    function display_warpbox(Mx) {\n        Mx._animationFrameHandle = undefined;\n        var warpbox = Mx.warpbox;\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!warpbox) {\n            return;\n        }\n\n        if (((Mx.xpos >= warpbox.xmin) && (Mx.xpos <= warpbox.xmax)) &&\n            ((Mx.ypos >= warpbox.ymin) && (Mx.ypos <= warpbox.ymax))) {\n\n            // Update the position\n            warpbox.xl = Mx.xpos;\n            warpbox.yl = Mx.ypos;\n\n            // Draw the current box\n            var x = Math.min(warpbox.xo, warpbox.xl);\n            var y = Math.min(warpbox.yo, warpbox.yl);\n            var w = Math.abs(warpbox.xl - warpbox.xo);\n            var h = Math.abs(warpbox.yl - warpbox.yo);\n\n            if ((w === 0) || (h === 0)) {\n                // Nothing to draw\n                return;\n            }\n\n            if (warpbox.mode === \"vertical\") {\n                x = Mx.l;\n                w = Mx.r - Mx.l;\n            } else if (warpbox.mode === \"horizontal\") {\n                y = Mx.t;\n                h = Mx.b - Mx.t;\n            } // else box\n\n            mx.onWidgetLayer(Mx, function() {\n                mx.erase_window(Mx);\n                mx.draw_box(Mx, \"xor\", x, y, w, h, warpbox.style.opacity, warpbox.style.fill_color);\n            });\n        }\n\n    }\n\n    /**\n     * @method log10\n     * @param val\n     * @private\n     */\n    function log10(val) {\n        return Math.log(val) / Math.log(10);\n    }\n\n\n    /**\n     * Attempts to format a number in the same manner\n     * as the FORTRAN format code 1p1g16.9\n     * 1p1g16.9\n     * 16 character fields\n     * 9 for decimals\n     * 3 for exponent (E)\n     * 1 for sign\n     * 1 for starting 0\n     * 1 for decimal point\n     * 1 for blank space\n     *\n     * The E format code is used for scientific (exponential) notation.\n     * The value is rounded to d decimal positions and right-justified\n     * into an external field that is w characters wide. The value of w\n     * must be large enough to include a minus sign when necessary, at least\n     * one digit to the left of the decimal point, the decimal point,\n     * d digits to the right of the decimal point, a plus or minus sign for\n     * the exponent, the character \"e\" or \"E\", and at least two characters for the exponent.\n     *\n     * The G format code uses the F output style when reasonable and\n     * E for other values, but displays exactly d significant digits\n     * rather than d digits following the decimal point.\n     *\n     * @param num\n     * @param w\n     * @param d\n     * @param leading_nonzer\n     * @private\n     */\n    mx.format_g = function(num, w, d, leading_nonzero) {\n        var w = Math.min(w, d + 7);\n        var f = Math.abs(num).toString();\n\n        var decloc = f.indexOf(\".\");\n        // If there is no decimal point, add one at the end.\n        if (decloc === -1) {\n            f = f + \".\";\n            decloc = f.length;\n        }\n\n        var exp = 0;\n        var eloc = f.indexOf(\"e\");\n        // If there is already an 'e' in the string parse it out\n        if (eloc !== -1) {\n            exp = parseInt(f.slice(eloc + 1, f.length), 10);\n            f = f.slice(0, eloc);\n        }\n\n        // Add zero's to the end if necessary\n        var dz = Math.min(d - (f.length - decloc) + 1, d);\n        for (var i = 0; i < dz; i++) {\n            f = f + \"0\";\n        }\n\n        if (num !== 0) {\n            if (Math.abs(num) < 1.0) {\n                if (f.slice(0, 2) === \"0.\") {\n                    // Shift to the left until the first number is non-zero\n                    for (var i = 2; i < f.length; i++) {\n                        if (f[i] === \"0\") {\n                            exp -= 1;\n                        } else {\n                            f = \"0.\" + f.slice(i, i + d);\n                            break;\n                        }\n                    }\n                } else {\n                    f = f.slice(0, d + 2);\n                }\n            } else if (decloc > d) {\n                var exp = Math.max(0, decloc - 1);\n                f = f[0] + \".\" + f.slice(1, d + 1);\n            } else {\n                f = f.slice(0, d + 2);\n            }\n        }\n\n        if (exp === 0) {\n            f = f + \"    \";\n        } else {\n            var e = mx.pad(Math.abs(exp).toString(), 2, \"0\");\n            if (exp < 0) {\n                f = f + \"E-\" + e;\n            } else {\n                f = f + \"E+\" + e;\n            }\n        }\n\n        if (num < 0) {\n            f = \"-\" + f;\n        } else {\n            f = \" \" + f;\n        }\n        return f;\n    };\n\n    /**\n     *\n     * Behave like fortran format code\n     * fs.d\n     * @param num the number to format\n     * @param s the width of digits\n     * @param d number of digits after the decimal\n     * @private\n     */\n    mx.format_f = function(num, s, d) {\n        d = Math.max(Math.min(d, 20), 0);\n        var f = num.toFixed(d).toString();\n        f = mx.pad(f, (s + d), \" \");\n        return f;\n    };\n\n    /**\n     * @param s\n     * @param size\n     * @param c\n     * @private\n     */\n    mx.pad = function(s, size, c) {\n        while (s.length < size) {\n            s = c + s;\n        }\n        return s;\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param shape\n     * @param func\n     * @param label\n     * @private\n     */\n    // ~= MX$SHADOWBOX\n    mx.legacy_shadowbox = function(Mx, x, y, w, h, shape, func, label) {\n        var length = label.length; // Original method declaration includes a length - but it only represents the length of the label\n\n        var xt = 0; // Originally an int\n        var yt = 0; // Originally an int\n        var bw = 0; // Originally an int\n\n        var pix = []; // Originally declared as a size 11 XPoint array\n        for (var cnt = 0; cnt < 11; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var fill = !(func === 1 || func === -1); // Originally a bool\n\n        // Removed the G.BW section - since we don't need to support black & white displays\n\n        var j = (shape === mx.L_ArrowLeft || shape === mx.L_ArrowUp) ? 1 : 2;\n\n        if (func !== 0 && mx.GBorder > 0) {\n            bw = m.trunc(Math.min(w, h) / 3);\n            bw = Math.max(1, Math.min(bw, mx.GBorder));\n        }\n\n        if (bw > 0) {\n            /* outer shape */\n            pix[0].x = pix[1].x = x;\n            pix[8].x = pix[9].x = x + w;\n            pix[1].y = pix[8].y = y;\n            pix[0].y = pix[9].y = y + h;\n\n            switch (shape) {\n                case mx.L_ArrowLeft:\n                    pix[0].y = pix[1].y = y + m.trunc(h / 2);\n                    x += 2;\n                    --w;\n                    break;\n                case mx.L_ArrowRight:\n                    pix[8].y = pix[9].y = y + m.trunc(h / 2);\n                    --x;\n                    --w;\n                    break;\n                case mx.L_ArrowUp:\n                    pix[1].x = pix[8].x = x + m.trunc(w / 2);\n                    y += 2;\n                    --h;\n                    break;\n                case mx.L_ArrowDown:\n                    pix[0].x = pix[9].x = x + m.trunc(w / 2);\n                    --y;\n                    --h;\n                    break;\n            }\n            pix[2] = pix[8];\n            pix[10] = pix[0];\n\n            x += bw;\n            y += bw;\n            w -= 2 * bw;\n            h -= 2 * bw;\n        }\n\n        /* inner shape */\n        pix[4].x = pix[5].x = x;\n        pix[3].x = pix[6].x = x + w;\n        pix[3].y = pix[4].y = y;\n        pix[5].y = pix[6].y = y + h;\n        switch (shape) {\n            case mx.L_ArrowLeft:\n                pix[4].y = pix[5].y = y + m.trunc(h / 2);\n                break;\n            case mx.L_ArrowRight:\n                pix[3].y = pix[6].y = y + m.trunc(h / 2);\n                break;\n            case mx.L_ArrowUp:\n                pix[3].x = pix[4].x = x + m.trunc(w / 2);\n                break;\n            case mx.L_ArrowDown:\n                pix[5].x = pix[6].x = x + m.trunc(w / 2);\n                break;\n        }\n        pix[7] = pix[3];\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (bw > 0) {\n            ctx.fillStyle = (func > 0) ? Mx.xwts : Mx.xwbs; // Set foreground color\n            fill_poly(ctx, pix.slice(0, 7));\n            //\tif (shape !== 1) { draw_poly(ctx, pix.slice(0,7)); } // TODO what shape is this neccessary with - causes an issue with arrows\n\n            ctx.fillStyle = (func < 0) ? Mx.xwts : Mx.xwbs; // Set foreground color\n            fill_poly(ctx, pix.slice(5, 11));\n            //if (shape !== 1) { draw_poly(ctx, pix.slice(5, 11)); } // TODO what shape is this neccessary with - causes an issue with arrows\n        }\n\n        if (fill) {\n            ctx.fillStyle = Mx.xwbg; // Set foreground color\n            fill_poly(ctx, pix.slice(3, 8));\n            //if (shape !== 1) { draw_poly(ctx, pix.slice(3, 8)); } // TODO what shape is this neccessary with - causes an issue with arrows\n        }\n\n        ctx.fillStyle = Mx.xwfg; // Set foreground color\n        ctx.textBaseline = \"alphabetic\"; // Reset vertical text alignment\n\n        if (fill && length > 0) {\n            length = Math.min(length, m.trunc(w / Mx.text_w));\n            length = Math.max(length, 1);\n            xt = x + m.trunc((w - length * Mx.text_w) / 2);\n            yt = y + m.trunc((h + 0.7 * Mx.text_h) / 2);\n            ctx.fillText(label, xt, yt); // Draw a string\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param shape\n     * @param func\n     * @param label\n     * @private\n     */\n    // ~= MX$SHADOWBOX\n    mx.sigplot_shadowbox = function(Mx, x, y, w, h, shape, func, label, alpha) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var length = label.length; // Original method declaration includes a length - but it only represents the length of the label\n\n        var color = (func < 0) ? Mx.xwts : Mx.xwbs;\n\n        alpha = alpha || 1.0;\n\n        var pix = []; // Originally declared as a size 11 XPoint array\n        for (var cnt = 0; cnt < 11; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n\n        switch (shape) {\n            case mx.L_ArrowLeft:\n            case mx.L_ArrowRight:\n            case mx.L_ArrowUp:\n            case mx.L_ArrowDown:\n                var pix = mx.chevron(shape, x, y, w, h);\n                ctx.fillStyle = (func > 0) ? Mx.xwts : Mx.xwbs;\n                fill_poly(ctx, pix.slice(0, 6));\n                break;\n            default:\n                mx.draw_round_box(Mx, color, x, y, w, h, alpha, Mx.xwbg, 5, Mx.xwbs);\n                break;\n        }\n\n        ctx.fillStyle = Mx.xwfg; // Set foreground color\n        ctx.textBaseline = \"alphabetic\"; // Reset vertical text alignment\n\n        var fill = !(func === 1 || func === -1); // Originally a bool\n        if (fill && length > 0) {\n            length = Math.min(length, m.trunc(w / Mx.text_w));\n            length = Math.max(length, 1);\n            var xt = x + m.trunc((w - length * Mx.text_w) / 2);\n            var yt = y + m.trunc((h + 0.7 * Mx.text_h) / 2);\n            ctx.fillText(label, xt, yt); // Draw a string\n        }\n    };\n\n    if (mx.LEGACY_RENDER) { // TODO new-style conditional\n        mx.shadowbox = mx.legacy_shadowbox;\n    } else {\n        mx.shadowbox = mx.sigplot_shadowbox;\n    }\n\n    mx.chevron = function(shape, x, y, w, h, e) {\n        // Figure out the largest square dimension\n        var q = Math.min(w, h);\n\n        // if the edge width isn't provided use a decent one\n        if (!e) {\n            e = q * 0.25;\n        }\n\n\n\n        // Initialize the pixel array\n        var pix = [];\n        for (var cnt = 0; cnt < 6; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n\n        var x_offset = m.trunc(((w - q) / 2) + (q / 4) - (e / (2 * 1.414)));\n        var y_offset = m.trunc(((h - q) / 2) + (q / 4) - (e / (2 * 1.414)));\n        switch (shape) {\n            case mx.L_ArrowLeft:\n                // Chevron points from the tip around the edge clockwise\n                pix[0].x = x + x_offset;\n                pix[0].y = y + m.trunc(q / 2);\n                pix[1].x = x + x_offset + m.trunc(q / 2);\n                pix[1].y = y;\n                pix[2].x = x + x_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[2].y = y + m.trunc(e / 1.414);\n                pix[3].x = x + x_offset + m.trunc((2 * e) / 1.414);\n                pix[3].y = y + m.trunc(q / 2);\n                pix[4].x = x + x_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[4].y = y + h - m.trunc(e / 1.414);\n                pix[5].x = x + x_offset + m.trunc(q / 2);\n                pix[5].y = y + q;\n                break;\n            case mx.L_ArrowRight:\n                // Chevron points from the tip around the edge clockwise\n                pix[0].x = x + w - x_offset;\n                pix[0].y = y + m.trunc(q / 2);\n                pix[1].x = x + w - x_offset - m.trunc(q / 2);\n                pix[1].y = y;\n                pix[2].x = x + w - x_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[2].y = y + m.trunc(e / 1.414);\n                pix[3].x = x + w - x_offset - m.trunc((2 * e) / 1.414);\n                pix[3].y = y + m.trunc(q / 2);\n                pix[4].x = x + w - x_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[4].y = y + h - m.trunc(e / 1.414);\n                pix[5].x = x + w - x_offset - m.trunc(q / 2);\n                pix[5].y = y + q;\n                break;\n            case mx.L_ArrowUp:\n                // Chevron points from the tip around the edge counter-clockwise\n                pix[0].x = x + m.trunc(q / 2);\n                pix[0].y = y + y_offset;\n                pix[1].x = x;\n                pix[1].y = y + y_offset + m.trunc(q / 2);\n                pix[2].x = x + m.trunc(e / 1.414);\n                pix[2].y = y + y_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[3].x = x + m.trunc(q / 2);\n                pix[3].y = y + y_offset + m.trunc((2 * e) / 1.414);\n                pix[4].x = x + w - m.trunc(e / 1.414);\n                pix[4].y = y + y_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[5].x = x + q;\n                pix[5].y = y + y_offset + m.trunc(q / 2);\n                break;\n            case mx.L_ArrowDown:\n                // Chevron points from the tip around the edge counter-clockwise\n                pix[0].x = x + m.trunc(q / 2);\n                pix[0].y = y + h - y_offset;\n                pix[1].x = x;\n                pix[1].y = y + h - y_offset - m.trunc(q / 2);\n                pix[2].x = x + m.trunc(e / 1.414);\n                pix[2].y = y + h - y_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[3].x = x + m.trunc(q / 2);\n                pix[3].y = y + h - y_offset - m.trunc((2 * e) / 1.414);\n                pix[4].x = x + w - m.trunc(e / 1.414);\n                pix[4].y = y + h - y_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[5].x = x + q;\n                pix[5].y = y + h - y_offset - m.trunc(q / 2);\n                break;\n        }\n\n        return pix;\n    };\n\n    /**\n     * @param Mx\n     * @param mouseEvent\n     * @private\n     */\n    // ~= mx_ifevent\n    mx.ifevent = function(Mx, mouseEvent) {\n        Mx.button_press = 0;\n        Mx.button_release = 0;\n        Mx.state_mask = 0;\n\n        var rect = mouseEvent.target.getBoundingClientRect();\n        var eventXPos = (mouseEvent.offsetX === undefined) ? (mouseEvent.pageX - rect.left - window.scrollX) : mouseEvent.offsetX;\n        var eventYPos = (mouseEvent.offsetX === undefined) ? (mouseEvent.pageY - rect.top - window.scrollY) : mouseEvent.offsetY;\n\n        //\t\tvar eventXPos = (mouseEvent.offsetX === undefined) ? mouseEvent.layerX : mouseEvent.offsetX;\n        //\t\tvar eventYPos = (mouseEvent.offsetY === undefined) ? mouseEvent.layerY : mouseEvent.offsetY;\n\n        switch (mouseEvent.type) {\n            case \"mousedown\":\n                Mx.xpos = m.bound(eventXPos, 0, Mx.width);\n                Mx.ypos = m.bound(eventYPos, 0, Mx.height);\n                switch (mouseEvent.which) {\n                    case 1:\n                        Mx.button_press = 1;\n                        break;\n                    case 2:\n                        Mx.button_press = 2;\n                        break;\n                    case 3:\n                        Mx.button_press = 3;\n                        break;\n                    case 4:\n                        Mx.button_press = 4;\n                        break;\n                    case 5:\n                        Mx.button_press = 5;\n                }\n                //Mx.state_mask = TODO\n                break;\n            case \"mouseup\":\n                Mx.xpos = m.bound(eventXPos, 0, Mx.width);\n                Mx.ypos = m.bound(eventYPos, 0, Mx.height);\n                switch (mouseEvent.which) {\n                    case 1:\n                        Mx.button_release = 1;\n                        break;\n                    case 2:\n                        Mx.button_release = 2;\n                        break;\n                    case 3:\n                        Mx.button_release = 3;\n                        break;\n                    case 4:\n                        Mx.button_release = 4;\n                        break;\n                    case 5:\n                        Mx.button_release = 5;\n                }\n                //Mx.state_mask = TODO\n                break;\n        }\n    };\n\n    /**\n     * @param sv\n     * @private\n     */\n    //\n    // ~= scroll_real2pix\n    //\n    // TODO Refactor real2pix to return an object instead of sending in reference vars?\n    mx.scroll_real2pix = function(sv) {\n        // Param types:\n        // sv - mx.SCROLLBAR\n\n        if (sv.range === 0.0) {\n            return {\n                s1: sv.a1,\n                sw: sv.a2 - sv.a1\n            };\n            //\t\t\tout.s1 = sv.a1;\n            //\t\t\tout.sw = sv.a2 - sv.a1;\n        } else {\n            var dv; // real_8\n            var ts1; // int_2\n            var ts2; // int_2\n\n            dv = (sv.a2 - sv.a1) / sv.trange;\n\n            ts1 = sv.a1 + Math.floor(0.5 + (sv.smin - sv.tmin) * dv);\n            ts2 = ts1 + Math.floor(0.5 + sv.srange * dv);\n\n            if (ts1 > sv.a2 - sv.swmin) {\n                ts1 = sv.a2 - sv.swmin;\n            } else {\n                ts1 = Math.max(ts1, sv.a1);\n            }\n\n            if (ts2 < sv.a1 + sv.swmin) {\n                ts2 = sv.a1 + sv.swmin;\n            } else {\n                ts2 = Math.min(ts2, sv.a2);\n            }\n\n            return {\n                s1: ts1,\n                sw: Math.max(ts2 - ts1, sv.swmin)\n            };\n            //\t\t\tout.s1 = ts1;\n            //\t\t\tout.sw = Math.max(ts2 - ts1, sv.swmin);\n        }\n    };\n\n    /**\n     * Method to re-draw a scrollbar after update. Logic taken from mx.scroll's UPDATE section.\n     * @param sv The scrollbar to work with.\n     * @param Mx The Mx context to work with.\n     * @param op Optional op-code for XW_DRAW\n     * @private\n     */\n    mx.redrawScrollbar = function(sv, Mx, op) {\n        var x;\n        var y;\n        var xcc;\n        var ycc;\n        var xss;\n        var yss;\n        var p1;\n        var op1; // int\n        var s1;\n        var sw; // int_2\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var scrollReal2PixOut = mx.scroll_real2pix(sv);\n        s1 = scrollReal2PixOut.s1;\n        sw = scrollReal2PixOut.sw;\n\n        p1 = s1;\n        op1 = sv.s1;\n\n        xcc = sv.x;\n        ycc = sv.y;\n        xss = sv.w;\n        yss = sv.h;\n\n        // horizontal scroll bar\n        if (sv.origin & 1) {\n            y = ycc + yss / 2;\n            if (sv.origin & 2) {\n                op1 = xss - op1 - sv.sw;\n                p1 = xss - p1 - sw;\n            }\n            if (op === mx.XW_DRAW) {\n                var arrow = sv.arrow; // int\n\n                mx.shadowbox(Mx, xcc, ycc, arrow, yss - 1, mx.L_ArrowLeft, 2, \"\", 0);\n                mx.shadowbox(Mx, xcc + xss - arrow, ycc, arrow - 1, yss, mx.L_ArrowRight, 2, \"\", 0);\n            }\n\n\n            if (mx.LEGACY_RENDER) {\n                mx.draw_line(Mx, Mx.fg, xcc + sv.a1, y, xcc + sv.a2, y);\n                mx.shadowbox(Mx, xcc + p1, ycc, sw + 1, yss, 1, 2, \"\", 0);\n            } else {\n                // Veritical gradiant\n                var lingrad = ctx.createLinearGradient(xcc + sv.a1, 0, xcc + sv.a2, 0);\n                lingrad.addColorStop(0, Mx.xwbs);\n                lingrad.addColorStop(0.5, Mx.xwts);\n                lingrad.addColorStop(1, Mx.xwbs);\n                mx.draw_line(Mx, lingrad, xcc + sv.a1, y, xcc + sv.a2, y, 1);\n\n                var lingrad = ctx.createLinearGradient(0, ycc, 0, ycc + yss);\n                lingrad.addColorStop(0.1, Mx.xwts);\n                lingrad.addColorStop(0.75, Mx.xwbs);\n                mx.draw_round_box(Mx, Mx.xwbg, xcc + p1, ycc, sw + 1, yss, 1, lingrad, 8, Mx.xwbs);\n            }\n\n            // else vertical scroll bar\n        } else {\n            x = xcc + m.trunc(xss / 2);\n            if (sv.origin <= 2) {\n                op1 = yss - op1 - sv.sw;\n                p1 = yss - p1 - sw;\n            }\n            if (op === mx.XW_DRAW) {\n                var arrow = sv.arrow; // int\n                mx.shadowbox(Mx, xcc, ycc, xss - 1, arrow, mx.L_ArrowUp, 2, \"\", 0);\n                mx.shadowbox(Mx, xcc, ycc + yss - arrow, xss - 1, arrow, mx.L_ArrowDown, 2, \"\", 0);\n            }\n\n            if (mx.LEGACY_RENDER) {\n                mx.draw_line(Mx, Mx.fg, x, ycc + sv.a1, x, ycc + sv.a2);\n                mx.shadowbox(Mx, xcc, ycc + p1, xss, sw + 1, 1, 2, \"\", 0);\n            } else {\n                // Horizontal gradiant\n                var lingrad = ctx.createLinearGradient(0, ycc + sv.a1, 0, ycc + sv.a2);\n                lingrad.addColorStop(0, Mx.xwbs);\n                lingrad.addColorStop(0.5, Mx.xwts);\n                lingrad.addColorStop(1, Mx.xwbs);\n                mx.draw_line(Mx, lingrad, x, ycc + sv.a1, x, ycc + sv.a2, 1);\n\n                var lingrad = ctx.createLinearGradient(xcc, 0, xcc + xss, 0);\n                lingrad.addColorStop(0.1, Mx.xwts);\n                lingrad.addColorStop(0.75, Mx.xwbs);\n                mx.draw_round_box(Mx, Mx.xwbg, xcc - 1, ycc + p1, xss, sw + 1, 1, lingrad, 8, Mx.xwbs);\n            }\n\n        }\n\n        sv.s1 = s1;\n        sv.sw = sw;\n    };\n\n    /**\n     * @param {Object} Mx - the Mx object\n     * @param {number} x - the real-world x coordinate\n     * @param {number} y - the real-world y coordinate\n     * @param {boolean} [clip=false] set to clip the returned value to the plot area\n     * @returns {Object} pixel - the x,y coordinates in pixel coordinate space\n     * @returns {number} pixel.clipped - true if the point would have or has been clipped\n     * @private\n     */\n    mx.real_to_pixel = function(Mx, x, y, clip) {\n        var stk4 = mx.origin(Mx.origin, 4, Mx.stk[Mx.level]);\n        if ((stk4.xscl === 0.0) || (stk4.yscl === 0.0)) {\n            return {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var left = stk4.x1;\n        var top = stk4.y1;\n\n        var xxmin = stk4.xmin;\n        var xscl = 1.0 / stk4.xscl;\n\n        var yymin = stk4.ymin;\n        var yscl = 1.0 / stk4.yscl;\n\n        var clipped_x = false;\n        var clipped_y = false;\n\n        if (x !== null) {\n            clipped_x = ((x > stk4.xmax) || (x < stk4.xmin));\n            if (clip) {\n                x = Math.min(x, stk4.xmax);\n                x = Math.max(x, stk4.xmin);\n            }\n            x = Math.round((x - xxmin) * xscl) + left;\n        }\n        if (y !== null) {\n            clipped_y = ((y > stk4.ymin) || (y < stk4.ymax));\n            if (clip) {\n                y = Math.min(y, stk4.ymin);\n                y = Math.max(y, stk4.ymax);\n            }\n            y = Math.round((y - yymin) * yscl) + top;\n        }\n\n        x = Math.round(x);\n        y = Math.round(y);\n\n        return {\n            x: x,\n            y: y,\n            clipped_x: clipped_x,\n            clipped_y: clipped_y,\n            clipped: (clipped_x || clipped_y)\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param xpos\n     * @param ypos\n     * @private\n     */\n    mx.pixel_to_real = function(Mx, xpos, ypos) {\n        var iretx = Math.min(Mx.r, Math.max(Mx.l, xpos));\n        var irety = Math.min(Mx.b, Math.max(Mx.t, ypos));\n        var retx;\n        var rety;\n\n        var k = Mx.level;\n        if ((Mx.origin !== 2) && (Mx.origin !== 3)) {\n            retx = Mx.stk[k].xmin + (iretx - Mx.stk[k].x1) * Mx.stk[k].xscl;\n        } else {\n            retx = Mx.stk[k].xmin + (Mx.stk[k].x2 - iretx) * Mx.stk[k].xscl;\n        }\n        if (Mx.origin > 2) {\n            rety = Mx.stk[k].ymin + (irety - Mx.stk[k].y1) * Mx.stk[k].yscl;\n        } else {\n            rety = Mx.stk[k].ymin + (Mx.stk[k].y2 - irety) * Mx.stk[k].yscl;\n        }\n\n        return {\n            x: retx,\n            y: rety\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param map\n     * @param ncolors\n     * @private\n     */\n    mx.colormap = function(Mx, map, ncolors) {\n        Mx.pixel = new ColorMap(map, {\n            ncolors: ncolors\n        });\n        return;\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @private\n     */\n    mx.colorbar = function(Mx, x, y, w, h) {\n        if (!Mx.pixel) {\n            m.log.warn(\"COLORMAP not initialized, cannot draw colorbar\");\n            return;\n        }\n        Mx.pixel.setRange(0, Mx.pixel.map.length);\n        for (var j = 1; j < h; j++) {\n            var cidx = Math.floor(Mx.pixel.map.length * (j - 1) / h);\n            mx.draw_line(Mx, cidx, x, y + h - j, x + w, y + h - j);\n        }\n        mx.draw_box(Mx, Mx.fg, x + 0.5, y, w, h);\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @private\n     */\n    mx.legend_colorbar = function(Mx, x, y, w, h) {\n        for (var j = 1; j < w; j++) {\n            var cidx = Math.floor(Mx.pixel.length * (j - 1) / w);\n            mx.draw_line(Mx, cidx, x + w - j, y, x + w - j, y + h);\n        }\n        mx.draw_box(Mx, Mx.fg, x + 0.5, y, w, h);\n    };\n\n    /**\n     * Render image buffer to canvas.\n     *\n     * If we don't have access to Uint8ClampedArray (i.e. Firefox 3.6)\n     * use a slower approach that only supports rasters up to the size\n     * limit of the canvas\n     * @private\n     *\n     * @param ctx\n     *   {context} a canvas 2d context\n     * @param buf\n     *   {ArrayBuffer} a buffer of 32-bit image data\n     * @param opacity\n     *   the opacity to render the image with\n     * @param smoothing\n     *   if image smoothing should be enabled\n     * @param sx\n     *   source x position\n     * @param sy\n     *   source y position\n     * @param sw\n     *   source width\n     * @param sh\n     *   source height\n     * @param x\n     *   optional x canvas dest\n     * @param y\n     *   optional y canvas dest\n     * @param w\n     *   optional width\n     * @param h\n     *   optional height\n     */\n    function renderImageNoTypedArrays(Mx, ctx, buf, opacity, smoothing, x, y, w, h, sx, sy, sw, sh) {\n        if (sx === undefined) {\n            sx = 0;\n        }\n        if (sy === undefined) {\n            sy = 0;\n        }\n        if (sw === undefined) {\n            sw = buf.width - sx;\n        }\n        if (sh === undefined) {\n            sh = buf.height - sy;\n        }\n\n        // If the source buffer is small enough to be directly rendered, do that\n        Mx._renderCanvas.width = buf.width;\n        Mx._renderCanvas.height = buf.height;\n\n        var imgctx = Mx._renderCanvas.getContext(\"2d\");\n        var imgd = imgctx.createImageData(Mx._renderCanvas.width, Mx._renderCanvas.height);\n        var buf8 = new Uint8Array(buf);\n        for (var yy = 0; yy < buf.height; ++yy) {\n            for (var xx = 0; xx < buf.width; ++xx) {\n                var index = ((yy * buf.width) + xx) * 4;\n                imgd.data[index] = buf8[index]; // red\n                imgd.data[index + 1] = buf8[index + 1]; // green\n                imgd.data[index + 2] = buf8[index + 2]; // blue\n                imgd.data[index + 3] = 255; // alpha\n            }\n        }\n        imgctx.putImageData(imgd, 0, 0);\n\n        // Render the image to the destination\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        if (!smoothing) {\n            ctx.imageSmoothingEnabled = false;\n            ctx.mozImageSmoothingEnabled = false;\n            ctx.webkitImageSmoothingEnabled = false;\n        }\n        ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, w, h);\n        ctx.restore();\n    }\n\n    /**\n     * @private\n     *\n     * @param ctx\n     *   {context} a canvas 2d context\n     * @param buf\n     *   {ArrayBuffer} a buffer of 32-bit image data\n     * @param opacity\n     *   the opacity to render the image with\n     * @param smoothing\n     *   if image smoothing should be enabled\n     * @param sx\n     *   source x position\n     * @param sy\n     *   source y position\n     * @param sw\n     *   source width\n     * @param sh\n     *   source height\n     * @param x\n     *   optional x canvas dest\n     * @param y\n     *   optional y canvas dest\n     * @param w\n     *   optional width\n     * @param h\n     *   optional height\n     */\n    function renderImageTypedArrays(Mx, ctx, buf, opacity, smoothing, x, y, w, h, sx, sy, sw, sh) {\n        if (sx === undefined) {\n            sx = 0;\n        }\n        if (sy === undefined) {\n            sy = 0;\n        }\n        if (sw === undefined) {\n            sw = buf.width - sx;\n        }\n        if (sh === undefined) {\n            sh = buf.height - sy;\n        }\n\n        if ((buf.width < 32768) && (buf.height < 32768)) {\n            // If the source buffer is small enough to be directly rendered, do that\n            Mx._renderCanvas.width = buf.width;\n            Mx._renderCanvas.height = buf.height;\n\n            var imgctx = Mx._renderCanvas.getContext(\"2d\");\n            var imgd = imgctx.createImageData(Mx._renderCanvas.width, Mx._renderCanvas.height);\n\n            // TODO - This may not be portable to all browsers, if not\n            // we need to choose between this approach and the traditional\n            // for-loop based approach\n            var buf8 = new Uint8ClampedArray(buf);\n            imgd.data.set(buf8);\n            imgctx.putImageData(imgd, 0, 0);\n        } else {\n            if ((sw < 32768) && (sh < 32768)) {\n                // The clipped image is small enough to directly render\n                Mx._renderCanvas.width = sw;\n                Mx._renderCanvas.height = sh;\n                scaleImage(Mx._renderCanvas, buf, sx, sy, sw, sh);\n            } else {\n                // Downscale to twice the destination size\n                Mx._renderCanvas.width = Math.min(w * 2, buf.width);\n                Mx._renderCanvas.height = Math.min(h * 2, buf.height);\n                scaleImage(Mx._renderCanvas, buf, sx, sy, sw, sh);\n                sw = Mx._renderCanvas.width;\n                sh = Mx._renderCanvas.height;\n            }\n            sx = 0;\n            sy = 0;\n        }\n\n        // Render the image to the destination\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        if (!smoothing) {\n            ctx.imageSmoothingEnabled = false;\n            ctx.mozImageSmoothingEnabled = false;\n            ctx.webkitImageSmoothingEnabled = false;\n        }\n        ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, w, h);\n        ctx.restore();\n    }\n\n    /**\n     * Scale the image data (represented by buf) into the destination canvas\n     * using nearest neighbor.  In genearl, you should just use the scaling\n     * provided by drawImage...but if the buf is greater than 32767 pixels in\n     * either dimension that won't work and you have to use this.\n     *\n     * @param img\n     *   A canvas object\n     * @param buf\n     *   An ArrayBuf with .width and .height elements\n     *\n     * @private\n     */\n    function scaleImage(img, buf, sx, sy, sw, sh) {\n        // Source buffer, expected to have .width and .height elements\n        var src = new Uint32Array(buf);\n\n        if (!sw) {\n            sw = buf.width;\n        }\n        if (!sh) {\n            sh = buf.height;\n        }\n        if (!sx) {\n            sx = 0;\n        }\n        if (!sy) {\n            sy = 0;\n        }\n\n        // Cache to avoid get width calls in tight loop\n        var w = img.width;\n        var h = img.height;\n\n        // Destination element\n        var imgctx = img.getContext(\"2d\");\n        var imgd = imgctx.createImageData(w, h);\n        var ibuf = new ArrayBuffer(imgd.data.length);\n        var buf8 = new Uint8ClampedArray(ibuf);\n        var dest = new Uint32Array(ibuf);\n\n        // Scaling factor\n        var width_scaling = sw / w;\n        var height_scaling = sh / h;\n\n        // Perform the scaling\n        var xx = 0;\n        var yy = 0;\n        var jj = 0;\n        for (var i = 0; i < dest.length; i++) {\n            xx = Math.round(Math.floor(i % w) * width_scaling) + sx;\n            yy = Math.round(Math.floor(i / w) * height_scaling) + sy;\n            jj = Math.floor((yy * buf.width) + xx);\n            dest[i] = src[jj];\n        }\n\n        // Set the data\n        imgd.data.set(buf8);\n        imgctx.putImageData(imgd, 0, 0);\n    }\n\n    var renderImage = (typeof Uint8ClampedArray === 'undefined') ? renderImageNoTypedArrays : renderImageTypedArrays;\n\n    /**\n     * @param Mx\n     * @param img\n     * @param shift\n     * @private\n     */\n    mx.shift_image_rows = function(Mx, buf, shift) {\n        var imgd = new Uint32Array(buf);\n        if (shift > 0) { // shift down\n            shift = shift * buf.width;\n            imgd.set(imgd.subarray(0, imgd.length - shift), shift);\n        } else if (shift < 0) { // shift up\n            shift = Math.abs(shift) * buf.width;\n            imgd.set(imgd.subarray(shift));\n        }\n\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param img\n     * @param data\n     * @param row\n     * @param zmin\n     * @param zmax\n     * @private\n     */\n    mx.update_image_row = function(Mx, buf, data, row, zmin, zmax, xcompression) {\n        var imgd = new Uint32Array(buf, row * buf.width * 4, buf.width);\n\n        Mx.pixel.setRange(zmin, zmax);\n\n        var xc = Math.max(1, data.length / buf.width);\n        for (var i = 0; i < buf.width; i++) {\n            var didx = Math.floor(i * xc);\n            var value = data[didx];\n            if (xc > 1) {\n                if (xcompression === 1) { // average\n                    for (var j = 1; j < xc; j++) {\n                        value += data[didx + j];\n                    }\n                    value = (value / xc);\n                } else if (xcompression === 2) { // min\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.min(value, data[didx + j]);\n                    }\n                } else if (xcompression === 3) { // max\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(value, data[didx + j]);\n                    }\n                } else if (xcompression === 4) { // first\n                    value = data[i];\n                } else if (xcompression === 5) { // max abs\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(Math.abs(value), Math.abs(data[didx + j]));\n                    }\n                }\n            }\n            var color = Mx.pixel.getColor(value);\n            if (color) {\n                imgd[i] = color.color;\n\n            }\n        }\n\n        return imgd;\n    };\n\n    /**\n     * @param Mx\n     * @param data\n     * @param w\n     * @param h\n     * @param Mx\n     * @param zmin\n     * @param zmax\n     * @private\n     */\n    mx.create_image = function(Mx, data, subsize, w, h, zmin, zmax, xcompression) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!Mx.pixel) {\n            console.log(\"COLORMAP not initialized, defaulting to foreground\");\n            Mx.pixel = new ColorMap(m.Mc.colormap[1].colors);\n        }\n\n\n        Mx.pixel.setRange(zmin, zmax);\n        w = Math.ceil(w);\n        h = Math.ceil(h);\n        var buf = new ArrayBuffer(w * h * 4);\n        buf.width = w;\n        buf.height = h;\n\n        var nxc = Math.max(1, subsize / w);\n\n        var imgd = new Uint32Array(buf);\n        if (data) {\n            for (var i = 0; i < imgd.length; i++) {\n                var ix;\n                var iy;\n                if ((Mx.origin === 1) || (Mx.origin === 4)) {\n                    ix = Math.floor(i % w);\n                } else {\n                    ix = w - Math.floor(i % w) - 1;\n                }\n                if ((Mx.origin === 3) || (Mx.origin === 4)) {\n                    iy = Math.floor(i / w);\n                } else {\n                    iy = h - Math.floor(i / w) - 1;\n                }\n                if (iy === 1) {\n                    var test = 1;\n                }\n                var didx = (iy * subsize) + Math.floor(ix * nxc);\n                var value = data[didx];\n                if (nxc > 1) {\n                    if (xcompression === 1) { // average\n                        for (var j = 1; j < nxc; j++) {\n                            value += data[didx + j];\n                        }\n                        value = value / nxc;\n                    } else if (xcompression === 2) { // min\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.min(value, data[didx + j]);\n                        }\n                    } else if (xcompression === 3) { // max\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.max(value, data[didx + j]);\n                        }\n                    } else if (xcompression === 4) { // first\n                        value = data[didx];\n                    } else if (xcompression === 5) { // max abs\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.max(Math.abs(value), Math.abs(data[didx + j]));\n                        }\n                    }\n                }\n\n\n                var color = Mx.pixel.getColor(value);\n                if (color) {\n                    imgd[i] = color.color;\n                }\n            }\n        }\n\n        // Return the image in case the caller wishes to cache it\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param data\n     * @param nx\n     * @param ny\n     * @param nex\n     * @param ney\n     * @param xd\n     * @param yd\n     * @param level\n     * @param opacity\n     * @param smoothing\n     * @private\n     */\n    mx.put_image = function(Mx, data, nx, ny, nex, ney, xd, yd, level, opacity, smoothing) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!Mx.pixel) {\n            m.log.warn(\"COLORMAP not initialized, defaulting to foreground\");\n            Mx.pixel = new ColorMap(m.Mc.colormap[1].colors);\n        }\n\n        var w;\n        var h;\n\n        if (nex > 0) {\n            w = nx * nex;\n        } else {\n            w = -nex;\n        }\n        w = Math.floor(w);\n        h = Math.floor(ny * ney);\n\n        var buf = new ArrayBuffer(w * h * 4);\n        buf.width = w;\n        buf.height = h;\n\n        var imgd = new Uint32Array(buf);\n        for (var i = 0; i < imgd.length; i++) {\n            var color = Mx.pixel.getColor(data[i]);\n            if (color) {\n                imgd[i] = color.color;\n            }\n        }\n\n        //render the buffered canvas onto the original canvas element\n        renderImage(Mx, ctx, buf, opacity, smoothing, xd, yd, w, h);\n\n        // Return the image in case the caller wishes to cache it\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param buf\n     * @param xmin\n     * @param ymin\n     * @param xmax\n     * @param ymax\n     * @param opacity\n     * @param smoothing\n     * @private\n     */\n    mx.draw_image = function(Mx, buf, xmin, ymin, xmax, ymax, opacity, smoothing) {\n        var view_xmin = Math.max(xmin, Mx.stk[Mx.level].xmin);\n        var view_xmax = Math.min(xmax, Mx.stk[Mx.level].xmax);\n        var view_ymin = Math.max(ymin, Mx.stk[Mx.level].ymin);\n        var view_ymax = Math.min(ymax, Mx.stk[Mx.level].ymax);\n\n\n        if ((buf.width <= 1) || Math.abs(xmax - xmin) === 0) {\n            return;\n        }\n        if ((buf.height <= 1) || Math.abs(ymax - ymin) === 0) {\n            return;\n        }\n        var rx = buf.width / (xmax - xmin);\n        var ry = buf.height / (ymax - ymin);\n\n        // Ensure we are on buffer pixel boundaries, later we use clipping\n        // to constrain to the proper area\n        view_xmin = Math.floor(view_xmin * rx) / rx;\n        view_xmax = Math.ceil(view_xmax * rx) / rx;\n        view_ymin = Math.floor(view_ymin * ry) / ry;\n        view_ymax = Math.ceil(view_ymax * ry) / ry;\n\n        var ul, lr;\n        var sy, sx, sw, sh;\n        if (Mx.origin === 1) {\n            // regular x, regular y\n            sy = Math.max(0, Math.floor((ymax - view_ymax) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.floor((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmin, view_ymax);\n            lr = mx.real_to_pixel(Mx, view_xmax, view_ymin);\n        } else if (Mx.origin === 2) {\n            // inverted x, regular y\n            sy = Math.max(0, Math.floor((ymax - view_ymax) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.ceil((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmax, view_ymax);\n            lr = mx.real_to_pixel(Mx, view_xmin, view_ymin);\n        } else if (Mx.origin === 3) {\n            // inverted x, inverted y\n            sy = Math.max(0, Math.ceil((view_ymin - ymin) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.ceil((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmax, view_ymin);\n            lr = mx.real_to_pixel(Mx, view_xmin, view_ymax);\n        } else if (Mx.origin === 4) {\n            // regular x, inverted y\n            sy = Math.max(0, Math.ceil((view_ymin - ymin) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.floor((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmin, view_ymin);\n            lr = mx.real_to_pixel(Mx, view_xmax, view_ymax);\n        }\n\n        var iw = lr.x - ul.x;\n        var ih = lr.y - ul.y;\n\n        // Always include at least one pixel from the source\n        sw = Math.max(1, sw);\n        sh = Math.max(1, sh);\n\n        // See if smart smoothing is requested\n        if (typeof smoothing === \"number\") {\n            // calculate the ratio of displayed pixels over\n            // displayed data-points\n            var ratio = (Mx.r - Mx.l) / sw;\n            // if the ratio is greater than the smoothing value\n            // turn on smoothing\n            smoothing = (ratio <= smoothing);\n        }\n\n        //render the buffered canvas onto the original canvas element\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(Mx.l, Mx.t, Mx.r - Mx.l, Mx.b - Mx.t);\n        ctx.clip();\n        renderImage(Mx, ctx, buf, opacity, smoothing, ul.x, ul.y, iw, ih, sx, sy, sw, sh);\n        ctx.restore();\n    };\n\n    // Node: Export function\n    module.exports = mx;\n\n}());\n\n///////////////////////////////////////////////////////////////////////////////\n","/**\n * @license\n * File: bluefile.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n/**\n * Bluefiles are a binary format directly supported by SigPlot.  A Bluefile consists of a 512-byte header\n * followed by binary data.\n * For more information on BLUEFILES, please visit http://nextmidas.techma.com/nm/htdocs/usersguide/BlueFiles.html\n *\n * Offset   Name        Size    Type        Description\n * -----------------------------------------------------------------------------\n * 0        version     4   char[4]     Header version\n * 4        head_rep    4   char[4]     Header representation\n * 8        data_rep    4   char[4]     Data representation\n *12        detached    4   int_4       Detached header\n *16        protected   4   int_4       Protected from overwrite\n *20        pipe        4   int_4       Pipe mode (N/A)\n *24        ext_start   4   int_4       Extended header start, in 512-byte blocks\n *28        ext_size    4   int_4       Extended header size in bytes\n *32        data_start  8   real_8      Data start in bytes\n *40        data_size   8   real_8      Data size in bytes\n *48        type        4   int_4       File type code\n *52        format      2   char[2]     Data format code\n *54        flagmask    2   int_2       16-bit flagmask (1=flagbit)\n *56        timecode    8   real_8      Time code field\n *64        inlet       2   int_2       Inlet owner\n *66        outlets     2   int_2       Number of outlets\n *68        outmask     4   int_4       Outlet async mask\n *72        pipeloc     4   int_4       Pipe location\n *76        pipesize    4   int_4       Pipe size in bytes\n *80        in_byte     8   real_8      Next input byte\n *88        out_byte    8   real_8      Next out byte (cumulative)\n *96        outbytes    64  real_8[8]   Next out byte (each outlet)\n *160       keylength   4   int_4       Length of keyword string\n *164       keywords    92  char[92]    User defined keyword string\n *256       Adjunct     256     char[256]   Type-specific adjunct union (See below for 1000 and 2000 type bluefiles)\n *\n *\n * Type-1000 Adjunct\n * 0        xstart      8   real_8      Abscissa value for first sample\n *8         xdelta      8   real_8      Abscissa interval between samples\n *16        xunits      4   int_4       Units for abscissa values\n *\n * Type-2000 Adjunct\n *0         xstart      8   real_8      Frame (column) starting value\n *8         xdelta      8   real_8      Increment between samples in frame\n *16        xunits      4   int_4       Frame (column) units\n *20        subsize     4   int_4       Number of data points per frame (row)\n *24        ystart      8   real_8      Abscissa (row) start\n *32        ydelta      8   real_8      Increment between frames\n *36        yunits      4   int_4       Abscissa (row) unit code\n *\n * @namespace bluefile\n */\n\n/* global module */\n/* global require */\n/* global Proxy */\n\n(function() {\n    'use strict';\n    var BitArray = function(buf) {\n        if (!(buf instanceof ArrayBuffer) && typeof buf === \"number\") {\n            this.buffer = new ArrayBuffer(buf / 8);\n            this.u8 = new Uint8Array(this.buffer);\n        } else {\n            this.buffer = buf;\n            this.u8 = new Uint8Array(buf);\n        }\n        return new Proxy(this, {\n            get(obj, prop) {\n                if (!obj[prop]) {\n                    return obj.getBit(prop);\n                } else {\n                    return obj[prop];\n                }\n            }\n        });\n    };\n\n    BitArray.prototype.getBit = function(idx) {\n        var v = this.u8[idx >> 3];\n        var off = idx & 0x7;\n        return (v >> (7 - off)) & 1;\n    };\n    Object.defineProperty(BitArray.prototype, \"length\", {\n        get: function length() {\n            return this.u8.byteLength * 8;\n        }\n    });\n    BitArray.prototype.setBit = function(idx, val) {\n        var off = idx & 0x7;\n        if (val) {\n            this.u8[idx >> 3] |= (0x80 >> off);\n        } else {\n            this.u8[idx >> 3] &= ~(0x80 >> off);\n        }\n    };\n    BitArray.prototype.set = function(array) {\n        for (let i = 0, len = array.length; i < len; i++) {\n            this.setBit(i, array[i]);\n        }\n    };\n    BitArray.prototype.subarray = function(start, stop) {\n        let sub = [];\n        start = start || 0;\n        stop = stop || this.length;\n        stop = stop > this.length ? this.length : stop;\n        for (let i = start; i < stop; i++) {\n            sub.push(this.getBit(i));\n        }\n        return sub;\n    };\n\n\n\n    var common = require(\"./common\");\n\n    function bluefile() {}\n\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);\n    // https://gist.github.com/TooTallNate/4750953\n    /**\n     * @memberof bluefile\n     * @private\n     */\n    function endianness() {\n        var b = new ArrayBuffer(4);\n        var a = new Uint32Array(b);\n        var c = new Uint8Array(b);\n        a[0] = 0xdeadbeef;\n        if (c[0] === 0xef) {\n            return 'LE';\n        }\n        if (c[0] === 0xde) {\n            return 'BE';\n        }\n        throw new Error('unknown endianness');\n    }\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var ARRAY_BUFFER_ENDIANNESS = endianness();\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _SPA = {\n        'S': 1,\n        'C': 2,\n        'V': 3,\n        'Q': 4,\n        'M': 9,\n        'X': 10,\n        'T': 16,\n        'U': 1,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9\n    };\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _BPS = {\n        'P': 0.125,\n        'A': 1,\n        'O': 1,\n        'B': 1,\n        'I': 2,\n        'L': 4,\n        'X': 8,\n        'F': 4,\n        'D': 8\n    };\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _XM_TO_TYPEDARRAY = {\n        'P': BitArray,\n        'A': null,\n        'O': Uint8Array,\n        'B': Int8Array,\n        'I': Int16Array,\n        'L': Int32Array,\n        'X': null,\n        'F': Float32Array,\n        'D': Float64Array\n    };\n    /**\n     * @memberof bluefile\n     * @param   {array}     buf         Data bffer\n     * @param number\n     * @param bool\n     * @private\n     */\n    function getInt64(dataView, index, littleEndian) {\n        var highIndex, lowIndex;\n        var MAX_INT = Math.pow(2, 53);\n        if (littleEndian) {\n            highIndex = 4;\n            lowIndex = 0;\n        } else {\n            highIndex = 0;\n            lowIndex = 4;\n        }\n        var high = dataView.getInt32(index + highIndex, littleEndian);\n        var low = dataView.getInt32(index + lowIndex, littleEndian);\n        var rv = low + pow2(32) * high;\n        if (rv >= MAX_INT) {\n            window.console.info(\"Int is bigger than JS can represent.\");\n            return Infinity;\n        }\n        return rv;\n    }\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _XM_TO_DATAVIEW = {\n        'P': null,\n        'A': null,\n        'O': \"getUint8\",\n        'B': \"getInt8\",\n        'I': \"getInt16\",\n        'L': \"getInt32\",\n        'X': getInt64,\n        'F': \"getFloat32\",\n        'D': \"getFloat64\"\n    };\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _applySupportsTypedArray = true;\n    try {\n        var uintbuf = new Uint8Array(new ArrayBuffer(4));\n        uintbuf[0] = 66;\n        uintbuf[1] = 76;\n        uintbuf[2] = 85;\n        uintbuf[3] = 69;\n        var test = String.fromCharCode.apply(null, uintbuf);\n        if (test !== \"BLUE\") {\n            _applySupportsTypedArray = false;\n        }\n    } catch (error) {\n        _applySupportsTypedArray = false;\n    }\n    /**\n     * Convert an ArrayBuffer to a string\n     *\n     * @private\n     * @memberof bluefile\n     * @param   {array}     buf         Data bffer\n     */\n    function ab2str(buf) {\n        var uintbuf = new Uint8Array(buf);\n        // Firefox 3.6 nor iOS devices can use ArrayBuffers with .apply\n        if (_applySupportsTypedArray) {\n            return String.fromCharCode.apply(null, uintbuf);\n        } else {\n            var str = \"\";\n            for (var i = 0; i < uintbuf.length; i++) {\n                str += String.fromCharCode(uintbuf[i]);\n            }\n            return str;\n        }\n    }\n    /**\n     * Convert a string to an ArrayBuffer\n     *\n     * @private\n     * @memberof bluefile\n     * @param   {string}\n     */\n    function str2ab(str) {\n        var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n        var bufView = new Uint16Array(buf);\n        for (var i = 0, strLen = str.length; i < strLen; i++) {\n            bufView[i] = str.charCodeAt(i);\n        }\n        return buf;\n    }\n    /**\n     * Calculate 2^n\n     *\n     * If 31 > n >= 0 then a left-shift is used, otherwise Math.pow is used.\n     *\n     * @private\n     * @memberof bluefile\n     * @param   {number}\n     */\n    function pow2(n) {\n        return (n >= 0 && n < 31) ? (1 << n) : (pow2[n] || (pow2[n] = Math.pow(2, n)));\n    }\n    /**\n     * Constructor for a BlueHeader that extracts paramters from the 512-byte\n     * Bluefile binary header.  If the data segment of the bluefile is also\n     * included in the provided buffer it will be accessible as well\n     * via the dview property.\n     *\n     * @memberof bluefile\n     * @param {array} buf\n     *   - An existing ArrayBuffer of Bluefile data.\n     * @param {Object} options\n     *     - options that affect how the bluefile is read\n     * @param {string} [\"dict\"] options.ext_header_type\n     *     - if the BlueFile contains extended header keywords,\n     *       extract them either as a dictionary (\"dict\", \"json\", \n     *       {}, \"XMTable\", \"JSON\", \"DICT\") or as a list of \n     *       key value pairs.  The extended header keywords\n     *       will be accessible on the hdr.ext_header property\n     *       after the file has been read.\n     *\n     * See http://nextmidas.techma.com/nm/nxm/sys/docs/MidasBlueFileFormat.pdf for\n     * more details on header properties.\n     *\n     * @property {ArrayBuffer} buf\n     * @property {String} version - the header version extracted from the file, always 'BLUE'\n     * @property {String} headrep - endianness of header 'IEEE' or 'EEEI'\n     * @property {String} datarep - endianness of data 'IEEE' or 'EEEI'\n     * @property {Number} ext_start - byte offset for extended header binary data\n     * @property {Number} ext_size - byte size for extended header data\n     * @property {Number} type - the BLUEFILE type (1000 = 1-D data, 2000 = 2-D data)\n     * @property {Number} class - the BLUEFILE class (i.e. type/1000)\n     * @property {String} format - the BLUEFILE format, the format is a two character diagraph, such as SF.\n     * @property {Number} timecode - absolute time reference for the file (in seconds since Jan 1st 1950)\n     * @property {Number} xstart - relative offset for the first sample on the x-axis\n     * @property {Number} xdelta - delta between points on the x-axis \n     * @property {Number} xunits - the unitcode for the x-axis (see m.UNITS)\n     * @property {Number} ystart - relative offset for the first sample on the y-axis\n     * @property {Number} ydelta - delta between points on the y-axis \n     * @property {Number} yunits - the unitcode for the y-axis (see m.UNITS)\n     * @property {Number} subsize - the number of columns for a 2-D data file\n     * @property {Number} data_start - byte offset for data\n     * @property {Number} data_size - byte size for data\n     * @property {Object} ext_header - extracted extended header keywords\n     * @property {Number} spa - scalars per atom\n     * @property {Number} bps - bytes per scalar\n     * @property {Number} bpa - bytes per atom\n     * @property {Number} ape - atoms per element\n     * @property {Number} bpe - bytes per element\n     * @property {Number} size - number of elements in dview\n     * @property {DataView} dview - a Data\n     */\n    bluefile.BlueHeader = function(buf, options) {\n        this.options = {\n            ext_header_type: \"dict\"\n        };\n        common.update(this.options, options);\n        this.buf = buf;\n        if (this.buf != null) {\n            var dvhdr = new DataView(this.buf);\n            this.version = ab2str(this.buf.slice(0, 4));\n            this.headrep = ab2str(this.buf.slice(4, 8));\n            this.datarep = ab2str(this.buf.slice(8, 12));\n            var littleEndianHdr = (this.headrep === \"EEEI\");\n            var littleEndianData = (this.datarep === \"EEEI\");\n            this.ext_start = dvhdr.getInt32(24, littleEndianHdr);\n            this.ext_size = dvhdr.getInt32(28, littleEndianHdr);\n            this.type = dvhdr.getUint32(48, littleEndianHdr);\n            this[\"class\"] = this.type / 1000;\n            this.format = ab2str(this.buf.slice(52, 54));\n            this.timecode = dvhdr.getFloat64(56, littleEndianHdr);\n            // the adjunct starts at offset 0x100\n            if (this[\"class\"] === 1) {\n                this.xstart = dvhdr.getFloat64(0x100, littleEndianHdr);\n                this.xdelta = dvhdr.getFloat64(0x100 + 8, littleEndianHdr);\n                this.xunits = dvhdr.getInt32(0x100 + 16, littleEndianHdr);\n                this.yunits = dvhdr.getInt32(0x100 + 40, littleEndianHdr);\n                this.subsize = 1;\n            } else if (this[\"class\"] === 2) {\n                this.xstart = dvhdr.getFloat64(0x100, littleEndianHdr);\n                this.xdelta = dvhdr.getFloat64(0x100 + 8, littleEndianHdr);\n                this.xunits = dvhdr.getInt32(0x100 + 16, littleEndianHdr);\n                this.subsize = dvhdr.getInt32(0x100 + 20, littleEndianHdr);\n                this.ystart = dvhdr.getFloat64(0x100 + 24, littleEndianHdr);\n                this.ydelta = dvhdr.getFloat64(0x100 + 32, littleEndianHdr);\n                this.yunits = dvhdr.getInt32(0x100 + 40, littleEndianHdr);\n            }\n            this.data_start = dvhdr.getFloat64(32, littleEndianHdr);\n            this.data_size = dvhdr.getFloat64(40, littleEndianHdr);\n            var ds = this.data_start;\n            var de = this.data_start + this.data_size;\n            if (this.ext_size) {\n                this.ext_header = this.unpack_keywords(this.buf, this.ext_size, this.ext_start * 512, littleEndianHdr);\n            }\n            this.setData(this.buf, ds, de, littleEndianData);\n        }\n    };\n\n    bluefile.BlueHeader.prototype = {\n        /**\n         * Internal method that sets the dview up based off the\n         * provided buffer and fields extracted from the header.\n         *\n         * @memberof bluefile\n         * @private\n         * @param   buf\n         * @param   offset\n         * @param   data_end\n         * @param   littleEndian\n         */\n        setData: function(buf, offset, data_end, littleEndian) {\n            if (this[\"class\"] === 1) {\n                this.spa = _SPA[this.format[0]];\n                this.bps = _BPS[this.format[1]];\n                this.bpa = this.spa * this.bps;\n                this.ape = 1;\n                this.bpe = this.ape * this.bpa;\n            } else if (this[\"class\"] === 2) {\n                this.spa = _SPA[this.format[0]];\n                this.bps = _BPS[this.format[1]];\n                this.bpa = this.spa * this.bps;\n                this.ape = this.subsize;\n                this.bpe = this.ape * this.bpa;\n            }\n            if (littleEndian === undefined) {\n                littleEndian = (ARRAY_BUFFER_ENDIANNESS === \"LE\");\n            }\n            // TODO handle mismatch between host and data endianness using arrayBufferEndianness\n            if (ARRAY_BUFFER_ENDIANNESS === \"LE\" && !littleEndian) {\n                throw (\"Not supported \" + ARRAY_BUFFER_ENDIANNESS + \" \" + littleEndian);\n            } else if (ARRAY_BUFFER_ENDIANNESS === \"BE\" && this.littleEndianData) {\n                throw (\"Not supported \" + ARRAY_BUFFER_ENDIANNESS + \" \" + littleEndian);\n            }\n            if (buf) {\n                if ((offset) && (data_end)) {\n                    this.dview = this.createArray(buf, offset, (data_end - offset) / this.bps);\n                } else {\n                    this.dview = this.createArray(buf);\n                }\n                this.size = this.dview.length / (this.spa * this.ape);\n            } else {\n                this.dview = this.createArray(null, null, this.size);\n            }\n        },\n        /**\n         * Internal method that unpacks the extended header keywords into\n         * either a object (i.e. dictionary) or a list of key-value pairs\n         * depending on this.options.ext_header_type.\n         *\n         * @author Sean Sullivan https://github.com/desean1625\n         * @private\n         * @memberof bluefile\n         * @param   buf\n         * @param   lbuf\n         * @param   offset\n         * @param   littleEndian\n         */\n        unpack_keywords: function(buf, lbuf, offset, littleEndian) {\n            var lkey, lextra, ltag, format, tag, data, ldata, itag, idata;\n            var keywords = [];\n            var dic_index = {};\n            var dict_keywords = {};\n            var ii = 0;\n            window.buf = buf;\n            buf = buf.slice(offset, buf.byteLength);\n            var dvhdr = new DataView(buf);\n            buf = ab2str(buf);\n            while (ii < lbuf) {\n                idata = ii + 8;\n                lkey = dvhdr.getUint32(ii, littleEndian);\n                lextra = dvhdr.getInt16(ii + 4, littleEndian);\n                ltag = dvhdr.getInt8(ii + 6, littleEndian);\n                format = buf.slice(ii + 7, ii + 8);\n                ldata = lkey - lextra;\n                itag = idata + ldata;\n                tag = buf.slice(itag, itag + ltag);\n                if (format === \"A\") {\n                    data = buf.slice(idata, idata + ldata);\n                } else {\n                    if (_XM_TO_DATAVIEW[format]) {\n                        if (typeof _XM_TO_DATAVIEW[format] === \"string\") {\n                            data = dvhdr[_XM_TO_DATAVIEW[format]](idata, littleEndian);\n                        } else {\n                            data = _XM_TO_DATAVIEW[format](dvhdr, idata, littleEndian);\n                        }\n                    } else {\n                        //Should never get here now.\n                        window.console.info(\"Unsupported keyword format \" + format + \" for tag \" + tag);\n                    }\n                }\n                if (typeof dic_index[tag] === \"undefined\") {\n                    dic_index[tag] = 1;\n                } else {\n                    dic_index[tag]++;\n                    tag = \"\" + tag + dic_index[tag]; //Force to string just incase the tag is interpreted as a number\n                }\n                dict_keywords[tag] = data;\n                keywords.push({\n                    tag: tag,\n                    value: data\n                });\n                ii += lkey;\n            }\n            var dictTypes = ['dict', 'json', {}, 'XMTable', 'JSON', 'DICT'];\n            for (var k in dictTypes) {\n                if (dictTypes[k] === this.options.ext_header_type) {\n                    return dict_keywords;\n                }\n            }\n            return keywords;\n        },\n        /**\n         * Internal method to create typed array for the data based on the\n         * format extracted from the header.\n         *\n         * @private\n         * @memberof bluefile\n         * @param   buf\n         * @param   offset\n         * @param   length\n         * @returns -\n         */\n        createArray: function(buf, offset, length) {\n            var TypedArray = _XM_TO_TYPEDARRAY[this.format[1]];\n            if (TypedArray === undefined) {\n                throw (\"unknown format \" + this.format[1]);\n            }\n            // backwards compatibility with some implementations of typed array\n            // requires this\n            if (offset === undefined) {\n                offset = 0;\n            }\n            if (length === undefined) {\n                length = buf.length || (buf.byteLength / _BPS[this.format[1]]);\n            }\n            if (buf) {\n                // Flatten 2-D array into 1-D\n                if (Array.isArray(buf) && Array.isArray(buf[0])) {\n                    buf = [].concat.apply([], buf);\n                }\n                return new TypedArray(buf, offset, length);\n            } else {\n                return new TypedArray(length);\n            }\n        }\n    };\n\n    /**\n     * Internal method to create a new anchor element and uses location\n     * properties (inherent) to get the desired URL data. Some String\n     * operations are used (to normalize results across browsers).\n     *\n     * @private\n     * @memberof bluefile\n     * @param   url\n     * @returns -\n     *\n     * Based off http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n     */\n    function parseURL(url) {\n        var a = document.createElement('a');\n        a.href = url;\n        return {\n            source: url,\n            protocol: a.protocol.replace(':', ''),\n            host: a.hostname,\n            port: a.port,\n            query: a.search,\n            params: (function() {\n                var ret = {},\n                    seg = a.search.replace(/^\\?/, '').split('&'),\n                    len = seg.length,\n                    i = 0,\n                    s;\n                for (; i < len; i++) {\n                    if (!seg[i]) {\n                        continue;\n                    }\n                    s = seg[i].split('=');\n                    ret[s[0]] = s[1];\n                }\n                return ret;\n            })(),\n            file: (a.pathname.match(/\\/([^\\/?#]+)$/i) || [null, ''])[1],\n            hash: a.hash.replace('#', ''),\n            path: a.pathname.replace(/^([^\\/])/, '/$1'),\n            relative: (a.href.match(/tps?:\\/\\/[^\\/]+(.+)/) || [null, ''])[1],\n            segments: a.pathname.replace(/^\\//, '').split('/')\n        };\n    }\n    /**\n     * Internal method to convert text from an HTTP response\n     * into an ArrayBuffer.\n     *\n     * @private\n     * @memberof bluefile\n     * @param   text\n     * @param   oncomplete\n     * @param   blocksize\n     */\n    function text2buffer(text, oncomplete, blocksize) {\n        blocksize = blocksize || 1024;\n        var i = 0;\n        var arrayBuffer = new ArrayBuffer(text.length);\n        var bufView = new Uint8Array(arrayBuffer);\n        var worker = function() {\n            var end = i + blocksize;\n            for (; i < end; i++) {\n                bufView[i] = (text.charCodeAt(i) & 0xff);\n            }\n            if (i >= text.length) {\n                oncomplete(arrayBuffer);\n            } else {\n                setTimeout(worker, 0);\n            }\n        };\n        setTimeout(worker, 0);\n    }\n    /**\n     * Bluefile Reader constructor.\n     *\n     * @memberof bluefile\n     * @param {Object} options\n     *     - options that affect how the bluefile is read\n     * @param {string} [\"dict\"] options.ext_header_type\n     *     - if the BlueFile contains extended header keywords,\n     *       extract them either as a dictionary (\"dict\", \"json\", \n     *       {}, \"XMTable\", \"JSON\", \"DICT\") or as a list of \n     *       key value pairs.  The extended header keywords\n     *       will be accessible on the hdr.ext_header property\n     *       after the file has been read.\n     */\n    bluefile.BlueFileReader = function(options) {\n        this.options = options;\n    };\n\n    bluefile.BlueFileReader.prototype = {\n        /**\n         * @callback readCallback\n         * @param {BlueHeader}\n         *     - the extracted header, or null on failure\n         */\n\n        /**\n         * Read only the header from a local Bluefile.\n         *\n         * @memberof bluefile\n         * @param {File} theFile\n         *     - a File object for the bluefile\n         * @param {readCallback} onload\n         *     - callback when the header has been read\n         */\n        readheader: function readheader(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            var blob = theFile.webkitSlice(0, 512); // Chrome specific\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var rawhdr = reader.result;\n                    var hdr = new bluefile.BlueHeader(rawhdr, that.options);\n                    hdr.file = theFile;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(blob);\n        },\n        /**\n         * Read a local Bluefile on disk.\n         *\n         * @memberof bluefile\n         * @param {File} theFile\n         *     - a File object for the bluefile\n         * @param {readCallback} onload\n         *     - callback when the header has been read\n         */\n        read: function read(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var raw = reader.result;\n                    var hdr = new bluefile.BlueHeader(raw, that.options);\n                    hdr.file = theFile;\n                    hdr.file_name = theFile.name;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(theFile);\n        },\n        /**\n         * Read a Bluefile from a URL\n         *\n         * @memberof bluefile\n         * @param {string} href\n         *     - the URL for the bluefile\n         * @param {readCallback} onload\n         *     - callback when the header has been read\n         */\n        read_http: function read_http(href, onload) {\n            var that = this;\n            var oReq = new XMLHttpRequest();\n            oReq.open(\"GET\", href, true);\n            oReq.responseType = \"arraybuffer\";\n            oReq.overrideMimeType('text\\/plain; charset=x-user-defined');\n            oReq.onload = function(oEvent) {\n                if (oReq.readyState === 4) {\n                    if ((oReq.status === 200) || (oReq.status === 0)) { // status = 0 is necessary for file URL\n                        var arrayBuffer = null; // Note: not oReq.responseText\n                        if (oReq.response) {\n                            arrayBuffer = oReq.response;\n                            var hdr = new bluefile.BlueHeader(arrayBuffer, that.options);\n                            parseURL(href);\n                            var fileUrl = parseURL(href);\n                            hdr.file_name = fileUrl.file;\n                            onload(hdr);\n                        } else if (oReq.responseText) {\n                            text2buffer(oReq.responseText, function(arrayBuffer) {\n                                var hdr = new bluefile.BlueHeader(arrayBuffer, that.options);\n                                parseURL(href);\n                                var fileUrl = parseURL(href);\n                                hdr.file_name = fileUrl.file;\n                                onload(hdr);\n                            });\n                        }\n                        return;\n                    }\n                }\n                onload(null);\n            };\n            oReq.onerror = function(oEvent) {\n                onload(null);\n            };\n            oReq.send(null);\n        }\n    };\n\n    // Node: Export function\n    module.exports = bluefile;\n\n}());\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","//fgnass.github.com/spin.js#v1.2.5\n/**\n * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]\n * Licensed under the MIT license\n */\n\nvar prefixes = ['webkit', 'Moz', 'ms', 'O']; /* Vendor prefixes */\nvar animations = {}; /* Animation rules keyed by their name */\nvar useCssAnimations;\n\n/**\n * Utility function to create elements. If no tag name is given,\n * a DIV is created. Optionally properties can be passed.\n */\nfunction createEl(tag, prop) {\n  var el = document.createElement(tag || 'div');\n  var n;\n\n  for(n in prop) {\n    el[n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Appends children and returns the parent.\n */\nfunction ins(parent /* child1, child2, ...*/) {\n  for (var i=1, n=arguments.length; i<n; i++) {\n    parent.appendChild(arguments[i]);\n  }\n  return parent;\n}\n\n/**\n * Insert a new stylesheet to hold the @keyframe or VML rules.\n */\nvar sheet = function() {\n  var el = createEl('style');\n  ins(document.getElementsByTagName('head')[0], el);\n  return el.sheet || el.styleSheet;\n}();\n\n/**\n * Creates an opacity keyframe animation rule and returns its name.\n * Since most mobile Webkits have timing issues with animation-delay,\n * we create separate rules for each line/segment.\n */\nfunction addAnimation(alpha, trail, i, lines) {\n  var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-');\n  var start = 0.01 + i/lines*100;\n  var z = Math.max(1-(1-alpha)/trail*(100-start) , alpha);\n  var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();\n  var pre = prefix && '-'+prefix+'-' || '';\n\n  if (!animations[name]) {\n    sheet.insertRule(\n      '@' + pre + 'keyframes ' + name + '{' +\n      '0%{opacity:'+z+'}' +\n      start + '%{opacity:'+ alpha + '}' +\n      (start+0.01) + '%{opacity:1}' +\n      (start+trail)%100 + '%{opacity:'+ alpha + '}' +\n      '100%{opacity:'+ z + '}' +\n      '}', 0);\n    animations[name] = 1;\n  }\n  return name;\n}\n\n/**\n * Tries various vendor prefixes and returns the first supported property.\n **/\nfunction vendor(el, prop) {\n  var s = el.style;\n  var pp;\n  var i;\n\n  if(s[prop] !== undefined) return prop;\n  prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for(i=0; i<prefixes.length; i++) {\n    pp = prefixes[i]+prop;\n    if(s[pp] !== undefined) return pp;\n  }\n}\n\n/**\n * Sets multiple style properties at once.\n */\nfunction css(el, prop) {\n  for (var n in prop) {\n    el.style[vendor(el, n)||n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Fills in default values.\n */\nfunction merge(obj) {\n  for (var i=1; i < arguments.length; i++) {\n    var def = arguments[i];\n    for (var n in def) {\n      if (obj[n] === undefined) obj[n] = def[n];\n    }\n  }\n  return obj;\n}\n\n/**\n * Returns the absolute page-offset of the given element.\n */\nfunction pos(el) {\n  var o = {x:el.offsetLeft, y:el.offsetTop};\n  while((el = el.offsetParent)) {\n    o.x+=el.offsetLeft;\n    o.y+=el.offsetTop;\n  }\n  return o;\n}\n\nvar defaults = {\n  lines: 12,            // The number of lines to draw\n  length: 7,            // The length of each line\n  width: 5,             // The line thickness\n  radius: 10,           // The radius of the inner circle\n  rotate: 0,            // rotation offset\n  color: '#000',        // #rgb or #rrggbb\n  speed: 1,             // Rounds per second\n  trail: 100,           // Afterglow percentage\n  opacity: 1/4,         // Opacity of the lines\n  fps: 20,              // Frames per second when using setTimeout()\n  zIndex: 2e9,          // Use a high z-index by default\n  className: 'spinner', // CSS class to assign to the element\n  top: 'auto',          // center vertically\n  left: 'auto'          // center horizontally\n};\n\n/** The constructor */\nvar Spinner = function Spinner(o) {\n  if (!this.spin) return new Spinner(o);\n  this.opts = merge(o || {}, Spinner.defaults, defaults);\n};\n\nSpinner.defaults = {};\nmerge(Spinner.prototype, {\n  spin: function(target) {\n    this.stop();\n    var self = this;\n    var o = self.opts;\n    var el = self.el = css(createEl(0, {className: o.className}), {position: 'relative', zIndex: o.zIndex});\n    var mid = o.radius+o.length+o.width;\n    var ep; // element position\n    var tp; // target position\n\n    if (target) {\n      target.insertBefore(el, target.firstChild||null);\n      tp = pos(target);\n      ep = pos(el);\n      css(el, {\n        left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : o.left+mid) + 'px',\n        top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : o.top+mid)  + 'px'\n      });\n    }\n\n    el.setAttribute('aria-role', 'progressbar');\n    self.lines(el, self.opts);\n\n    if (!useCssAnimations) {\n      // No CSS animation support, use setTimeout() instead\n      var i = 0;\n      var fps = o.fps;\n      var f = fps/o.speed;\n      var ostep = (1-o.opacity)/(f*o.trail / 100);\n      var astep = f/o.lines;\n\n      !function anim() {\n        i++;\n        for (var s=o.lines; s; s--) {\n          var alpha = Math.max(1-(i+s*astep)%f * ostep, o.opacity);\n          self.opacity(el, o.lines-s, alpha, o);\n        }\n        self.timeout = self.el && setTimeout(anim, ~~(1000/fps));\n      }();\n    }\n    return self;\n  },\n  stop: function() {\n    var el = this.el;\n    if (el) {\n      clearTimeout(this.timeout);\n      if (el.parentNode) el.parentNode.removeChild(el);\n      this.el = undefined;\n    }\n    return this;\n  },\n  lines: function(el, o) {\n    var i = 0;\n    var seg;\n\n    function fill(color, shadow) {\n      return css(createEl(), {\n        position: 'absolute',\n        width: (o.length+o.width) + 'px',\n        height: o.width + 'px',\n        background: color,\n        boxShadow: shadow,\n        transformOrigin: 'left',\n        transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',\n        borderRadius: (o.width>>1) + 'px'\n      });\n    }\n    for (; i < o.lines; i++) {\n      seg = css(createEl(), {\n        position: 'absolute',\n        top: 1+~(o.width/2) + 'px',\n        transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n        opacity: o.opacity,\n        animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1/o.speed + 's linear infinite'\n      });\n      if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}));\n      ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));\n    }\n    return el;\n  },\n  opacity: function(el, i, val) {\n    if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////\n// VML rendering for IE\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * Check and init VML support\n */\n!function() {\n\n  function vml(tag, attr) {\n    return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n  }\n\n  var s = css(createEl('group'), {behavior: 'url(#default#VML)'});\n\n  if (!vendor(s, 'transform') && s.adj) {\n\n    // VML support detected. Insert CSS rule ...\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function(el, o) {\n      var r = o.length+o.width;\n      var s = 2*r;\n\n      function grp() {\n        return css(vml('group', {coordsize: s +' '+s, coordorigin: -r +' '+-r}), {width: s, height: s});\n      }\n\n      var margin = -(o.width+o.length)*2+'px';\n      var g = css(grp(), {position: 'absolute', top: margin, left: margin});\n\n      var i;\n\n      function seg(i, dx, filter) {\n        ins(g,\n          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),\n            ins(css(vml('roundrect', {arcsize: 1}), {\n                width: r,\n                height: o.width,\n                left: o.radius,\n                top: -o.width>>1,\n                filter: filter\n              }),\n              vml('fill', {color: o.color, opacity: o.opacity}),\n              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        );\n      }\n\n      if (o.shadow) {\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n        }\n      }\n      for (i = 1; i <= o.lines; i++) seg(i);\n      return ins(el, g);\n    };\n    Spinner.prototype.opacity = function(el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n      if (c && i+o < c.childNodes.length) {\n        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n  else {\n    useCssAnimations = vendor(s, 'animation');\n  }\n}();\n\nmodule.exports = Spinner;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * File: matfile.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * MAT-files are a binary format directly supported by SigPlot.  A MAT-file consists of a 132-byte header\n * followed by binary data.\n * For more information on MAT-files, please visit https://www.mathworks.com/help/pdf_doc/matlab/matfile_format.pdf\n *\n * Offset   Name        Size    Type        Description\n * -----------------------------------------------------------------------------\n * 0        header     115   char[115]     Header\n * 116      subsys       7   char[7]\n * 124      version      2   int_2\n * 126      endianness   2   char[2]\n * 128      data_offset  4   int_4\n * 132      byte_offset  4   int_4\n *\n * @namespace matfile\n */\n\n/* global module */\n/* global require */\n\n(function() {\n    'use strict';\n\n    var common = require(\"./common\");\n\n    function matfile() {}\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);\n\n    // Descriptive text field\n    var headerTextBegin = 1;\n    var headerTextEnd = 116;\n\n    // Subsystem data offset field\n    var subsysOffsetBegin = 117;\n    var subsysOffsetEnd = 124;\n\n    // Version field\n    var versionOffsetBegin = 125;\n    var versionOffsetEnd = 126;\n\n    // Two character endian indicator. If the value reads \"MI\" then native computer\n    // has written the file in Big Endian, so no byte translation must occur.\n    // If value reads \"IM\" then native computer has written the file in Little Endian\n    // so byte-wise translation must be used on all data elements larger than 1 byte.\n    var endianCharsBegin = 127;\n    var endianCharsEnd = 128;\n\n    // Outermost data type and number of bytes. For data plottable in SigPlot this will\n    // most likely be a 1D array. The associated MATLAB type will most likely be \"miMATRIX\".\n\n    // WARNING: type \"miCOMPRESSED\" is the default for MATLAB files above version 6. These\n    // compressed files are currently UNREADABLE by this program as the file must be\n    // decompressed before reading.\n    var firstDataTypeOffsetBegin = 129;\n    var firstDataTypeOffsetEnd = 132;\n\n    var numBytesOffsetBegin = 133;\n    var numBytesOffsetEnd = 136;\n\n    // https://gist.github.com/TooTallNate/4750953\n    /**\n     * Returns the endianness of the browser\n     *\n     * @memberof matfile\n     * @private\n     */\n    function endianness() {\n        var b = new ArrayBuffer(4);\n        var a = new Uint32Array(b);\n        var c = new Uint8Array(b);\n        a[0] = 0xdeadbeef;\n        if (c[0] === 0xef) {\n            return 'LE';\n        }\n        if (c[0] === 0xde) {\n            return 'BE';\n        }\n        throw new Error('unknown endianness');\n    }\n\n    function getDataField(fileData, firstByte, lastByte) {\n        return fileData.slice(firstByte - 1, lastByte);\n    }\n\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var ARRAY_BUFFER_ENDIANNESS = endianness();\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var versionNames = {\n        256: \"MAT-file\"\n    };\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var dataTypeNames = {\n        1: {\n            name: \"miINT8\",\n            size: 1\n        },\n        2: {\n            name: \"miUINT8\",\n            size: 1\n        },\n        3: {\n            name: \"miINT16\",\n            size: 2\n        },\n        4: {\n            name: \"miUINT16\",\n            size: 2\n        },\n        5: {\n            name: \"miINT32\",\n            size: 4\n        },\n        6: {\n            name: \"miUINT32\",\n            size: 4\n        },\n        7: {\n            name: \"miSINGLE\",\n            size: 4\n        },\n        // 8 is reserved\n        9: {\n            name: \"miDOUBLE\",\n            size: 8\n        },\n        // 10 and 11 are reserved\n        12: {\n            name: \"miINT64\",\n            size: 8\n        },\n        13: {\n            name: \"miUINT64\",\n            size: 8\n        },\n        14: {\n            name: \"miMATRIX\",\n            size: null\n        },\n        15: {\n            name: \"miCOMPRESSED\",\n            size: null\n        },\n        16: {\n            name: \"miUTF8\",\n            size: null\n        },\n        17: {\n            name: \"miUTF16\",\n            size: null\n        },\n        18: {\n            name: \"miUTF32\",\n            size: null\n        }\n    };\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var arrayClassNames = {\n        1: \"mxCELL_CLASS\",\n        2: \"mxSTRUCT_CLASS\",\n        3: \"mxOBJECT_CLASS\",\n        4: \"mxCHAR_CLASS\",\n        5: \"mxSPARSE_CLASS\",\n        6: \"mxDOUBLE_CLASS\",\n        7: \"mxSINGLE_CLASS\",\n        8: \"mxINT8_CLASS\",\n        9: \"mxUINT8_CLASS\",\n        10: \"mxINT16_CLASS\",\n        11: \"mxUINT16_CLASS\",\n        12: \"mxINT32_CLASS\",\n        13: \"mxUINT32_CLASS\",\n        14: \"mxINT64_CLASS\",\n        15: \"mxUINT64_CLASS\"\n    };\n\n    /**\n     * @memberOf matfilee\n     * @private\n     */\n    var _SPA = {\n        'S': 1,\n        'C': 2,\n        'V': 3,\n        'Q': 4,\n        'M': 9,\n        'X': 10,\n        'T': 16,\n        'U': 1,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9\n    };\n\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _BPS = {\n        'P': 0.125,\n        'A': 1,\n        'O': 1,\n        'B': 1,\n        'I': 2,\n        'L': 4,\n        'X': 8,\n        'F': 4,\n        'D': 8\n    };\n\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _XM_TO_TYPEDARRAY = {\n        'P': null,\n        'A': null,\n        'O': Uint8Array,\n        'B': Int8Array,\n        'I': Int16Array,\n        'L': Int32Array,\n        'X': null,\n        'F': Float32Array,\n        'D': Float64Array\n    };\n\n    /**\n     * @memberof matfile\n     * @param   {array}     buf         Data bffer\n     * @param number\n     * @param bool\n     * @private\n     */\n    function getInt64(dataView, index, littleEndian) {\n        var highIndex, lowIndex;\n        var MAX_INT = Math.pow(2, 53);\n        if (littleEndian) {\n            highIndex = 4;\n            lowIndex = 0;\n        } else {\n            highIndex = 0;\n            lowIndex = 4;\n        }\n        var high = dataView.getInt32(index + highIndex, littleEndian);\n        var low = dataView.getInt32(index + lowIndex, littleEndian);\n        var rv = low + pow2(32) * high;\n        if (rv >= MAX_INT) {\n            window.console.info(\"Int is bigger than JS can represent.\");\n            return Infinity;\n        }\n        return rv;\n    }\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var _applySupportsTypedArray = true;\n    try {\n        var uintbuf = new Uint8Array(new ArrayBuffer(4));\n        uintbuf[0] = 66;\n        uintbuf[1] = 76;\n        uintbuf[2] = 85;\n        uintbuf[3] = 69;\n        var test = String.fromCharCode.apply(null, uintbuf);\n        if (test !== \"BLUE\") {\n            _applySupportsTypedArray = false;\n        }\n    } catch (error) {\n        _applySupportsTypedArray = false;\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {array}     buf         Data bffer\n     * @private\n     */\n    function ab2str(buf) {\n        var uintbuf = new Uint8Array(buf);\n        // Firefox 3.6 nor iOS devices can use ArrayBuffers with .apply\n        if (_applySupportsTypedArray) {\n            return String.fromCharCode.apply(null, uintbuf);\n        } else {\n            var str = \"\";\n            for (var i = 0; i < uintbuf.length; i++) {\n                str += String.fromCharCode(uintbuf[i]);\n            }\n            return str;\n        }\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {string}\n     * @private\n     */\n    function str2ab(str) {\n        var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n        var bufView = new Uint16Array(buf);\n        for (var i = 0, strLen = str.length; i < strLen; i++) {\n            bufView[i] = str.charCodeAt(i);\n        }\n        return buf;\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {number}\n     * @private\n     */\n    function pow2(n) {\n        return (n >= 0 && n < 31) ? (1 << n) : (pow2[n] || (pow2[n] = Math.pow(2, n)));\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {array}\n     * @param   {number}\n     * @param   {number}\n     * @param   {string}\n     * @param   {endian}\n     * @private\n     */\n    function getArray(arrayBuff, startByte, byteLength, type) {\n        // Get a JS array from MATLAB array\n        // TODO: big endian implemenation\n\n        var outArr = [];\n        var dv = new DataView(arrayBuff, startByte, byteLength);\n\n        var array;\n        if (type === \"miINT8\") {\n            array = new Int8Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miUINT8\") {\n            array = new Uint8Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miINT16\") {\n            array = new Int16Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miUINT16\") {\n            array = new Uint16Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miINT32\") {\n            array = new Int32Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miUINT32\") {\n            array = new Uint32Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miDOUBLE\") {\n            array = new Float64Array(arrayBuff, startByte, byteLength);\n        } else {\n            window.console.warn(\"Array data type not supported yet.\");\n            return;\n        }\n\n        array.forEach(function(element) {\n            outArr.push(element);\n        });\n\n        return outArr;\n    }\n\n    function getDataWithType(dv, typeName, offset, littleEndian) {\n        var output;\n        switch (typeName) {\n            case \"miINT8\":\n                output = dv.getInt8(offset, littleEndian);\n                break;\n            case \"miUINT8\":\n                output = dv.getInt8(offset, littleEndian);\n                break;\n            case \"miINT16\":\n                output = dv.getInt16(offset, littleEndian);\n                break;\n            case \"miUINT16\":\n                output = dv.getUint16(offset, littleEndian);\n                break;\n            case \"miINT32\":\n                output = dv.getInt32(offset, littleEndian);\n                break;\n            case \"miUINT32\":\n                output = dv.getUint32(offset, littleEndian);\n                break;\n            case \"miSINGLE\":\n                output = dv.getFloat32(offset, littleEndian);\n                break;\n            case \"miDOUBLE\":\n                output = dv.getFloat64(offset, littleEndian);\n                break;\n            case \"miINT64\":\n                output = getInt64(dv, offset, littleEndian);\n                break;\n            default:\n                window.console.warn(typeName + \" not supported at thsi time\");\n                break;\n                /* TODO:           \n                case \"miUINT64\":\n                    break;\n                case \"miMATRIX\":\n                    break;\n                case \"miCOMPRESSED\":\n                    break;\n                case \"miUTF8\":\n                    break;\n                case \"miUTF16\":\n                    break;\n                case \"miUTF32\":\n                    break;*/\n        }\n        return output;\n    }\n\n    /**\n     * Create matfile header and attach data buffer\n     * @memberof matfile\n     * @param   {array}     buf         Data bffer\n     */\n    matfile.MatHeader = function(buf, options) {\n        this.file = null;\n        this.file_name = null;\n        this.buf = buf;\n        if (this.buf != null) {\n            var dvhdr = new DataView(this.buf);\n            this.headerStr = ab2str(this.buf.slice(headerTextBegin - 1, headerTextEnd));\n\n            // get endianness\n            this.datarep = ab2str(this.buf.slice(endianCharsBegin - 1, endianCharsEnd));\n            var littleEndianHdr = (this.datarep === \"IM\");\n            var littleEndianData = (this.datarep === \"IM\");\n\n            this.headerList = this.headerStr.split(\",\").map(function(str) {\n                return str.trim();\n            });\n            this.matfile = this.headerList[0];\n            this.platform = this.headerList[1];\n            this.createdOn = this.headerList[2];\n            this.subsystemOffset = ab2str(this.buf.slice(subsysOffsetBegin - 1, subsysOffsetEnd));\n            this.version = dvhdr.getUint16(versionOffsetBegin - 1, littleEndianHdr);\n            this.versionName = versionNames[this.version];\n\n            this.dataType = dvhdr.getUint32(firstDataTypeOffsetBegin - 1, littleEndianHdr);\n            this.dataTypeName = dataTypeNames[this.dataType].name;\n            this.arraySize = dvhdr.getUint32(numBytesOffsetBegin - 1, littleEndianHdr);\n\n            var beginArray = numBytesOffsetEnd + 1;\n\n            // Start reading the file linearly from beginning and inc index as you go...\n            var currIndex = numBytesOffsetEnd + 1;\n            var typeNum = dvhdr.getUint32(currIndex - 1, littleEndianHdr);\n            var typeName = dataTypeNames[typeNum].name;\n            var typeSize = dataTypeNames[typeNum].size;\n            currIndex += 4;\n\n            // bytes per ``typeName``\n            var flagLength = getDataWithType(dvhdr, typeName, currIndex - 1, littleEndianData);\n            currIndex += typeSize;\n\n            // Array flags\n            // If bit is set:\n            // - complex: the data element includes an imaginary part\n            // - global: \"MATLAB loads the data element as a global variable in the base workspace\"\n            // - logical: indicates the array is used for logical indexing.\n            var arrayFlag = getDataWithType(dvhdr, typeName, currIndex - 1, littleEndianData);\n            currIndex += typeSize;\n\n            // TODO: use flags for future implementation\n            var complexFlag = arrayFlag & 0x80;\n            var globalFlag = arrayFlag & 0x40;\n            var logicalFlag = arrayFlag & 0x20;\n\n            // Find array class\n            var arrayClassNum = arrayFlag & 0xF;\n            var arrayClassName = arrayClassNames[arrayClassNum];\n\n            // TODO: sparse array data format implementation: which uses next 4 bytes\n            // Skip to next type field (array dimensions)\n            currIndex += typeSize;\n\n            // Dimensions type:\n            var dimTypeNum = dvhdr.getUint32(currIndex - 1, littleEndianData);\n            currIndex += 4;\n\n            var dimTypeName = dataTypeNames[dimTypeNum].name;\n            var dimTypeSize = dataTypeNames[dimTypeNum].size;\n\n            // Dimensions size:\n            var arrayDimTotalSize = dvhdr.getUint32(currIndex - 1, littleEndianData);\n            currIndex += 4;\n\n            // Get number of rows\n            var rows = getDataWithType(dvhdr, dimTypeName, currIndex - 1, littleEndianData);\n            currIndex += dimTypeSize;\n\n            // TODO: support for >= 2D array types\n            if (rows > 1) {\n                window.console.warn(\"Only 1D arrays are currently supported.\");\n            }\n\n            // Get number of columns\n            var cols = getDataWithType(dvhdr, dimTypeName, currIndex - 1, littleEndianData);\n            currIndex += typeSize;\n\n            // array name type\n            var arrayNameTypeNum = dvhdr.getUint32(currIndex - 1, littleEndianData);\n            currIndex += 4;\n\n            var nameSize = 0;\n            var small = false;\n            if (arrayNameTypeNum > 15) {\n                arrayNameTypeNum &= 0x00FF;\n                small = true;\n                nameSize = dvhdr.getUint16(currIndex - 5, littleEndianData);\n            }\n\n            var arrayNameTypeName = dataTypeNames[arrayNameTypeNum].name;\n            var arrayNameTypeSize = dataTypeNames[arrayNameTypeNum].size;\n\n            if (!small) {\n                nameSize = getDataWithType(dvhdr, arrayNameTypeName, currIndex - 1, littleEndianData);\n                currIndex += 4;\n            }\n\n            var arrayName = ab2str(this.buf.slice(currIndex - 1, currIndex + nameSize - 1));\n\n            // Pad to end of 64 bit word if necessary\n            var rndUp;\n            if (small) {\n                // Pad from the middle to the end of a 64 bit word\n                rndUp = (4 - (nameSize % 4)) % 4;\n            } else {\n                // Pad from the start of a new word\n                rndUp = (8 - (nameSize % 8)) % 8;\n            }\n\n            var jumpTo = nameSize + rndUp;\n            currIndex += jumpTo;\n\n            // set the data field in the header\n            this.setData(this.buf, dvhdr, currIndex, littleEndianData);\n        }\n    };\n\n    matfile.MatHeader.prototype = {\n        /**\n         * @memberof bluefile\n         * @param   buf\n         * @param   dvhdr\n         * @param   data_end\n         * @param   littleEndian\n         *\n         */\n        setData: function(buf, dvhdr, currIndex, littleEndian) {\n            var arrayValSize;\n\n            // Array value(s) type:\n            var typeNum = dvhdr.getUint32(currIndex - 1, littleEndian);\n\n            // Check for MATLAB \"small element type\"\n            var small = false;\n            if (typeNum > 15) {\n                typeNum &= 0x00FF;\n                small = true;\n                arrayValSize = dvhdr.getUint16(currIndex + 1, 2, littleEndian);\n            } else {\n                currIndex += 4;\n            }\n\n            var typeName = dataTypeNames[typeNum].name;\n            var typeSize = dataTypeNames[typeNum].size;\n\n            if (!small) {\n                arrayValSize = dvhdr.getUint32(currIndex - 1, littleEndian);\n                small = false;\n            }\n\n            currIndex += 4;\n\n            // Get JS array from MATLAB array\n            this.dview = getArray(buf, currIndex - 1, arrayValSize / typeSize, typeName);\n        }\n    };\n\n    // Internal method from http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n    /**\n     * This function creates a new anchor element and uses location\n     * properties (inherent) to get the desired URL data. Some String\n     * operations are used (to normalize results across browsers).\n     *\n     * @memberof bluefile\n     * @private\n     * @param   url\n     * @returns -\n     */\n    function parseURL(url) {\n        var a = document.createElement('a');\n        a.href = url;\n        return {\n            source: url,\n            protocol: a.protocol.replace(':', ''),\n            host: a.hostname,\n            port: a.port,\n            query: a.search,\n            params: (function() {\n                var ret = {},\n                    seg = a.search.replace(/^\\?/, '').split('&'),\n                    len = seg.length,\n                    i = 0,\n                    s;\n                for (; i < len; i++) {\n                    if (!seg[i]) {\n                        continue;\n                    }\n                    s = seg[i].split('=');\n                    ret[s[0]] = s[1];\n                }\n                return ret;\n            })(),\n            file: (a.pathname.match(/\\/([^\\/?#]+)$/i) || [null, ''])[1],\n            hash: a.hash.replace('#', ''),\n            path: a.pathname.replace(/^([^\\/])/, '/$1'),\n            relative: (a.href.match(/tps?:\\/\\/[^\\/]+(.+)/) || [null, ''])[1],\n            segments: a.pathname.replace(/^\\//, '').split('/')\n        };\n    }\n\n    /**\n     * @memberof bluefile\n     * @private\n     * @param   text\n     * @param   oncomplete\n     * @param   blocksize\n     */\n    function text2buffer(text, oncomplete, blocksize) {\n        blocksize = blocksize || 1024;\n        var i = 0;\n        var arrayBuffer = new ArrayBuffer(text.length);\n        var bufView = new Uint8Array(arrayBuffer);\n        var worker = function() {\n            var end = i + blocksize;\n            for (; i < end; i++) {\n                bufView[i] = (text.charCodeAt(i) & 0xff);\n            }\n            if (i >= text.length) {\n                oncomplete(arrayBuffer);\n            } else {\n                setTimeout(worker, 0);\n            }\n        };\n        setTimeout(worker, 0);\n    }\n\n    /**\n     * Matfile Reader\n     * @memberof    matfile\n     * @param   options\n     */\n    matfile.MatFileReader = function(options) {\n        this.options = options;\n    };\n\n    matfile.MatFileReader.prototype = {\n        /**\n         * @memberof matfile\n         * @param   theFile\n         * @param   onload\n         *\n         */\n        readheader: function readheader(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            var blob = theFile.webkitSlice(0, 116); // Chrome specific\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var rawhdr = reader.result;\n                    var hdr = new matfile.MatHeader(rawhdr, that.options);\n                    hdr.file = theFile;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(blob);\n        },\n\n        /**\n         *\n         * @memberof matfile\n         * @param   theFile\n         * @param   onload\n         *\n         */\n        read: function read(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var raw = reader.result;\n                    var hdr = new matfile.MatHeader(raw, that.options);\n                    hdr.file = theFile;\n                    hdr.file_name = theFile.name;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(theFile);\n        },\n\n        /**\n         *\n         * @memberof matfile\n         * @param   href\n         * @param   onload\n         *\n         */\n        read_http: function read_http(href, onload) {\n            var that = this;\n            var oReq = new XMLHttpRequest();\n            oReq.open(\"GET\", href, true);\n            oReq.responseType = \"arraybuffer\";\n            oReq.overrideMimeType('text\\/plain; charset=x-user-defined');\n            oReq.onload = function(oEvent) {\n                if (oReq.readyState === 4) {\n                    if ((oReq.status === 200) || (oReq.status === 0)) { // status = 0 is necessary for file URL\n                        var arrayBuffer = null; // Note: not oReq.responseText\n                        if (oReq.response) {\n                            arrayBuffer = oReq.response;\n                            var hdr = new matfile.MatHeader(arrayBuffer, that.options);\n                            parseURL(href);\n                            var fileUrl = parseURL(href);\n                            hdr.file_name = fileUrl.file;\n                            onload(hdr);\n                        } else if (oReq.responseText) {\n                            text2buffer(oReq.responseText, function(arrayBuffer) {\n                                var hdr = new matfile.MatHeader(arrayBuffer, that.options);\n                                parseURL(href);\n                                var fileUrl = parseURL(href);\n                                hdr.file_name = fileUrl.file;\n                                onload(hdr);\n                            });\n                        }\n                        return;\n                    }\n                }\n                onload(null);\n            };\n            oReq.onerror = function(oEvent) {\n                onload(null);\n            };\n            oReq.send(null);\n        }\n    };\n\n    module.exports = matfile;\n}(this));\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","/* global module */\n/* global require */\n (function() {\n     var tinycolor = require(\"tinycolor2\");\n     if (typeof Object.assign !== 'function') {\n         // Must be writable: true, enumerable: false, configurable: true\n         Object.defineProperty(Object, \"assign\", {\n             value: function assign(target, varArgs) { // .length of function is 2\n                 'use strict';\n                 if (target == null) { // TypeError if undefined or null\n                     throw new TypeError('Cannot convert undefined or null to object');\n                 }\n                 var to = Object(target);\n                 for (var index = 1; index < arguments.length; index++) {\n                     var nextSource = arguments[index];\n                     if (nextSource != null) { // Skip over if undefined or null\n                         for (var nextKey in nextSource) {\n                             // Avoid bugs when hasOwnProperty is shadowed\n                             if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                                 to[nextKey] = nextSource[nextKey];\n                             }\n                         }\n                     }\n                 }\n                 return to;\n             },\n             writable: true,\n             configurable: true\n         });\n     }\n     var ColorMap = window.ColorMap = function(colors, options) {\n         this.options = {\n             ncolors: 500,\n             alpha: 255\n         };\n         this.options = Object.assign(this.options, options);\n         this.map = [];\n         var _min = 0;\n         this._low = 0;\n         this._high = 1;\n         var ncolors = this.options.ncolors;\n         this._fscale = ncolors / (this._high - this._low);\n         var colorindex = 1;\n         var colorBlockIndex = 1;\n         colors = JSON.parse(JSON.stringify(colors)); //make a copy so we dont change the original colors\n         colors = this._parseColors(colors);\n         this.colors = colors;\n         var col1 = colors[0];\n         var col2 = colors[1];\n         var colorStop = colors[1].pos - colors[0].pos;\n         var colorsInBlock = ncolors * (colorStop / 100);\n         this.colorsInBlock = colorsInBlock;\n         var factorStep = 1 / colorsInBlock;\n         for (var n = 0; n < ncolors - 2; n++) {\n             if (colorBlockIndex > colorsInBlock) {\n                 col1 = colors[colorindex];\n                 col2 = colors[colorindex + 1];\n                 if (col2 === undefined) {\n                     break;\n                 }\n                 var colorStop = col2.pos - col1.pos;\n                 var colorsInBlock = ncolors * (colorStop / 100);\n                 this.colorsInBlock = colorsInBlock;\n                 var factorStep = 1 / colorsInBlock;\n                 var colorBlockIndex = 1;\n                 colorindex += 1;\n             }\n             this._addColor(this.interpolate(col1, col2, factorStep * colorBlockIndex));\n             colorBlockIndex += 1;\n         }\n         \n        this._addColor(colors[colors.length -1]);\n        this._addColor(colors[0], true);\n         \n     };\n     ColorMap.prototype = {\n         _addColor: function(color, front) {\n             color.hex = this._rgbToHex(color.red, color.green, color.blue);\n             color.color = (color.alpha << 24) | // alpha\n                 (color.blue << 16) | // blue\n                 (color.green << 8) | // green\n                 (color.red);\n             if (front) {\n                 this.map.unshift(color);\n             } else {\n                 this.map.push(color);\n             }\n         },\n         _parseColors: function(colors) {\n             for (var i = 0, c = colors.length; i < c; i++) {\n                 var color = colors[i];\n                 if (typeof color === \"string\") {\n                     colors[i] = this._hexToRgb(color);\n                     color = tinycolor(color);\n                     color = color.toRgb();\n                     colors[i] = {red:color.r,green:color.g,blue:color.b,alpha:this.options.alpha};\n\n                 } else if (color.hasOwnProperty(\"color\")) {\n                     var newColor = tinycolor(color.color);\n                     newColor = newColor.toRgb();\n                     newColor = {red:newColor.r,green:newColor.g,blue:newColor.b,alpha:this.options.alpha};\n                     if (color.hasOwnProperty(\"pos\")) {\n                         newColor.pos = color.pos;\n                     }\n                     colors[i] = newColor;\n                 } else {\n                     //assume if it has rgb values it is a percentage\n                     colors[i].red = Math.floor(Math.round(255 * (color.red / 100)));\n                     colors[i].green = Math.floor(Math.round(255 * (color.green / 100)));\n                     colors[i].blue = Math.floor(Math.round(255 * (color.blue / 100)));\n                 }\n                 if (!colors[i].hasOwnProperty(\"alpha\")) {\n                     colors[i].alpha = this.options.alpha;\n                 }\n             }\n             return this._checkColorStops(colors);\n         },\n         _checkColorStops: function(colors) {\n             var lastStop = 0;\n             var colorsWithNoStops = 0;\n             for (var i = 0, c = colors.length; i < c; i++) {\n                 var color = colors[i];\n                 if (!color.hasOwnProperty(\"pos\")) {\n                     colorsWithNoStops += 1;\n                 } else {\n                     if (colorsWithNoStops) {\n                         var stopSize = (color.pos - lastStop) / colorsWithNoStops;\n                         var currentPos = color.pos;\n                         for (var z = 1; z <= colorsWithNoStops; z++) {\n                             colors[i - z].pos = currentPos - stopSize;\n                             currentPos -= stopSize;\n                         }\n                     }\n                     colorsWithNoStops = 0;\n                 }\n             }\n             if (colorsWithNoStops) {\n                 var currentPos = 100;\n                 colors[colors.length - 1].pos = currentPos;\n                 if (lastStop === 0) {\n                     colors[0].pos = 0;\n                     colorsWithNoStops -= 1;\n                 }\n                 var stopSize = (currentPos - lastStop) / colorsWithNoStops;\n                 var i = colors.length - 1;\n                 for (var z = 1; z < colorsWithNoStops; z++) {\n                     colors[i - z].pos = currentPos - stopSize;\n                     currentPos -= stopSize;\n                 }\n             }\n             return colors;\n         },\n         _componentToHex: function(c) {\n             var hex = c.toString(16);\n             return hex.length === 1 ? \"0\" + hex : hex;\n         },\n         _rgbToHex: function(r, g, b) {\n             return \"#\" + this._componentToHex(r) + this._componentToHex(g) + this._componentToHex(b);\n         },\n         _hexToRgb: function(hex) {\n             var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n             return result ? {\n                 red: parseInt(result[1], 16),\n                 green: parseInt(result[2], 16),\n                 blue: parseInt(result[3], 16)\n             } : null;\n         },\n         getColor: function(number) {\n             var n = (number - this._low) * this._fscale;\n             var colorindex = ~~n; //make int fastest method\n             if (colorindex > this.map.length - 1) {\n                 colorindex = this.map.length - 1;\n             } else if (colorindex < 0) {\n                 colorindex = 0;\n             }\n             return this.map[colorindex];\n         },\n         setRange: function(low, high) {\n             // only recalculate if a value has changed\n             if ((this._low !== low) || (this._high !== high)) {\n                 this._low = low;\n                 this._high = high;\n                 this._fscale = this.map.length / Math.abs(this._high - this._low);\n             }\n         },\n         interpolate: function(col1, col2, factor) {\n             return {\n                 red: col1.red + factor * (col2.red - col1.red),\n                 green: col1.green + factor * (col2.green - col1.green),\n                 blue: col1.blue + factor * (col2.blue - col1.blue),\n                 alpha: col1.alpha + factor * (col2.alpha - col1.alpha)\n             };\n         }\n     };\n     module.exports = ColorMap;\n })();","/**\n * @license\n * File: CanvasInput.js\n *  CanvasInput v1.0.10\n *  http://goldfirestudios.com/blog/108/CanvasInput-HTML5-Canvas-Text-Input\n *\n *  (c) 2013, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  (c) 2013, Axios, Inc.\n *  Modifications made by Axios, Inc.\n *  axiosengineering.com\n *\n *  MIT License\n */\n\n/* global module */\n/* global require */\n\n(function() {\n    // create a buffer that stores all inputs so that tabbing\n    // between them is made possible.\n    var inputs = [];\n\n    // initialize the Canvas Input\n    var CanvasInput = window.CanvasInput = function(o) {\n        var self = this;\n\n        o = o ? o : {};\n\n        // setup the defaults\n        self._canvas = o.canvas || null;\n        self._ctx = self._canvas ? self._canvas.getContext('2d') : null;\n        self._x = o.x || 0;\n        self._y = o.y || 0;\n        self._extraX = o.extraX || 0;\n        self._extraY = o.extraY || 0;\n        self._fontSize = o.fontSize || 14;\n        self._fontFamily = o.fontFamily || 'Arial';\n        self._fontColor = o.fontColor || '#000';\n        self._placeHolderColor = o.placeHolderColor || '#bfbebd';\n        self._fontWeight = o.fontWeight || 'normal';\n        self._fontStyle = o.fontStyle || 'normal';\n        self._readonly = o.readonly || false;\n        self._maxlength = o.maxlength || null;\n        self._width = o.width || 150;\n        self._height = o.height || self._fontSize;\n        self._padding = o.padding >= 0 ? o.padding : 5;\n        self._borderWidth = o.borderWidth >= 0 ? o.borderWidth : 1;\n        self._borderColor = o.borderColor || '#959595';\n        self._borderRadius = o.borderRadius >= 0 ? o.borderRadius : 3;\n        self._backgroundImage = o.backgroundImage || '';\n        self._boxShadow = o.boxShadow || '1px 1px 0px rgba(255, 255, 255, 1)';\n        self._innerShadow = o.innerShadow || '0px 0px 4px rgba(0, 0, 0, 0.4)';\n        self._selectionColor = o.selectionColor || 'rgba(179, 212, 253, 0.8)';\n        self._placeHolder = o.placeHolder || '';\n        self._value = o.value || self._placeHolder;\n        self._onsubmit = o.onsubmit || function() {};\n        self._onkeydown = o.onkeydown || function() {};\n        self._onkeyup = o.onkeyup || function() {};\n        self._onfocus = o.onfocus || function() {};\n        self._onblur = o.onblur || function() {};\n        self._cursor = false;\n        self._cursorPos = 0;\n        self._hasFocus = false;\n        self._selection = [0, 0];\n        self._wasOver = false;\n        self._renderOnReturn = (o.renderOnReturn !== undefined ? o.renderOnReturn : true);\n        self._disableBlur = o.disableBlur || false;\n        self._tabToClear = o.tabToClear || false;\n\n        // parse box shadow\n        self.boxShadow(self._boxShadow, true);\n\n        // calculate the full width and height with padding, borders and shadows\n        self._calcWH();\n\n        // setup the off-DOM canvas\n        self._renderCanvas = document.createElement('canvas');\n        self._renderCanvas.setAttribute('width', self.outerW);\n        self._renderCanvas.setAttribute('height', self.outerH);\n        self._renderCtx = self._renderCanvas.getContext('2d');\n\n        // setup another off-DOM canvas for inner-shadows\n        self._shadowCanvas = document.createElement('canvas');\n        self._shadowCanvas.setAttribute('width', self._width + self._padding * 2);\n        self._shadowCanvas.setAttribute('height', self._height + self._padding * 2);\n        self._shadowCtx = self._shadowCanvas.getContext('2d');\n\n        // setup the background color\n        if (typeof o.backgroundGradient !== 'undefined') {\n            self._backgroundColor = self._renderCtx.createLinearGradient(\n                0,\n                0,\n                0,\n                self.outerH\n            );\n            self._backgroundColor.addColorStop(0, o.backgroundGradient[0]);\n            self._backgroundColor.addColorStop(1, o.backgroundGradient[1]);\n        } else {\n            self._backgroundColor = o.backgroundColor || '#fff';\n        }\n\n        // setup main canvas events\n        if (self._canvas) {\n            self.mousemoveCanvasListener = function(e) {\n                e = e || window.event;\n                self.mousemove(e, self);\n            };\n            self._canvas.addEventListener('mousemove', self.mousemoveCanvasListener, false);\n\n            self.mousedownCanvasListener = function(e) {\n                e = e || window.event;\n                self.mousedown(e, self);\n            };\n            self._canvas.addEventListener('mousedown', self.mousedownCanvasListener, false);\n\n            self.mouseupCanvasListener = function(e) {\n                e = e || window.event;\n                self.mouseup(e, self);\n            };\n            self._canvas.addEventListener('mouseup', self.mouseupCanvasListener, false);\n        }\n\n        // setup a global mouseup to blur the input outside of the canvas\n        self.mouseupWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus && !self._mouseDown) {\n                self.blur();\n            }\n        };\n        window.addEventListener('mouseup', self.mouseupWindowListener, true);\n\n        // setup the keydown listener\n        self.keydownWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                self.keydown(e, self);\n            }\n        };\n        window.addEventListener('keydown', self.keydownWindowListener, false);\n\n        // setup the keyup listener\n        self.keyupWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                self._onkeyup(e, self);\n            }\n        };\n        window.addEventListener('keyup', self.keyupWindowListener, false);\n\n        // setup the 'paste' listener\n        self.pasteWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                var text = e.clipboardData.getData('text/plain'),\n                    startText = self._value.substr(0, self._cursorPos),\n                    endText = self._value.substr(self._cursorPos);\n                self._value = startText + text + endText;\n                self._cursorPos += text.length;\n\n                self.render();\n            }\n        };\n        window.addEventListener('paste', self.pasteWindowListener, false);\n\n        // add this to the buffer\n        inputs.push(self);\n        self._inputsIndex = inputs.length - 1;\n\n        // draw the text box\n        self.render();\n    };\n\n    // setup the prototype\n    CanvasInput.prototype = {\n        /**\n         * Get/set the main canvas.\n         * @param  {Object} data Canvas reference.\n         * @return {Mixed}      CanvasInput or current canvas.\n         */\n        canvas: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._canvas = data;\n                self._ctx = self._canvas.getContext('2d');\n\n                return self.render();\n            } else {\n                return self._canvas;\n            }\n        },\n\n        /**\n         * Get/set the x-position.\n         * @param  {Number} data The pixel position along the x-coordinate.\n         * @return {Mixed}      CanvasInput or current x-value.\n         */\n        x: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._x = data;\n\n                return self.render();\n            } else {\n                return self._x;\n            }\n        },\n\n        /**\n         * Get/set the y-position.\n         * @param  {Number} data The pixel position along the y-coordinate.\n         * @return {Mixed}      CanvasInput or current y-value.\n         */\n        y: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._y = data;\n\n                return self.render();\n            } else {\n                return self._y;\n            }\n        },\n\n        /**\n         * Get/set the extra x-position (generally used when no canvas is specified).\n         * @param  {Number} data The pixel position along the x-coordinate.\n         * @return {Mixed}      CanvasInput or current x-value.\n         */\n        extraX: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._extraX = data;\n\n                return self.render();\n            } else {\n                return self._extraX;\n            }\n        },\n\n        /**\n         * Get/set the extra y-position (generally used when no canvas is specified).\n         * @param  {Number} data The pixel position along the y-coordinate.\n         * @return {Mixed}      CanvasInput or current y-value.\n         */\n        extraY: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._extraY = data;\n\n                return self.render();\n            } else {\n                return self._extraY;\n            }\n        },\n\n        /**\n         * Get/set the font size.\n         * @param  {Number} data Font size.\n         * @return {Mixed}      CanvasInput or current font size.\n         */\n        fontSize: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontSize = data;\n\n                return self.render();\n            } else {\n                return self._fontSize;\n            }\n        },\n\n        /**\n         * Get/set the font family.\n         * @param  {String} data Font family.\n         * @return {Mixed}      CanvasInput or current font family.\n         */\n        fontFamily: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontFamily = data;\n\n                return self.render();\n            } else {\n                return self._fontFamily;\n            }\n        },\n\n        /**\n         * Get/set the font color.\n         * @param  {String} data Font color.\n         * @return {Mixed}      CanvasInput or current font color.\n         */\n        fontColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontColor = data;\n\n                return self.render();\n            } else {\n                return self._fontColor;\n            }\n        },\n\n        /**\n         * Get/set the place holder font color.\n         * @param  {String} data Font color.\n         * @return {Mixed}      CanvasInput or current place holder font color.\n         */\n        placeHolderColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._placeHolderColor = data;\n\n                return self.render();\n            } else {\n                return self._placeHolderColor;\n            }\n        },\n\n        /**\n         * Get/set the font weight.\n         * @param  {String} data Font weight.\n         * @return {Mixed}      CanvasInput or current font weight.\n         */\n        fontWeight: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontWeight = data;\n\n                return self.render();\n            } else {\n                return self._fontWeight;\n            }\n        },\n\n        /**\n         * Get/set the font style.\n         * @param  {String} data Font style.\n         * @return {Mixed}      CanvasInput or current font style.\n         */\n        fontStyle: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontStyle = data;\n\n                return self.render();\n            } else {\n                return self._fontStyle;\n            }\n        },\n\n        /**\n         * Get/set the width of the text box.\n         * @param  {Number} data Width in pixels.\n         * @return {Mixed}      CanvasInput or current width.\n         */\n        width: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._width = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._width;\n            }\n        },\n\n        /**\n         * Get/set the height of the text box.\n         * @param  {Number} data Height in pixels.\n         * @return {Mixed}      CanvasInput or current height.\n         */\n        height: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._height = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._height;\n            }\n        },\n\n        /**\n         * Get/set the padding of the text box.\n         * @param  {Number} data Padding in pixels.\n         * @return {Mixed}      CanvasInput or current padding.\n         */\n        padding: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._padding = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._padding;\n            }\n        },\n\n        /**\n         * Get/set the border width.\n         * @param  {Number} data Border width.\n         * @return {Mixed}      CanvasInput or current border width.\n         */\n        borderWidth: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderWidth = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._borderWidth;\n            }\n        },\n\n        /**\n         * Get/set the border color.\n         * @param  {String} data Border color.\n         * @return {Mixed}      CanvasInput or current border color.\n         */\n        borderColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderColor = data;\n\n                return self.render();\n            } else {\n                return self._borderColor;\n            }\n        },\n\n        /**\n         * Get/set the border radius.\n         * @param  {Number} data Border radius.\n         * @return {Mixed}      CanvasInput or current border radius.\n         */\n        borderRadius: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderRadius = data;\n\n                return self.render();\n            } else {\n                return self._borderRadius;\n            }\n        },\n\n        /**\n         * Get/set the background color.\n         * @param  {Number} data Background color.\n         * @return {Mixed}      CanvasInput or current background color.\n         */\n        backgroundColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._backgroundColor = data;\n\n                return self.render();\n            } else {\n                return self._backgroundColor;\n            }\n        },\n\n        /**\n         * Get/set the background gradient.\n         * @param  {Number} data Background gradient.\n         * @return {Mixed}      CanvasInput or current background gradient.\n         */\n        backgroundGradient: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._backgroundColor = self._renderCtx.createLinearGradient(\n                    0,\n                    0,\n                    0,\n                    self.outerH\n                );\n                self._backgroundColor.addColorStop(0, data[0]);\n                self._backgroundColor.addColorStop(1, data[1]);\n\n                return self.render();\n            } else {\n                return self._backgroundColor;\n            }\n        },\n\n        /**\n         * Get/set the box shadow.\n         * @param  {String} data     Box shadow in CSS format (1px 1px 1px rgba(0, 0, 0.5)).\n         * @param  {Boolean} doReturn (optional) True to prevent a premature render.\n         * @return {Mixed}          CanvasInput or current box shadow.\n         */\n        boxShadow: function(data, doReturn) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                // parse box shadow\n                var boxShadow = data.split('px ');\n                self._boxShadow = {\n                    x: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[0], 10),\n                    y: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[1], 10),\n                    blur: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[2], 10),\n                    color: self._boxShadow === 'none' ? '' : boxShadow[3]\n                };\n\n                // take into account the shadow and its direction\n                if (self._boxShadow.x < 0) {\n                    self.shadowL = Math.abs(self._boxShadow.x) + self._boxShadow.blur;\n                    self.shadowR = self._boxShadow.blur + self._boxShadow.x;\n                } else {\n                    self.shadowL = Math.abs(self._boxShadow.blur - self._boxShadow.x);\n                    self.shadowR = self._boxShadow.blur + self._boxShadow.x;\n                }\n                if (self._boxShadow.y < 0) {\n                    self.shadowT = Math.abs(self._boxShadow.y) + self._boxShadow.blur;\n                    self.shadowB = self._boxShadow.blur + self._boxShadow.y;\n                } else {\n                    self.shadowT = Math.abs(self._boxShadow.blur - self._boxShadow.y);\n                    self.shadowB = self._boxShadow.blur + self._boxShadow.y;\n                }\n\n                self.shadowW = self.shadowL + self.shadowR;\n                self.shadowH = self.shadowT + self.shadowB;\n\n                self._calcWH();\n\n                if (!doReturn) {\n                    self._updateCanvasWH();\n\n                    return self.render();\n                }\n            } else {\n                return self._boxShadow;\n            }\n        },\n\n        /**\n         * Get/set the inner shadow.\n         * @param  {String} data In the format of a CSS box shadow (1px 1px 1px rgba(0, 0, 0.5)).\n         * @return {Mixed}          CanvasInput or current inner shadow.\n         */\n        innerShadow: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._innerShadow = data;\n\n                return self.render();\n            } else {\n                return self._innerShadow;\n            }\n        },\n\n        /**\n         * Get/set the text selection color.\n         * @param  {String} data Color.\n         * @return {Mixed}      CanvasInput or current selection color.\n         */\n        selectionColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._selectionColor = data;\n\n                return self.render();\n            } else {\n                return self._selectionColor;\n            }\n        },\n\n        /**\n         * Get/set the place holder text.\n         * @param  {String} data Place holder text.\n         * @return {Mixed}      CanvasInput or current place holder text.\n         */\n        placeHolder: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._placeHolder = data;\n\n                return self.render();\n            } else {\n                return self._placeHolder;\n            }\n        },\n\n        /**\n         * Get/set the current text box value.\n         * @param  {String} data Text value.\n         * @return {Mixed}      CanvasInput or current text value.\n         */\n        value: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._value = data;\n\n                return self.focus();\n            } else {\n                return self._value;\n            }\n        },\n\n        /**\n         * Set or fire the onsubmit event.\n         * @param  {Function} fn Custom callback.\n         */\n        onsubmit: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onsubmit = fn;\n\n                return self;\n            } else {\n                self._onsubmit();\n            }\n        },\n\n        /**\n         * Set or fire the onkeydown event.\n         * @param  {Function} fn Custom callback.\n         */\n        onkeydown: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onkeydown = fn;\n\n                return self;\n            } else {\n                self._onkeydown();\n            }\n        },\n\n        /**\n         * Set or fire the onkeyup event.\n         * @param  {Function} fn Custom callback.\n         */\n        onkeyup: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onkeyup = fn;\n\n                return self;\n            } else {\n                self._onkeyup();\n            }\n        },\n\n        /**\n         * Place focus on the CanvasInput box, placing the cursor\n         * either at the end of the text or where the user clicked.\n         * @param  {Number} pos (optional) The position to place the cursor.\n         * @return {CanvasInput}\n         */\n        focus: function(pos) {\n            var self = this,\n                input;\n\n            // if this is readonly, don't allow it to get focus\n            if (self._readonly) {\n                return;\n            }\n\n            // only fire the focus event when going from unfocussed\n            if (!self._hasFocus) {\n                self._onfocus(self);\n            }\n\n            // remove selection\n            if (!self._selectionUpdated) {\n                self._selection = [0, 0];\n            } else {\n                delete self._selectionUpdated;\n            }\n\n            // update the cursor position\n            self._cursorPos = (typeof pos === 'number') ? pos : self._clipText().length;\n\n            // clear the place holder\n            if (self._placeHolder === self._value) {\n                self._value = '';\n            }\n\n            self._hasFocus = true;\n            self._cursor = true;\n\n            // setup cursor interval\n            if (self._cursorInterval) {\n                clearInterval(self._cursorInterval);\n            }\n            self._cursorInterval = setInterval(function() {\n                self._cursor = !self._cursor;\n                self.render();\n            }, 500);\n\n            // check if this is Chrome for Android (there is a bug with returning incorrect character key codes)\n            var nav = navigator.userAgent.toLowerCase(),\n                isChromeMobile = (nav.indexOf('chrome') >= 0 && nav.indexOf('mobile') >= 0 && nav.indexOf('android') >= 0);\n\n            // add support for mobile\n            var isMobile = (typeof window.orientation !== 'undefined');\n            if (isMobile && !isChromeMobile && document && document.createElement && (input = document.createElement('input'))) {\n                input.type = 'text';\n                input.style.opacity = 0;\n                input.style.position = 'absolute';\n                input.style.left = (self._x + self._extraX + (self._canvas ? self._canvas.offsetLeft : 0)) + 'px';\n                input.style.top = (self._y + self._extraY + (self._canvas ? self._canvas.offsetTop : 0)) + 'px';\n                input.style.width = self._width;\n                input.style.height = 0;\n                document.body.appendChild(input);\n                input.focus();\n                input.addEventListener('blur', function() {\n                    self.blur(self);\n                }, false);\n            } else if (isMobile) {\n                self.value(prompt(self._placeHolder) || '');\n            }\n\n            return self.render();\n        },\n\n        /**\n         * Removes focus from the CanvasInput box.\n         * @param  {Object} _this Reference to this.\n         * @return {CanvasInput}\n         */\n        blur: function(_this) {\n            var self = _this || this;\n\n            if (!self._disableBlur) {\n                self._onblur(self);\n\n                if (self._cursorInterval) {\n                    clearInterval(self._cursorInterval);\n                }\n                self._hasFocus = false;\n                self._cursor = false;\n                self._selection = [0, 0];\n\n                // fill the place holder\n                if (self._value === '') {\n                    self._value = self._placeHolder;\n                }\n            }\n\n            return self.render();\n        },\n\n        /**\n         * Maintains continual focus on the CanvasInput by disabling blur.\n         * @param {Object} _this Reference to this.\n         */\n        disableBlur: function(_this) {\n            var self = _this || this;\n            self._disableBlur = true;\n        },\n\n        /**\n         * Allows the CanvasInput to blur or focus by re-enabling blur.\n         * @param {Object} _this Reference to this.\n         */\n        enableBlur: function(_this) {\n            var self = _this || this;\n            self._disableBlur = false;\n        },\n\n        /**\n         * Fired with the keydown event to draw the typed characters.\n         * @param  {Event}       e    The keydown event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        keydown: function(e, self) {\n            var keyCode = e.which,\n                isShift = e.shiftKey,\n                key = null,\n                startText, endText;\n\n            // make sure the correct text field is being updated\n            if (!self._hasFocus) {\n                return;\n            }\n\n            // fire custom user event\n            self._onkeydown(e, self);\n\n            // add support for Ctrl/Cmd+A selection\n            if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n                self._selection = [0, self._value.length];\n                e.preventDefault();\n                return self.render();\n            }\n\n            // block keys that shouldn't be processed\n            if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n                return self;\n            }\n\n            // prevent the default action\n            e.preventDefault();\n\n            if (keyCode === 8) { // backspace\n                if (!self._clearSelection()) {\n                    if (self._cursorPos > 0) {\n                        startText = self._value.substr(0, self._cursorPos - 1);\n                        endText = self._value.substr(self._cursorPos, self._value.length);\n                        self._value = startText + endText;\n                        self._cursorPos--;\n                    }\n                }\n            } else if (keyCode === 37) { // left arrow key\n                if (self._cursorPos > 0) {\n                    self._cursorPos--;\n                    self._cursor = true;\n                    self._selection = [0, 0];\n                }\n            } else if (keyCode === 39) { // right arrow key\n                if (self._cursorPos < self._value.length) {\n                    self._cursorPos++;\n                    self._cursor = true;\n                    self._selection = [0, 0];\n                }\n            } else if (keyCode === 13) { // enter key\n                self._onsubmit(e, self);\n            } else if (keyCode === 9) { // tab key\n                if (self._tabToClear) {\n                    self._value = \"\";\n                    self._cursorPos = 0;\n                } else {\n                    var next = (inputs[self._inputsIndex + 1]) ? self._inputsIndex + 1 : 0;\n                    if (next !== self._inputsIndex) {\n                        self.blur();\n                        setTimeout(function() {\n                            inputs[next].focus();\n                        }, 10);\n                    }\n                }\n            } else if (key = self._mapCodeToKey(isShift, keyCode)) {\n                self._clearSelection();\n\n                // enforce the max length\n                if (self._maxlength && self._maxlength <= self._value.length) {\n                    return;\n                }\n\n                startText = (self._value) ? self._value.substr(0, self._cursorPos) : '';\n                endText = (self._value) ? self._value.substr(self._cursorPos) : '';\n                self._value = startText + key + endText;\n                self._cursorPos++;\n            }\n\n            if ((keyCode == 13 && self._renderOnReturn) || keyCode !== 13) {\n                return self.render();\n            } else {\n                return function() {};\n            }\n        },\n\n        /**\n         * Fired with the click event on the canvas, and puts focus on/off\n         * based on where the user clicks.\n         * @param  {Event}       e    The click event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        click: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y;\n\n            if (self._endSelection) {\n                delete self._endSelection;\n                delete self._selectionUpdated;\n                return;\n            }\n\n            if (self._canvas && self._overInput(x, y) || !self._canvas) {\n                if (self._mouseDown) {\n                    self._mouseDown = false;\n                    self.click(e, self);\n                    return self.focus(self._clickPos(x, y));\n                }\n            } else {\n                return self.blur();\n            }\n        },\n\n        /**\n         * Fired with the mousemove event to update the default cursor.\n         * @param  {Event}       e    The mousemove event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        mousemove: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y,\n                isOver = self._overInput(x, y);\n\n            if (isOver && self._canvas) {\n                self._canvas.style.cursor = 'text';\n                self._wasOver = true;\n            } else if (self._wasOver && self._canvas) {\n                self._canvas.style.cursor = 'default';\n                self._wasOver = false;\n            }\n\n            if (self._hasFocus && self._selectionStart >= 0) {\n                var curPos = self._clickPos(x, y),\n                    start = Math.min(self._selectionStart, curPos),\n                    end = Math.max(self._selectionStart, curPos);\n\n                if (!isOver) {\n                    self._selectionUpdated = true;\n                    self._endSelection = true;\n                    delete self._selectionStart;\n                    self.render();\n                    return;\n                }\n\n                if (self._selection[0] !== start || self._selection[1] !== end) {\n                    self._selection = [start, end];\n                    self.render();\n                }\n            }\n        },\n\n        /**\n         * Fired with the mousedown event to start a selection drag.\n         * @param  {Event} e    The mousedown event.\n         * @param  {CanvasInput} self\n         */\n        mousedown: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y,\n                isOver = self._overInput(x, y);\n\n            // setup the 'click' event\n            self._mouseDown = isOver;\n\n            // start the selection drag if inside the input\n            if (self._hasFocus && isOver) {\n                self._selectionStart = self._clickPos(x, y);\n            }\n        },\n\n        /**\n         * Fired with the mouseup event to end a selection drag.\n         * @param  {Event} e    The mouseup event.\n         * @param  {CanvasInput} self\n         */\n        mouseup: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y;\n\n            // update selection if a drag has happened\n            var isSelection = self._clickPos(x, y) !== self._selectionStart;\n            if (self._hasFocus && self._selectionStart >= 0 && self._overInput(x, y) && isSelection) {\n                self._selectionUpdated = true;\n                delete self._selectionStart;\n                self.render();\n            } else {\n                delete self._selectionStart;\n            }\n\n            self.click(e, self);\n        },\n\n        /**\n         * Helper method to get the off-DOM canvas.\n         * @return {Object} Reference to the canvas.\n         */\n        renderCanvas: function() {\n            return this._renderCanvas;\n        },\n\n        /**\n         * Helper method to remove all event listeners, stop the blinking cursor and\n         * reset the cursor style.\n         */\n        cleanup: function() {\n            this._canvas.removeEventListener(\"mouseup\", this.mouseupCanvasListener, false);\n            this._canvas.removeEventListener(\"mousedown\", this.mousedownCanvasListener, false);\n            this._canvas.removeEventListener(\"mousemove\", this.mousemoveCanvasListener, false);\n            window.removeEventListener(\"keydown\", this.keydownWindowListener, false);\n            window.removeEventListener(\"keyup\", this.keyupWindowListener, false);\n            window.removeEventListener(\"mouseup\", this.mouseupWindowListener, true);\n            window.removeEventListener(\"paste\", this.pasteWindowListener, false);\n            clearInterval(this._cursorInterval);\n\n            this._canvas.style.cursor = 'default';\n            for (var i = (inputs.length- 1); i >= 0 ; i--) {\n                if (inputs[i] === this) {\n                    inputs.splice(i, 1);\n                }\n            }\n        },\n\n        /**\n         * Clears and redraws the CanvasInput on an off-DOM canvas,\n         * and if a main canvas is provided, draws it all onto that.\n         * @return {CanvasInput}\n         */\n        render: function() {\n            var self = this,\n                ctx = self._renderCtx,\n                w = self.outerW,\n                h = self.outerH,\n                br = self._borderRadius,\n                bw = self._borderWidth,\n                sw = self.shadowW,\n                sh = self.shadowH;\n\n            // clear the canvas\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            // setup the box shadow\n            ctx.shadowOffsetX = self._boxShadow.x;\n            ctx.shadowOffsetY = self._boxShadow.y;\n            ctx.shadowBlur = self._boxShadow.blur;\n            ctx.shadowColor = self._boxShadow.color;\n\n            // draw the border\n            if (self._borderWidth > 0) {\n                ctx.fillStyle = self._borderColor;\n                self._roundedRect(ctx, self.shadowL, self.shadowT, w - sw, h - sh, br);\n                ctx.fill();\n\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 0;\n                ctx.shadowBlur = 0;\n            }\n\n            // draw the text box background\n            self._drawTextBox(function() {\n                // make sure all shadows are reset\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 0;\n                ctx.shadowBlur = 0;\n\n                // clip the text so that it fits within the box\n                var text = self._clipText();\n\n                // draw the selection\n                var paddingBorder = self._padding + self._borderWidth + self.shadowT;\n                if (self._selection[1] > 0) {\n                    var selectOffset = self._textWidth(text.substring(0, self._selection[0])),\n                        selectWidth = self._textWidth(text.substring(self._selection[0], self._selection[1]));\n\n                    ctx.fillStyle = self._selectionColor;\n                    ctx.fillRect(paddingBorder + selectOffset, paddingBorder, selectWidth, self._height);\n                }\n\n                // draw the cursor\n                ctx.fillStyle = (self._placeHolder === self._value && self._value !== '') ? self._placeHolderColor : self._fontColor;\n                if (self._cursor) {\n                    var cursorOffset = self._textWidth(text.substring(0, self._cursorPos));\n\n                    ctx.fillRect(paddingBorder + cursorOffset, paddingBorder, 1, self._height);\n                }\n\n                // draw the text\n                var textX = self._padding + self._borderWidth + self.shadowL,\n                    textY = Math.round(paddingBorder + self._height / 2);\n\n                ctx.font = self._fontStyle + ' ' + self._fontWeight + ' ' + self._fontSize + 'px ' + self._fontFamily;\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'middle';\n                ctx.fillText(text, textX, textY);\n\n                // parse inner shadow\n                var innerShadow = self._innerShadow.split('px '),\n                    isOffsetX = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[0], 10),\n                    isOffsetY = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[1], 10),\n                    isBlur = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[2], 10),\n                    isColor = self._innerShadow === 'none' ? '' : innerShadow[3];\n\n                // draw the inner-shadow (damn you canvas, this should be easier than this...)\n                if (isBlur > 0) {\n                    var shadowCtx = self._shadowCtx,\n                        scw = shadowCtx.canvas.width,\n                        sch = shadowCtx.canvas.height;\n\n                    shadowCtx.clearRect(0, 0, scw, sch);\n                    shadowCtx.shadowBlur = isBlur;\n                    shadowCtx.shadowColor = isColor;\n\n                    // top shadow\n                    shadowCtx.shadowOffsetX = 0;\n                    shadowCtx.shadowOffsetY = isOffsetY;\n                    shadowCtx.fillRect(-1 * w, -100, 3 * w, 100);\n\n                    // right shadow\n                    shadowCtx.shadowOffsetX = isOffsetX;\n                    shadowCtx.shadowOffsetY = 0;\n                    shadowCtx.fillRect(scw, -1 * h, 100, 3 * h);\n\n                    // bottom shadow\n                    shadowCtx.shadowOffsetX = 0;\n                    shadowCtx.shadowOffsetY = isOffsetY;\n                    shadowCtx.fillRect(-1 * w, sch, 3 * w, 100);\n\n                    // left shadow\n                    shadowCtx.shadowOffsetX = isOffsetX;\n                    shadowCtx.shadowOffsetY = 0;\n                    shadowCtx.fillRect(-100, -1 * h, 100, 3 * h);\n\n                    // create a clipping mask on the main canvas\n                    self._roundedRect(ctx, bw + self.shadowL, bw + self.shadowT, w - bw * 2 - sw, h - bw * 2 - sh, br);\n                    ctx.clip();\n\n                    // draw the inner-shadow from the off-DOM canvas\n                    ctx.drawImage(self._shadowCanvas, 0, 0, scw, sch, bw + self.shadowL, bw + self.shadowT, scw, sch);\n                }\n\n                // draw to the visible canvas\n                if (self._ctx) {\n                    self._ctx.clearRect(self._x, self._y, ctx.canvas.width, ctx.canvas.height);\n                    self._ctx.drawImage(self._renderCanvas, self._x, self._y);\n                }\n\n                return self;\n\n            });\n        },\n\n        /**\n         * Draw the text box area with either an image or background color.\n         * @param  {Function} fn Callback.\n         */\n        _drawTextBox: function(fn) {\n            var self = this,\n                ctx = self._renderCtx,\n                w = self.outerW,\n                h = self.outerH,\n                br = self._borderRadius,\n                bw = self._borderWidth,\n                sw = self.shadowW,\n                sh = self.shadowH;\n\n            // only draw the background shape if no image is being used\n            if (self._backgroundImage === '') {\n                ctx.fillStyle = self._backgroundColor;\n                self._roundedRect(ctx, bw + self.shadowL, bw + self.shadowT, w - bw * 2 - sw, h - bw * 2 - sh, br);\n                ctx.fill();\n\n                fn();\n            } else {\n                var img = new Image();\n                img.src = self._backgroundImage;\n                img.onload = function() {\n                    ctx.drawImage(img, 0, 0, img.width, img.height, bw + self.shadowL, bw + self.shadowT, w, h);\n\n                    fn();\n                };\n            }\n        },\n\n        /**\n         * Deletes selected text in selection range and repositions cursor.\n         * @return {Boolean} true if text removed.\n         */\n        _clearSelection: function() {\n            var self = this;\n\n            if (self._selection[1] > 0) {\n                // clear the selected contents\n                var start = self._selection[0],\n                    end = self._selection[1];\n\n                self._value = self._value.substr(0, start) + self._value.substr(end);\n                self._cursorPos = start;\n                self._cursorPos = (self._cursorPos < 0) ? 0 : self._cursorPos;\n                self._selection = [0, 0];\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Clip the text string to only return what fits in the visible text box.\n         * @param  {String} value The text to clip.\n         * @return {String} The clipped text.\n         */\n        _clipText: function(value) {\n            var self = this;\n            value = (typeof value === 'undefined') ? self._value : value;\n\n            var textWidth = self._textWidth(value),\n                fillPer = textWidth / (self._width - self._padding),\n                text = fillPer > 1 ? value.substr(-1 * Math.floor(value.length / fillPer)) : value;\n\n            return text + '';\n        },\n\n        /**\n         * Gets the pixel with of passed text.\n         * @param  {String} text The text to measure.\n         * @return {Number}      The measured width.\n         */\n        _textWidth: function(text) {\n            var self = this,\n                ctx = self._renderCtx;\n\n            ctx.font = self._fontStyle + ' ' + self._fontWeight + ' ' + self._fontSize + 'px ' + self._fontFamily;\n            ctx.textAlign = 'left';\n\n            return ctx.measureText(text).width;\n        },\n\n        /**\n         * Recalculate the outer with and height of the text box.\n         */\n        _calcWH: function() {\n            var self = this;\n\n            // calculate the full width and height with padding, borders and shadows\n            self.outerW = self._width + self._padding * 2 + self._borderWidth * 2 + self.shadowW;\n            self.outerH = self._height + self._padding * 2 + self._borderWidth * 2 + self.shadowH;\n        },\n\n        /**\n         * Update the width and height of the off-DOM canvas when attributes are changed.\n         */\n        _updateCanvasWH: function() {\n            var self = this,\n                oldW = self._renderCanvas.width,\n                oldH = self._renderCanvas.height;\n\n            // update off-DOM canvas\n            self._renderCanvas.setAttribute('width', self.outerW);\n            self._renderCanvas.setAttribute('height', self.outerH);\n            self._shadowCanvas.setAttribute('width', self._width + self._padding * 2);\n            self._shadowCanvas.setAttribute('height', self._height + self._padding * 2);\n\n            // clear the main canvas\n            if (self._ctx) {\n                self._ctx.clearRect(self._x, self._y, oldW, oldH);\n            }\n        },\n\n        /**\n         * Creates the path for a rectangle with rounded corners.\n         * Must call ctx.fill() after calling this to draw the rectangle.\n         * @param  {Object} ctx Canvas context.\n         * @param  {Number} x   x-coordinate to draw from.\n         * @param  {Number} y   y-coordinate to draw from.\n         * @param  {Number} w   Width of rectangle.\n         * @param  {Number} h   Height of rectangle.\n         * @param  {Number} r   Border radius.\n         */\n        _roundedRect: function(ctx, x, y, w, h, r) {\n            if (w < 2 * r) r = w / 2;\n            if (h < 2 * r) r = h / 2;\n\n            ctx.beginPath();\n\n            ctx.moveTo(x + r, y);\n            ctx.lineTo(x + w - r, y);\n            ctx.quadraticCurveTo(x + w, y, x + w, y + r);\n            ctx.lineTo(x + w, y + h - r);\n            ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n            ctx.lineTo(x + r, y + h);\n            ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n            ctx.lineTo(x, y + r);\n            ctx.quadraticCurveTo(x, y, x + r, y);\n\n            ctx.closePath();\n        },\n\n        /**\n         * Checks if a coordinate point is over the input box.\n         * @param  {Number} x x-coordinate position.\n         * @param  {Number} y y-coordinate position.\n         * @return {Boolean}   True if it is over the input box.\n         */\n        _overInput: function(x, y) {\n            var self = this,\n                xLeft = x >= self._x + self._extraX,\n                xRight = x <= self._x + self._extraX + self._width + self._padding * 2,\n                yTop = y >= self._y + self._extraY,\n                yBottom = y <= self._y + self._extraY + self._height + self._padding * 2;\n\n            return xLeft && xRight && yTop && yBottom;\n        },\n\n        /**\n         * Use the mouse's x & y coordinates to determine\n         * the position clicked in the text.\n         * @param  {Number} x X-coordinate.\n         * @param  {Number} y Y-coordinate.\n         * @return {Number}   Cursor position.\n         */\n        _clickPos: function(x, y) {\n            var self = this,\n                value = self._value;\n\n            // don't count placeholder text in this\n            if (self._value === self._placeHolder) {\n                value = '';\n            }\n\n            // determine where the click was made along the string\n            var text = self._clipText(value),\n                totalW = 0,\n                pos = text.length;\n\n            if (x - (self._x + self._extraX) < self._textWidth(text)) {\n                // loop through each character to identify the position\n                for (var i = 0; i < text.length; i++) {\n                    totalW += self._textWidth(text[i]);\n                    if (totalW >= x - (self._x + self._extraX)) {\n                        pos = i;\n                        break;\n                    }\n                }\n            }\n\n            return pos;\n        },\n\n        /**\n         * Calculate the mouse position based on the event callback and the elements on the page.\n         * @param  {Event} e\n         * @return {Object}   x & y values\n         */\n        _mousePos: function(e) {\n            var elm = e.target,\n                style = document.defaultView.getComputedStyle(elm, undefined),\n                paddingLeft = parseInt(style['paddingLeft'], 10) || 0,\n                paddingTop = parseInt(style['paddingLeft'], 10) || 0,\n                borderLeft = parseInt(style['borderLeftWidth'], 10) || 0,\n                borderTop = parseInt(style['borderLeftWidth'], 10) || 0,\n                htmlTop = document.body.parentNode.offsetTop || 0,\n                htmlLeft = document.body.parentNode.offsetLeft || 0,\n                offsetX = 0,\n                offsetY = 0,\n                x, y;\n\n            // calculate the total offset\n            if (typeof elm.offsetParent !== 'unefined') {\n                do {\n                    offsetX += elm.offsetLeft;\n                    offsetY += elm.offsetTop;\n                } while ((elm = elm.offsetParent));\n            }\n\n            // take into account borders and padding\n            offsetX += paddingLeft + borderLeft + htmlLeft;\n            offsetY += paddingTop + borderTop + htmlTop;\n\n            return {\n                x: e.pageX - offsetX,\n                y: e.pageY - offsetY\n            };\n        },\n\n        /**\n         * Translate a keycode into the correct keyboard character.\n         * @param  {Boolean} isShift True if the shift key is being pressed.\n         * @param  {Number}  keyCode The character code.\n         * @return {String}          The translated character.\n         */\n        _mapCodeToKey: function(isShift, keyCode) {\n            var self = this,\n                blockedKeys = [8, 9, 13, 16, 17, 18, 20, 27, 91, 92],\n                key = '';\n\n            // block keys that we don't want to type\n            for (var i = 0; i < blockedKeys.length; i++) {\n                if (keyCode === blockedKeys[i]) {\n                    return;\n                }\n            }\n\n            // make sure we are getting the correct input\n            if (typeof isShift !== 'boolean' || typeof keyCode !== 'number') {\n                return;\n            }\n\n            var charMap = {\n                32: ' ',\n                48: ')',\n                49: '!',\n                50: '@',\n                51: '#',\n                52: '$',\n                53: '%',\n                54: '^',\n                55: '&',\n                56: '*',\n                57: '(',\n                59: ':',\n                107: '+',\n                173: '_', // firefox uses 173 instead of 189\n                189: '_',\n                186: ':',\n                187: '+',\n                188: '<',\n                190: '>',\n                191: '?',\n                192: '~',\n                219: '{',\n                220: '|',\n                221: '}',\n                222: '\"'\n            };\n\n            // convert the code to a character\n            if (isShift) {\n                key = (keyCode >= 65 && keyCode <= 90) ? String.fromCharCode(keyCode) : charMap[keyCode];\n            } else {\n                if (keyCode >= 65 && keyCode <= 90) {\n                    key = String.fromCharCode(keyCode).toLowerCase();\n                } else {\n                    if (keyCode === 96) {\n                        key = '0';\n                    } else if (keyCode === 97) {\n                        key = '1';\n                    } else if (keyCode === 98) {\n                        key = '2';\n                    } else if (keyCode === 99) {\n                        key = '3';\n                    } else if (keyCode === 100) {\n                        key = '4';\n                    } else if (keyCode === 101) {\n                        key = '5';\n                    } else if (keyCode === 102) {\n                        key = '6';\n                    } else if (keyCode === 103) {\n                        key = '7';\n                    } else if (keyCode === 104) {\n                        key = '8';\n                    } else if (keyCode === 105) {\n                        key = '9';\n                    } else if (keyCode === 188) {\n                        key = ',';\n                    } else if (keyCode === 190) {\n                        key = '.';\n                    } else if (keyCode === 191) {\n                        key = '/';\n                    } else if (keyCode === 192) {\n                        key = '`';\n                    } else if (keyCode === 220) {\n                        key = '\\\\';\n                    } else if (keyCode === 187) {\n                        key = '=';\n                    } else if ((keyCode === 189)  || (keyCode === 173)) {\n                        // firefox maps the minus key to 173, rather\n                        // then trying to use browser detection we\n                        // simply accept 173 as well...which means that\n                        // for Chrome using the mute button would\n                        // cause minus sign to appear\n                        key = '-';\n                    } else if (keyCode === 222) {\n                        key = '\\'';\n                    } else if (keyCode === 186) {\n                        key = ';';\n                    } else if (keyCode === 219) {\n                        key = '[';\n                    } else if (keyCode === 221) {\n                        key = ']';\n                    } else {\n                        key = String.fromCharCode(keyCode);\n                    }\n                }\n            }\n\n            return key;\n        }\n    };\n\n    module.exports = CanvasInput;\n})();\n","/**\n * @license\n * File: sigplot.layer1d.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    /**\n     * @constructor\n     * @param plot\n     */\n\n    var Layer1D = function(plot) {\n        this.plot = plot;\n\n        this.xbuf = undefined; // raw (ArrayBuffer) of ABSC data\n        this.ybuf = undefined; // raw (ArrayBuffer) of ORD data\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n        // xbufn = xbuf.byteLength\n        // ybufn = ybuf.byteLength\n        this.size = 0;\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n        this.modified = false;\n        this.opacity = 1.0;\n        this.fillStyle = null;\n        this.preferred_origin = 1;\n\n        this.pointbufsize = 0;\n        this.xptr = null;\n        this.yptr = null;\n        this.xpoint = null; // PointArray backed by memory in xptr\n        this.ypoint = null; // PointArray backed by memory in yptr\n\n        this.options = {};\n    };\n\n    Layer1D.prototype = {\n\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf Layer1D\n         * @private\n         */\n        init: function(hcb, options) {\n            var Gx = this.plot._Gx;\n\n            this.hcb = hcb;\n            this.hcb.buf_type = \"D\";\n\n            this.offset = 0;\n            this.size = 0;\n            this.xbufn = 0;\n            this.ybufn = 0;\n\n            if (!this.hcb.pipe) {\n                if (hcb[\"class\"] === 2) {\n                    m.force1000(hcb);\n                    this.size = hcb.subsize;\n                } else {\n                    this.size = hcb.size;\n                }\n            } else {\n                if (hcb[\"class\"] === 2) {\n                    m.force1000(hcb);\n                    this.size = hcb.subsize;\n                }\n            }\n\n            if (options.framesize) {\n                this.size = options.framesize;\n            }\n\n            // pipe data requires a valid size on overlay, but\n            // other data can work without a valid size because\n            // the reload() function will correctly update the size\n            if (this.hcb.pipe && !this.size) {\n                throw \"1D layer could not determine appropriate size for pipe, use framesize option\";\n            }\n\n            if (hcb[\"class\"] <= 2) {\n                this.xsub = -1;\n                this.ysub = 1;\n                this.cx = (hcb.format[0] === 'C');\n            } else {\n                // TODO\n            }\n\n            this.skip = 1;\n            if (this.cx) {\n                this.skip = 2;\n            }\n\n            this.xstart = hcb.xstart;\n            this.xdelta = hcb.xdelta;\n            var d = hcb.xstart + hcb.xdelta * (this.size - 1.0);\n            this.xmin = Math.min(hcb.xstart, d);\n            this.xmax = Math.max(hcb.xstart, d);\n\n            this.xlab = hcb.xunits;\n            this.ylab = hcb.yunits; // might be undefined\n\n            if (this.hcb.pipe) {\n                this.drawmode = \"scrolling\";\n                this.position = 0;\n                this.tle = options.tl;\n\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n\n                var self = this;\n                m.addPipeWriteListener(this.hcb, function() {\n                    self._onpipewrite();\n                });\n            }\n        },\n\n        _onpipewrite: function() {\n            var ybuf = new m.PointArray(this.ybuf);\n\n            var tle = this.tle; // in scalars\n            if (tle === undefined) {\n                // if the transfer length wasn't set then we read\n                // all the elements that are available\n                tle = Math.floor(m.pavail(this.hcb)) / this.hcb.spa;\n            }\n\n            // Calculate transfer length in scalars\n            var tl = tle * this.hcb.spa;\n            while (m.pavail(this.hcb) >= tl) {\n\n                if (this.drawmode === \"lefttoright\") {\n                    this.position = 0;\n                    ybuf.set(ybuf.subarray(0, this.size - tl), tl);\n                } else if (this.drawmode === \"righttoleft\") {\n                    this.position = this.size - tle;\n                    ybuf.set(ybuf.subarray(tl), 0);\n                } else if (this.drawmode === \"scrolling\") {\n                    // Nothing to do\n                } else {\n                    throw \"Invalid draw mode\";\n                }\n\n                // transfer length is adjusted to the remaining size \n                // before wrapping\n                var ngot = m.grabx(\n                    this.hcb, ybuf,\n                    Math.min(tle, this.size - this.position) * this.hcb.spa,\n                    this.position * this.hcb.spa\n                );\n                if (ngot === 0) {\n                    break;\n                }\n\n                // update the position\n                this.position = (this.position + tle) % this.size;\n\n                if (this.tle === undefined) {\n                    tle = Math.floor(m.pavail(this.hcb)) / this.hcb.spa;\n                }\n                tl = tle * this.hcb.spa;\n            }\n\n            if (this.plot._Gx.autol !== 0) {\n                this.plot.rescale();\n            }\n        },\n\n        get_data: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var HCB = this.hcb;\n\n            var skip = this.skip;\n\n            var size;\n            if (HCB[\"class\"] === 2) {\n                size = HCB.subsize;\n            } else {\n                size = HCB.size;\n            }\n\n            var imin = 0;\n            var imax = 0;\n            if (Gx.index) {\n                imin = Math.floor(xmin);\n                imax = Math.floor(xmax + 0.5);\n            } else if (HCB.xdelta >= 0.0) {\n                imin = Math.floor((xmin - HCB.xstart) / HCB.xdelta) - 1;\n                imax = Math.floor((xmax - HCB.xstart) / HCB.xdelta + 0.5);\n            } else {\n\n                imin = Math.floor((xmax - HCB.xstart) / HCB.xdelta) - 1;\n                imax = Math.floor((xmin - HCB.xstart) / HCB.xdelta + 0.5);\n            }\n            imin = Math.max(0.0, imin);\n            imax = Math.min(size, imax);\n\n            var npts = Math.max(0.0, Math.min(imax - imin + 1, Gx.bufmax));\n            if (HCB.xdelta < 0) {\n                imin = imax - npts + 1;\n            }\n\n            if ((imin >= this.imin) && (imin + npts <= this.imin + this.size) && (this.ybuf !== undefined)) {\n                // data already in buffers\n            } else if (this.modified) {\n                // modified data not yet saved off\n\n            } else if (HCB[\"class\"] <= 2) {\n                // load new data\n                var start = this.offset + imin;\n                var skip = this.skip;\n                this.ybufn = npts * Math.max(skip * m.PointArray.BYTES_PER_ELEMENT,\n                    m.PointArray.BYTES_PER_ELEMENT);\n                if ((this.ybuf === undefined) || (this.ybuf.byteLength < this.ybufn)) {\n                    this.ybuf = new ArrayBuffer(this.ybufn);\n                }\n                var ybuf = new m.PointArray(this.ybuf);\n                var ngot = m.grab(HCB, ybuf, start, npts);\n                this.imin = imin;\n                this.xstart = HCB.xstart + (imin) * this.xdelta;\n                this.size = ngot;\n            } else {\n                // type 3000, 4000, 5000\n                // TODO yeah right\n            }\n\n        },\n\n        change_settings: function(settings) {\n            if (settings.index !== undefined) {\n                if (settings.index) {\n                    this.xstart = 1.0;\n                    this.xdelta = 1.0;\n                    this.xmin = 1.0;\n                    this.xmax = this.size;\n                } else {\n                    this.xstart = this.hcb.xstart + (this.imin) * this.xdelta;\n                    this.xdelta = this.hcb.xdelta;\n                    var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                    this.xmin = Math.min(this.hcb.xstart, d);\n                    this.xmax = Math.max(this.hcb.xstart, d);\n                }\n            }\n\n            if (settings.drawmode !== undefined) {\n                this.drawmode = settings.drawmode;\n                // Reset the buffer\n                this.position = 0;\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n            }\n\n            if (settings.framesize !== undefined) {\n                this.size = settings.framesize;\n                this.xstart = this.hcb.xstart + (this.imin) * this.xdelta;\n                this.xdelta = this.hcb.xdelta;\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n            }\n        },\n\n        reload: function(data, hdrmod) {\n            if (this.hcb.pipe) {\n                throw \"reload cannot be used with pipe, use push instead\";\n            }\n            var axis_change = (this.hcb.dview.length !== data.length) || hdrmod;\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"xstart\" || k === \"xdelta\") {\n                        axis_change = true;\n                    }\n                }\n            }\n            this.hcb.setData(data);\n\n            // Setting these causes refresh() to refetch\n            this.imin = 0;\n            this.xstart = undefined;\n            this.size = 0;\n\n            var xmin = this.xmin;\n            var xmax = this.xmax;\n\n            if (axis_change) {\n                if (this.hcb[\"class\"] === 2) {\n                    m.force1000(this.hcb);\n                }\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.hcb.size - 1.0);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n                xmin = undefined;\n                xmax = undefined;\n            }\n\n            return {\n                xmin: xmin,\n                xmax: xmax\n            };\n        },\n\n        push: function(data, hdrmod, sync) {\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"type\") {\n                        this.hcb[\"class\"] = hdrmod[k] / 1000;\n                    }\n                }\n\n                if (hdrmod.subsize) {\n                    if (this.hcb[\"class\"] === 2) {\n                        m.force1000(this.hcb);\n                        this.size = this.hcb.subsize;\n                        // Reset the buffer\n                        this.position = null;\n                        this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                        this.ybuf = new ArrayBuffer(this.ybufn);\n                    }\n                }\n\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                this.xmin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                this.xmax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n            }\n\n            if (data.length > 0) {\n                m.filad(this.hcb, data, sync);\n            }\n\n            return hdrmod ? true : false;\n\n        },\n\n        prep: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            var npts = Math.ceil(this.size);\n\n            var skip = this.skip;\n\n            if (npts === 0) {\n                return {\n                    num: 0,\n                    start: 0,\n                    end: 0\n                };\n            }\n\n            if (npts * m.PointArray.BYTES_PER_ELEMENT > this.pointbufsize) {\n                this.pointbufsize = npts * m.PointArray.BYTES_PER_ELEMENT;\n                this.xptr = new ArrayBuffer(this.pointbufsize);\n                this.yptr = new ArrayBuffer(this.pointbufsize);\n                this.xpoint = new m.PointArray(this.xptr);\n                this.ypoint = new m.PointArray(this.yptr);\n            }\n\n            var dbuf = new m.PointArray(this.ybuf);\n            var qmin = this.xmin;\n            var qmax = this.xmax;\n            var n1, n2;\n            var mxmn;\n            // xsub isn't really used yet, so it can largely be ignored\n            if ((Gx.cmode === 5) || (this.xsub > 0)) {\n                if (npts <= 0) {\n                    // This is a degenerate case when there are no points\n                    qmin = Gx.panxmin;\n                    qmax = Gx.panxmax;\n                } else if (Gx.cmode !== 5) {\n                    // Largely unused code since xsub isn't used\n                    this.xpoint = new m.PointArray(this.xbuf);\n                } else if (this.cx) {\n                    // This is the pre-dominate condition\n                    m.vmov(dbuf, skip, this.xpoint, 1, npts);\n                } else if (this.line !== 0) {\n                    // If we have been asked to plot Real vs. Imaginary\n                    // for real data and there is a line being drawn\n                    // we take the min x and max x and then plot it\n                    // later on against the first two ypoints...it's\n                    // not clear if this is correct or not, but since\n                    // it's a degenerate case it is tolerated\n                    mxmn = m.vmxmn(dbuf, npts);\n                    this.xpoint[0] = mxmn.smax;\n                    this.xpoint[1] = mxmn.smin;\n                    n1 = 0;\n                    n2 = 2;\n                    npts = 2;\n                } else {\n                    // Otherwise we just plot the y-values\n                    this.xpoint = dbuf;\n                }\n                if (npts > 0) {\n                    mxmn = m.vmxmn(this.xpoint, npts);\n                    qmax = mxmn.smax;\n                    qmin = mxmn.smin;\n                    n1 = 0;\n                    n2 = npts;\n                }\n            } else if (npts > 0) {\n                var xstart = this.xstart;\n                var xdelta = this.xdelta;\n                var d = npts;\n                if (Gx.index) {\n                    n1 = 0;\n                    n2 = npts - 1;\n                } else if (xdelta >= 0.0) {\n                    n1 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta))) - 1.0;\n                    n2 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) + 2.0)) - 1.0;\n                } else {\n                    n1 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) - 1.0)) - 1.0;\n                    n2 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta) + 2.0)) - 1.0;\n                }\n\n                npts = n2 - n1 + 1;\n                if (npts < 0) {\n                    m.log.debug(\"Nothing to plot\");\n                    npts = 0;\n                }\n                dbuf = new m.PointArray(this.ybuf).subarray(n1 * skip);\n                xstart = xstart + xdelta * (n1);\n                for (var i = 0; i < npts; i++) {\n                    if (Gx.index) {\n                        this.xpoint[i] = this.imin + i + 1;\n                    } else {\n                        this.xpoint[i] = xstart + i * xdelta;\n                    }\n                }\n            }\n\n            if (Gx.panxmin > Gx.panxmax) {\n                Gx.panxmin = qmin;\n                Gx.panxmax = qmax;\n            } else {\n                Gx.panxmin = Math.min(Gx.panxmin, qmin);\n                Gx.panxmax = Math.max(Gx.panxmax, qmax);\n            }\n\n            if (npts <= 0) {\n                m.log.debug(\"Nothing to plot\");\n                return {\n                    num: npts,\n                    start: n1,\n                    end: n2\n                };\n            }\n            if (this.cx) {\n                if (Gx.cmode === 1) {\n                    m.cvmag(dbuf, this.ypoint, npts);\n                } else if (Gx.cmode === 2) {\n                    if (Gx.plab === 25) {\n                        m.cvpha(dbuf, this.ypoint, npts);\n                        m.vsmul(this.ypoint, 1.0 / (2 * Math.PI), this.ypoint, npts);\n                    } else if (Gx.plab !== 24) {\n                        m.cvpha(dbuf, this.ypoint, npts);\n                    } else {\n                        m.cvphad(dbuf, this.ypoint, npts);\n                    }\n                } else if (Gx.cmode === 3) {\n                    m.vmov(dbuf, skip, this.ypoint, 1, npts);\n                } else if (Gx.cmode >= 6) {\n                    m.cvmag2(dbuf, this.ypoint, npts);\n                } else if (Gx.cmode >= 4) {\n                    m.vmov(dbuf.subarray(1), skip, this.ypoint, 1, npts);\n                }\n            } else {\n                if (Gx.cmode === 5) { // I vs. R\n                    m.vfill(this.ypoint, 0, npts);\n                } else if ((Gx.cmode === 1) || (Gx.cmode >= 6)) { // Mag, log\n                    for (var i = 0; i < npts; i++) {\n                        this.ypoint[i] = Math.abs(dbuf[i]);\n                    }\n                } else {\n                    for (var i = 0; i < npts; i++) {\n                        this.ypoint[i] = dbuf[i];\n                    }\n                }\n            }\n\n            if (Gx.cmode >= 6) {\n                m.vlog10(this.ypoint, Gx.dbmin, this.ypoint);\n                var dbscale = 10.0;\n                if (Gx.cmode === 7) {\n                    dbscale = 20.0;\n                }\n                if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                    dbscale = dbscale / 2.0;\n                }\n                m.vsmul(this.ypoint, dbscale, this.ypoint);\n            }\n            mxmn = m.vmxmn(this.ypoint, npts);\n\n            qmax = mxmn.smax;\n            qmin = mxmn.smin;\n\n            var yran = qmax - qmin;\n            if (yran < 0.0) {\n                qmax = qmin;\n                qmin = qmax + yran;\n                yran = -yran;\n            }\n            if (yran <= 1.0e-20) {\n                qmin = qmin - 1.0;\n                qmax = qmax + 1.0;\n            } else {\n                qmin = qmin - 0.02 * yran;\n                qmax = qmax + 0.02 * yran;\n            }\n\n            if (Mx.level === 0) {\n                if (Gx.panymin > Gx.panymax) {\n                    Gx.panymin = qmin;\n                    Gx.panymax = qmax;\n                } else {\n                    Gx.panymin = Math.min(Gx.panymin, qmin);\n                    Gx.panymax = Math.max(Gx.panymax, qmax);\n                }\n\n                if (Gx.autol > 1) {\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n                    Gx.panymin = Gx.panymin * fac + Mx.stk[0].ymin * (1.0 - fac);\n                    Gx.panymax = Gx.panymax * fac + Mx.stk[0].ymax * (1.0 - fac);\n                }\n            }\n\n            return {\n                num: npts,\n                start: n1,\n                end: n2\n            };\n        },\n\n        draw: function() {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n\n            var ic = this.color;\n            var symbol = this.symbol;\n            var rad = this.radius;\n            var mask = 0;\n            var line = 0;\n            var traceoptions = {};\n\n            if (this.fillStyle) {\n                traceoptions.fillStyle = this.fillStyle;\n            } else if (Gx.fillStyle) {\n                traceoptions.fillStyle = Gx.fillStyle;\n            }\n            if (this.options) {\n                traceoptions.highlight = this.options.highlight;\n                traceoptions.noclip = this.options.noclip;\n            }\n\n            if (this.line === 0) {\n                line = 0;\n            } else {\n                line = 1;\n                if (this.thick > 0) {\n                    line = this.thick;\n                } else if (this.thick < 0) {\n                    line = Math.abs(this.thick);\n                    traceoptions.dashed = true;\n                }\n                if (this.line === 1) {\n                    traceoptions.vertsym = true;\n                }\n                if (this.line === 2) {\n                    traceoptions.horzsym = true;\n                }\n                if (this.line === 4) {\n                    traceoptions.horzsym = true;\n                    traceoptions.vertsym = true;\n                }\n            }\n\n            var segment = (Gx.segment) && (Gx.cmode !== 5) && (this.xsub > 0) && (mask === 0);\n            var xdelta = this.xdelta;\n\n            var xmin;\n            var xmax;\n            if (this.xdata) {\n                xmin = this.xmin;\n                xmax = this.xmax;\n            } else {\n                xmin = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n                xmax = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n                if (xmin >= xmax) { // no data but do scaling\n                    Gx.panxmin = Math.min(Gx.panxmin, this.xmin);\n                    Gx.panxmax = Math.max(Gx.panxmax, this.xmax);\n                }\n            }\n\n            if (!Gx.all) {\n                var xran = (Gx.bufmax - 1.0) * xdelta;\n                if (xran >= -0.0) {\n                    xmax = Math.min(xmax, xmin + xran);\n                } else {\n                    xmin = Math.max(xmin, xmax + xran);\n                }\n            }\n\n            if ((line === 0) && (symbol === 0)) {\n                // Nothing to draw\n                return;\n            }\n            while (xmin < xmax) {\n                //if (Gx.all) {\n                // TODO allow interrupt of all by mouse clicks\n                //}\n\n                if (!this.hcb.pipe) {\n                    // get_data fills in the layer xbuf/ybuf with data\n                    this.get_data(xmin, xmax);\n                }\n\n                // sigplot_prep fills in this.xptr and this.yptr (both m.PointArray)\n                // with the data to be plotted\n\n                var pts = this.prep(xmin, xmax);\n                if (pts.num > 0) {\n                    if (segment) {\n                        // TODO\n                    } else {\n                        mx.trace(Mx,\n                            ic,\n                            new m.PointArray(this.xptr),\n                            new m.PointArray(this.yptr),\n                            pts.num,\n                            pts.start,\n                            1,\n                            line,\n                            symbol,\n                            rad,\n                            traceoptions);\n                    }\n                }\n\n                if (Gx.all) {\n                    if (this.size === 0) {\n                        xmin = xmax;\n                    } else {\n                        if (Gx.index) {\n                            xmin = xmin + pts.num;\n                        } else {\n                            if (xdelta >= 0) {\n                                xmin = xmin + (this.size * xdelta);\n                            } else {\n                                xmax = xmax + (this.size * xdelta);\n                            }\n                        }\n                    }\n                } else {\n                    xmin = xmax;\n                }\n            }\n\n            if ((this.position) && (this.drawmode === \"scrolling\")) {\n                var pnt = mx.real_to_pixel(Mx, this.position * this.xdelta, 0);\n                if ((pnt.x > Mx.l) && (pnt.x < Mx.r)) {\n                    mx.draw_line(Mx, \"white\", pnt.x, Mx.t, pnt.x, Mx.b);\n                }\n            }\n        },\n\n        /**\n         * Add a highlight to a specific layer.\n         *\n         * @param {Number}\n         *            n the layer to add the highlight to\n         * @param highlight\n         *            the highlight to add\n         * @param {Number}\n         *            highlight.xstart x value to start the highlight\n         *            at\n         * @param {Number}\n         *            highlight.xend the maximum x value to end the highlight\n         *            at\n         * @param {String}\n         *            hightlight.color the color to use for the highlight\n         *\n         * @param {String}\n         *            hightlight.id the id for the highlight\n         */\n        add_highlight: function(highlight) {\n            if (!this.options.highlight) {\n                this.options.highlight = [];\n            }\n            // Check for nans\n\n            var xmin = highlight.xstart;\n            var xmax = highlight.xend;\n            var min_nan = isNaN(xmin);\n            var max_nan = isNaN(xmax);\n\n            if ((min_nan === true) || (xmin === null) || (xmin === undefined)) {\n\n                this.options.highlight = [];\n            }\n            if ((max_nan === true) || (xmax === null) || (xmax === undefined)) {\n\n                this.options.highlight = [];\n            }\n\n            if (highlight instanceof Array) {\n                this.options.highlight.push.apply(\n                    this.options.highlight, highlight);\n            } else {\n                this.options.highlight.push(highlight);\n            }\n            this.plot.refresh();\n        },\n\n        /**\n         * Remove a highlight from the layer.\n         *\n         * @param {String} {Object}\n         *             the id of the highlight to remove\n         *             or the highlight object itself\n         */\n        remove_highlight: function(highlight) {\n            if (this.options.highlight) {\n                var i = this.options.highlight.length;\n                while (i--) {\n                    if ((highlight === this.options.highlight[i]) || (highlight === this.options.highlight[i].id)) {\n                        this.options.highlight.splice(i, 1);\n                    }\n                }\n                this.plot.refresh();\n            }\n        },\n\n        get_highlights: function() {\n            if (this.options.highlight) {\n                return this.options.highlight.slice(0);\n            } else {\n                return [];\n            }\n        },\n\n        /**\n         * Clear all highlights from the layer.\n         */\n        clear_highlights: function() {\n            if (this.options.highlight) {\n                this.options.highlight = undefined;\n                this.plot.refresh();\n            }\n        }\n    };\n\n    /**\n     * Color positions for the various layers\n     *\n     * These magic numbers were conjured up by a wizard somewhere.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var mixc = [0, 53, 27, 80, 13, 40, 67, 93, 7, 60, 33, 87, 20, 47, 73, 100];\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @private\n     */\n    Layer1D.overlay = function(plot, hcb, layerOptions) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (hcb[\"class\"] === 2) {\n            m.force1000(hcb);\n        }\n        hcb.buf_type = \"D\";\n\n        // If the input is type 2000, each row becomes\n        // it's own layer\n        var n1 = 0;\n        var n2 = 1;\n        if ((hcb[\"class\"] === 2) && (hcb.size > 0)) {\n            var num_rows = hcb.size / hcb.subsize;\n            n2 = Math.min(num_rows, 16 - Gx.lyr.length);\n        }\n\n        // Extract the layer_name before enter the loop\n        var layer_name_override = layerOptions[\"name\"];\n        delete layerOptions[\"name\"];\n\n        var layers = [];\n        for (var i = n1; i < n2; i++) {\n            // This is logic from within sigplot.for LOAD_FILES\n            var layer = new Layer1D(plot);\n            layer.init(hcb, layerOptions);\n\n            // Provide a default color for the layer\n            var n = (Gx.lyr.length) % mixc.length;\n            layer.color = mx.getcolor(Mx, m.Mc.colormap[3].colors, mixc[n]);\n\n            // Provide the layer name\n            if (hcb[\"class\"] === 2) {\n                if (layer_name_override !== undefined) {\n                    // If you get an array of names, pull the name\n                    // from this list...if we run out of names before\n                    // we run out of layers fall back\n                    if (Array.isArray(layer_name_override)) {\n                        layer.name = layer_name_override[i];\n                    } else {\n                        layer.name = layer_name_override;\n                        layer.name = layer.name + \".\" + mx.pad((i + 1).toString(), 3, \"0\");\n                    }\n                }\n                // If a name hasn't been assigned yet\n                if (!layer.name) {\n                    if (hcb.file_name) {\n                        layer.name = m.trim_name(hcb.file_name);\n                    } else {\n                        layer.name = \"layer_\" + Gx.lyr.length;\n                    }\n                    layer.name = layer.name + \".\" + mx.pad((i + 1).toString(), 3, \"0\");\n                }\n                layer.offset = i * hcb.subsize;\n            } else {\n                if (layer_name_override !== undefined) {\n                    layer.name = layer_name_override;\n                } else if (hcb.file_name) {\n                    layer.name = m.trim_name(hcb.file_name);\n                } else {\n                    layer.name = \"layer_\" + Gx.lyr.length;\n                }\n                layer.offset = 0;\n            }\n\n            for (var layerOption in layerOptions) {\n                if (layer[layerOption] !== undefined) {\n                    layer[layerOption] = layerOptions[layerOption];\n                }\n            }\n            if (plot.add_layer(layer)) {\n                layers.push(layer);\n            }\n        }\n\n        return layers;\n    };\n\n    module.exports = Layer1D;\n\n}());\n","/**\n * @license\n * File: sigplot.layer2d.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    /**\n     * @constructor\n     * @param plot\n     */\n    var Layer2D = function(plot) {\n        this.plot = plot;\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.ystart = 0.0;\n        this.ydelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n        this.modified = false;\n\n        this.preferred_origin = 4;\n        this.opacity = 1;\n        this.xcompression = plot._Gx.xcompression; // default is Gx.xcompression\n\n        // LPB is kinda odd right now, since we read the entire file into memory anyways...\n        // given that often we are loading from an HREF so there is no downside to this...\n        // however, we keep LPB around (for now) so that the scaling behaves identical to\n        // the original code\n        this.lpb = undefined;\n\n        this.yc = 1; // y-compression factor...not yet used\n\n        this.options = {};\n    };\n\n    Layer2D.prototype = {\n\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf Layer2D\n         * @private\n         */\n        init: function(hcb) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            this.hcb = hcb;\n            this.hcb.buf_type = \"D\";\n\n            if (this.hcb.pipe) {\n                var self = this;\n                this.position = 0;\n                this.frame = 0;\n\n\n                this.lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.b - Mx.t)));\n                m.addPipeWriteListener(this.hcb, function() {\n                    self._onpipewrite();\n                });\n            } else {\n                this.lps = this.hcb.lps || Math.ceil(hcb.size);\n            }\n\n            this.offset = 0;\n            this.xbufn = 0;\n            this.ybufn = 0;\n            this.drawmode = \"scrolling\"; // \"falling\", \"rising\"\n\n\n            if (hcb[\"class\"] <= 2) {\n                this.xsub = -1;\n                this.ysub = 1;\n                this.cx = (hcb.format[0] === 'C');\n            } else {\n                // TODO\n            }\n\n            this.skip = 1;\n            if (this.cx) {\n                this.skip = 2;\n            }\n\n            if (Gx.index) {\n                this.xstart = 1.0;\n                this.xdelta = 1.0;\n                this.xmin = 1.0;\n                this.xmax = hcb.subsize;\n                this.ystart = 1.0;\n                this.ydelta = 1.0;\n                this.ymin = 1.0;\n                this.ymax = this.size;\n            } else {\n                this.xstart = hcb.xstart;\n                this.xdelta = hcb.xdelta;\n                var d = hcb.xstart + (hcb.xdelta * hcb.subsize);\n                this.xmin = this.hcb.xmin || Math.min(hcb.xstart, d);\n                this.xmax = this.hcb.xmax || Math.max(hcb.xstart, d);\n                this.ystart = hcb.ystart;\n                this.ydelta = hcb.ydelta;\n                var d = hcb.ystart + (hcb.ydelta * this.lps);\n                this.ymin = this.hcb.ymin || Math.min(hcb.ystart, d);\n                this.ymax = this.hcb.ymax || Math.max(hcb.ystart, d);\n            }\n\n            // TODO make this work with force 1000 applied\n            this.xframe = this.hcb.subsize;\n            this.yframe = (this.lps * this.hcb.subsize) / this.xframe;\n\n            if (this.lpb === 0) {\n                this.lpb = this.yframe;\n            }\n            if (!this.lpb || (this.lpb <= 0)) {\n                this.lpb = 16;\n            }\n            this.lpb = Math.max(1, this.lpb / this.yc) * this.yc;\n\n            this.xlab = hcb.xunits;\n            this.ylab = hcb.yunits; // might be undefined\n\n        },\n\n        _onpipewrite: function() {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            while (m.pavail(this.hcb) >= (this.hcb.subsize * this.hcb.spa)) {\n\n                // if we aren't scrolling, than update the values\n                // so that the axis scrolls with the data.  The below\n                // code might seem counter intuitive, but given the\n                // the behavior of other rendering code it is configured\n                // to have ymin always be the history (i.e prior to ystart)\n                // and ystart is always the relative \"now\" which is equivalent\n                // to ymax\n                if (this.drawmode !== \"scrolling\") {\n                    this.hcb.ystart += this.hcb.ydelta;\n                    this.ystart = this.hcb.ystart;\n                    this.ymin = this.hcb.ystart - (this.hcb.ydelta * (this.lps));\n                    this.ymax = this.hcb.ystart;\n                }\n\n                if (this.drawmode === \"falling\") {\n                    this.position = 0;\n                    if (this.img) {\n                        mx.shift_image_rows(Mx, this.img, 1);\n                    }\n                } else if (this.drawmode === \"rising\") {\n                    this.position = this.lps - 1;\n                    if (this.img) {\n                        mx.shift_image_rows(Mx, this.img, -1);\n                    }\n                } else if (this.drawmode === \"scrolling\") {\n                    var ylength = Math.abs(this.ymax - this.ymin);\n                    this.ystart = 0;\n                    this.ymin = 0;\n                    this.ymax = ylength;\n                    if (this.position >= this.lps) { // if lps got resized make sure we don't go out of bounds\n                        this.position = 0;\n                    }\n                } else {\n                    throw \"Invalid draw mode\";\n                }\n\n                if (!this.buf) {\n                    // the layer isn't setup correctly yet\n                    return;\n                }\n\n                // grab one row worth of data\n                var ngot = m.grabx(this.hcb, this.buf, this.hcb.subsize * this.hcb.spa);\n                if (ngot === 0) { // shouldn't happen because of the pavail check\n                    m.log.error(\"Internal error\");\n                    return;\n                }\n\n                var zpoint = new m.PointArray(this.hcb.subsize);\n                if (this.cx) {\n                    if (Gx.cmode === 1) {\n                        m.cvmag(this.buf, zpoint, zpoint.length);\n                    } else if (Gx.cmode === 2) {\n                        if (Gx.plab === 25) {\n                            m.cvpha(this.buf, zpoint, zpoint.length);\n                            m.vsmul(zpoint, 1.0 / (2 * Math.PI), zpoint, zpoint.length);\n                        } else if (Gx.plab !== 24) {\n                            m.cvpha(this.buf, zpoint, zpoint.length);\n                        } else {\n                            m.cvphad(this.buf, zpoint, zpoint.length);\n                        }\n                    } else if (Gx.cmode === 3) {\n                        m.vmov(this.buf, this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 4) {\n                        m.vmov(this.buf.subarray(1), this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 10.0, zpoint);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 20.0, zpoint);\n                    }\n                } else {\n                    if (Gx.cmode === 1) { // mag\n                        m.vabs(this.buf, zpoint);\n                    } else if (Gx.cmode === 2) { // phase\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.vlogscale(this.buf, Gx.dbmin, 10.0, zpoint);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.vlogscale(this.buf, Gx.dbmin, 20.0, zpoint);\n                    }\n                }\n\n                var min = zpoint[0];\n                var max = zpoint[0];\n                for (var i = 0; i < zpoint.length; i++) {\n                    if (zpoint[i] < min) {\n                        min = zpoint[i];\n                    }\n                    if (zpoint[i] > max) {\n                        max = zpoint[i];\n                    }\n                }\n\n                var zmin, zmax;\n                if (Gx.autol === 1) {\n                    zmin = min;\n                    zmax = max;\n                } else if (Gx.autol > 1) {\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n                    zmin = Gx.zmin * fac + min * (1.0 - fac);\n                    zmax = Gx.zmax * fac + max * (1.0 - fac);\n                } else if (Gx.autol < 0) {\n                    // -1 means autol wasn't set so default to\n                    // 5 like the original XRTRASTER; however,\n                    // don't actually override Gx.autol since\n                    // other layers may behave differently\n                    var fac = 1.0 / (Math.max(5, 1));\n                    zmin = Gx.zmin * fac + min * (1.0 - fac);\n                    zmax = Gx.zmax * fac + max * (1.0 - fac);\n                }\n\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = zmin;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = zmax;\n                }\n                if (Gx.p_cuts) {\n                    if (this.drawmode === \"scrolling\") {\n                        //fill in the next row of data.\n                        var start_write = this.position * this.hcb.subsize;\n                        var stop_write = start_write + this.hcb.subsize;\n                        var b = 0;\n                        for (var i = start_write; i < stop_write; i++) {\n                            this.zbuf[i] = zpoint[b];\n                            b++;\n                        }\n\n                    }\n                    if (this.drawmode === \"falling\") {\n                        //shift and fill in the next row of data.\n                        var cut_off = (this.lps - 1) * this.hcb.subsize;\n                        var tmp = this.zbuf.slice(0, cut_off);\n                        this.zbuf = [];\n                        for (var i = 0; i < this.hcb.subsize; i++) {\n                            this.zbuf.push(zpoint[i]);\n                        }\n                        this.zbuf.push.apply(this.zbuf, tmp);\n                        tmp = [];\n                    }\n                    if (this.drawmode === \"rising\") {\n                        //shift and fill in the next row of data.\n                        var cut_off = this.lps * this.hcb.subsize;\n                        var tmp = this.zbuf.slice(this.hcb.subsize, cut_off);\n                        this.zbuf = [];\n                        this.zbuf.push.apply(this.zbuf, tmp);\n                        for (var i = 0; i < this.hcb.subsize; i++) {\n                            this.zbuf.push(zpoint[i]);\n                        }\n                        tmp = [];\n                    }\n                }\n\n                if (this.img) {\n                    mx.update_image_row(Mx, this.img, zpoint, this.position, Gx.zmin, Gx.zmax, this.xcompression);\n                }\n                this.frame += 1;\n                if (this.drawmode === \"scrolling\") {\n                    this.position = (this.position + 1) % this.lps;\n                }\n\n                if (Mx.level === 0) {\n                    Gx.panymin = this.ymin;\n                    Gx.panymax = this.ymax;\n                    Mx.stk[0].ymin = this.ymin;\n                    Mx.stk[0].ymax = this.ymax;\n                }\n            }\n        },\n\n        get_data: function() {\n            var HCB = this.hcb;\n\n            if (!this.buf) {\n                if (this.hcb.pipe) {\n                    // For pipes, we allocate buf and zbuf to only hold one line of\n                    // data\n                    this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.hcb.subsize);\n                } else {\n                    // Otherwise, we allocate for the entire image\n                    this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                }\n            }\n\n            if (!this.hcb.pipe) {\n                m.grab(HCB, this.buf, 0, HCB.subsize);\n            }\n        },\n\n        /**\n         * Provisional API\n         *\n         * @private\n         * @param x\n         * @param y\n         */\n        get_z: function(x, y) {\n            var ix = Math.floor(x / this.hcb.xdelta);\n            var iy = Math.floor(y / this.hcb.ydelta);\n            var zidx = (iy * this.hcb.subsize) + ix;\n            return this.zbuf[zidx];\n        },\n\n        change_settings: function(settings) {\n            var Gx = this.plot._Gx;\n            if (settings.subsize) {\n                this.hcb.subsize = settings.subsize;\n                this.hcb.ape = settings.subsize;\n                this.hcb.size = this.hcb.dview.length / (this.hcb.spa * this.hcb.ape);\n                this.lps = Math.ceil(this.hcb.size);\n                var d = this.hcb.ystart + (this.hcb.ydelta * this.lps);\n                this.ymin = this.hcb.ymin || Math.min(this.hcb.ystart, d);\n                this.ymax = this.hcb.ymax || Math.max(this.hcb.ystart, d);\n            }\n            if (settings.cmode !== undefined) {\n                this.img = undefined;\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = undefined;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = undefined;\n                }\n            }\n            if ((settings.zmin !== undefined) ||\n                (settings.zmax !== undefined) ||\n                (settings.autoz !== undefined)) {\n                this.img = undefined;\n            }\n            if (settings.cmap !== undefined) {\n                this.img = undefined;\n            }\n            if ((settings.drawmode !== undefined) || (settings.xmin !== undefined) ||\n                (settings.xmax !== undefined) || (settings.xdelta !== undefined) ||\n                (settings.xstart !== undefined)) {\n                if (settings.drawmode === undefined) {\n                    settings.drawmode = this.drawmode;\n                }\n                this.drawmode = settings.drawmode;\n                // Reset the buffer\n                this.position = 0;\n                this.frame = 0;\n                if (this.hcb.pipe) {\n                    this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.hcb.subsize);\n                } else {\n                    this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                }\n                this.img = undefined;\n\n                if (this.drawmode === \"falling\") {\n                    this.plot._Mx.origin = 1;\n                    this.preferred_origin = 1;\n                } else {\n                    this.plot._Mx.origin = 4;\n                    this.preferred_origin = 4;\n                }\n            }\n            if (settings.opacity !== undefined) {\n                this.opacity = settings.opacity;\n            }\n            if (settings.p_cuts !== undefined) {\n                var p_cuts = Gx.p_cuts;\n                if (settings.p_cuts === null) {\n                    p_cuts = !p_cuts;\n                } else {\n                    p_cuts = settings.p_cuts;\n                }\n\n                // If p_cuts are enabled from streams, we need to keep the entire zbuf in memory\n                if (this.hcb.pipe) {\n                    if (!p_cuts) {\n                        this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                    } else {\n                        this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.hcb.subsize);\n                    }\n                }\n            }\n\n            if (settings.xcmp !== undefined) {\n                if (settings.xcmp === \"smooth\") {\n                    this.xcompression = 0;\n                } else if (settings.xcmp === \"avg\") {\n                    this.xcompression = 1;\n                } else if (settings.xcmp === \"min\") {\n                    this.xcompression = 2;\n                } else if (settings.xcmp === \"max\") {\n                    this.xcompression = 3;\n                } else if (settings.xcmp === \"first\") {\n                    this.xcompression = 4;\n                } else if (settings.xcmp === \"maxabs\") {\n                    this.xcompression = 5;\n                } else {\n                    this.xcompression = settings.xcmp;\n                }\n            }\n        },\n\n        reload: function(data, hdrmod) {\n            if (this.hcb.pipe) {\n                throw \"reload cannot be used with pipe, use push instead\";\n            }\n            var axis_change = (this.hcb.dview.length !== data.length) || hdrmod;\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"xstart\" || k === \"xdelta\" | k === \"ystart\" || k === \"ydelta\" || k === \"subsize\") {\n                        axis_change = true;\n                    }\n                }\n            }\n            if (Array.isArray(data) && Array.isArray(data[0])) {\n                this.hcb.type = 2000;\n                this.hcb[\"class\"] = 2;\n                this.hcb.subsize = data[0].length;\n                this.hcb.size = data.length;\n                axis_change = true;\n            }\n            this.hcb.setData(data);\n\n            // Setting these causes refresh() to refetch\n            this.init(this.hcb);\n            this.img = null;\n            this.buf = null;\n\n            var xmin = this.xmin;\n            var xmax = this.xmax;\n\n            if (axis_change) {\n                var d = this.hcb.xstart + (this.hcb.xdelta * this.hcb.subsize);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n                xmin = undefined;\n                xmax = undefined;\n            }\n\n            return {\n                xmin: xmin,\n                xmax: xmax\n            };\n        },\n\n        push: function(data, hdrmod, sync) {\n            var Gx = this.plot._Gx;\n            var rescale = false;\n            var timestamp = null;\n            if (hdrmod) {\n                // handle timestamps in a unique manner\n                if (hdrmod.timestamp) {\n                    timestamp = hdrmod.timestamp;\n                    delete hdrmod[\"timestamp\"];\n                }\n\n                // If the subsize changes, we need to invalidate the buffer\n                if ((hdrmod.subsize) && (hdrmod.subsize !== this.hcb.subsize)) {\n                    this.hcb.subsize = hdrmod.subsize;\n                    if (this.hcb.pipe && !Gx.p_cuts) {\n                        this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.hcb.subsize);\n\n                    } else {\n                        this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                    }\n                    rescale = true;\n                }\n\n                for (var k in hdrmod) {\n                    if (this.hcb[k] !== hdrmod[k]) {\n                        this.hcb[k] = hdrmod[k];\n                        if (k === \"type\") {\n                            this.hcb[\"class\"] = hdrmod[k] / 1000;\n                        }\n                        rescale = true;\n                    }\n                }\n\n                if (hdrmod.lps) {\n                    this.lps = hdrmod.lps;\n                }\n\n                if (rescale) {\n                    var d = this.hcb.xstart + (this.hcb.xdelta * this.hcb.subsize);\n                    this.xmin = Math.min(this.hcb.xstart, d);\n                    this.xmax = Math.max(this.hcb.xstart, d);\n                    this.xdelta = this.hcb.xdelta;\n                    this.xstart = this.hcb.xstart;\n\n                    this.ystart = this.hcb.ystart;\n                    this.ydelta = this.hcb.ydelta;\n                    var d = this.hcb.ystart + (this.hcb.ydelta * this.lps);\n                    this.ymin = Math.min(this.hcb.ystart, d);\n                    this.ymax = Math.max(this.hcb.ystart, d);\n                }\n\n            }\n\n            if ((this.hcb.yunits === 1) || (this.hcb.yunits === 4)) {\n                if ((!this.hcb[\"timecode\"]) && (timestamp)) {\n                    // if we don't have a timecode set, we can use\n                    // the timestamp and reset ystart\n                    this.hcb.timecode = m.j1970toj1950(timestamp);\n                    this.hcb.ystart = 0;\n                    rescale = true;\n                } else {\n                    // otherwise, we need to look at timecode, ystart,\n                    // and ydelta to see if the timestamp indicates\n                    // any data drops...and then zero-fill accordingly\n                    // TODO\n                }\n            }\n\n            if (data.length > 0) {\n                m.filad(this.hcb, data, sync);\n            }\n\n            return rescale;\n\n        },\n\n        prep: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            var npts = this.lps;\n\n            var skip = this.skip;\n\n            var qmin = this.xmin;\n            var qmax = this.xmax;\n            var n1, n2;\n\n            var xsize = this.hcb.subsize;\n            if (this.xcompression > 0) {\n                xsize = Math.ceil(Mx.r - Mx.l);\n            }\n\n            this.get_data(xmin, xmax);\n\n            if (!this.hcb.pipe) {\n                // if we aren't a pipe we do a full prep\n\n                if ((Gx.cmode === 5) || (this.xsub > 0)) {\n                    // TODO - is this mode supported in rasters?\n                } else if (npts > 0) {\n                    var xstart = this.xstart;\n                    var xdelta = this.xdelta;\n                    var d = npts;\n                    if (Gx.index) {\n                        n1 = 0;\n                        n2 = npts - 1;\n                    } else if (xdelta >= 0.0) {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta))) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) + 2.0)) - 1.0;\n                    } else {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) - 1.0)) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta) + 2.0)) - 1.0;\n                    }\n\n                    npts = n2 - n1 + 1;\n                    if (npts < 0) {\n                        m.log.debug(\"Nothing to plot\");\n                        npts = 0;\n                    }\n                }\n\n                if (Gx.panxmin > Gx.panxmax) {\n                    Gx.panxmin = qmin;\n                    Gx.panxmax = qmax;\n                } else {\n                    Gx.panxmin = Math.min(Gx.panxmin, qmin);\n                    Gx.panxmax = Math.max(Gx.panxmax, qmax);\n                }\n\n                if (npts <= 0) {\n                    m.log.debug(\"Nothing to plot\");\n                    return;\n                }\n\n                if ((Gx.cmode === 5) || (this.ysub > 0)) {\n                    // TODO - is this mode supported in rasters?\n                } else if (npts > 0) {\n                    var ystart = this.ystart;\n                    var ydelta = this.ydelta;\n                    var d = npts;\n                    if (Gx.index) {\n                        n1 = 0;\n                        n2 = npts - 1;\n                    } else if (ydelta >= 0.0) {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmin - ystart) / ydelta))) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmax - ystart) / ydelta) + 2.0)) - 1.0;\n                    } else {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmax - ystart) / ydelta) - 1.0)) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmin - ystart) / ydelta) + 2.0)) - 1.0;\n                    }\n\n                    npts = n2 - n1 + 1;\n                    if (npts < 0) {\n                        m.log.debug(\"Nothing to plot\");\n                        npts = 0;\n                    }\n                }\n\n                if (Gx.panymin > Gx.panymax) {\n                    Gx.panymin = this.ymin;\n                    Gx.panymax = this.ymax;\n                } else {\n                    Gx.panymin = Math.min(Gx.panymin, this.ymin);\n                    Gx.panymax = Math.max(Gx.panymax, this.ymax);\n                }\n\n                if (this.cx) {\n                    if (Gx.cmode === 1) { // mag\n                        m.cvmag(this.buf, this.zbuf, this.zbuf.length);\n                    } else if (Gx.cmode === 2) { // phase\n                        if (Gx.plab === 25) {\n                            m.cvpha(this.buf, this.zbuf, this.zbuf.length);\n                            m.vsmul(this.zbuf, 1.0 / (2 * Math.PI), this.zbuf, this.zbuf.length);\n                        } else if (Gx.plab !== 24) {\n                            m.cvpha(this.buf, this.zbuf, this.zbuf.length);\n                        } else {\n                            m.cvphad(this.buf, this.zbuf, this.zbuf.length);\n                        }\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vmov(this.buf.subarray(1), this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 5) { // IR - what does this mean for a raster?\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 10.0, this.zbuf);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 20.0, this.zbuf);\n                    }\n                } else {\n                    if (Gx.cmode === 1) { // mag\n                        m.vabs(this.buf, this.zbuf);\n                    } else if (Gx.cmode === 2) { // phase\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.vlogscale(this.buf, Gx.dbmin, 10.0, this.zbuf);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.vlogscale(this.buf, Gx.dbmin, 20.0, this.zbuf);\n                    }\n                }\n\n                // find z-min/z-max\n                // this is equivalent to setting XRASTER /LPB=0\n                var zpoint = this.zbuf;\n\n                var min = 0;\n                var max = 0;\n\n                if ((Gx.autol <= 0) || this.hcb.pipe) {\n                    // If autol is not used or the layer is rendering\n                    // a pipe, then use the basic z-scaling method\n                    if (zpoint.length > 0) {\n                        min = zpoint[0];\n                        max = zpoint[0];\n                        for (var i = 0; i < zpoint.length; i++) {\n                            if ((i / this.xframe) >= this.lpb) {\n                                break;\n                            }\n                            if (zpoint[i] < min) {\n                                min = zpoint[i];\n                            }\n                            if (zpoint[i] > max) {\n                                max = zpoint[i];\n                            }\n                        }\n                    }\n\n                    if (((Gx.autoz & 1) !== 0)) {\n                        if (Gx.zmin !== undefined) {\n                            Gx.zmin = Math.min(Gx.zmin, min);\n                        } else {\n                            Gx.zmin = min;\n                        }\n                    }\n                    if (((Gx.autoz & 2) !== 0)) {\n                        if (Gx.zmax !== undefined) {\n                            Gx.zmax = Math.min(Gx.zmax, max);\n                        } else {\n                            Gx.zmax = max;\n                        }\n                    }\n\n                    this.img = mx.create_image(Mx,\n                        this.zbuf,\n                        this.hcb.subsize,\n                        xsize,\n                        this.lps,\n                        Gx.zmin + Gx.zoff,\n                        Gx.zmax + Gx.zoff,\n                        this.xcompression);\n                } else {\n                    // otherwise autol > 1\n                    var nny = this.hcb.size;\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n\n                    // If the image isn't yet created, make one now\n                    if (!this.img) {\n                        this.img = mx.create_image(Mx,\n                            this.zbuf,\n                            this.hcb.subsize,\n                            xsize,\n                            this.lps,\n                            Gx.zmin + Gx.zoff,\n                            Gx.zmax + Gx.zoff);\n                    }\n\n                    Gx.zmin = 0;\n                    Gx.zmax = 0;\n                    if (zpoint.length > 0) {\n                        for (var yy = 0; yy < nny; yy++) {\n                            var noff = yy * this.xframe;\n                            var min = zpoint[noff];\n                            var max = zpoint[noff];\n                            for (var i = 0; i < this.xframe; i++) {\n                                min = Math.min(zpoint[noff + i], min);\n                                max = Math.max(zpoint[noff + i], max);\n                            }\n\n                            // Auto-scale this raster line\n                            if ((Gx.autoz !== 2) && (min !== undefined)) {\n                                Gx.zmin = (min * fac) + (Gx.zmin * (1.0 - fac));\n                            }\n                            if ((Gx.autoz !== 1) && (max !== undefined)) {\n                                Gx.zmax = (max * fac) + (Gx.zmax * (1.0 - fac));\n                            }\n\n                            // Render the row\n                            mx.update_image_row(Mx,\n                                this.img,\n                                zpoint.subarray(noff, noff + this.xframe),\n                                yy,\n                                Gx.zmin,\n                                Gx.zmax);\n\n                        }\n                    }\n                }\n            } else {\n                // Setup image for pipe-mode\n                if (Gx.panxmin > Gx.panxmax) {\n                    Gx.panxmin = qmin;\n                    Gx.panxmax = qmax;\n                } else {\n                    Gx.panxmin = Math.min(Gx.panxmin, qmin);\n                    Gx.panxmax = Math.max(Gx.panxmax, qmax);\n                }\n                if (Gx.panymin > Gx.panxmax) {\n                    Gx.panymin = this.ymin;\n                    Gx.panymax = this.ymax;\n                } else {\n                    Gx.panymin = Math.min(Gx.panymin, this.ymin);\n                    Gx.panymax = Math.max(Gx.panymax, this.ymax);\n                }\n\n                if (!this.img) {\n                    if (Gx.zmin === undefined) {\n                        Gx.zmin = 0;\n                    }\n                    if (Gx.zmax === undefined) {\n                        Gx.zmax = 0;\n                    }\n                    this.img = mx.create_image(Mx,\n                        null,\n                        this.hcb.subsize,\n                        xsize,\n                        this.lps,\n                        Gx.zmin + Gx.zoff,\n                        Gx.zmax + Gx.zoff,\n                        this.xcompression);\n                }\n            }\n\n            this.img.cmode = Gx.cmode;\n            this.img.cmap = Gx.cmap;\n            this.img.origin = Mx.origin;\n\n            // Make the parts without data transparent\n            if (this.hcb.pipe && (this.frame < this.lps)) {\n                var imgd = new Uint32Array(this.img);\n                if (this.drawmode === \"rising\") {\n                    for (var i = 0; i < imgd.length - (this.frame * xsize); i++) {\n                        imgd[i] = 0;\n                    }\n                } else {\n                    for (var i = this.frame * xsize; i < imgd.length; i++) {\n                        imgd[i] = 0;\n                    }\n                }\n            }\n\n            return npts;\n        },\n\n        draw: function() {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n            var HCB = this.hcb;\n\n            if (this.hcb.pipe) {\n                var lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.b - Mx.t)));\n                if ((lps !== this.lps) && this.buf) {\n                    this.lps = lps;\n                    if (this.position >= this.lps) { // if lps got resized make sure we don't go out of bounds\n                        this.position = 0;\n                    }\n                    var d = HCB.ystart + (HCB.ydelta * this.lps);\n                    this.ymin = Math.min(HCB.ystart, d);\n                    this.ymax = Math.max(HCB.ystart, d);\n                    // reset the image since we now have more lines to render\n                    // TODO - can we preserve the image data rather than resetting?\n                    this.img = null;\n                    this.plot.rescale();\n                }\n            }\n\n            var xmin = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n            var xmax = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n            if (xmin >= xmax) { // no data but do scaling\n                Gx.panxmin = Math.min(Gx.panxmin, this.xmin);\n                Gx.panxmax = Math.max(Gx.panxmax, this.xmax);\n                return;\n            }\n            var ymin = Math.max(this.ymin, Mx.stk[Mx.level].ymin);\n            var ymax = Math.min(this.ymax, Mx.stk[Mx.level].ymax);\n\n            var w = Math.abs(xmax - xmin) + 1;\n            var h = Math.abs(ymax - ymin) + 1;\n\n            w = Math.floor(w / HCB.xdelta);\n            h = Math.floor(h / HCB.ydelta);\n\n            w = Math.min(w, HCB.subsize);\n            h = Math.min(h, HCB.size);\n\n            var ul = mx.real_to_pixel(Mx, xmin, ymin);\n            var lr = mx.real_to_pixel(Mx, xmax, ymax);\n\n            var iw = lr.x - ul.x;\n            var ih = lr.y - ul.y;\n\n            var rx = iw / w;\n            var ry = ih / h;\n\n            Gx.xe = Math.max(1, Math.round(rx));\n            Gx.ye = Math.max(1, Math.round(ry));\n\n            // we might need to prep in certian situations\n            if ((!this.img) || (!this.buf) || (Gx.cmode !== this.img.cmode) || (Gx.cmap !== this.img.cmap) || (Mx.origin !== this.img.origin)) {\n                this.prep(xmin, xmax);\n            }\n\n            // if there is an image, render it\n            if (this.img) {\n                mx.draw_image(Mx, this.img, this.xmin, this.ymin, this.xmax, this.ymax, this.opacity, Gx.rasterSmoothing);\n            }\n\n            // render the scrolling pipe line\n            if (this.position !== null && this.drawmode === \"scrolling\") {\n                var pnt = mx.real_to_pixel(Mx, 0, this.position * this.ydelta);\n                if ((pnt.y > Mx.t) && (pnt.y < Mx.b)) {\n                    mx.draw_line(Mx, \"white\", Mx.l, pnt.y, Mx.r, pnt.y);\n                }\n            }\n        }\n    };\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @private\n     */\n    Layer2D.overlay = function(plot, hcb, layerOptions) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        hcb.buf_type = \"D\";\n\n        var layer = new Layer2D(plot);\n        layer.init(hcb);\n\n        if (hcb.file_name) {\n            layer.name = m.trim_name(hcb.file_name);\n        } else {\n            layer.name = \"layer_\" + Gx.lyr.length;\n        }\n\n        layer.change_settings(layerOptions);\n\n        var layers = [];\n        if (plot.add_layer(layer)) {\n            layers.push(layer);\n        }\n\n        return layers;\n    };\n\n    module.exports = Layer2D;\n\n}());\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\nlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n","module.exports = __webpack_public_path__ + \"demo.html\";","import React, {Component} from 'react';\nimport { SigPlot, ArrayLayer, PipeLayer, HrefLayer } from '../src';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rasterData: [],\n      rasterData2D: [],\n      width: 300,\n      height: 300,\n      href: \"http://sigplot.lgsinnovations.com/dat/penny.prm\"\n    };\n  }\n\n  componentDidMount() {\n    setInterval(()=> {\n      let random = [];\n      let random2D = [];\n      const { width, height } = this.state;\n      for (let i = 0; i < 1000; i += 1) {\n          random.push(Math.random());\n          let tmp = [];\n          for (let j = 0; j < 100; j += 1) {\n            tmp.push(Math.random());\n          }\n          random2D.push(tmp);\n      }\n      const newWidth = width > 350 ? width : width + 1;\n      const newHeight = height < 200 ? height : height - 1;\n      this.setState({\n        rasterData: random,\n        rasterData2D: random2D,\n        width: newWidth,\n        height: newHeight\n      });\n    }, 16);\n  }\n\n  render() {\n    const {\n      rasterData,\n      rasterData2D,\n      href,\n      width,\n      height\n    } = this.state;\n    return (\n      <div>\n        <SigPlot options={{autol:1}} height={height}>\n          <ArrayLayer data={rasterData}/>\n        </SigPlot>\n        <SigPlot>\n          <ArrayLayer options={{type: 2000, subsize: 100}} data={rasterData2D}/>\n        </SigPlot>\n        <SigPlot>\n          <PipeLayer options={{type: 2000, subsize: 1000}} \n            data={rasterData}/>\n        </SigPlot>\n        <SigPlot width={width}>\n          <HrefLayer\n            href={href}/>\n        </SigPlot>\n      </div>\n    );\n  }\n}\n","import  App  from './app';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nrequire('file-loader?name=demo.html!./demo.html');\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}