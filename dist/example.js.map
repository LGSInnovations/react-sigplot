{"version":3,"sources":["webpack://react-sigplot/webpack/universalModuleDefinition","webpack://react-sigplot/webpack/bootstrap","webpack://react-sigplot/./node_modules/prop-types/index.js","webpack://react-sigplot/./node_modules/react/index.js","webpack://react-sigplot/./node_modules/sigplot/js/sigplot.js","webpack://react-sigplot/./node_modules/sigplot/js/m.js","webpack://react-sigplot/./src/sigplot.js","webpack://react-sigplot/./src/layer.js","webpack://react-sigplot/./src/arraylayer.js","webpack://react-sigplot/./src/pipelayer.js","webpack://react-sigplot/./src/hreflayer.js","webpack://react-sigplot/./src/websocketlayer.js","webpack://react-sigplot/./src/index.js","webpack://react-sigplot/./node_modules/sigplot/js/common.js","webpack://react-sigplot/./node_modules/sigplot/js/mx.js","webpack://react-sigplot/./node_modules/sigplot/js/bluefile.js","webpack://react-sigplot/./node_modules/tinycolor2/tinycolor.js","webpack://react-sigplot/./node_modules/object-assign/index.js","webpack://react-sigplot/./node_modules/react/cjs/react.production.min.js","webpack://react-sigplot/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://react-sigplot/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://react-sigplot/./node_modules/spin/spin.js","webpack://react-sigplot/./node_modules/sigplot/js/matfile.js","webpack://react-sigplot/./node_modules/loglevel/lib/loglevel.js","webpack://react-sigplot/./node_modules/sigplot/js/ColorMap.js","webpack://react-sigplot/./node_modules/sigplot/js/CanvasInput.js","webpack://react-sigplot/./node_modules/sigplot/js/sigplot.layer1d.js","webpack://react-sigplot/./node_modules/sigplot/js/sigplot.layer2d.js","webpack://react-sigplot/./node_modules/react-dom/index.js","webpack://react-sigplot/./node_modules/react-dom/cjs/react-dom.production.min.js","webpack://react-sigplot/./node_modules/schedule/index.js","webpack://react-sigplot/./node_modules/schedule/cjs/schedule.production.min.js","webpack://react-sigplot/./example/demo.html","webpack://react-sigplot/./example/app.js","webpack://react-sigplot/./example/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Spinner","common","bluefile","matfile","mx","Layer1D","Layer2D","sigplot","element","options","this","Plot","version","KEYPRESS_HELP","SPINNER_OPTS","lines","length","width","radius","corners","rotate","color","speed","trail","shadow","hwaccel","className","zIndex","top","left","browserIsCompatible","hascanvas","document","createElement","hasarraybuf","_Mx","open","Mx","_Gx","xptr","undefined","yptr","retx","rety","xmrk","ymrk","aretx","arety","xstart","xdelta","panxmin","panxmax","panymin","panymax","xmin","xmax","xmult","ymin","ymax","ymult","zmin","zmax","zoff","dbmin","pxscl","pyscl","pmt","note","format","pl","pr","pt","pb","px1","px2","py1","py2","pyl","pthk","modlayer","modsource","modified","modmode","xdiv","ydiv","all","expand","cross","grid","gridBackground","index","pan","specs","legend","xdata","show_x_axis","show_y_axis","show_readout","hide_note","autohide_readout","autohide_panbars","panning","panmode","hold","sections","iysec","nsec","isec","xlab","xlabel","ylab","ylabel","xcompression","default_rubberbox_action","default_rubberbox_mode","wheelscroll_mode_natural","scroll_time_interval","repeatPanning","stillPanning","autol","lineSmoothing","rasterSmoothing","wheelZoom","wheelZoomPercent","inContinuousZoom","lyr","HCB","plugins","plotData","valid","lg_colorbar","cbb_top_x1","cbb_top_y1","cbb_bot_x1","cbb_bot_y1","cbb_width","cbb_height","p_cuts","x_box_x","x_box_y","x_box_h","x_box_w","y_box_x","y_box_y","y_box_h","y_box_w","p_cuts_xpos","p_cuts_ypos","x_cut_data","y_cut_data","xcut","xcut_layer","x_cut_press_on","xcut_now","ycut","ycut_layer","y_cut_press_on","ycut_now","ylabel_stash","xlabel_stash","element1","element2","xyKeys","x_pop_now","y_pop_now","old_drawmode","old_autol","parent","mouseOnCanvas","plot","Gx","unit_lookup","havexmin","havexmax","address","cmode","toUpperCase","line","haveymin","haveymax","havezmin","havezmax","colors","setbgfg","bg","fg","xi","invertbgfg","forcelab","segment","plab","phunits","xcmp","smoothing","origin","yinv","bufmax","anno_type","xfmt","yfmt","imode","slice","always_show_marker","vstype","inputs","basefile","alert","basemode","change_settings","dbscale","Math","max","log10","min","pow","level","autox","autoy","autoz","scale_base","get_data","stk","font_family","font_width","font_scaled","set_font","ncolors","cmap","xc","setup_cmap","xcnt","cntrls","rubberbox_mode","rubberbox_action","default_rightclick_rubberbox_mode","rightclick_rubberbox_mode","default_rightclick_rubberbox_action","rightclick_rubberbox_action","nogrid","fillStyle","gridStyle","no_legend_button","legendBtnLocation","nopan","nomenu","mod","nmark","iabsc","nospecs","x_scrollbar_location","noxaxis","noyaxis","noreadout","nodragdrop","addEventListener","evt","preventDefault","files","dataTransfer","load_files","plot_init","mimicListeners","other","listeners","zoom","unzoom","xpan","ypan","_refresh","onmousemove","e","rect","target","getBoundingClientRect","xpos","offsetX","pageX","scrollX","ypos","pageY","scrollY","offsetY","re","pixel_to_real","x","y","widget","display_specs","createEvent","initEvent","dispatchEvent","warpbox","cross_xpos","rubberline","b","cross_ypos","draw_crosshairs","hcb","draw_p_cuts","throttledOnMouseMove","throttle","onmouseout","event","draw_panbars","prompt","input","enableBlur","onmouseover","disableBlur","onmousedown","type","refresh","ifevent","which","inPan","inPanRegion","command","scrollbar","position","scrollbar_x","scrollbar_y","onScrollbar","removeEventListener","menu","title","finalize","items","text","handler","middleClickScrollMenuAction","SB_EXPAND","SB_SHRINK","SB_FULL","sigplot_scrollScaleMenu","repeatPan","clearInterval","setTimeout","setInterval","lButtonPressed","rect_x","rect_y","rect_width","rect_height","coordsInRectangle","height","mouse_x","mouse_y","top_x1","top_y1","coordsInTriangle","cur_cmap","get_layer","img","console","log","Mc","colormap","current_map","pos","bot_x1","bot_y1","zoom_style","opacity","return_value","select_style","fill_color","hi","rubberbox","rubberbox_cb","sigplot_mainmenu","ontouchstart","targetTouches","touchClear","touches","clearTimeout","touchEvent","bound","touch_distance","ontouchmove","k","touchStart","new_xpos","new_ypos","delta_xpos","delta_ypos","xscl","ydelta","yscl","cur_distance","scaling","xran","yran","throttledOnTouchMove","ontouchend","action","widget_callback","docMouseUp","mouseup","inCenter","inCenterRegion","th","text_h","tw","text_w","trunc","inPanCenterRegion","mtagevt","clientX","clientY","w","h","shift","shiftKey","redraw","stopPropagation","cancelBubble","emit_hidemenu","hideMenuEvt","mouseclick","mousedblclick","dragMouseDownHandler","axis","screenX","screenY","dragMouseMoveHandler","scrollAction","flag","rangeOut","range","SB_DRAG","scaleFactor","trange","mouseOffset","realOffset","drag_updateRange","smin","srange","redrawScrollbar","updateViewbox","drag_scrollbar","err","throttledDragOnMouseMove","dragMouseUpHandler","onresize","checkresize","wheelHandler","throttledPan","deltaY","SB_WHEELDOWN","SB_WHEELUP","step","page","scroll","XW_COMMAND","throttledZoom","zoomperc","percent_zoom","addWheelListener","nokeypress","onkeypress","keyCode","getKeyCode","ctrlKey","altKey","metaKey","redraw_warpbox","display","delete_layer","rescale","drawmode","sigplot_show_x","start","finish","plot_height","plot_width","lps","xframe","floor","zbuf","cx","UNITS","overlay_array","j","sigplot_show_y","push","ystart","msg","get_z","toString","message","sigplot_show_z","xunits","yunits","sec2tod","timecode","sigplot_show_timecode","fullscreen","invert","show_marker","setKeypressHandler","add_plugin","plugin","zorder","Number","MAX_VALUE","init","canvas","impl","sort","a","remove_plugin","dispose","parentNode","removeElement","splice","addListener","what","callback","removeListener","settings","changemode","newphunits","newplab","phscale","PI","dscl","changephunits","reread","oldLayerData","origHCB","deoverlay","overlay_bluefile","symbol","cleanup","reload","data","hdrmod","rsync","xbnds","force","headermod","sync","hdrmod_clone","JSON","parse","stringify","overrides","layerOptions","debug","initialize","overlay_pipe","pipe","overlay_websocket","wsurl","ws","WebSocket","binaryType","layer_n","onopen","onmessage","ArrayBuffer","createArray","warning","newHdr","overlay_href","href","onload","show_spinner","handleHeader","endsWith","overlay_matfile","hide_spinner","MatFileReader","BlueFileReader","read_http","error","spinner","xwfg","spin","stop","add_layer","layer","mfile","file_name","dview","basefiles","layerType","overlay","user_data","resize","preferred_origin","draw_layer","form_plotnote","hdr","f","read","remove_layer","fileName","pixel_zoom","x1","y1","x2","y2","continuous","r1","r2","xperc","yperc","xadj","abs","yadj","ul","lr","xtmp","ytmp","zstk","inZoom","levels","pop","mimic","mask","self","unmimic","xzoom","yzoom","that","keys","forEach","ctx","getContext","drawImage","draw_plugins","draw_marker","render","enable_listeners","onmouseup","onkeydown","onkeyup","disable_listeners","addColorMaps","colormaps","ytimecode","lbtn","prev_Mx_r","prev_Mx_b","clear_window","drawaxis_flags","noxtlab","noxtics","noxplab","noytics","noytlab","noyplab","xtimecode","drawaxis","shadowbox","noaxisbox","layers","draw_layers","ln","ix","iy","yc","xs","ys","thk","ic","legendPos","maxLabelWidth","labelOffset","labelLength","measureText","strokeStyle","fillRect","strokeRect","sign","thick","L_dashed","draw_line","on","off","draw_symbol","legend_colorbar","layerheight","sigplot_legend_menu","draw_legend","draw_accessories","cxm","cam","Array","isArray","custom_cmap","ls","CONTROLS_MENU","checked","CXMODE_MENU","SCALING_MENU","style","setupPrompt","floatValidator","finalValue","parseFloat","GRID_MENU","SETTINGS_MENU","isValid","intValidator","maxXDIV","reason","maxYDIV","COLORMAP_MENU","colormap_handler","item","menuitem","traceoptionsmenu","ii","hexValidator","sym","rad","thickness","MAINMENU","tracemenu","deoverlaymenu","result","active_canvas","toDataURL","link","download","Date","getTime","body","appendChild","click","removeChild","DASHED","COLORS","SOLID","TOGGLE","SYMBOLS","LINE_TYPE","THICKNESS","OPACITY","LEGEND_TRACE","triggerEvent","xo","yo","xl","yl","takeAction","rwh","wpxl","hpxl","plugin_index","clearRect","plotnote","join","draw_pcut_x","draw_box","beginPath","lineWidth","z","zrt","zpx","round","xrt","xpx","xnew","ynew","moveTo","lineTo","stroke","draw_pcut_y","yrt","ypx","draw","ybufn","ybuf","yframe","pix","real_to_pixel","clipped","clipped_x","clipped_y","arc","textBaseline","textAlign","font","format_g","fillText","newmode","oldmode","out","ps","pe","need_y_scrollbar","need_x_scrollbar","mouseEvent","scrollbarState","sbx","SCROLLBAR","sby","SIGPLOT_PAN","substring","XW_UPDATE","promptText","onSuccess","inputValue","disableListeners","enableListeners","realOnSuccess","dretx","drety","xval","yval","sec2tspec","chara","charb","substr","LEGACY_RENDER","colorbar_height","button_width","button_height","button_x","button_y","fill","button_y_2","colorbar","xxmin","xxmax","load","noxmin","noxmax","npts","prep","size","dpts","ret","tri_x1","tri_y1","tri_x2","tri_y2","tri_x3","tri_y3","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","inv_denom","u","v","coord","outside_right_border","above_top_border","below_bottom_border","between_top_and_bottom","between_left_and_right","has_bottom_scrollbar","s1","sw","scrollReal2PixOut","scroll_real2pix","direction","scale","newMin","newMax","loglevel","navigator","userAgent","match","Float64Array","BYTES_PER_ELEMENT","PointArray","Float32Array","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","60","61","62","63","red","green","blue","reverse","PIPESIZE","unitInput","first","second","comparer1","comparer2","BlueHeader","field","subsize","enabled_streaming_pcut","in_byte","out_byte","pipesize","buf","setData","data_free","force1000","bpe","ape","grab","bufview","nget","ngot","set","subarray","filad","sidx","eidx","head","tail","byteLength","onwritelisteners","pavail","grabx","offset","navail","addPipeWriteListener","onwrite","indexOf","units_name","units","trim_name","pathfilename","label","mult","prefix","mult_prefix","touchA","touchB","xd","yd","sqrt","VECTOR","MV","MS","nbpt","view","pad2","number","ctype","lo_thresh","vlog10","src","dst","vlogscale","cvmag2logscale","vsmul","mul","count","vmxmn","vec","smax","imax","imin","vmov","sstride","dest","dstride","vfill","inpval","vabs","cvmag","cxvec","cvmag2","cvpha","im","atan2","cvphad","a1","a2","sec","trim_trailing_zeros","tod","j1950","UTC","j1949","midnightToday","getFullYear","getMonth","getDate","millisecs","getHours","getMinutes","getSeconds","days","ceil","secMilli","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toPrecision","dloc","zloc","sec2tod_j1970","j1970toj1950","j1950toj1970","delay","previousCall","time","apply","arguments","SigPlot","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","state","Component","setState","_this2","_this$props","propChildren","children","React","Children","map","child","cloneElement","react_default","ref","childContextTypes","PropTypes","instanceOf","propTypes","node","defaultProps","Layer","context","contextTypes","arrayOf","ArrayLayer","nextProps","PipeLayer","HrefLayer","_this$props2","oldHref","oldOptions","newHref","newOnload","newOptions","string","func","WebsocketLayer","oldWsurl","newWsurl","newOverrides","__webpack_exports__","sigplot_SigPlot","end","Uint8Array","resultArray","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCanelAnimationFrame","timeoutID","dashOn","setLineDash","mozDash","webkitLineDash","dashOff","charCode","attachEvent","obj","buffer","byteOffset","dv","DataView","maxlength","getFloat64","begin","info","warn","Int8Array","constructor","Int16Array","Uint16Array","Int32Array","Uint32Array","cls","_addEventListener","support","_addWheelListener","elem","eventName","useCapture","originalEvent","srcElement","deltaMode","deltaX","delatZ","returnValue","wheelDelta","wheelDeltaX","detail","onmousewheel","update","prop","val","tinycolor","ColorMap","CanvasInput","in_fill_range","ele","range_begin","range_end","right","isLeft","p_x","p_y","e_x1","e_y1","e_x2","e_y2","update_winding_number","wn","XW_INIT","XW_DRAW","XW_EVENT","SB_STEPINC","SB_STEPDEC","SB_PAGEINC","SB_PAGEDEC","L_ArrowLeft","L_ArrowRight","L_ArrowUp","L_ArrowDown","GBorder","L_RModeOff","L_RModeOn","L_PixelSymbol","L_CircleSymbol","L_SquareSymbol","L_PlusSymbol","L_XSymbol","L_TriangleSymbol","L_ITriangleSymbol","L_HLineSymbol","L_VLineSymbol","STKSTRUCT","tmin","dragoutline","initial_pause","repeat_pause","swmin","soff","arrow","mxevent","repeat_count","clientWidth","clientHeight","wid_canvas","event_cb","rmode","linewidth","button_release","button_press","state_mask","pixel","_renderCanvas","oncontextmenu","_ctx","alt_style","def_style","onWidgetLayer","erase_window","old_warpbox","offsetParent","offsetLeft","offsetTop","onCanvas","current_active","withWidgetLayer","_animationFrameHandle","mixcolor","color1","color2","perc1to2","c1","toRgb","c2","mix","g","toHexString","linear_gradient","step_size","lingrad","createLinearGradient","addColorStop","equals","xwbg","xwts","xwbs","xwms","xwlo","clr","settheme","theme","close","sb","xe","ye","qs","qe","stat","sblocal","scroll_loc","scroll_vals","sv","op","btn","rr","d2","tri","cnt","fillColor","strokeColor","fill_rectangle","draw_rectangle","tempTri","fill_poly","start_poly","closePath","draw_poly","draw_symbols","pixx","pixy","npix","istart","trace","xpoint","ypoint","skip","symb","dashed","stk4","yymin","noclip","clip","dx","dy","bufsize","ib","lvisible","vertsym","horzsym","sn","highlight","xend","rxs","rxe","cn","mid_x","mid_y","ie","visible","lx","ly","tL","tE","clipt","draw_lines","fillMin","fillMax","fill_trace","x_start","x_end","xstart_pixel_value","xend_pixel_value","pi_start","pi_end","pixx_new","pixy_new","q","this_point","this_point_y","draw_mode","isNaN","to_rgb","getColor","current_color","newcolor","save","restore","inorigin","outorigin","instk","outstk","diff","sum","end1","end2","absmax","kengr","onsubmit","errorTimeout","inputValid","pxIndex","fontIndex","fontSize","fontFamily","canvasInput","backgroundColor","fontColor","borderWidth","borderRadius","padding","boxShadow","innerShadow","renderOnReturn","tabToClear","subHandlerCreator","messageX","messageY","newValue","redrawPrompt","xssPrompt","xcc","ycc","yPos","inputXPos","widgetbox","inputYPos","redrawPromptCreator","focus","strict","isFinite","parseInt","test","render_message_box","textColor","center","linel","beg","split","cur","brk","endinreturn","replace","winlines","lastline","draw_round_box","fill_opacity","quadraticCurveTo","oldAlpha","globalAlpha","Uint8ClampedArray","dctx","imgd","getImageData","putImageData","ctx_wid","font_size","textline","yend","tics","dmin","dmax","ndiv","dtic","dtic1","nsig","df","sig","nseg","ddf","dft","flags","stk1","iscl","isct","iscr","iscb","exactbox","xTIC","yTIC","_xmult","_ymult","xticlabels","yticlabels","ontop","Function","fact","fmul","itext","jtext","inside","last_xlbl","endtic","ylbl","xlbl_maxlen","sp","xlbl","format_f","trimlabel","itexti","yonright","sep","inrect","MENU_CONSTANTS","sidelab","toplab","n_show","_menu_redraw","animationFrameHandle","avail_space","menu_item_height","n_items","yb","xss","yss","i_begin","queue","i_end","menu_counter","selected","_menu_takeaction","newmenu","_menu_callback","drag_x","drag_y","_menu_dismiss","unshift","next_item","inp","String","fromCharCode","keypresses","matches","denom","num","accept","lineColor","pc2px","perc","lbl","res","scaleImage","sx","sy","sh","imgctx","createImageData","ibuf","buf8","width_scaling","height_scaling","xx","yy","jj","xb","inx","iny","inw","inh","xt","yt","getcolor","iz","zf","zf1","display_warpbox","leading_nonzero","decloc","exp","eloc","dz","pad","toFixed","legacy_shadowbox","shape","bw","sigplot_shadowbox","alpha","chevron","x_offset","y_offset","eventXPos","eventYPos","ts2","ts1","p1","op1","iretx","irety","setRange","cidx","renderImage","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","shift_image_rows","update_image_row","row","didx","create_image","nxc","put_image","nx","ny","nex","ney","draw_image","view_xmin","view_xmax","view_ymin","view_ymax","rx","ry","iw","ih","ARRAY_BUFFER_ENDIANNESS","Error","endianness","_SPA","S","C","V","Q","M","X","T","U","_BPS","P","A","O","B","I","L","F","D","_XM_TO_TYPEDARRAY","_XM_TO_DATAVIEW","dataView","littleEndian","highIndex","lowIndex","MAX_INT","high","getInt32","rv","pow2","Infinity","_applySupportsTypedArray","uintbuf","ab2str","str","parseURL","url","source","protocol","host","hostname","port","query","search","params","seg","len","file","pathname","hash","path","relative","segments","ext_header_type","dvhdr","headrep","datarep","littleEndianHdr","littleEndianData","ext_start","ext_size","getUint32","data_start","data_size","ds","de","ext_header","unpack_keywords","data_end","spa","bps","bpa","lbuf","lkey","lextra","ltag","tag","ldata","itag","idata","keywords","dic_index","dict_keywords","getInt16","getInt8","dictTypes","TypedArray","concat","readheader","theFile","reader","FileReader","blob","webkitSlice","onloadend","rawhdr","readAsArrayBuffer","raw","oReq","XMLHttpRequest","responseType","overrideMimeType","oEvent","readyState","status","arrayBuffer","response","fileUrl","responseText","oncomplete","blocksize","bufView","worker","charCodeAt","text2buffer","onerror","send","__WEBPACK_AMD_DEFINE_RESULT__","trimLeft","trimRight","tinyCounter","mathRound","mathMin","mathMax","mathRandom","random","opts","rgb","ok","toLowerCase","named","names","matchers","exec","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","rgbToRgb","convertToPercentage","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","charAt","rgbaToArgbHex","convertDecimalToHex","desaturate","amount","toHsl","clamp01","saturate","greyscale","lighten","brighten","darken","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","monochromatic","toHsv","modification","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","setAlpha","toHsvString","toHslString","toHex","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","fn","args","_applyCombination","fromRatio","newColor","rgb1","rgb2","readability","isReadable","wcag2","wcag2Parms","parms","validateWCAG2Parms","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","isOnePointZero","processPercent","isPercentage","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","from","symbols","to","TypeError","toObject","for","iterator","encodeURIComponent","framesToPop","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","isReactComponent","forceUpdate","H","isPureReactComponent","current","currentDispatcher","J","K","__self","__source","$$typeof","_owner","N","keyPrefix","R","next","done","=",":","escape","aa","W","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","Provider","Consumer","unstable_read","_context","readContext","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","createFactory","isValidElement","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","Y","default","Z","ReactPropTypesSecret","emptyFunction","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bool","any","objectOf","oneOf","oneOfType","exact","checkPropTypes","useCssAnimations","prefixes","animations","createEl","el","ins","sheet","getElementsByTagName","styleSheet","addAnimation","pre","insertRule","vendor","pp","css","merge","def","defaults","fps","ep","tp","mid","insertBefore","firstChild","offsetWidth","offsetHeight","setAttribute","ostep","astep","anim","timeout","background","transformOrigin","transform","animation","childNodes","vml","attr","behavior","adj","addRule","grp","coordsize","coordorigin","margin","filter","rotation","arcsize","global","headerTextBegin","headerTextEnd","subsysOffsetBegin","subsysOffsetEnd","versionOffsetBegin","endianCharsBegin","endianCharsEnd","firstDataTypeOffsetBegin","numBytesOffsetBegin","numBytesOffsetEnd","versionNames","256","dataTypeNames","arrayClassNames","getDataWithType","typeName","output","getUint16","getFloat32","getInt64","MatHeader","headerStr","headerList","trim","platform","createdOn","subsystemOffset","versionName","dataType","dataTypeName","arraySize","currIndex","typeNum","typeSize","arrayFlag","dimTypeNum","dimTypeName","dimTypeSize","rows","arrayNameTypeNum","nameSize","small","arrayNameTypeName","arrayValSize","arrayBuff","startByte","outArr","getArray","__WEBPACK_AMD_DEFINE_FACTORY__","definition","noop","undefinedType","logMethods","bindMethod","methodName","method","replaceLoggingMethods","loggerName","methodFactory","defaultMethodFactory","realMethod","Logger","defaultLevel","currentLevel","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","varArgs","nextSource","nextKey","writable","configurable","_low","_high","_fscale","colorindex","colorBlockIndex","_parseColors","col1","col2","colorsInBlock","factorStep","_addColor","interpolate","front","_rgbToHex","_hexToRgb","_checkColorStops","colorsWithNoStops","stopSize","currentPos","_componentToHex","low","factor","_canvas","_x","_y","_extraX","extraX","_extraY","extraY","_fontSize","_fontFamily","_fontColor","_placeHolderColor","placeHolderColor","_fontWeight","fontWeight","_fontStyle","fontStyle","_readonly","readonly","_maxlength","_width","_height","_padding","_borderWidth","_borderColor","borderColor","_borderRadius","_backgroundImage","backgroundImage","_boxShadow","_innerShadow","_selectionColor","selectionColor","_placeHolder","placeHolder","_value","_onsubmit","_onkeydown","_onkeyup","_onfocus","onfocus","_onblur","onblur","_cursor","_cursorPos","_hasFocus","_selection","_wasOver","_renderOnReturn","_disableBlur","_tabToClear","_calcWH","outerW","outerH","_renderCtx","_shadowCanvas","_shadowCtx","backgroundGradient","_backgroundColor","mousemoveCanvasListener","mousemove","mousedownCanvasListener","mousedown","mouseupCanvasListener","mouseupWindowListener","_mouseDown","blur","keydownWindowListener","keydown","keyupWindowListener","pasteWindowListener","clipboardData","getData","startText","endText","_inputsIndex","_updateCanvasWH","doReturn","shadowL","shadowR","shadowT","shadowB","shadowW","shadowH","_selectionUpdated","_clipText","_cursorInterval","nav","isChromeMobile","isMobile","orientation","isShift","_clearSelection","_mapCodeToKey","mouse","_mousePos","_endSelection","_overInput","_clickPos","isOver","cursor","_selectionStart","curPos","isSelection","renderCanvas","br","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","_roundedRect","_drawTextBox","paddingBorder","selectOffset","_textWidth","selectWidth","cursorOffset","textX","textY","isOffsetX","isOffsetY","isBlur","isColor","shadowCtx","scw","sch","Image","fillPer","oldW","oldH","xLeft","xRight","yTop","yBottom","totalW","elm","defaultView","getComputedStyle","paddingLeft","paddingTop","borderLeft","borderTop","htmlTop","htmlLeft","blockedKeys","56","57","59","107","173","189","186","187","188","190","191","192","219","220","221","222","xbuf","xsub","ysub","pointbufsize","buf_type","xbufn","framesize","tle","tl","_onpipewrite","axis_change","n1","n2","mxmn","dbuf","qmin","qmax","fac","traceoptions","pts","pnt","add_highlight","min_nan","max_nan","remove_highlight","id","get_highlights","clear_highlights","mixc","num_rows","layer_name_override","layerOption","lpb","frame","ylength","zpoint","start_write","stop_write","cut_off","tmp","zidx","timestamp","xsize","nny","noff","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","ba","ca","ea","fa","ha","ia","ja","onError","ka","ma","na","oa","pa","extractEvents","eventTypes","qa","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","ua","va","wa","xa","currentTarget","la","ya","za","Aa","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ca","Da","Ea","injectEventPluginOrder","injectEventPluginsByName","Fa","stateNode","disabled","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","return","Pa","dispatchConfig","Qa","_targetInst","Ra","Ta","Ua","Va","Wa","Ya","animationend","animationiteration","animationstart","transitionend","Za","$a","ab","transition","bb","cb","db","eb","fb","gb","hb","jb","textContent","kb","lb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","nb","eventPool","ob","destructor","mb","getPooled","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","extend","qb","rb","tb","documentMode","ub","vb","wb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","zb","Ab","Bb","Eb","locale","Cb","char","Db","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Qb","date","datetime","datetime-local","email","month","password","tel","week","Rb","nodeName","Sb","correspondingUseElement","nodeType","Tb","Ub","Wb","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Vb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","jc","kc","lc","displayName","then","_reactStatus","_reactResult","mc","_debugOwner","_debugSource","lineNumber","nc","pc","qc","rc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","vc","wc","tc","uc","sc","removeAttribute","setAttributeNS","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Bc","initialValue","controlled","Cc","Dc","Ec","Fc","ownerDocument","activeElement","tabIndex","Gc","change","Hc","Ic","Jc","Kc","Lc","Nc","Oc","detachEvent","Pc","Qc","Rc","Sc","Tc","Uc","_isInputEventSupported","Vc","Wc","Alt","Control","Meta","Shift","Xc","getModifierState","Yc","Zc","$c","ad","bd","cd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","dd","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","ed","mouseEnter","mouseLeave","pointerEnter","pointerLeave","fd","parentWindow","alternate","gd","hd","jd","effectTag","kd","md","sibling","ld","nd","animationName","elapsedTime","pseudoElement","od","pd","qd","rd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","sd","39","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","td","repeat","ud","vd","changedTouches","wd","wheelDeltaY","deltaZ","zd","Ad","Bd","isInteractive","Cd","isInteractiveTopLevelEventType","Dd","Ed","Fd","targetInst","ancestors","containerInfo","topLevelType","Gd","Hd","Id","Jd","Kd","Ld","Md","Nd","Od","Qd","Rd","nextSibling","Td","HTMLIFrameElement","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","ae","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","be","onSelect","ce","ee","defaultSelected","fe","dangerouslySetInnerHTML","ge","he","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","je","html","mathml","svg","ke","le","me","ne","MSApp","execUnsafeLocalFunction","namespaceURI","innerHTML","oe","lastChild","nodeValue","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","lineClamp","lineHeight","order","orphans","tabSize","widows","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","setProperty","se","area","base","col","embed","hr","keygen","meta","param","track","wbr","te","ue","is","ve","we","ze","autoFocus","Ae","__html","Be","Ce","Set","De","Ee","Fe","Ge","He","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ie","Je","Ke","Le","getChildContext","Me","__reactInternalMemoizedMergedChildContext","Ne","Oe","Pe","Qe","Se","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Te","Ue","Ve","We","Xe","Ye","pendingChildren","implementation","Ze","didError","earliestPendingTime","latestPendingTime","$e","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","nextExpirationTimeToWorkOn","af","bf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","cf","payload","ef","ff","gf","hf","jf","kf","lf","mf","nf","stack","of","pf","qf","rf","sf","tf","uf","vf","observedBits","wf","xf","yf","Af","documentElement","tagName","Bf","Cf","Df","Ef","Ff","Jf","_reactInternalFiber","Gf","Hf","If","Kf","shouldComponentUpdate","Lf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Mf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Nf","Of","_stringRef","Pf","Qf","Map","delete","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","cg","dg","eg","gg","hg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","ig","jg","pendingContext","ng","pg","og","hydrate","hidden","unstable_observedBits","qg","rg","sg","tg","ug","vg","wg","xg","componentWillUnmount","yg","zg","Ag","onclick","Bg","wasMultiple","multiple","Cg","Dg","Eg","componentDidCatch","Fg","add","componentStack","Gg","onClick","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","createElementNS","createTextNode","Rg","Sg","pendingCommitExpirationTime","Tg","has","finishedWork","getDerivedStateFromCatch","Ug","Vg","nextScheduledRoot","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","fh","gh","hh","jh","unstable_now","kh","lh","mh","nh","oh","unstable_cancelScheduledWork","unstable_scheduleWork","ph","qh","didTimeout","_onComplete","rh","firstBatch","_expirationTime","_defer","rangeCount","Xa","focusedElem","selectionRange","yh","__reactInternalSnapshotBeforeUpdate","Sd","contains","compareDocumentPosition","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","Sa","oc","Ih","Jh","kg","lg","Kh","Ac","mg","Pd","Lh","timeRemaining","uh","wh","vh","xh","zh","Bh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Ch","_didCommit","_onCommit","Dh","timeoutHandle","_internalRoot","Eh","Gh","_reactRootContainer","legacy_renderSubtreeIntoContainer","hasAttribute","Fh","Hh","Ah","querySelectorAll","form","commit","unmount","createBatch","Mh","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_flushControlled","Events","unstable_createRoot","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Re","findHostInstanceByFiber","bundleType","rendererPackageName","Nh","Oh","performance","timesOutAt","previous","_schedMock","postMessage","App","rasterData","require","ReactDOM","app_App","getElementById"],"mappings":"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","file":"example.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-sigplot\"] = factory();\n\telse\n\t\troot[\"react-sigplot\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license\n * File: sigplot.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var version = \"version-PLACEHOLDER\";\n\n    var Spinner = require(\"spin\");\n    var common = require(\"./common\");\n    var bluefile = require(\"./bluefile\");\n    var matfile = require(\"./matfile\");\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n    var Layer1D = require(\"./sigplot.layer1d\");\n    var Layer2D = require(\"./sigplot.layer2d\");\n\n    function sigplot(element, options) {\n        if (!(this instanceof sigplot)) {\n            return new sigplot.Plot(element, options);\n        }\n    }\n\n    sigplot.bluefile = bluefile;\n    sigplot.matfile = matfile;\n    sigplot.m = m;\n    sigplot.mx = mx;\n    sigplot.Layer1D = Layer1D;\n    sigplot.Layer2D = Layer2D;\n    sigplot.version = version;\n\n    /**\n     * Text of the keypress help dialog.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var KEYPRESS_HELP = \"Keypress Table:\\n\" +\n        \"--------------\\n\" +\n        \"?       - Main help box.\\n\" +\n        \"A       - Toggle display x,y readouts:\\n\" +\n        \"          (absc) -> (index) -> (1/absc) -> (time).\\n\" +\n        \"B       - Toggle LM Drag Mode:\\n\" +\n        \"          (box) -> (horizontal) -> (vertical).\\n\" +\n        \"C       - Toggle controls.\\n\" +\n        \"K       - Show Marker.\\n\" +\n        \"L       - Toggle legend.\\n\" +\n        \"M       - Pops up main menu\\n\" +\n        \"R       - Toggle display specs (x/y readout)\\n\" +\n        \"S       - Toggle display specs and axes.\\n\" +\n        \"T       - Popup box with timecode value at mouse.\\n\" +\n        \"X       - In 1D mode, popup box with X value at mouse.\\n\" +\n        \"        - In 2D mode, toggle x-cut display.\\n\" +\n        \"Y       - In 1D mode, popup box with Y value at mouse.\\n\" +\n        \"        - In 2D mode, toggle y-cut display.\\n\" +\n        \"P       - In 2D mode, displays p-cuts along side and bottom.\\n\" +\n        \"F       - Toggle fullscreen.\\n\" +\n        \"Cntrl+I - Invert colors.\";\n\n    /**\n     * Text of the main help dialog.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var MAIN_HELP = \"To zoom, press and drag the left mouse (LM) over the region of interest and release. \" +\n        \"To unzoom, press right mouse (RM).  Press the middle mouse (MM) button or press the 'M' key to open the main menu.\" +\n        \"View the function of all keypresses by selecting 'Keypress Info' from the main menu.\";\n\n    /**\n     * Options used when displaying the spinner.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var SPINNER_OPTS = {\n        lines: 13, // The number of lines to draw\n        length: 7, // The length of each line\n        width: 4, // The line thickness\n        radius: 10, // The radius of the inner circle\n        corners: 1, // Corner roundness (0..1)\n        rotate: 0, // The rotation offset\n        color: '#FFF', // #rgb or #rrggbb\n        speed: 1, // Rounds per second\n        trail: 60, // Afterglow percentage\n        shadow: false, // Whether to render a shadow\n        hwaccel: false, // Whether to use hardware acceleration\n        className: 'spinner', // The CSS class to assign to the spinner\n        zIndex: 2e9, // The z-index (defaults to 2000000000)\n        top: 'auto', // Top position relative to parent in px\n        left: 'auto' // Left position relative to parent in px\n    };\n\n    /**\n     * Attempts basic checks to determine if the browser is compatible with\n     * sigplot.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    sigplot.browserIsCompatible = function browserIsCompatible() {\n        // We need a Canvas\n        var test_canvas = document.createElement('canvas');\n        var hascanvas = (test_canvas.getContext) ? true : false;\n\n        // We need ArrayBuffer\n        var hasarraybuf = (\"ArrayBuffer\" in window);\n\n        // File and FileReader are optional...and only\n        // required if the user wants to plot local files\n        return (hascanvas && hasarraybuf);\n    };\n\n\n\n    /**\n     * Construct and render a plot.\n     *\n     * @constructor sigplot.Plot\n     *\n     * @example plot = new sigplot.Plot(document.getElementById('plot'), {[options]});\n     *\n     * @param element\n     *            a 'div' DOM element\n     * @param [options]\n     *            Key-value pairs whose values alter the behavior of the plot.\n     *\n     * @param {String}\n     *            options.cmode the plot rendering mode \"IN\" = Index, \"AB\" =\n     *            Abscissa (both of these, along with \"__\" can be added as prefixes to the other modes),\n     *            \"MA\", \"Magnitude\" = Magnitude, \"PH\", \"Phase\" = Phase, \"RE\", \"Real\" = Real,\n     *            \"IM\",\"Imaginary\" = Imaginary, \"LO\", \"D1\", \"10*log10\" = 10*log, \"L2\" or \"D2\"\n     *            , \"20*log10\" = 20*log, \"RI\", \"Real/Imag\", \"Imag/Real\",\"IR\" = Real vs. Imaginary\n     *\n     * @param {String}\n     *            options.phunits the phase units \"D\" = Degrees, \"R\" = Radians,\n     *            \"C\" = Cycles\n     *\n     * @param {Boolean}\n     *            options.cross display cross hairs on the plot\n     *\n     * @param {Boolean}\n     *            options.nogrid hide the background grid\n     *\n     * @param {Boolean}\n     *            options.legend set to false to hide the legend\n     *\n     * @param {Boolean}\n     *            options.no_legend_button set to true to hide the legend button\n     *\n     * @param {Boolean}\n     *            options.nopan disable panning on the plot\n     *\n     * @param {Boolean}\n     *            options.nomenu disable the middle-click menu\n     *\n     * @param {Boolean}\n     *            options.nospec hide all plot specification displays\n     *\n     * @param {Boolean}\n     *            options.noxaxis hide the x-axis\n     *\n     * @param {Boolean}\n     *            options.noyaxis hide the y-axis\n     *\n     * @param {Boolean}\n     *            options.noreadout hide the plot readout area\n     *\n     * @param {Boolean}\n     *            options.nodragdrop prevent file drag drop\n     *\n     * @param {Number}\n     *            options.scroll_time_interval set the time interval for scrolling\n     *\n     * @param {Boolean}\n     *            options.index use the data-index in the X axis\n     *\n     * @param {Number}\n     *            options.autox auto-scaling settings for X axis !!!!CHANGED\n     *\n     * @param {Number}\n     *            options.xmin the minimum range to display on the X axis\n     *\n     * @param {Number}\n     *            options.xmax the maximum range to display on the X axis\n     *\n     * @param {Number}\n     *            options.xlab the units that X-axis uses (see m.UNITS)\n     *\n     * @param {Object}\n     *            options.xlabel function or string for custom X-axis label\n     *\n     * @param {Number}\n     *            options.xdiv the number of divisions on the X axis\n     *\n     * @param {Number}\n     *            options.xcnt configure the mtag mouse controls 0 = Off, 1\n     *            (default) = LM Click, 2 = Continuous\n     *\n     * @param {String}\n     *            options.rubberbox_mode controls the behavior of the rubberbox\n     *            \"zoom\" (default) = zoom to the selected area \"box\" = trigger\n     *            an mtag action on the selected area\n     *\n     * @param {String}\n     *            options.rightclick_rubberbox_mode controls the behavior of the rubberbox\n     *            \"zoom\" = zoom to the selected area \"box\" = trigger\n     *            an mtag action on the selected area.  By default is null to disable\n     *            right-click boxes\n     *\n     * @param {Number}\n     *            options.line the line type to draw 0 = None, 1 = Verticals, 2 =\n     *            Horizontals, 3 (default) = Connecting\n     *\n     * @param {Number}\n     *            options.autoy auto-scaling settings for Y axis !!!! CHANGED\n     *            0 = Fix , 1 = Auto Min , 2 = Auto Max, 3 = Full Auto\n     *\n     * @param {Number}\n     *            options.ylab the units that Y-axis uses (see m.UNITS)\n     *\n     * @param {Object}\n     *            options.ylabel function or string for custom Y-axis label\n     *\n     * @param {Number}\n     *            options.ymin the minimum range to display on the Y axis\n     *\n     * @param {Number}\n     *            options.ymax the maximum range to display on the Y axis\n     *\n     * @param {Number}\n     *            options.ydiv the number of divisions on the Y axis\n     *\n     * @param {Number}\n     *            options.zmin the minimum range to display on the Z axis\n     *\n     * @param {Number}\n     *            options.zmax the maximum range to display on the Z axis\n     *\n     * @param {Boolean}\n     *            options.yinv invert the y-axis\n     *\n     * @param {String}\n     *            options.colors.fg the foreground color as a CSS color\n     *\n     * @param {String}\n     *            options.colors.bg the background color as a CSS color\n     *\n     * @param {Boolean}\n     *            options.xi invert the foreground/background colors\n     *\n     * @param {Boolean}\n     *            options.all show all of the data on the plot instead of just\n     *            one buffer\n     *\n     * @param {Boolean}\n     *            options.expand auto-scale the plot based on all the data (when\n     *            combined with the all option)\n     *\n     * @param {Number}\n     *            options.origin 1 = x1:xmin, x2:xmax, y1:ymax, y2:ymin\n     *            (default), 2 = x1:xmax, x2:xmin, y1:ymax, y2:ymin (x\n     *            inverted), 3 = x1:xmax, x2:xmin, y1:ymin, y2:ymax (x & y\n     *            inverted), 4 = x1:xmin, x2:xmax, y1:ymin, y2:ymax (y inverted)\n     *\n     * @param {Number}\n     *            options.bufmax the buffer size to use\n     *\n     * @param {Boolean}\n     *            options.nokeypress disable key press actions\n     *\n     * @param options.font_family\n     *            the font family to use for text rendered on the plot.  Monospace\n     *            font will generally work best.\n     *\n     * @param {Boolean}\n     *            options.font_scaled mimic the MIDAS plotting behaviour where the\n     *            plot font-size is scaled relative to the width of the\n     *\n     * @param {Boolean}\n     *            options.font_width sets the font width (default=8); if scaled_font\n     *            is set to true, then the font width will be the minimum of font_width\n     *            or plot width/64.\n     *\n     * @returns {sigplot.Plot}\n     */\n    sigplot.Plot = function(element, options) {\n        if (!sigplot.browserIsCompatible()) {\n            throw \"Browser is not compatible\";\n        }\n        // Register with the Mx structure - Step #4\n        this._Mx = mx.open(element);\n        var Mx = this._Mx;\n\n        this._Gx = new GX();\n        this._Gx.parent = element;\n\n        // Variable which stores state of mouse position relative to the canvas\n        this.mouseOnCanvas = false;\n\n        if (!options) {\n            options = {};\n        }\n\n        plot_init(this, options);\n\n        this.mimicListeners = {\n            other: null,\n            listeners: {\n                zoom: null,\n                unzoom: null,\n                xpan: null,\n                ypan: null\n            }\n        };\n\n        this._refresh(); // Draw immediately\n\n        this.onmousemove = (function(plot) {\n            return function(e) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                var rect = e.target.getBoundingClientRect();\n                var xpos = (e.offsetX === undefined) ? (e.pageX - rect.left - window.scrollX) : e.offsetX;\n                var ypos = (e.offsetX === undefined) ? (e.pageY - rect.top - window.scrollY) : e.offsetY;\n\n                // var xpos = (e.offsetX === undefined) ? e.layerX : e.offsetX;\n                // var ypos = (e.offsetY === undefined) ? e.layerY : e.offsetY;\n                var re = pixel_to_real(plot, xpos, ypos);\n                Gx.retx = re.x;\n                Gx.rety = re.y;\n\n                if (Mx.widget) {\n                    return;\n                }\n                display_specs(plot);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mmove', true, true);\n                evt.xpos = xpos;\n                evt.ypos = ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n                if (!executeDefault) {\n                    return;\n                }\n\n                // The crosshair logic in websigplot is different\n                // because we need to clear the previous position\n                // of the line (via XOR) and then draw the new line\n                //\n                // The Mx.xpos and Mx.ypos may have already been\n                // updated to their new location so we need to store\n                // the crosshair position in the Gx structure\n                if (Gx.cross) {\n                    if (Mx.warpbox) {\n                        // during zoom operations undraw the crosshairs\n                        if (Gx.cross_xpos !== undefined) {\n                            mx.rubberline(Mx, Gx.cross_xpos, Mx.t,\n                                Gx.cross_xpos, Mx.b);\n                        }\n                        if (Gx.cross_ypos !== undefined) {\n                            mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r,\n                                Gx.cross_ypos);\n                        }\n                        Gx.cross_xpos = undefined;\n                        Gx.cross_ypos = undefined;\n                    } else {\n                        if (plot.mouseOnCanvas) {\n                            draw_crosshairs(plot);\n                            if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                if (!Gx.y_cut_press_on && !Gx.x_cut_press_on) {\n                                    draw_p_cuts(plot);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (Gx.cntrls === 2) {\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('mtag', true, true);\n                    evt.x = Gx.retx;\n                    evt.y = Gx.rety;\n                    evt.xpos = xpos;\n                    evt.ypos = ypos;\n                    mx.dispatchEvent(Mx, evt);\n                }\n            };\n        }(this));\n\n        this.throttledOnMouseMove = m.throttle(this._Gx.scroll_time_interval,\n            this.onmousemove);\n\n        mx.addEventListener(Mx, \"mousemove\", this.throttledOnMouseMove, false);\n\n        this.onmouseout = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n                if (plot.mouseOnCanvas) {\n                    plot.mouseOnCanvas = false;\n\n                    if (Gx.autohide_readout) {\n                        display_specs(plot);\n                    }\n                    if (Gx.autohide_panbars) {\n                        draw_panbars(plot);\n                    }\n                    if (Mx.prompt) {\n                        Mx.prompt.input.enableBlur();\n                    }\n                }\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mouseout\", this.onmouseout, false);\n\n        this.onmouseover = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n                plot.mouseOnCanvas = true;\n                if (Gx.autohide_panbars) {\n                    draw_panbars(plot);\n                }\n                if (Mx.prompt) {\n                    Mx.prompt.input.disableBlur();\n                }\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mouseover\", this.onmouseover, false);\n\n        this.onmousedown = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // mouse down on the canvas should never do a browser default action\n\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                if (Mx.widget && (Mx.widget.type === \"ONESHOT\")) {\n                    Mx.widget = null;\n                    plot.refresh();\n                }\n\n                // Update Mx event fields\n                mx.ifevent(Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mdown', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n                if (!executeDefault) {\n                    return false;\n                }\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (inPan.inPanRegion) { // Mouse position lies in a pan\n                    // region\n                    event.preventDefault();\n                    if (inPan.command !== ' ') {\n                        var scrollbar = null;\n                        var position = null;\n                        if (inPan.command === \"XPAN\") {\n                            scrollbar = Mx.scrollbar_x;\n                        } else if (inPan.command === \"YPAN\") {\n                            scrollbar = Mx.scrollbar_y;\n                        }\n\n                        if (event.which === 2) {\n                            position = {\n                                x: Mx.xpos,\n                                y: Mx.ypos\n                            };\n                            if ((scrollbar !== undefined) && (onScrollbar(position, scrollbar))) {\n                                // Only show menu if on the scrollbar itself\n                                sigplot_scrollScaleMenu(plot, inPan.command);\n                            }\n                        } else {\n                            if (inPan.command !== ' ') {\n                                position = {\n                                    x: Mx.xpos,\n                                    y: Mx.ypos\n                                };\n                                if (!onScrollbar(position, scrollbar) && event.which === 1) { // Left-clicking\n                                    // not on a\n                                    // scrollbar -\n                                    // handle\n                                    // typical pan\n                                    pan(plot, inPan.command, 0, event); // Execute\n                                    // the\n                                    // first\n                                    // pan\n                                    var repeatPan = function() {\n                                        if (!onScrollbar({\n                                                \"x\": Mx.xpos,\n                                                \"y\": Mx.ypos\n                                            }, scrollbar)) {\n                                            pan(plot, inPan.command, 0, event);\n                                            // execute\n                                            // a\n                                            // pan\n                                            // on\n                                            // every\n                                            // interval\n                                        } else {\n                                            // stop\n                                            // panning\n                                            // once you\n                                            // hit the\n                                            // scrollbar\n                                            if (Gx.stillPanning) {\n                                                window.clearInterval(Gx.stillPanning);\n                                                Gx.repeatPanning = undefined;\n                                            }\n                                        }\n                                    };\n\n                                    // Make scrolling smooth, the longer initial prevents\n                                    // a single click from counting twice\n                                    Gx.stillPanning = window.setTimeout(\n\n                                        function() {\n                                            Gx.repeatPanning = window.setInterval(repeatPan, 50);\n                                        }, 250);\n                                }\n                            }\n                        }\n                    }\n                } else { // Mouse not in a pan region, handle other cases\n                    if (event.which === 1 || event.which === 3) {\n                        var lButtonPressed = false;\n                        if (Gx.legendBtnLocation) {\n                            lButtonPressed = coordsInRectangle(Mx.xpos,\n                                Mx.ypos, Gx.legendBtnLocation.x,\n                                Gx.legendBtnLocation.y,\n                                Gx.legendBtnLocation.width,\n                                Gx.legendBtnLocation.height);\n                        }\n\n                        // If we have a large colorbar, we also have buttons:\n                        if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                            if (event.which === 1 || event.which === 3) {\n                                var mouse_x = Mx.xpos;\n                                var mouse_y = Mx.ypos;\n\n                                // Find vertex positions of top and bottom buttons\n                                var top_x1 = Gx.cbb_top_x1;\n                                var top_y1 = Gx.cbb_top_y1;\n                                var top_x2 = top_x1 + Gx.cbb_width;\n                                var top_y2 = top_y1;\n                                var top_x3 = top_x1 + (1 / 2) * Gx.cbb_width;\n                                var top_y3 = top_y1 - Gx.cbb_height;\n\n                                var topButtonPressed = coordsInTriangle(mouse_x, mouse_y, top_x1, top_y1, top_x2, top_y2, top_x3, top_y3);\n                                //console.log(\"Top \", topButtonPressed);\n\n                                if (topButtonPressed) {\n                                    var cur_cmap = Gx.cmap;\n                                    //console.log(\"I'm the top button and I don't do anything\");\n                                    plot.get_layer(0).img = undefined;\n                                    console.log(m.Mc.colormap[cur_cmap]);\n                                    var current_map = m.Mc.colormap[cur_cmap];\n\n                                    for (var i = 0; i < current_map.colors.length; i++) {\n                                        current_map.colors[i].pos += 5.0;\n                                    }\n                                    mx.colormap(Mx, current_map.colors, 16);\n                                    //Gx.zoff += (1/10)*(Gx.zmax - Gx.zmin);\n                                    plot.refresh();\n                                }\n\n                                // bottom\n                                var bot_x1 = Gx.cbb_bot_x1;\n                                var bot_y1 = Gx.cbb_bot_y1;\n                                var bot_x2 = bot_x1 + Gx.cbb_width;\n                                var bot_y2 = bot_y1;\n                                var bot_x3 = bot_x1 + (1 / 2) * Gx.cbb_width;\n                                var bot_y3 = bot_y1 + Gx.cbb_height;\n\n                                var botButtonPressed = coordsInTriangle(mouse_x, mouse_y, bot_x1, bot_y1, bot_x2, bot_y2, bot_x3, bot_y3);\n                                //console.log(\"Bot \", botButtonPressed);\n\n                                if (botButtonPressed) {\n                                    //console.log(\"I'm the bottom button and I don't do anything\");\n                                    //Gx.zoff -= (1/10)*(Gx.zmax - Gx.zmin);\n                                    var cur_cmap = Gx.cmap;\n                                    var current_map = m.Mc.colormap[cur_cmap];\n                                    plot.get_layer(0).img = undefined;\n                                    for (var i = 0; i < current_map.colors.length; i++) {\n                                        current_map.colors[i].pos -= 5.0;\n                                    }\n                                    mx.colormap(Mx, current_map.colors, 16);\n                                    plot.refresh();\n                                }\n\n                            }\n\n                        }\n\n                        if (lButtonPressed) {\n                            plot.change_settings({\n                                legend: !Gx.legend\n                            }); // toggle the legend\n                        } else {\n                            display_specs(plot);\n\n                            // Styles for rubberbox\n                            var zoom_style = {\n                                opacity: 0,\n                                return_value: \"zoom\"\n                            };\n\n                            var select_style = {\n                                opacity: 0.4,\n                                fill_color: Mx.hi,\n                                return_value: \"select\"\n                            };\n\n                            if (event.which === 1) {\n                                if (Gx.default_rubberbox_action === \"zoom\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rubberbox_mode, zoom_style,\n                                        select_style);\n                                } else if (Gx.default_rubberbox_action === \"select\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rubberbox_mode,\n                                        select_style, zoom_style);\n                                } // otherwise rubber-box is considered disabled\n                            } else if (event.which === 3) {\n                                if (Gx.default_rightclick_rubberbox_action === \"zoom\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rightclick_rubberbox_mode, zoom_style,\n                                        select_style);\n                                } else if (Gx.default_rightclick_rubberbox_action === \"select\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rightclick_rubberbox_mode,\n                                        select_style, zoom_style);\n                                } // otherwise right-click rubber-box is considered disabled\n                            }\n                        }\n                    } else if (event.which === 2) {\n                        if (!Gx.nomenu) {\n                            sigplot_mainmenu(plot);\n                        }\n                    }\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mousedown\", this.onmousedown, false);\n\n        // Putting a finger on the screen and moving it, simulates\n        // pan.\n        this.ontouchstart = (function(plot) {\n            return function(event) {\n                event.preventDefault();\n\n                // See how many fingers are on the screen\n                // 1 finger == pan and/or unzoom\n                if (event.targetTouches.length === 1) {\n\n                    // See if this is a double-tap\n                    if (Mx.touchClear && Mx.touches) {\n                        // Double tap unzooms to L=0 and fully expands the plot\n                        window.clearTimeout(Mx.touchClear);\n                        plot.unzoom();\n                        middleClickScrollMenuAction(plot, mx.SB_FULL, \"XPAN\");\n                        middleClickScrollMenuAction(plot, mx.SB_FULL, \"YPAN\");\n                    } else {\n                        // Normal touch prepares for panning\n                        var touchEvent = event.targetTouches[0];\n                        // Determine the touch position, relative to the canvas\n                        var rect = touchEvent.target.getBoundingClientRect();\n                        var position = {\n                            x: (touchEvent.pageX - rect.left - window.scrollX),\n                            y: (touchEvent.pageY - rect.top - window.scrollY)\n                        };\n\n                        // Update the Mx coordinates\n                        Mx.xpos = m.bound(position.x, 0, Mx.width);\n                        Mx.ypos = m.bound(position.y, 0, Mx.height);\n\n                        // See if the finger lies on the pan-bars\n                        var inPan = inPanRegion(plot, position);\n                        if (!inPan.inPanRegion) {\n                            Mx.touches = event.targetTouches;\n                        } // TODO support touch 'pan' on the panbars\n                    }\n                } else if (event.targetTouches.length === 2) {\n                    Mx.touch_distance = m.touch_distance(event.targetTouches[0], event.targetTouches[1]);\n                }\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"touchstart\", this.ontouchstart, false);\n\n        this.ontouchmove = (function(plot) {\n            return function(event) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n                var k = Mx.level;\n\n                event.preventDefault();\n                if (event.targetTouches.length === 1) {\n                    // Determine the touch event position\n                    var touchStart = Mx.touches[0];\n                    var rect = touchStart.target.getBoundingClientRect();\n                    var startPosition = {\n                        x: (touchStart.pageX - rect.left - window.scrollX),\n                        y: (touchStart.pageY - rect.top - window.scrollY)\n                    };\n\n                    var touchEvent = event.targetTouches[0];\n                    var rect = touchEvent.target.getBoundingClientRect();\n                    var position = {\n                        x: (touchEvent.pageX - rect.left - window.scrollX),\n                        y: (touchEvent.pageY - rect.top - window.scrollY)\n                    };\n\n                    var new_xpos = m.bound(position.x, 0, Mx.width);\n                    var new_ypos = m.bound(position.y, 0, Mx.height);\n                    var delta_xpos = new_xpos - Mx.xpos;\n                    var delta_ypos = new_ypos - Mx.ypos;\n                    Mx.xpos = new_xpos;\n                    Mx.ypos = new_ypos;\n\n                    var inPan = inPanRegion(plot, position);\n                    // If we are in the pan region, don't take any action\n                    if (inPan.inPanRegion) {\n                        return;\n                    }\n\n                    // Pan proportionally to the movement of the touch\n                    var xdelta = (Mx.stk[k].xscl * delta_xpos);\n                    var ydelta = (Mx.stk[k].yscl * delta_ypos);\n\n                    if (Mx.origin === 1) {\n                        // regular x, regular y\n                        xdelta *= -1;\n                    } else if (Mx.origin === 2) {\n                        // inverted x, regular y\n                        ydelta *= -1;\n                    } else if (Mx.origin === 3) {\n                        // inverted x, inverted y\n                        ydelta *= -1;\n                    } else if (Mx.origin === 4) {\n                        // regular x, inverted y\n                        xdelta *= -1;\n                        ydelta *= -1;\n                    }\n\n                    var xmin = Mx.stk[k].xmin + xdelta;\n                    var xmax = Mx.stk[k].xmax + xdelta;\n                    var ymin = Mx.stk[k].ymin + ydelta;\n                    var ymax = Mx.stk[k].ymax + ydelta;\n\n                    if ((xmin >= Gx.xmin) && (xmax <= Gx.xmax)) {\n                        Mx.stk[k].xmin = xmin;\n                        Mx.stk[k].xmax = xmax;\n                    }\n\n                    if ((ymin >= Gx.ymin) && (ymax <= Gx.ymax)) {\n                        Mx.stk[k].ymin = ymin;\n                        Mx.stk[k].ymax = ymax;\n                    }\n\n                    if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                        Gx.xmin = Math.min(Gx.xmin, xmin);\n                        Gx.xmax = Math.max(Gx.xmax, xmax);\n                        Gx.ymin = Math.min(Gx.ymin, ymin);\n                        Gx.ymax = Math.max(Gx.ymax, ymax);\n                    }\n                    plot.refresh();\n                } else if (event.targetTouches.length === 2) {\n                    var cur_distance = m.touch_distance(event.targetTouches[0], event.targetTouches[1]);\n                    var scaling = (1 - (Mx.touch_distance / cur_distance)) * 0.05;\n\n                    var xran = Mx.stk[k].xmax - Mx.stk[k].xmin;\n                    var yran = Mx.stk[k].ymax - Mx.stk[k].ymin;\n\n                    var xmin = Mx.stk[k].xmin + (scaling * xran);\n                    var xmax = Mx.stk[k].xmax - (scaling * xran);\n                    var ymin = Mx.stk[k].ymin + (scaling * yran);\n                    var ymax = Mx.stk[k].ymax - (scaling * yran);\n\n                    Mx.stk[k].xmin = Math.max(Gx.xmin, xmin);\n                    Mx.stk[k].xmax = Math.min(Gx.xmax, xmax);\n                    Mx.stk[k].ymin = Math.max(Gx.ymin, ymin);\n                    Mx.stk[k].ymax = Math.min(Gx.ymax, ymax);\n\n                    plot.refresh();\n                }\n            };\n        }(this));\n\n        this.throttledOnTouchMove = m.throttle(\n            this._Gx.scroll_time_interval,\n            this.ontouchmove);\n\n        mx.addEventListener(Mx, \"touchmove\", this.throttledOnTouchMove, false);\n\n        this.ontouchend = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                event.preventDefault();\n                console.log(\"on touch end \", event.targetTouches.length);\n                Gx.panning = undefined;\n                plot._Mx.scrollbar_x.action = 0;\n                plot._Mx.scrollbar_y.action = 0;\n                Mx.touch_distance = undefined;\n\n                mx.widget_callback(Mx, event);\n                // Only clear the touches after a slight delay so we can\n                // detect double-tap\n                Mx.touchClear = window.setTimeout(\n\n                    function() {\n                        Mx.touches = undefined;\n                        Mx.touchClear = undefined;\n                    }, 100);\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"touchend\", this.ontouchend, false);\n\n        this.docMouseUp = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n\n                if (event.which === 1) {\n                    // in general, you shouldn't put anything in here\n                    // ...instead it should go into rubberbox_cb\n                    Gx.panning = undefined;\n                    plot._Mx.scrollbar_x.action = 0; // TODO Is this\n                    // necessary?\n                    plot._Mx.scrollbar_y.action = 0;\n                } //else if (event.which === 2) {\n                // nothing\n                //} else if (event.which === 3) {\n                // nothing\n                //}\n                if (Gx.stillPanning) {\n                    window.clearTimeout(Gx.stillPanning);\n                    Gx.stillPanning = undefined;\n                }\n                if (Gx.repeatPanning) { // Clear the panning interval on any\n                    // mouse up in the document\n                    window.clearInterval(Gx.repeatPanning);\n                    Gx.repeatPanning = undefined;\n                }\n                return false;\n            };\n        }(this));\n        document.addEventListener(\"mouseup\", this.docMouseUp, false);\n\n        this.mouseup = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // mouse up on the canvas should never do a browser default action\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mup', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n\n                if (executeDefault) {\n                    if (Mx.warpbox || Mx.widget || Mx.prompt) {\n                        // If any of these are true, the mouseup is going\n                        // to be handled by them...but this is a fragile approach\n                        // because it relies upon implicit ordering of event dispatch\n                        // for mouseup events.  It should be improved/refactored at some point\n                        return;\n                    }\n\n                    // Normal mouse up handling\n                    if (event.which === 1) {\n                        // If we are in the pan region, perform the pan\n                        // otherwise emit an mtag\n                        var inCenter = inPanCenterRegion(plot);\n                        if (inCenter.inCenterRegion) {\n                            if (inCenter.command !== ' ') {\n                                pan(plot, inCenter.command, 0, event); // pan\n                            }\n                        } else if (Gx.cntrls === 1) {\n                            // Update the mark\n                            Gx.xmrk = Gx.retx;\n                            Gx.ymrk = Gx.rety;\n\n                            var mtagevt = document.createEvent('Event');\n                            mtagevt.initEvent('mtag', true, true);\n                            mtagevt.x = Gx.xmrk;\n                            mtagevt.y = Gx.ymrk;\n                            mtagevt.xpos = event.x || event.clientX;\n                            mtagevt.ypos = event.y || event.clientY;\n                            mtagevt.w = undefined;\n                            mtagevt.h = undefined;\n                            mtagevt.shift = event.shiftKey;\n                            mx.dispatchEvent(Mx, mtagevt);\n\n                            // Refresh to draw the new marker position\n                            //if (Gx.always_show_marker || Gx.show_marker) {\n                            plot.redraw();\n                            //}\n                        }\n                    } else if (event.which === 2) {\n                        if (Gx.nomenu) {\n                            // Send an event so that a custom menu can be displayed\n                            // if desired\n                            var evt = document.createEvent('Event');\n                            evt.initEvent('showmenu', true, true);\n                            evt.x = event.x || event.clientX;\n                            evt.y = event.y || event.clientY;\n                            var executeDefault = mx.dispatchEvent(Mx, evt);\n\n                            if (executeDefault) {\n                                if (event.stopPropagation) {\n                                    event.stopPropagation();\n                                }\n                                event.cancelBubble = true;\n                                mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n                                var emit_hidemenu = function() {\n                                    try {\n                                        var hideMenuEvt = document.createEvent('Event');\n                                        hideMenuEvt.initEvent('hidemenu', true, true);\n                                        if (mx.dispatchEvent(Mx, hideMenuEvt)) {\n                                            mx.addEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n                                        }\n                                    } finally {\n                                        document.removeEventListener(\"mouseup\", emit_hidemenu, false);\n                                    }\n                                };\n                                document.addEventListener(\"mouseup\", emit_hidemenu, false);\n                            }\n                        }\n                    } else if (event.which === 3) { // unzoom only happens on\n                        // right-clicks on plot\n                        // unzoom/expand\n                        event.preventDefault();\n\n                        plot.unzoom(1);\n                        plot.refresh();\n                    }\n                }\n\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"mouseup\", this.mouseup, false);\n\n        this.mouseclick = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // alway prevent any default browser actions on the plot\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mclick', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which; // not always available on all browser\n                if (mx.dispatchEvent(Mx, evt)) {\n                    // currently there isn't a default for mouseclick to cancel\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"click\", this.mouseclick, false);\n\n        this.mousedblclick = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // alway prevent any default browser actions on the plot\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mdblclick', true, true);\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which; // not always available on all browser\n                if (mx.dispatchEvent(Mx, evt)) {\n                    // currently there isn't a default for mouseclick to cancel\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"dblclick\", this.mousedblclick, false);\n\n        // PANBAR DRAGGING mouse event handlers:\n        this.dragMouseDownHandler = (function(plot) {\n            return function(event) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (inPan.inPanRegion) { // Mouse position lies in a pan\n                    // region\n                    event.preventDefault();\n                    if (inPan.command !== ' ') {\n                        var scrollbar;\n                        if (inPan.command === \"XPAN\") {\n                            scrollbar = Mx.scrollbar_x;\n                        } else if (inPan.command === \"YPAN\") {\n                            scrollbar = Mx.scrollbar_y;\n                        }\n\n                        var position = {\n                            x: Mx.xpos,\n                            y: Mx.ypos\n                        };\n                        if (scrollbar !== undefined && onScrollbar(position, scrollbar) && event.which === 1) { // On scrollbar, set up\n                            // a DRAG\n                            Gx.panning = {\n                                axis: inPan.command,\n                                xpos: event.screenX, // Use screen-relative\n                                // values here instead\n                                // of div/page-relative\n                                // values\n                                ypos: event.screenY,\n                                xmin: Mx.stk[Mx.level].xmin,\n                                xmax: Mx.stk[Mx.level].xmax,\n                                ymin: Mx.stk[Mx.level].ymin,\n                                ymax: Mx.stk[Mx.level].ymax\n                            };\n                        }\n                    }\n                }\n            };\n        }(this));\n        window.addEventListener(\"mousedown\", this.dragMouseDownHandler, false);\n\n        this.dragMouseMoveHandler = (function(plot) {\n            return function(e) {\n                var Gx = plot._Gx;\n\n                if (Gx.panning !== undefined) { // execute a scrollbar DRAG\n                    try {\n                        drag_scrollbar(plot, Gx.panning.axis, e);\n                    } catch (err) {\n                        console.log(\"Error: \" + err); // TODO Eventually come\n                        // up with better error\n                        // handling here\n                    }\n                }\n            };\n        }(this));\n\n        this.throttledDragOnMouseMove = m.throttle(this._Gx.scroll_time_interval,\n            this.dragMouseMoveHandler);\n\n        window.addEventListener(\"mousemove\", this.throttledDragOnMouseMove,\n            false);\n\n        this.dragMouseUpHandler = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n\n                if (event.which === 1) {\n                    Gx.panning = undefined; // Panbar dragging completed - clear\n                    // the state variable\n                }\n            };\n        }(this));\n        window.addEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n\n        // TODO this may need to be throttled or debounced\n        this.onresize = (function(plot) {\n            return function(event) {\n                if (mx.checkresize(plot._Mx)) {\n                    plot.refresh();\n                }\n            };\n        }(this));\n\n        // Mouse Wheel logic\n        this.wheelHandler = (function(plot) {\n\n            var Mx = plot._Mx;\n            var Gx = plot._Gx;\n\n            var throttledPan = m.throttle(100, function(inPan) {\n                // Mouse wheel\n                // event over a\n                // panning\n                // region\n\n                var scrollbar;\n                if (inPan.command === \"XPAN\") {\n                    scrollbar = Mx.scrollbar_x;\n                } else if (inPan.command === \"YPAN\") {\n                    scrollbar = Mx.scrollbar_y;\n                }\n\n                // For now, vertical mouse scrolling is the only action that\n                // will trigger a pan\n                // Later, we can add horizontal mouse scrolling if we choose\n                if (Gx.wheelscroll_mode_natural) { // Original Sig-Plot\n                    // orientation\n                    scrollbar.action = (event.deltaY < 0 ? mx.SB_WHEELDOWN : mx.SB_WHEELUP);\n                } else { // Inverted/\"un-natural\" orientation\n                    scrollbar.action = (event.deltaY < 0 ? mx.SB_WHEELUP : mx.SB_WHEELDOWN);\n                }\n\n                scrollbar.step = 0.1 * scrollbar.srange;\n                scrollbar.page = 9 * scrollbar.step;\n\n                // Execute wheel action on the scrollbar\n                mx.scroll(Mx, scrollbar, mx.XW_COMMAND, undefined,\n                    scrollbar);\n\n                // Update the viewbox\n                updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange, inPan.command.slice(0, 1));\n            });\n\n            var throttledZoom = m.throttle(100, function() {\n                var zoomperc = Gx.wheelZoomPercent || 0.2;\n                if (Gx.wheelscroll_mode_natural) {\n                    if (event.deltaY > 0) {\n                        zoomperc = -1 * zoomperc;\n                    }\n                } else { // Inverted/\"un-natural\" orientation\n                    if (event.deltaY < 0) {\n                        zoomperc = -1 * zoomperc;\n                    }\n                }\n\n                if (Gx.wheelZoom === \"x\") {\n                    plot.percent_zoom(zoomperc, 1, true);\n                } else if (Gx.wheelZoom === \"y\") {\n                    plot.percent_zoom(1, zoomperc, true);\n                } else {\n                    plot.percent_zoom(zoomperc, zoomperc, true);\n                }\n            });\n\n            return function(event) {\n                // Update Mx event fields\n                mx.ifevent(Mx, event);\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (plot.mouseOnCanvas) {\n                    event.preventDefault();\n\n                    if (inPan.inPanRegion) {\n                        throttledPan(inPan);\n                    } else if (Gx.wheelZoom) {\n                        throttledZoom();\n                    }\n                }\n            };\n        }(this));\n\n        window.addWheelListener(window, this.wheelHandler, false);\n\n        window.addEventListener(\"resize\", this.onresize, false);\n\n        // If multiple plots are in the same window, then it\n        // may be desired to disable keypress behavior and implement\n        // it at a higher-level...by default keypress behavior\n        // is enabled and only works if the mouse if over the plot\n        if (!options.nokeypress) {\n            this.onkeypress = (function(plot) {\n                return function(event) {\n                    var Mx = plot._Mx;\n                    var Gx = plot._Gx;\n                    if (plot.mouseOnCanvas) {\n\n                        if (Mx.widget && (Mx.widget.type === \"MENU\")) {\n                            return; // The menu absorbs the keypress\n                        }\n\n                        if (Mx.widget && (Mx.widget.type === \"ONESHOT\")) {\n                            Mx.widget = null;\n                            plot.refresh();\n                            return;\n                        }\n\n                        var keyCode = common.getKeyCode(event);\n\n                        // Since the mouse is in the plot area, send a keypress event\n                        var evt = document.createEvent('Event');\n                        evt.initEvent('plotkeypress', true, true);\n                        evt.keyCode = keyCode;\n                        evt.shiftKey = event.shiftKey;\n                        evt.ctrlKey = event.ctrlKey;\n                        evt.altKey = event.altKey;\n                        evt.metaKey = event.metaKey;\n                        var executeDefault = mx.dispatchEvent(Mx, evt);\n                        if (!executeDefault) {\n                            return;\n                        }\n\n                        // Only respond to keypresses if the mouse is\n                        // in the plot area....\n\n                        if (keyCode === 97) { // 'a'\n                            Gx.iabsc = (Gx.iabsc + 1) % 4;\n                            // It's kinda up in the air if changing the 'specs'\n                            // area should also change the plotting mode itself...\n                            // on one hand, if you have multiple layers with different\n                            // xdeta's then switching the specs area to index mode will\n                            // give you only the index of the baselayer...on the other hand\n                            // the use may only want to change the readout and not the x-axis\n                            // or the plot...for now this is commented out to behave in the same\n                            // manner as SIGPLOT.\n                            //plot.change_settings({\n                            //\tindex : Gx.iabsc === 1\n                            //});\n                            display_specs(plot);\n                        } else if (keyCode === 108) { // 'l'\n                            plot.change_settings({\n                                legend: !Gx.legend\n                            }); // toggle the legend\n                        } else if (keyCode === 103) { // 'g'\n                            plot.change_settings({\n                                grid: !Gx.grid\n                            }); // toggle the grid\n                        } else if ((keyCode === 98) || (keyCode === 2)) { // 'b' and CTRL-'b'\n                            if (Mx.warpbox) {\n                                if (Mx.warpbox.mode === \"box\") {\n                                    Mx.warpbox.mode = \"horizontal\";\n                                } else if (Mx.warpbox.mode === \"horizontal\") {\n                                    Mx.warpbox.mode = \"vertical\";\n                                } else {\n                                    Mx.warpbox.mode = \"box\";\n                                }\n                                mx.redraw_warpbox(Mx);\n                            }\n                        } else if (keyCode === 99) { // 'c'\n                            plot.change_settings({\n                                xcnt: -1 * Gx.cntrls\n                            });\n                        } else if (keyCode === 114) { // 'r'\n                            plot.change_settings({\n                                show_readout: !Gx.show_readout\n                            });\n                        } else if (keyCode === 115) { // 's'\n                            plot.change_settings({\n                                specs: !Gx.specs\n                            });\n                        } else if (keyCode === 112) { // 'p'\n                            plot.change_settings({\n                                p_cuts: !Gx.p_cuts\n                            });\n                        } else if (keyCode === 120) { // 'x'\n                            if (Gx.x_cut_press_on) {\n                                Gx.x_cut_press_on = false;\n                                Gx.ylabel = Gx.ylabel_stash;\n                                Gx.xlabel = Gx.xlabel_stash;\n                                for (var h = 0; h < Gx.xcut_layer; h++) {\n                                    plot._Gx.lyr[h].display = !plot._Gx.lyr[h].display;\n                                }\n                                delete_layer(plot, plot._Gx.xcut_layer);\n                                plot.rescale();\n                                plot.refresh();\n                                Gx.xcut_layer = undefined;\n                                plot.change_settings({\n                                    drawmode: Gx.old_drawmode,\n                                    autol: Gx.old_autol\n                                });\n                            } else if (Gx.xyKeys === \"pop-up\") {\n                                if (!Gx.x_pop_now) {\n                                    sigplot_show_x(plot);\n                                    Gx.x_pop_now = true;\n                                } else {\n                                    Gx.x_pop_now = false;\n                                }\n                            } else if ((Gx.lyr[0].hcb[\"class\"] === 1) && (Gx.xyKeys === \"automatic\")) {\n                                if (!Gx.x_pop_now) {\n                                    sigplot_show_x(plot);\n                                    Gx.x_pop_now = true;\n                                } else {\n                                    Gx.x_pop_now = false;\n                                }\n                            } else if ((Gx.xyKeys !== \"disable\") && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                //display the x-cut of the raster\n                                // TODO what to do if we have more than one layer?\n                                if (!Gx.y_cut_press_on) {\n                                    if (!Gx.p_cuts) {\n                                        Gx.x_cut_data = [];\n                                        var plot_height = Mx.b - Mx.t;\n                                        var plot_width = Mx.r - Mx.l;\n                                        var height = Gx.lyr[0].lps;\n                                        var width = Gx.lyr[0].xframe;\n                                        var row, start, finish = 0;\n                                        // Determine what row has been selected based on the current\n                                        // mouse position\n                                        row = Math.floor((height * (Mx.ypos - Mx.t)) / plot_height);\n                                        start = row * width;\n                                        finish = start + width;\n                                        // Grab one row of data from the zbuf\n                                        Gx.x_cut_data = Gx.lyr[0].zbuf.slice(start, finish);\n                                    }\n\n                                    //adjust for the values of the xcut\n                                    Gx.old_drawmode = Gx.lyr[0].drawmode;\n                                    Gx.old_autol = Gx.autol;\n                                    plot.change_settings({\n                                        drawmode: \"undefined\",\n                                        autol: -1\n                                    });\n\n                                    Gx.ylabel_stash = Gx.ylabel;\n\n                                    var cx = ((Gx.lyr.length > 0) && Gx.lyr[0].cx);\n                                    if (Gx.cmode === 1) {\n                                        Gx.ylabel = m.UNITS[28][0];\n                                    } else if (Gx.cmode === 2) {\n                                        Gx.ylabel = Gx.plab;\n                                    } else if ((Gx.cmode === 3) && (cx)) {\n                                        Gx.ylabel = m.UNITS[21][0];\n                                    } else if (Gx.cmode === 4) {\n                                        Gx.ylabel = m.UNITS[22][0];\n                                    } else if (Gx.cmode === 5) {\n                                        Gx.ylabel = m.UNITS[22][0];\n                                    } else if (Gx.cmode === 6) {\n                                        Gx.ylabel = m.UNITS[26][0];\n                                    } else if (Gx.cmode === 7) {\n                                        Gx.ylabel = m.UNITS[27][0];\n                                    } else {\n                                        Gx.ylabel = \"Intensity\";\n                                    }\n\n                                    Gx.xlabel_stash = Gx.xlabel;\n                                    if ((m.UNITS[Gx.xlab][0] !== \"None\") && (m.UNITS[Gx.xlab][0] !== \"Unknown\")) {\n                                        Gx.xlabel = m.UNITS[Gx.xlab][0];\n                                    } else {\n                                        Gx.xlabel = \"Frequency\";\n                                    }\n                                    Gx.xlabel += \"    CURRENTLY IN X_CUT MODE\";\n                                    Mx.origin = 1;\n                                    Gx.xcut_layer = plot.overlay_array(Gx.x_cut_data, {\n                                        xstart: Gx.lyr[0].xstart,\n                                        xdelta: Gx.lyr[0].xdelta\n                                    }, {\n                                        name: \"x_cut_data\",\n                                        line: 3\n                                    });\n                                    Gx.xcut_layer = Gx.lyr.length - 1;\n                                    //do not display any other layers\n                                    for (var i = 0; i < Gx.xcut_layer; i++) {\n                                        plot._Gx.lyr[i].display = !plot._Gx.lyr[i].display;\n                                    }\n                                    Gx.x_cut_press_on = true;\n                                    plot.rescale();\n\n                                }\n                            }\n                        } else if (keyCode === 121) { // 'y'\n                            if (Gx.y_cut_press_on) {\n                                Gx.y_cut_press_on = false;\n                                Gx.ylabel = Gx.ylabel_stash;\n                                Gx.xlabel = Gx.xlabel_stash;\n                                for (var j = 0; j < Gx.ycut_layer; j++) {\n                                    plot._Gx.lyr[j].display = !plot._Gx.lyr[j].display;\n                                }\n                                delete_layer(plot, plot._Gx.ycut_layer);\n                                plot.rescale();\n                                plot.refresh();\n                                Gx.ycut_layer = undefined;\n                                plot.change_settings({\n                                    drawmode: Gx.old_drawmode,\n                                    autol: Gx.old_autol\n                                });\n                            } else if (Gx.xyKeys === \"pop-up\") {\n                                if (!Gx.y_pop_now) {\n                                    sigplot_show_y(plot);\n                                    Gx.y_pop_now = true;\n                                } else {\n                                    Gx.y_pop_now = false;\n                                }\n                            } else if ((Gx.lyr[0].hcb[\"class\"] === 1) && (Gx.xyKeys === \"automatic\")) {\n                                if (!Gx.y_pop_now) {\n                                    sigplot_show_y(plot);\n                                    Gx.y_pop_now = true;\n                                } else {\n                                    Gx.y_pop_now = false;\n                                }\n                            } else if ((Gx.xyKeys !== \"disable\") && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                //display the y-cut of the raster\n                                if (!Gx.x_cut_press_on) {\n                                    if (!Gx.p_cuts) {\n                                        Gx.y_cut_data = [];\n                                        var plot_height = Mx.b - Mx.t;\n                                        var plot_width = Mx.r - Mx.l;\n                                        var height = Gx.lyr[0].lps;\n                                        var width = Gx.lyr[0].xframe;\n                                        var line, i = 0;\n                                        Gx.y_cut_data = [];\n                                        line = Math.floor((width * (Mx.xpos - Mx.l)) / plot_width);\n                                        for (i = line; i < (width * height); i += width) {\n                                            Gx.y_cut_data.push(Gx.lyr[0].zbuf[i]);\n                                        }\n                                    }\n\n                                    //adjust for the values of the xcut\n                                    Gx.old_drawmode = Gx.lyr[0].drawmode;\n                                    Gx.old_autol = Gx.autol;\n                                    plot.change_settings({\n                                        drawmode: \"undefined\",\n                                        autol: -1\n                                    });\n\n                                    Gx.ylabel_stash = Gx.ylabel;\n\n                                    var cx = ((Gx.lyr.length > 0) && Gx.lyr[0].cx);\n                                    if (Gx.cmode === 1) {\n                                        Gx.ylabel = m.UNITS[28][0];\n                                    } else if (Gx.cmode === 2) {\n                                        Gx.ylabel = Gx.plab;\n                                    } else if ((Gx.cmode === 3) && (cx)) {\n                                        Gx.ylabel = m.UNITS[21][0];\n                                    } else if (Gx.cmode === 4) {\n                                        Gx.ylabel = m.UNITS[22][0];\n                                    } else if (Gx.cmode === 5) {\n                                        Gx.ylabel = m.UNITS[22][0];\n                                    } else if (Gx.cmode === 6) {\n                                        Gx.ylabel = m.UNITS[26][0];\n                                    } else if (Gx.cmode === 7) {\n                                        Gx.ylabel = m.UNITS[27][0];\n                                    } else {\n                                        Gx.ylabel = \"Intensity\";\n                                    }\n\n                                    Gx.xlabel_stash = Gx.xlabel;\n                                    if ((m.UNITS[Gx.ylab][0] !== \"None\") && (m.UNITS[Gx.ylab][0] !== \"Unknown\")) {\n                                        Gx.xlabel = m.UNITS[Gx.ylab][0];\n                                    } else {\n                                        Gx.xlabel = \"Time\";\n                                    }\n                                    Gx.xlabel += \"    CURRENTLY IN Y_CUT MODE\";\n                                    Mx.origin = 1;\n                                    Gx.ycut_layer = plot.overlay_array(Gx.y_cut_data, {\n                                        xstart: Gx.lyr[0].ystart,\n                                        xdelta: Gx.lyr[0].ydelta\n                                    }, {\n                                        name: \"y_cut_data\",\n                                        line: 3\n                                    });\n                                    Gx.ycut_layer = Gx.lyr.length - 1;\n                                    //do not display any other layers\n                                    for (var k = 0; k < Gx.ycut_layer; k++) {\n                                        plot._Gx.lyr[k].display = !plot._Gx.lyr[k].display;\n                                    }\n                                    Gx.y_cut_press_on = true;\n                                    plot.rescale();\n                                }\n                            }\n                        } else if (keyCode === 122) { // 'z'\n                            sigplot_show_z(plot);\n                        } else if (keyCode === 116) { // 't'\n                            sigplot_show_timecode(plot);\n                        } else if (keyCode === 109) { // 'm'\n                            if (!Gx.nomenu) {\n                                var evt = document.createEvent('Event');\n                                evt.initEvent('showmenu', true, true);\n                                evt.x = Mx.x;\n                                evt.y = Mx.y;\n                                var executeDefault = mx.dispatchEvent(Mx, evt);\n                                if (executeDefault) {\n                                    sigplot_mainmenu(plot);\n                                }\n                            }\n                        } else if (keyCode === 63) { // '?'\n                            mx.message(Mx, MAIN_HELP);\n                        } else if (keyCode === 102) { // 'f'\n                            mx.fullscreen(Mx);\n                            plot.refresh();\n                        } else if ((keyCode === 9) && (event.ctrlKey)) { // ctrl-i\n                            plot.change_settings({\n                                invert: null\n                            });\n                        } else if (keyCode === 107) { // 'k' show marker\n                            Gx.show_marker = !Gx.show_marker;\n                            plot.redraw();\n\n                        }\n                    }\n                };\n            }(this));\n\n            common.setKeypressHandler(this.onkeypress);\n        }\n\n        return this;\n    };\n\n    // Public methods\n\n    sigplot.Plot.prototype = {\n\n        /**\n         * Add a plugin to the plot\n         *\n         * @param plugin\n         *            the plugin object\n         *\n         * @param zorder\n         *            the zorder for the plugin to render, all plugins render as\n         *            overlays on top of the plot\n         */\n        add_plugin: function(plugin, zorder) {\n            if (zorder === undefined) {\n                zorder = Number.MAX_VALUE;\n            }\n            if (zorder <= 0) {\n                throw \"Invalid plugin zorder\";\n            }\n\n\n            plugin.init(this);\n\n            var canvas = document.createElement('canvas');\n            canvas.width = this._Mx.canvas.width;\n            canvas.height = this._Mx.canvas.height;\n\n            this._Gx.plugins.push({\n                impl: plugin,\n                zorder: zorder,\n                canvas: canvas\n            });\n\n            this._Gx.plugins.sort(function(a, b) {\n                return (a.zorder - b.zorder);\n            });\n\n\n            this.refresh();\n        },\n\n        /**\n         * Removes a plugin from the plot\n         *\n         * @param plugin\n         *            the plugin object\n         */\n        remove_plugin: function(plugin) {\n            var i = this._Gx.plugins.length;\n            while (i--) {\n                if (this._Gx.plugins[i].impl === plugin) {\n                    if (plugin.dispose) {\n                        plugin.dispose();\n                    }\n                    if (this._Gx.plugins[i].canvas.parentNode) {\n                        this._Gx.plugins[i].canvas.parentNode.removeElement(this._Gx.plugins[i].canvas);\n                    }\n                    this._Gx.plugins.splice(i, 1);\n                }\n            }\n            this._Gx.plugins.sort(function(a, b) {\n                return (a.zorder - b.zorder);\n            });\n\n            this.refresh();\n        },\n\n        /**\n         * Adds a listener to plot events.\n         *\n         * @example plot.addListener(what, function(event) {});\n         *\n         * @param what\n         *            the name of the event to listen to.  \"file_deoverlayed\" is\n         *            emitted when a file is deoverlayed (the name of the deoverlayed\n         *            file can be found in evt.filename), \"file_overlayed\" is emitted\n         *            when a file is overlayed (the name of the overlayed file can\n         *            be found in evt.filename), \"hidemenu\"\tis emitted when the\n         *            menu should be hidden (a selection is made or a mouse click\n         *            occurs away from the menu), \"mdown\"\tis emitted when the mouse\n         *            down event occurs (the evt has parts evt.xpos (the mouse x-position\n         *            relative to the canvas), evt.ypos (the mouse y-position relative\n         *            to the canvas), evt.x (the mouse x-position relative to the data),\n         *            evt.y (the mouse y-position relative to the data) and evt.which\n         *            (returns which mouse button was pressed for the event)) \"mmove\"\n         *            is emitted when a mouse move event occurs (the evt has parts\n         *            evt.xpos (the mouse x-position relative to the canvas), evt.ypos\n         *            (the mouse y-position relative to the canvas), evt.x (the mouse\n         *            x-position relative to the data), evt.y (the mouse y-position\n         *            relative to the data) and evt.which (returns which mouse button\n         *            was pressed for the event)), \"mtag\"\tis emitted when a mouse \"tag\"\n         *            event occurs (the evt of an mtag has different parts depending\n         *            on what triggered it. It will always contain evt.xpos (the mouse\n         *            x-position relative to the canvas), evt.ypos (the mouse y-position\n         *            relative to the canvas), evt.x (the mouse x-position relative\n         *            to the data), and evt.y (the mouse y-position relative to the data).\n         *            If the rubberboxes are enabled, evt.h and evt.w will contain\n         *            the width and height of the box. evt.shift will contain info\n         *            about the shift key if it is pressed), \"mmove\" is emitted when\n         *            a mouse move event has occurred, \"mdown\" is emitted when\n         *            a mouse down event has occurred (the evt has parts evt.xpos\n         *            (the mouse x-position relative to the canvas), evt.ypos (the\n         *            mouse y-position relative to the canvas), evt.x (the mouse\n         *            x-position relative to the data), evt.y (the mouse y-position\n         *            relative to the data) and evt.which (returns which mouse button\n         *            was pressed for the event)), \"mup\" is emitted when a mouse up\n         *            event occurs. (the evt has parts evt.xpos (the mouse x-position\n         *            relative to the canvas), evt.ypos (the mouse y-position relative\n         *            to the canvas), evt.x (the mouse x-position relative to the data),\n         *            evt.y (the mouse y-position relative to the data) and evt.which\n         *            (returns which mouse button was pressed for the event)),\n         *            \"reread\" is emitted when a reread has been performed, \"sigplotexit\"\n         *            is emitted when an exit plot event occurs, and \"showmenu\"\tis\n         *            emitted when the menu should be shown (the evt.x and evt.y\n         *            contain the coordinates on the plot where the menu will be displayed.\n         *\n         * @param [function]\n         *            callback the function that will be called when the event is heard\n         */\n        addListener: function(what, callback) {\n            var Mx = this._Mx;\n            mx.addEventListener(Mx, what, callback, false);\n        },\n\n        /**\n         * Removes a listener to plot events.\n         *\n         * @param what\n         *            the event that was listned to\n         * @param callback\n         */\n        removeListener: function(what, callback) {\n            var Mx = this._Mx;\n            mx.removeEventListener(Mx, what, callback, false);\n        },\n\n        /**\n         * Change one or more plot settings. For boolean types, passing null\n         * will toggle the setting.\n         *\n         * @example plot.change_settings({[settings]});\n         *\n         * @param settings\n         *            Key-value pairs whose values are the settings to change\n         *\n         * @param {Boolean}\n         *            settings.grid change grid visibility\n         *\n         * @param {Boolean}\n         *            settings.index change index setting\n         *\n         * @param {Boolean}\n         *            settings.all change the plot to show all data\n         *\n         * @param {Boolean}\n         *            settings.show_x_axis true displays the x axis\n         *\n         * @param {Boolean}\n         *            settings.show_y_axis true displays the y axis\n         *\n         * @param {Boolean}\n         *            settings.show_readout true displays the readout\n         *\n         * @param {Boolean}\n         *            settings.specs turns on and off specs\n         *\n         * @param {String}\n         *            settings.xcnt \"leftmouse\", \"continuous\", \"disable\",\n         *            \"enable\"\n         *\n         * @param {Boolean}\n         *            settings.legend true displays the legend\n         *\n         * @param {Boolean}\n         *            settings.pan true will display scrollbars and enable panning\n         *\n         * @param {Boolean}\n         *            settings.cross true displays cross hairs\n         *\n         * @param {String}\n         *            settings.rubberbox_action controls action of rubberbox.\n         *            \"zoom\" (default) = zoom to the selected area, \"select\" =\n         *            select the selected area, and \"null\" = disabled, no action\n         *\n         * @param {String}\n         *            settings.rubberbox_mode controls the behavior of the rubberbox.\n         *            \"zoom\" = zoom to the selected area, \"box\" = trigger an mtag\n         *            action on the selected area\n         *\n         * @param {String}\n         *            settings.rightclick_rubberbox_action controls action of\n         *            rubberbox on rightclick. \"zoom\" = zoom to the selected area,\n         *            \"select\" = select the selected area, and \"null\" (the default)\n         *            = disabled, no action\n         *\n         * @param {String}\n         *            settings.rightclick_rubberbox_mode controls the behavior of\n         *            the rubberbox on rightclck. \"zoom\" = zoom to the selected area,\n         *            \"box\" = trigger an mtag action on the selected area. By default\n         *            is null to disable right-click boxes\n         *\n         * @param {String}\n         *            settings.wheelscroll_mode_natural true indicates natural\n         *            mode, where scrolling the mousewheel forward will pan down\n         *            and backwards will pan up\n         *\n         * @param {String}\n         *            settings.cmode !!!! CHANGED\n         *\n         * @param {String}\n         *            settings.phunits The phase units \"D\" = Degrees, \"R\" = Radians,\n         *            \"C\" = Cycles\n         *\n         * @ param {Boolean}\n         *            settings.lg_colorbar true displays the large colorbar\n         *\n         * @param {Boolean}\n         *            settings.p_cuts true displays p_cuts on a 2D plot\n         */\n\n        change_settings: function(settings) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            for (var i = 0; i < Gx.lyr.length; i++) {\n                Gx.lyr[i].change_settings(settings);\n            }\n\n            if (settings.xyKeys !== undefined) {\n                if (settings.xyKeys === null) {\n                    Gx.xyKeys = \"automatic\";\n                } else {\n                    Gx.xyKeys = settings.xyKeys;\n                }\n            }\n\n            if (settings.grid !== undefined) {\n                if (settings.grid === null) {\n                    Gx.grid = !Gx.grid;\n                } else {\n                    Gx.grid = settings.grid;\n                }\n            }\n\n            if (settings.gridBackground !== undefined) {\n                Gx.gridBackground = settings.gridBackground;\n            }\n\n            if (settings.gridStyle !== undefined) {\n                Gx.gridStyle = settings.gridStyle;\n            }\n\n            if (settings.wheelZoom !== undefined) {\n                Gx.wheelZoom = settings.wheelZoom;\n            }\n\n            if (settings.wheelZoomPercent !== undefined) {\n                Gx.wheelZoomPercent = settings.wheelZoomPercent;\n            }\n\n            if (settings.autol !== undefined) {\n                Gx.autol = settings.autol;\n            }\n\n            if ((settings.index !== undefined) && (settings.index !== Gx.index)) {\n                if (settings.index === null) {\n                    Gx.index = !Gx.index;\n                } else {\n                    Gx.index = settings.index;\n                }\n\n                // the original sigplot.for fails\n                // to do this so that the specs area\n                // has the correct setting.\n                if ((Gx.index) && (Gx.iabsc !== 1)) {\n                    Gx.iabsc = 1;\n                } else if ((!Gx.index) && (Gx.iabsc === 1)) {\n                    Gx.iabsc = 0;\n                }\n\n                var xmin;\n                var xmax;\n                scale_base(this, {\n                    get_data: false\n                }, xmin, xmax);\n\n                // like sigplot, undo all zoom levels\n                this.unzoom();\n            }\n\n            if (settings.all !== undefined) {\n                if (settings.all === null) {\n                    Gx.all = !Gx.all;\n                } else {\n                    Gx.all = settings.all;\n                }\n            }\n\n            if (settings.show_x_axis !== undefined) {\n                if (settings.show_x_axis === null) {\n                    Gx.show_x_axis = !Gx.show_x_axis;\n                } else {\n                    Gx.show_x_axis = settings.show_x_axis;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.show_y_axis !== undefined) {\n                if (settings.show_y_axis === null) {\n                    Gx.show_y_axis = !Gx.show_y_axis;\n                } else {\n                    Gx.show_y_axis = settings.show_y_axis;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.show_readout !== undefined) {\n                if (settings.show_readout === null) {\n                    Gx.show_readout = !Gx.show_readout;\n                } else {\n                    Gx.show_readout = settings.show_readout;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.specs !== undefined) {\n                if (settings.specs === null) {\n                    Gx.specs = !Gx.specs;\n                } else {\n                    Gx.specs = settings.specs;\n                }\n                if (Gx.specs) {\n                    Gx.show_x_axis = true;\n                    Gx.show_y_axis = true;\n                    Gx.show_readout = true;\n                } else {\n                    Gx.show_x_axis = false;\n                    Gx.show_y_axis = false;\n                    Gx.show_readout = false;\n                }\n            }\n\n            if (settings.xcnt !== undefined) {\n                if (settings.xcnt === \"leftmouse\") {\n                    Gx.cntrls = 1;\n                } else if (settings.xcnt === \"continuous\") {\n                    Gx.cntrls = 2;\n                } else if ((settings.xcnt === \"disable\") && (Gx.cntrls > 0)) {\n                    Gx.cntrls = -1 * Gx.cntrls;\n                } else if ((settings.xcnt === \"enable\") && (Gx.cntrls < 0)) {\n                    Gx.cntrls = -1 * Gx.cntrls;\n                } else {\n                    Gx.cntrls = settings.xcnt;\n                }\n            }\n\n            if (settings.legend !== undefined) {\n                if (settings.legend === null) {\n                    Gx.legend = !Gx.legend;\n                } else {\n                    Gx.legend = settings.legend;\n                }\n            }\n\n            if (settings.pan !== undefined) {\n                if (settings.pan === null) {\n                    Gx.pan = !Gx.pan;\n                } else {\n                    Gx.pan = settings.pan;\n                }\n            }\n\n            if (settings.cross !== undefined) {\n                if (settings.cross === null) { // catch null or undefined here\n                    Gx.cross = !Gx.cross;\n                } else {\n                    Gx.cross = settings.cross;\n                }\n                if (!Gx.cross) {\n                    if (Gx.cross_xpos !== undefined) {\n                        mx.rubberline(Mx, Gx.cross_xpos, Mx.t, Gx.cross_xpos,\n                            Mx.b);\n                    }\n                    if (Gx.cross_ypos !== undefined) {\n                        mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r,\n                            Gx.cross_ypos);\n                    }\n                    Gx.cross_xpos = undefined;\n                    Gx.cross_ypos = undefined;\n                } else {\n                    Gx.cross_xpos = undefined;\n                    Gx.cross_ypos = undefined;\n                    if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                        draw_crosshairs(this);\n                    }\n                }\n            }\n\n            var cmode;\n            var address = settings.cmode === undefined ? \"\" : settings.cmode;\n            if (typeof address === \"string\") {\n                address = address + \"\";\n                cmode = address.toUpperCase();\n            } else {\n                cmode = address;\n            }\n\n            if (settings.cmode !== undefined) {\n                if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                    Gx.cmode = 1;\n                } else {\n                    Gx.cmode = 3;\n                }\n\n                if ((cmode === \"MA\") || (cmode === \"INMA\") || (cmode === \"ABMA\") ||\n                    (cmode === \"__MA\") || (cmode === \"MAGNITUDE\") || (cmode === 1)) {\n                    Gx.cmode = 1;\n                }\n                if ((cmode === \"PH\") || (cmode === \"INPH\") || (cmode === \"ABPH\") ||\n                    (cmode === \"__PH\") || (cmode === \"PHASE\") || (cmode === 2)) {\n                    Gx.cmode = 2;\n                }\n                if ((cmode === \"RE\") || (cmode === \"INRE\") || (cmode === \"ABRE\") ||\n                    (cmode === \"__RE\") || (cmode === \"REAL\") || (cmode === 3)) {\n                    Gx.cmode = 3;\n                }\n                if ((cmode === \"IM\") || (cmode === \"INIM\") || (cmode === \"ABIM\") ||\n                    (cmode === \"__IM\") || (cmode === \"IMAGINARY\") || (cmode === 4)) {\n                    Gx.cmode = 4;\n                }\n                if ((cmode === \"LO\") || (cmode === \"D1\") || (cmode === \"INLO\") || (cmode === \"IND1\") ||\n                    (cmode === \"ABIM\") || (cmode === \"ABD1\") || (cmode === \"__LO\") ||\n                    (cmode === \"__D1\") || (cmode === \"10*LOG10\") || (cmode === 6)) {\n                    Gx.cmode = 6;\n                }\n                if ((cmode === \"L2\") || (cmode === \"D2\") || (cmode === \"INL2\") || (cmode === \"IND2\") ||\n                    (cmode === \"ABLO\") || (cmode === \"ABD2\") || (cmode === \"__L2\") ||\n                    (cmode === \"__D2\") || (cmode === \"20*LOG10\") || (cmode === 7)) {\n                    Gx.cmode = 7;\n                }\n                if ((cmode === \"RI\") || (cmode === \"IR\") || (cmode === \"INRI\") || (cmode === \"INIR\") ||\n                    (cmode === \"ABRI\") || (cmode === \"ABIR\") || (cmode === \"__RI\") ||\n                    (cmode === \"__IR\") || (cmode === \"IMAG/REAL\") || (cmode === \"REAL/IMAG\") || (cmode === 5)) {\n                    if (Gx.index) {\n                        alert(\"Imag/Real mode not permitted in INDEX mode\");\n                    } else {\n                        Gx.cmode = 5;\n                    }\n                }\n\n                Gx.basemode = Gx.cmode;\n                changemode(this, Gx.cmode);\n            }\n\n            if (settings.phunits !== undefined) {\n                changephunits(this, settings.phunits);\n            }\n\n            if (settings.rubberbox_action !== undefined) {\n                Gx.default_rubberbox_action = settings.rubberbox_action;\n            }\n\n            if (settings.rubberbox_mode !== undefined) {\n                Gx.default_rubberbox_mode = settings.rubberbox_mode;\n            }\n\n            if (settings.rightclick_rubberbox_action !== undefined) {\n                Gx.default_rightclick_rubberbox_action = settings.rightclick_rubberbox_action;\n            }\n\n            if (settings.rightclick_rubberbox_mode !== undefined) {\n                Gx.default_rightclick_rubberbox_mode = settings.rightclick_rubberbox_mode;\n            }\n\n            if (settings.wheelscroll_mode_natural !== undefined) {\n                Gx.wheelscroll_mode_natural = settings.wheelscroll_mode_natural;\n            }\n\n            if (settings.colors !== undefined) {\n                if (!settings.colors.fg) {\n                    settings.colors.fg = Mx.fg;\n                }\n                if (!settings.colors.bg) {\n                    settings.colors.bg = Mx.bg;\n                }\n                mx.setbgfg(Mx, settings.colors.bg, settings.colors.fg, Mx.xi);\n            }\n\n            if (settings.cmap !== undefined) {\n                if (settings.cmap === null) {\n                    // default\n                    if (Gx.cmode === 2) {\n                        Gx.cmap = 2; // wheel\n                    } else {\n                        Gx.cmap = 1; // ramp\n                    }\n                } else {\n                    Gx.cmap = settings.cmap; // TODO support string lookup\n                }\n\n                setup_cmap(this, Gx.cmap);\n            }\n\n            if (settings.yinv !== undefined) {\n                if (settings.yinv) {\n                    Mx.origin = 4;\n                } else {\n                    Mx.origin = 1;\n                }\n            }\n\n            if (settings.rasterSmoothing !== undefined) {\n                if (settings.rasterSmoothing === null) {\n                    Gx.rasterSmoothing = !Gx.rasterSmoothing;\n                } else {\n                    Gx.rasterSmoothing = settings.rasterSmoothing;\n                }\n            }\n\n            if (settings.fillStyle !== undefined) {\n                Gx.fillStyle = settings.fillStyle;\n            }\n\n            if (settings.invert !== undefined) {\n                if (settings.invert === null) {\n                    mx.invertbgfg(Mx);\n                } else if (settings.invert === true) {\n                    mx.setbgfg(this, \"white\", \"black\");\n                } else {\n                    mx.setbgfg(this, \"black\", \"white\");\n                }\n            }\n\n            if (settings.nomenu !== undefined) {\n                if (settings.nomenu === null) {\n                    Gx.nomenu = !Gx.nomenu;\n                } else {\n                    Gx.nomenu = settings.nomenu;\n                }\n            }\n\n            if (settings.ymax !== undefined) {\n                if (settings.ymax === null) {\n                    Gx.autoy = Gx.autoy | 2;\n                    Gx.panymax = undefined;\n                    scale_base(this, {});\n                    Gx.ymax = Gx.panymax;\n                } else {\n                    // autoy must be set correctly before calling updateViewbox\n                    Gx.autoy = Gx.autoy & 0xD;\n                    Gx.ymax = settings.ymax;\n                    updateViewbox(this, Mx.stk[0].ymin, settings.ymax, \"Y\");\n                    this.redraw();\n                }\n            }\n\n            if (settings.ymin !== undefined) {\n                if (settings.ymin === null) {\n                    Gx.autoy = Gx.autoy | 1;\n                    Gx.panymin = undefined;\n                    scale_base(this, {});\n                    Gx.ymin = Gx.panymin;\n                } else {\n                    // autoy must be set correctly before calling updateViewbox\n                    Gx.autoy = Gx.autoy & 0xE;\n                    Gx.ymin = settings.ymin;\n                    updateViewbox(this, settings.ymin, Mx.stk[0].ymax, \"Y\");\n                    this.redraw();\n                }\n            }\n\n            // Check autoy setting after checking ymin/ymax\n            // so that explicitly setting autoy will override\n            // implicit settings via ymin/ymax\n            if (settings.autoy !== undefined) {\n                Gx.autoy = settings.autoy;\n                if (((Gx.autoy & 1) !== 0)) {\n                    Gx.ymin = undefined;\n                }\n                if (((Gx.autoy & 2) !== 0)) {\n                    Gx.ymax = undefined;\n                }\n            }\n\n            if (settings.xmin !== undefined) {\n                updateViewbox(this, settings.xmin, Mx.stk[0].xmax, \"X\");\n                Gx.autox = (Gx.autox & 2);\n                this.redraw();\n            }\n\n            if (settings.xmax !== undefined) {\n                updateViewbox(this, Mx.stk[0].xmin, settings.xmax, \"X\");\n                Gx.autox = (Gx.autox & 1);\n                this.redraw();\n            }\n\n            if (settings.zmin !== undefined) {\n                Gx.zmin = settings.zmin;\n                Gx.autoz = (Gx.autoz & 2);\n            }\n\n            if (settings.zmax !== undefined) {\n                Gx.zmax = settings.zmax;\n                Gx.autoz = (Gx.autoz & 1);\n            }\n\n            if (settings.autoz !== undefined) {\n                Gx.autoz = settings.autoz;\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = undefined;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = undefined;\n                }\n            }\n\n            if (settings.note !== undefined) {\n                Gx.note = settings.note;\n            }\n\n            if (settings.lg_colorbar !== undefined) {\n                // Change the plot area and then draw the large colorbar\n                Gx.lg_colorbar = !Gx.lg_colorbar;\n            }\n\n            if (settings.p_cuts !== undefined) {\n                // Change the plot area and then draw the p_cuts dipslay\n                if (settings.p_cuts === null) {\n                    Gx.p_cuts = !Gx.p_cuts;\n                } else {\n                    Gx.p_cuts = settings.p_cuts;\n                }\n            }\n\n            //this is a setting that is true if we are drawing an xcut\n            if (settings.xcut_now !== undefined) {\n                Gx.xcut_now = !Gx.xcut_now;\n            }\n\n            //this is a setting that is true if we are drawing a ycut\n            if (settings.ycut_now !== undefined) {\n                Gx.ycut_now = !Gx.ycut_now;\n            }\n\n            this.refresh();\n            if (settings.pan !== undefined) { // refactor - new code to handle\n                // disappearing specs\n                display_specs(this);\n            }\n        },\n\n        /**\n         * Reread all files and refresh the plot.\n         */\n        reread: function() {\n            var Gx = this._Gx;\n            var oldLayerData = [];\n            for (var k = 0; k < Gx.lyr.length; k++) { // make a copy of layer\n                // data before\n                // destroying Gx.lyr\n                // with the deoverlay\n                oldLayerData[k] = Gx.lyr[k];\n            }\n\n            var origHCB = Gx.HCB.slice();\n            this.deoverlay();\n            for (var i = 0; i < origHCB.length; i++) {\n                this.overlay_bluefile(origHCB[i]);\n            }\n\n            // propagate old layer attributes to re-read layers\n            for (var j = 0; j < Gx.lyr.length; j++) {\n                // TODO Assumes indices of old Gx.lyr and new Gx.lyr will match\n                // up correctly - should we instead use hcb and name to identify\n                Gx.lyr[j].symbol = oldLayerData[j].symbol;\n                Gx.lyr[j].radius = oldLayerData[j].radius;\n                // TODO re-copy other things like line type???\n            }\n            this.refresh();\n\n            // Notify listeners that a reread was performed\n            var evt = document.createEvent('Event');\n            evt.initEvent('reread', true, true);\n            mx.dispatchEvent(this._Mx, evt);\n        },\n\n        /**\n         * Placeholder for cleanup logic.\n         */\n        cleanup: function() {\n            // TODO not sure what we really want to do here yet\n        },\n\n        /**\n         * Reload data without adjusting other aspects about a plot\n         *\n         * @param {Number} n\n         *            the layer to push data into\n         * @param {Number[]} data\n         *            data to push\n         * @param {Object} hdrmod\n         *            optional changes to the file header\n         */\n        reload: function(n, data, hdrmod, rsync) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            if ((n < 0) || (n >= Gx.lyr.length)) {\n                return;\n            }\n\n            if (Gx.lyr[n].reload === undefined) {\n                return;\n            }\n\n            var xbnds = Gx.lyr[n].reload(data, hdrmod);\n\n            if (Mx.level === 0) {\n                // Unlike push(), always call scale_base\n                // when reload is invoked\n                scale_base(this, {\n                    get_data: false\n                }, xbnds.xmin, xbnds.xmax);\n            }\n\n            if (rsync) {\n                this._refresh();\n            } else {\n                this.refresh();\n            }\n\n        },\n\n        rescale: function(force) {\n            var Mx = this._Mx;\n\n            if (Mx.level === 0 || force) {\n                scale_base(this, {\n                    get_data: false\n                }, undefined, undefined);\n            }\n\n            this.refresh();\n        },\n\n        /**\n         * Change the file header\n         *\n         * @param {Number} n\n         *            the layer to push header changes to\n         * @param {Object} hdrmod\n         *            changes to the file header\n         */\n        headermod: function(n, hdrmod) {\n            this.change_settings(hdrmod);\n            this.push(n, [], hdrmod);\n        },\n\n        /**\n         * Push data into a layer that was created with overlay_pipe\n         *\n         * @example plot.push(n, data);\n         *\n         * @param {Number} n\n         *            the layer to push data into\n         * @param {Number[]} data\n         *            data to push\n         * @param {Object} hdrmod\n         *            optional changes to the file header\n         * @param {boolean} [sync=false]\n         *            optional dispatch onpipewrite syncronously\n         * @param {boolean} [rsync=false]\n         *            optional dispatch refresh syncronously\n         */\n        push: function(n, data, hdrmod, sync, rsync) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            if ((n < 0) || (n >= Gx.lyr.length)) {\n                return;\n            }\n\n            if (Gx.lyr[n].push === undefined) {\n                return;\n            }\n\n            if (Gx.lyr[n].display === false) {\n                return;\n            }\n\n            var hdrmod_clone = hdrmod;\n\n            // quick deep copy of the header so we can\n            // add some necessary fields if this is\n            // a header-only push\n            if (hdrmod) {\n                var hdrmod_clone = JSON.parse(JSON.stringify(hdrmod));\n\n                // if it's a header-only push, the data should\n                // be an empty array\n                if (data.length === 0) {\n                    hdrmod_clone.xmin = Mx.stk[n].xmin;\n                    hdrmod_clone.xmax = Mx.stk[n].xmax;\n                    hdrmod_clone.ymin = Mx.stk[n].ymin;\n                    hdrmod_clone.ymax = Mx.stk[n].ymax;\n                }\n            }\n\n            var rescale = Gx.lyr[n].push(data, hdrmod_clone, sync);\n\n            if ((Mx.level === 0) && rescale) {\n                scale_base(this, {\n                    get_data: false\n                });\n            }\n\n            if (rsync) {\n                this._refresh();\n            } else {\n                this.refresh();\n            }\n        },\n\n        /**\n         * Create a plot layer with an array overlay\n         *\n         * @example plot.overlay_array(data, {[overrides]}, {[layerOptions]});\n         *\n         * @param data\n         *            data the data that you will be plotting\n         *\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_array: function(data, overrides, layerOptions) {\n            m.log.debug(\"Overlay array\");\n            var hcb = m.initialize(data, overrides);\n            return this.overlay_bluefile(hcb, layerOptions);\n        },\n\n        /**\n         * Create a plot layer to hold data\n         *\n         * @example plot.overlay_pipe({[overrides]},{[layerOptions]});\n         *\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_pipe: function(overrides, layerOptions) {\n            m.log.debug(\"Overlay pipe\");\n            if (!overrides) {\n                overrides = {};\n            }\n            overrides.pipe = true;\n            var hcb = m.initialize(null, overrides);\n            //console.log(\"pipe filename: \"+hcb.file_name);\n            return this.overlay_bluefile(hcb, layerOptions);\n        },\n\n        /**\n         * Create a plot layer to hold data\n         *\n         * @example plot.overlay_websocket({wsurl, {[overrides]}, {[layerOptions]}});\n         * @param {url:port_destination}\n         *            wsurl the url and port destination for the websocket being used\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_websocket: function(wsurl, overrides, layerOptions) {\n            m.log.debug(\"Overlay websocket: \" + wsurl);\n            var ws = new WebSocket(wsurl, \"plot-data\");\n            ws.binaryType = \"arraybuffer\";\n\n            var plot = this;\n            if (!overrides) {\n                overrides = {};\n            }\n            overrides.pipe = true;\n            var hcb = m.initialize(null, overrides);\n            hcb.ws = ws;\n\n            var layer_n = this.overlay_bluefile(hcb, layerOptions);\n\n            ws.onopen = function(evt) {};\n\n            ws.onmessage = (function(theSocket) {\n                return function(evt) {\n                    if (evt.data instanceof ArrayBuffer) {\n                        var data = hcb.createArray(evt.data);\n                        plot.push(layer_n, data);\n                    } else if (typeof evt.data === \"string\") {\n                        var Gx = plot._Gx;\n                        var hdr = Gx.lyr[layer_n].hcb;\n                        if (!hdr) {\n                            m.log.warning(\"Couldn't find header for layer \" + layer_n);\n                        }\n\n                        var newHdr = JSON.parse(evt.data);\n                        plot.push(layer_n, [], newHdr);\n                    }\n                };\n            })(ws);\n\n            return layer_n;\n        },\n\n        /**\n         * Create a plot layer from an HREF that points to a BLUEFILE or MATFILE\n         *\n         * @example plot.overlay_href(href, function() {}, {[layeroptions]});\n         *\n         * @param {String}\n         *            href the url to the bluefile or matfile\n         * @param [onload]\n         *            callback to be called when the file has been loaded\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framesize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n        overlay_href: function(href, onload, layerOptions) {\n            m.log.debug(\"Overlay href: \" + href);\n            try {\n                this.show_spinner();\n\n                var handleHeader = (function(plot, onload) {\n                    return function(hcb) {\n                        try {\n                            if (!hcb) {\n                                alert(\"Failed to load data\");\n                            } else {\n                                var i;\n                                if (href.endsWith(\".mat\")) {\n                                    i = plot.overlay_matfile(hcb, layerOptions);\n                                } else {\n                                    i = plot.overlay_bluefile(hcb, layerOptions);\n                                }\n                                if (onload) {\n                                    onload(hcb, i);\n                                }\n                            }\n                        } finally {\n                            plot.hide_spinner();\n                        }\n                    };\n                }(this, onload));\n\n                var reader;\n                if (href.endsWith(\".mat\")) {\n                    reader = new matfile.MatFileReader();\n                } else {\n                    reader = new bluefile.BlueFileReader();\n                }\n                reader.read_http(href, handleHeader);\n            } catch (error) {\n                console.error(error);\n                alert(\"Failed to load data\");\n                this.hide_spinner();\n            }\n        },\n\n        show_spinner: function() {\n            if (!this._Gx.spinner) {\n                SPINNER_OPTS.color = this._Mx.xwfg;\n                this._Gx.spinner = new Spinner(SPINNER_OPTS).spin(this._Gx.parent);\n            }\n        },\n\n        hide_spinner: function() {\n            if (this._Gx.spinner) {\n                this._Gx.spinner.stop();\n            }\n            this._Gx.spinner = undefined;\n        },\n\n        add_layer: function(layer) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            // Notify listeners that a file was overlayed\n            var evt = document.createEvent('Event');\n            evt.initEvent('lyradd', true, true);\n            evt.name = layer.name; // the name of the layer\n            evt.layer = layer;\n            var executeDefault = mx.dispatchEvent(Mx, evt);\n            if (executeDefault) {\n                Gx.lyr.push(layer);\n                layer.index = Gx.lyr.length - 1; // the new index of the layer\n                return true;\n            } else {\n                return false;\n            }\n        },\n\n        /**\n         * Get a layer of the plot\n         *\n         * @example plot.get_layer(n);\n         *\n         * @param {Number}\n         *              n the index of the layer\n         *\n         * @returns data_layer\n         *\n         */\n\n        get_layer: function(n) {\n            var Gx = this._Gx;\n            if ((n >= 0) && (n < Gx.lyr.length)) {\n                return Gx.lyr[n];\n            } else {\n                return null;\n            }\n        },\n\n        overlay_matfile: function(mfile, layerOptions) {\n            m.log.debug(\"Overlay matfile: \" + mfile.file_name);\n            return this.overlay_array(mfile.dview);\n        },\n\n        /**\n         * Create a plot layer backed by a bluefile header\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @returns the index of the new layer\n         */\n        overlay_bluefile: function(hcb, layerOptions) {\n            m.log.debug(\"Overlay bluefile: \" + hcb.file_name);\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var size = 0;\n\n            layerOptions = layerOptions || {};\n\n            var basefiles = (Gx.HCB.length === 0);\n\n            Gx.HCB.push(hcb);\n\n            if (Gx.HCB.length === 1) {\n                basefile(this, true);\n            }\n\n            var layer = null;\n\n            if (layerOptions.layerType === undefined) {\n                if (hcb[\"class\"] === 1) {\n                    layer = Layer1D.overlay(this, hcb, layerOptions);\n                } else if (hcb[\"class\"] === 2) {\n                    layer = Layer2D.overlay(this, hcb, layerOptions);\n                }\n            } else {\n                if (layerOptions.layerType === \"1D\") {\n                    layer = Layer1D.overlay(this, hcb, layerOptions);\n                } else if (layerOptions.layerType === \"2D\") {\n                    layer = Layer2D.overlay(this, hcb, layerOptions);\n                } else {\n                    layer = layerOptions.layerType.overlay(this, hcb, layerOptions);\n                }\n            }\n\n            if (!layer) {\n                m.log.debug(\"failed to create layer\");\n                return;\n            }\n\n            // Allow the user to store aribitary data with the layer\n            if (layerOptions.user_data) {\n                layer.user_data = layerOptions.user_data;\n            }\n\n            // TODO - do we want to alert like the XM plot did?\n            //if (!Gx.all && size > Gx.bufmax && Gx.HCB.length == 1) {\n            // alert(\"Plot truncated to buffer size. Use panning or /ALL\n            // switch\");\n            //}\n            // The original code has a bug here. Fixed by moving changemode\n            // outside of\n            // the !basefiles check.\n            // You can recreate with SIGPLOT ,,, IR\n            // And then loading a file.\n            changemode(this, Gx.cmode);\n\n            // if this is not the first set of layers added and\n            // we haven't asked for the plot to expand to accomodate\n            // this layers new range, then simply draw the new layer.\n            if (!basefiles && !layerOptions.expand) {\n                draw_layer(this, layer);\n            } else {\n                if (Gx.HCB.length === 0) { // TODO dead code that cannot be reached\n                    basefile(this, false);\n                } else {\n                    Gx.basemode = Gx.cmode;\n                    var xmin;\n                    var xmax;\n                    if ((Gx.autox & 1) === 0) {\n                        xmin = Gx.xmin;\n                    }\n                    if ((Gx.autox & 2) === 0) {\n                        xmax = Gx.xmax;\n                    }\n                    scale_base(this, {\n                        get_data: true\n                    }, xmin, xmax);\n                    Mx.level = 0;\n                    if ((Gx.autox & 1) !== 0) {\n                        Gx.xmin = Mx.stk[0].xmin;\n                    }\n                    if ((Gx.autox & 2) !== 0) {\n                        Gx.xmax = Mx.stk[0].xmax;\n                    }\n                    if ((Gx.autoy & 1) !== 0) {\n                        Gx.ymin = Mx.stk[0].ymin;\n                    }\n                    if ((Gx.autoy & 2) !== 0) {\n                        Gx.ymax = Mx.stk[0].ymax;\n                    }\n                    Mx.resize = true;\n                    if (Gx.lyr[0].preferred_origin) {\n                        Mx.origin = Gx.lyr[0].preferred_origin;\n                    } else {\n                        Mx.origin = 1;\n                    }\n                }\n            }\n            form_plotnote(this);\n            this.refresh();\n\n            return (Gx.HCB.length - 1);\n        },\n\n        /**\n         * Load one or more files.\n         *\n         * @param {File[]}\n         *            a list of files to plot\n         */\n        load_files: function(files, layerType) {\n            var onload = (function(plot) {\n                return function(hdr) {\n                    plot.overlay_bluefile(hdr, layerType);\n                };\n            })(this);\n\n            for (var i = 0; i < files.length; i++) {\n                var f = files[i];\n                var br = new bluefile.BlueFileReader();\n                br.read(f, onload);\n            }\n        },\n\n        /**\n         * Reemove layers\n         *\n         * @example plot.get_layer(n);\n         *\n         * @param {Number}\n         *             The index of the layer. If not provided, all layers will\n         *             be removed\n         *\n         * @returns data_layer\n         *\n         */\n\n        deoverlay: function(index) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            if (Gx.HCB.length > 0) {\n                if (index === undefined) {\n                    for (var n = Gx.HCB.length - 1; n >= 0; n--) {\n                        this.remove_layer(n);\n                    }\n                } else if (index < 0) {\n                    var n = Gx.HCB.length + index;\n                    if (n < 0) {\n                        return;\n                    }\n                    this.remove_layer(n);\n                } else if (index < Gx.HCB.length) {\n                    this.remove_layer(index);\n                }\n            }\n            if (Gx.lyr.length === 0) {\n                basefile(this, false);\n                scale_base(this, {});\n            }\n        },\n\n        /**\n         * Remove a layer.\n         *\n         * @param index\n         *            the layer to remove\n         */\n        remove_layer: function(index) {\n            var Gx = this._Gx;\n\n            var fileName = \"\";\n            var HCB = null;\n\n            if ((index >= 0) && (index < Gx.HCB.length)) {\n                fileName = Gx.HCB[index].file_name;\n                // TODO if (Gx.modsource > 0) {\n                //\n                // }\n                HCB = Gx.HCB[index];\n                Gx.HCB[index] = null;\n                for (var n = index; n < Gx.HCB.length - 1; n++) {\n                    Gx.HCB[n] = Gx.HCB[n + 1];\n                }\n                Gx.HCB.length -= 1;\n            }\n\n            for (var n = Gx.lyr.length - 1; n >= 0; n--) {\n                if (Gx.lyr[n].hcb === HCB) {\n                    delete_layer(this, n);\n                }\n            }\n            form_plotnote(this);\n            this.refresh();\n\n            // Notify listeners that a file has been deoverlayed\n            var evt = document.createEvent('Event');\n            evt.initEvent('file_deoverlayed', true, true);\n            if (fileName !== \"\") {\n                evt.fileName = fileName; // The fileName that was\n            }\n            // de-overlayed\n            mx.dispatchEvent(this._Mx, evt);\n        },\n\n        /**\n         * Zoom onto a given pixel range.\n         */\n        pixel_zoom: function(x1, y1, x2, y2, continuous) {\n            var r1 = pixel_to_real(this, x1, y1);\n            var r2 = pixel_to_real(this, x2, y2);\n\n            this.zoom(r1, r2, continuous);\n        },\n\n        percent_zoom: function(xperc, yperc, continuous) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            var xadj = 0;\n            if (Math.abs(xperc) < 1) {\n                xadj = Math.abs(Mx.stk[Mx.level].xmax - Mx.stk[Mx.level].xmin);\n                xadj = (xadj * xperc) / 2;\n            }\n\n            var yadj = 0;\n            if (Math.abs(yperc) < 1) {\n                yadj = Math.abs(Mx.stk[Mx.level].ymax - Mx.stk[Mx.level].ymin);\n                yadj = (yadj * yperc) / 2;\n            }\n\n            var ul = {\n                x: Math.max(Mx.stk[Mx.level].xmin + xadj, Gx.panxmin),\n                y: Math.max(Mx.stk[Mx.level].ymin + yadj, Gx.panymin)\n            };\n\n            var lr = {\n                x: Math.min(Mx.stk[Mx.level].xmax - xadj, Gx.panxmax),\n                y: Math.min(Mx.stk[Mx.level].ymax - yadj, Gx.panymax)\n            };\n\n            this.zoom(ul, lr, continuous);\n        },\n\n        /**\n         * Zoom onto a given region.\n         *\n         * @param ul\n         *            the uppler left corner\n         * @param {Number}\n         *            ul.x the upper left x pos in real plot value\n         * @param {Number}\n         *            ul.y the upper left y pos in real plot values\n         *\n         * @param lr\n         *            the lower right corner\n         * @param {Number}\n         *            lr the lower right x pos in real plot value\n         * @param {Number}\n         *            lr the lower right y pos in real plot values\n         *\n         * @param continuous\n         *            enter continuous zoom mode.  This will create a\n         *            new if you are on level 0, but stay on the same level\n         *            otherwise\n         */\n        zoom: function(ul, lr, continuous) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            if (Mx.level >= 9) { // currently only allow 10 zooms\n                return;\n            }\n\n            if (ul.x === undefined) {\n                ul.x = Mx.stk[Mx.level].xmin;\n            }\n            if (ul.y === undefined) {\n                ul.y = Mx.stk[Mx.level].ymin;\n            }\n            if (lr.x === undefined) {\n                lr.x = Mx.stk[Mx.level].xmax;\n            }\n            if (lr.y === undefined) {\n                lr.y = Mx.stk[Mx.level].ymax;\n            }\n\n            if (lr.x < ul.x) {\n                var xtmp = lr.x;\n                lr.x = ul.x;\n                ul.x = xtmp;\n            }\n            if (lr.y < ul.y) {\n                var ytmp = lr.y;\n                lr.y = ul.y;\n                ul.y = ytmp;\n            }\n\n            var zstk = {};\n\n            // xscl/yscl are reset in sigplot.refresh\n            zstk.xscl = Mx.stk[Mx.level].xscl;\n            zstk.yscl = Mx.stk[Mx.level].yscl;\n\n            zstk.xmin = ul.x; // real world val at x1(origin=1,4) or\n            // x2(origin=2,4)\n            zstk.xmax = lr.x; // real world val at x2(origin=1,4) or\n            // x1(origin=2,4)\n            zstk.ymin = ul.y; // real world val at y2(origin=1,2) or\n            // y1(origin=3,4)\n            zstk.ymax = lr.y; // real world val at y1(origin=1,2) or\n            // y2(origin=3,4)\n            if (Gx.index) {\n                zstk.xmin = Math.min(zstk.xmin / Gx.xdelta);\n                zstk.xmax = Math.min(zstk.xmax / Gx.xdelta);\n            }\n\n            if (!continuous || (!Gx.inContinuousZoom)) {\n                // We aren't yet in continuous zoom mode\n                // so create a new level\n                Mx.stk.push(zstk);\n                Mx.level = Mx.stk.length - 1;\n            } else {\n                // Once in continuous zoom mode update the current level\n                Mx.stk[Mx.level] = zstk;\n            }\n            Gx.inContinuousZoom = continuous;\n\n            this.inZoom = true; // prevent recursive zooms\n            var evt = document.createEvent('Event');\n            evt.initEvent('zoom', true, true);\n            evt.level = Mx.level;\n            evt.inContinuousZoom = Gx.inContinuousZoom;\n            evt.xmin = Mx.stk[Mx.level].xmin;\n            evt.ymin = Mx.stk[Mx.level].ymin;\n            evt.xmax = Mx.stk[Mx.level].xmax;\n            evt.ymax = Mx.stk[Mx.level].ymax;\n            mx.dispatchEvent(Mx, evt); // TODO should we allow zoom to be cancelled?\n            this.inZoom = false;\n\n            this.refresh();\n        },\n\n        /**\n         * Unzoom one or more levels.\n         *\n         * @param [levels]\n         *            the number of levels to unzoom, if not provided unzoom\n         *            all.\n         */\n        unzoom: function(levels) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            if (Mx.level === 0) {\n                return;\n            }\n\n            if (!levels) {\n                levels = Mx.stk.length;\n            }\n\n            while (levels > 0) {\n                if (Mx.level === 0) {\n                    break;\n                }\n                Mx.stk.pop();\n                Mx.level = Mx.stk.length - 1;\n                levels -= 1;\n            }\n\n            // If we are back at level 0, then\n            // rescale\n            if (Mx.level === 0) {\n                this.rescale();\n            }\n\n            // After any unzooms you can no longer remain in\n            // continuous zoom\n            Gx.inContinuousZoom = false;\n\n            this.inZoom = true; // prevent recursive zoom\n            // Send the event to listeners\n            var evt = document.createEvent('Event');\n            evt.initEvent('unzoom', true, true);\n            evt.level = Mx.level;\n            evt.xmin = Mx.stk[Mx.level].xmin;\n            evt.ymin = Mx.stk[Mx.level].ymin;\n            evt.xmax = Mx.stk[Mx.level].xmax;\n            evt.ymax = Mx.stk[Mx.level].ymax;\n            mx.dispatchEvent(Mx, evt);\n            this.inZoom = false;\n\n            this.refresh();\n        },\n\n        /**\n         * Register this plot to mimic zoom/unzoom of other plot\n         *\n         * @param other\n         *     the other plot to mimic\n         *\n         * @param mask\n         *     the set of event to respond to\n         *\n         * @param mask.zoom\n         *     if true, respond to zoom events\n         *\n         * @param mask.xzoom\n         *     if true, respond to zoom events for the x-axis only\n         *\n         * @param mask.yzoom\n         *     if true, respond to zoom events for the y-axis only\n         *\n         * @param mask.unzoom\n         *     if true, respond to unzoom events\n         *\n         * @param mask.pan\n         *     if true, respond to pan events\n         *\n         * @param mask.xpan\n         *     if true, respond to pan events for the x-axis only\n         *\n         * @param mask.ypan\n         *     if true, respond to pan events for the y-axis only\n         */\n        mimic: function(other, mask) {\n            var self = this;\n\n            if (!mask) {\n                throw \"mimic must be called with at least one event mask\";\n            }\n\n            this.unmimic(other);\n\n            if (mask.zoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: event.xmin,\n                            y: event.ymin\n                        }, {\n                            x: event.xmax,\n                            y: event.ymax\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            } else if (mask.xzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: event.xmin,\n                            y: undefined\n                        }, {\n                            x: event.xmax,\n                            y: undefined\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            } else if (mask.yzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: undefined,\n                            y: event.ymin\n                        }, {\n                            x: undefined,\n                            y: event.ymax\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            }\n\n            if (mask.unzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    if (event.level < self._Mx.level) {\n                        self.unzoom(self._Mx.level - event.level);\n                    }\n                };\n                other.addListener(\"unzoom\", f);\n                this.mimicListeners.listeners.unzoom = f;\n            }\n\n            if (mask.pan || mask.xpan) {\n                var f = function(event) {\n                    if (self.inPan) {\n                        return;\n                    }\n                    updateViewbox(self, event.xmin, event.xmax, \"X\");\n                };\n                other.addListener(\"xpan\", f);\n                this.mimicListeners.listeners.xpan = f;\n            }\n\n            if (mask.pan || mask.ypan) {\n                var f = function(event) {\n                    if (self.inPan) {\n                        return;\n                    }\n                    updateViewbox(self, event.ymin, event.ymax, \"Y\");\n                };\n                other.addListener(\"ypan\", f);\n                this.mimicListeners.listeners.ypan = f;\n            }\n\n            this.mimicListeners.other = other;\n        },\n\n\n        /**\n         * Unregister zoom/unzoom listeners added via previous call to unmimic.\n         */\n        unmimic: function(other) {\n            var other = this.mimicListeners.other;\n            if (other) {\n                var that = this;\n                Object.keys(this.mimicListeners.listeners).forEach(function(evt) {\n                    if (that.mimicListeners.listeners[evt]) {\n                        other.removeListener(evt, that.mimicListeners.listeners[evt]);\n                    }\n                });\n            }\n            this.mimicListeners = {\n                other: null,\n                listeners: {\n                    zoom: null,\n                    unzoom: null,\n                    xpan: null,\n                    ypan: null\n                }\n            };\n        },\n\n        /**\n         * Like refresh, but doesn't rerender data\n         *\n         * @example plot.redraw();\n         */\n        redraw: function() {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n            var ctx = Mx.canvas.getContext(\"2d\");\n            if (!Gx.plotData.valid) {\n                this.refresh();\n            } else {\n                ctx.drawImage(Gx.plotData,\n                    Mx.l - 1,\n                    Mx.t - 1, (Mx.r - Mx.l) + 2, (Mx.b - Mx.t) + 2,\n                    Mx.l - 1,\n                    Mx.t - 1, (Mx.r - Mx.l) + 2, (Mx.b - Mx.t) + 2\n                );\n\n                draw_plugins(this);\n\n                Gx.cross_xpos = undefined;\n                Gx.cross_ypos = undefined;\n                if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                    draw_crosshairs(this);\n                }\n\n                if (Gx.always_show_marker || Gx.show_marker) {\n                    draw_marker(this);\n                }\n            }\n        },\n\n        /**\n         * Refresh the entire plot\n         *\n         * @example plot.refresh();\n         */\n        refresh: function() {\n            var self = this;\n            mx.render(this._Mx, function() {\n                self._refresh();\n            });\n        },\n\n        /**\n         * Enable listeners for events on plot\n         */\n\n        enable_listeners: function() {\n            var Mx = this._Mx;\n            mx.addEventListener(Mx, \"mousedown\", this.onmousedown, false);\n            mx.addEventListener(Mx, \"mousemove\", this.throttledOnMouseMove, false);\n            window.addEventListener(\"mouseup\", Mx.onmouseup, false);\n            window.addEventListener(\"keydown\", Mx.onkeydown, false);\n            window.addEventListener(\"keyup\", Mx.onkeyup, false);\n            window.addEventListener(\"resize\", this.onresize, false);\n            document.addEventListener(\"mouseup\", this.docMouseUp, false);\n            mx.addEventListener(Mx, \"mouseup\", this.mouseup, false);\n            window.addEventListener(\"mousedown\", this.dragMouseDownHandler, false);\n            window.addEventListener(\"mousemove\", this.throttledDragOnMouseMove, false);\n            window.addEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n            window.addEventListener(\"wheel\", this.wheelHandler, false);\n            window.addEventListener(\"mousewheel\", this.wheelHandler, false);\n            window.addEventListener(\"DOMMouseScroll\", this.wheelHandler, false);\n            window.addEventListener(\"keypress\", this.onkeypress, false);\n        },\n\n        /**\n         * Enable listeners for events on plot\n         */\n\n        disable_listeners: function() {\n            var Mx = this._Mx;\n\n            mx.removeEventListener(Mx, \"mousedown\", this.onmousedown, false);\n            mx.removeEventListener(Mx, \"mousemove\", this.throttledOnMouseMove,\n                false);\n            mx.removeEventListener(Mx, \"mouseup\", this.mouseup, false);\n            window.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n            window.removeEventListener(\"keydown\", Mx.onkeydown, false);\n            window.removeEventListener(\"keyup\", Mx.onkeyup, false);\n            window.removeEventListener(\"resize\", this.onresize, false);\n            document.removeEventListener(\"mouseup\", this.docMouseUp, false);\n            window.removeEventListener(\"mousedown\", this.dragMouseDownHandler,\n                false);\n            window.removeEventListener(\"mousemove\", this.throttledDragOnMouseMove,\n                false);\n            window.removeEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n            window.removeEventListener(\"wheel\", this.wheelHandler, false);\n            window.removeEventListener(\"mousewheel\", this.wheelHandler, false);\n            window.removeEventListener(\"DOMMouseScroll\", this.wheelHandler, false);\n            window.removeEventListener(\"keypress\", this.onkeypress, false);\n        },\n\n        checkresize: function() {\n            if (mx.checkresize(this._Mx)) {\n                this.refresh();\n            }\n        },\n        addColorMaps: function(colormaps) {\n            colormaps.forEach(function(cmap) {\n                if (cmap.hasOwnProperty(\"name\")) {\n                    m.Mc.colormap.push(cmap);\n                }\n\n            });\n\n        },\n        _refresh: function() {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var ctx = Mx.canvas.getContext(\"2d\");\n            var plugin_index = 0;\n\n            if (Gx.hold) {\n                return;\n            }\n            var font_width = Mx.font_width;\n            if (Mx.font_scaled) {\n                font_width = Math.min(Mx.font_width, Mx.width / 64);\n            }\n            mx.set_font(Mx, font_width);\n            Gx.pthk = Mx.text_w * 1.5;\n\n            if (Gx.specs) {\n                var ytimecode = false;\n                if (Gx.ylab === 4) { //time-based tics\n                    ytimecode = true;\n                }\n                // Set left and right edges\n                if (Gx.show_y_axis === true) {\n                    Mx.l = Mx.text_w * 6;\n                    if (ytimecode) {\n                        // If we are in ytimecode, determine if we need the extra\n                        // space to hold the entire YYYY:MM:DD\n                        var need_full_ymd = ((Math.abs(Mx.stk[0].ymin) >= 31536000) ||\n                            (Math.abs(Mx.stk[0].ymax) >= 31536000));\n                        if (need_full_ymd) {\n                            Mx.l = Mx.text_w * 11;\n                        }\n                    }\n                } else {\n                    Mx.l = 1;\n                }\n                if (Gx.pan === true) {\n                    Mx.r = Mx.width - (Gx.pthk + 2 * Mx.text_w);\n                } else {\n                    Mx.r = Mx.width - 5;\n                }\n\n                // Set top and bottom\n                if (Gx.show_readout) {\n                    Mx.t = Mx.text_h * 2;\n                    if (Gx.show_x_axis) {\n                        Mx.b = Mx.height - Mx.text_h * 4;\n                    } else {\n                        Mx.b = Mx.height - Mx.text_h * 3;\n                    }\n                } else if (Gx.x_scrollbar_location === \"bottom\") {\n                    Mx.t = Mx.text_h * 2;\n                    if (Gx.pan) {\n                        if (Gx.show_x_axis) {\n                            Mx.b = Mx.height - Mx.text_h * 3;\n                        } else {\n                            Mx.b = Mx.height - Mx.text_h * 2;\n                        }\n                    } else {\n                        if (Gx.show_x_axis) {\n                            Mx.b = Mx.height - Mx.text_h * 2;\n                        } else {\n                            Mx.b = Mx.height - 5;\n                        }\n                    }\n                } else {\n                    if (Gx.pan) {\n                        Mx.t = Gx.pthk + 2 * Mx.text_w;\n                    } else {\n                        Mx.t = 1;\n                    }\n                    if (Gx.show_x_axis) {\n                        Mx.b = Mx.height - (Mx.text_h * 3) / 2;\n                    } else {\n                        Mx.b = Mx.height - 2;\n                    }\n                }\n\n                // set left and right edges for X scrollbar\n                if (Gx.show_readout) {\n                    // If there is a readout, show it in the bottom-right\n                    // next to the readout\n                    Gx.pl = Mx.text_w * 50;\n                } else {\n                    // Otherwise, by default it conforms to legacy\n                    // behaviour and renders at the top next to the label\n                    if (Gx.x_scrollbar_location === \"bottom\") {\n                        Gx.pl = Mx.l;\n                    } else {\n                        Gx.pl = Mx.text_w * 35;\n                    }\n                }\n                Gx.pr = Math.max(Gx.pl + Mx.text_w * 9, Mx.r);\n\n                // set top scrollbar edge for X scrollbar\n                if (Gx.show_readout) {\n                    if (Gx.show_x_axis) {\n                        Gx.pt = Mx.b + Mx.text_h + (Mx.height - Mx.b - Mx.text_h - Gx.pthk) / 2;\n                    } else {\n                        Gx.pt = Mx.b + (Mx.height - Mx.b - Gx.pthk) / 2;\n                    }\n                } else {\n                    // Otherwise, by default it conforms to legacy\n                    // behaviour and renders at the top\n                    if (Gx.x_scrollbar_location === \"bottom\") {\n                        if (Gx.show_x_axis) {\n                            Gx.pt = Mx.b + Mx.text_h + (Mx.height - Mx.b - Mx.text_h - Gx.pthk) / 2;\n                        } else {\n                            Gx.pt = Mx.b + (Mx.height - Mx.b - Gx.pthk) / 2;\n                        }\n                    } else {\n                        Gx.pt = (Mx.t - Gx.pthk) / 2;\n                    }\n                }\n                Gx.lbtn = Mx.text_h + Mx.text_w + 2;\n            } else {\n                if (Gx.pan) {\n                    Mx.t = Gx.pthk + 2 * Mx.text_w;\n                    Mx.r = Mx.width - (Gx.pthk + Mx.text_w);\n                } else {\n                    Mx.t = 1;\n                    Mx.r = Mx.width - 2;\n                }\n                Mx.b = Mx.height - 2;\n                Mx.l = 1;\n                Gx.pl = Mx.l;\n                Gx.pr = Mx.r;\n                Gx.pt = (Mx.t - Gx.pthk) / 2;\n                Gx.lbtn = 0;\n            }\n\n            // pan select ranges\n            Gx.pyl = Mx.r + (Mx.width - Mx.r - Gx.pthk) / 2 + 1;\n\n            if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                // Move the plot over to make room\n                var prev_Mx_r = Mx.r;\n                Mx.r = prev_Mx_r - 100;\n\n            }\n\n            if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                //turn cross hairs on\n                Gx.cross = true;\n\n                //Move the plot over to make room\n                var prev_Mx_r = Mx.r;\n                Mx.r = prev_Mx_r - 100;\n\n                //Move the plot up to make room\n                var prev_Mx_b = Mx.b;\n                Mx.b = prev_Mx_b - 100;\n            }\n\n            if (Gx.xcut_now) {\n                Mx.canvas.width = Gx.x_box_w - 1;\n                Mx.canvas.height = Gx.x_box_h;\n                Mx.r = Gx.x_box_w - 1;\n                Mx.l = 0;\n                Mx.b = Gx.x_box_h;\n                Mx.t = 0;\n            }\n\n            if (Gx.ycut_now) {\n                Mx.canvas.width = Gx.y_box_h - 1;\n                Mx.canvas.height = Gx.y_box_w;\n                Mx.r = Gx.y_box_h - 1;\n                Mx.l = 0;\n                Mx.b = Gx.y_box_w;\n                Mx.t = 0;\n            }\n\n            // set virtual window size/pos/scaling for current level\n            var k = Mx.level;\n            Mx.stk[k].x1 = Mx.l;\n            Mx.stk[k].y1 = Mx.t;\n            Mx.stk[k].x2 = Mx.r;\n            Mx.stk[k].y2 = Mx.b;\n            Mx.stk[k].xscl = (Mx.stk[k].xmax - Mx.stk[k].xmin) / (Mx.r - Mx.l);\n            Mx.stk[k].yscl = (Mx.stk[k].ymax - Mx.stk[k].ymin) / (Mx.b - Mx.t);\n\n            // In case things have rescaled\n            var re = pixel_to_real(this, Mx.xpos, Mx.ypos);\n            Gx.retx = re.x;\n            Gx.rety = re.y;\n\n            // modify stack for section plotting\n            //if (Gx.sections) {\n            // TODO\n            //}\n\n            if (Gx.panning === 0 || Gx.panning !== 0) { // TODO Gx.panning !==\n                // 0?? Does this work?\n                Gx.plotData.valid = false;\n                mx.clear_window(Mx);\n            } //else if (!Gx.specs) {\n            // TODO\n            //} else if (Gx.panning === 1) {\n            // TODO\n            //} else {\n            // TODO\n            //}\n\n            var xlab = Gx.xlab;\n            var ylab = Gx.ylab;\n\n            if (xlab === undefined) {\n                xlab = 30;\n            }\n            if (Gx.index) {\n                xlab = 0;\n            }\n\n            if (ylab === undefined) {\n                var cx = ((Gx.lyr.length > 0) && Gx.lyr[0].cx);\n                if (Gx.cmode === 1) {\n                    ylab = 28;\n                } else if (Gx.cmode === 2) {\n                    ylab = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    ylab = 21;\n                } else if (Gx.cmode === 4) {\n                    ylab = 22;\n                } else if (Gx.cmode === 5) {\n                    ylab = 22;\n                    xlab = 21;\n                } else if (Gx.cmode === 6) {\n                    ylab = 26;\n                } else if (Gx.cmode === 7) {\n                    ylab = 27;\n                } else {\n                    ylab = 0;\n                }\n            }\n\n            if (Gx.specs) {\n                if (Gx.sections === 0) {\n                    var drawaxis_flags = {\n                        grid: Gx.grid\n                    };\n                    if (Gx.panning === 2) {\n                        drawaxis_flags.noxtlab = true;\n                    } // TODO Does this work??\n                    if (!Gx.show_x_axis) {\n                        drawaxis_flags.noxtics = true;\n                        drawaxis_flags.noxtlab = true;\n                        drawaxis_flags.noxplab = true;\n                    }\n                    if (!Gx.show_y_axis) {\n                        drawaxis_flags.noytics = true;\n                        drawaxis_flags.noytlab = true;\n                        drawaxis_flags.noyplab = true;\n                    }\n                    if (Gx.specs && !Gx.show_readout && !Gx.pan) {\n                        drawaxis_flags.noyplab = true;\n                        drawaxis_flags.noxplab = true;\n                    }\n                    if (Gx.gridBackground) {\n                        drawaxis_flags.fillStyle = Gx.gridBackground;\n                    }\n                    if (Gx.gridStyle) {\n                        drawaxis_flags.gridStyle = Gx.gridStyle;\n                    }\n                    if (Gx.xmult) {\n                        drawaxis_flags.xmult = Gx.xmult;\n                    }\n                    if (Gx.ymult) {\n                        drawaxis_flags.ymult = Gx.ymult;\n                    }\n                    if (xlab === 4) { //time-based tics\n                        drawaxis_flags.xtimecode = true;\n                    }\n                    if (ylab === 4) { //time-based tics\n                        drawaxis_flags.ytimecode = true;\n                    }\n                    if (Gx.xlabel !== undefined) {\n                        drawaxis_flags.xlabel = Gx.xlabel;\n                    }\n                    if (Gx.ylabel !== undefined) {\n                        drawaxis_flags.ylabel = Gx.ylabel;\n                    }\n                    mx.drawaxis(Gx, Mx, Gx.xdiv, Gx.ydiv, xlab, ylab, drawaxis_flags);\n                } //else {\n                // Not implemented yet\n                //}\n\n                var i = Gx.lbtn - 2;\n\n                if (Gx.show_readout && Gx.pan && !Gx.no_legend_button) {\n                    if (Gx.legend) {\n                        Gx.legendBtnLocation = {\n                            x: Mx.width - Gx.lbtn,\n                            y: 2,\n                            width: i,\n                            height: i\n                        };\n                        mx.shadowbox(Mx, Mx.width - Gx.lbtn, 2, i, i, 1, -2,\n                            'L');\n                    } else {\n                        Gx.legendBtnLocation = {\n                            x: Mx.width - Gx.lbtn,\n                            y: 2,\n                            width: i,\n                            height: i\n                        };\n                        mx.shadowbox(Mx, Mx.width - Gx.lbtn, 2, i, i, 1,\n                            2, 'L');\n                    }\n                    display_specs(this);\n                } else {\n                    Gx.legendBtnLocation = null;\n                }\n            } else if (Gx.grid && Gx.sections >= 0) {\n                var drawaxis_flags = {\n                    grid: true,\n                    noaxisbox: true,\n                    noxtics: true,\n                    noxtlab: true,\n                    noxplab: true,\n                    noytics: true,\n                    noytlab: true,\n                    noyplab: true\n                };\n                mx.drawaxis(Gx, Mx, Gx.xdiv, Gx.ydiv, xlab, ylab,\n                    drawaxis_flags);\n            }\n\n            draw_layers(this);\n\n            draw_accessories(this, 4);\n\n\n\n            draw_plugins(this);\n\n\n            Gx.cross_xpos = undefined;\n            Gx.cross_ypos = undefined;\n            if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                draw_crosshairs(this);\n                if (!Gx.y_cut_press_on && !Gx.x_cut_press_on && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                    draw_p_cuts(this);\n                }\n            }\n\n            if (Gx.always_show_marker || Gx.show_marker) {\n                draw_marker(this);\n            }\n        }\n\n    };\n\n    // /////////////////////////////////////////////////////////////////////////\n    // Private methods and objects\n    // /////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Map integer cmode to string equivalent.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var cxm = [\"Ma\", \"Ph\", \"Re\", \"Im\", \"IR\", \"Lo\", \"L2\"];\n\n    /**\n     * Map integer abscissa mode to string equivalent.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var cam = [\"(absc)\", \"(indx)\", \"(1/ab)\", \"(dydx)\"];\n\n\n\n    /**\n     * This object holds the data associated with layers in the plot.\n     *\n     * @constructor\n     * @memberOf sigplot\n     * @private\n     */\n    function SIGPLOTLAYER() {\n\n        this.xbuf = undefined; // raw (ArrayBuffer) of ABSC data\n        this.ybuf = undefined; // raw (ArrayBuffer) of ORD data\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n        // xbufn = xbuf.byteLength\n        // ybufn = ybuf.byteLength\n        this.size = 0;\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n\n        this.options = {};\n    }\n\n    /**\n     * The graphics structure object used to hold state about the plot.\n     *\n     * @constructor\n     * @memberOf sigplot\n     * @private\n     */\n    function GX() {\n        this.xptr = undefined; // xpoints as anything \"array-like\"...\n        this.yptr = undefined; // ypoints as anything \"array-like\"...\n\n        this.retx = 0.0; // absc coord. at mouse location\n        this.rety = 0.0;\n        this.xmrk = 0.0; // absc coord of mark\n        this.ymrk = 0.0;\n        this.aretx = 0.0; // absc coord. at mouse location\n        this.arety = 0.0;\n\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n\n        this.panxmin = 0.0;\n        this.panxmax = 0.0;\n        this.panymin = 0.0;\n        this.panymax = 0.0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.xmult = undefined;\n        this.ymin = 0.0;\n        this.ymax = 0.0;\n        this.ymult = undefined;\n        this.zmin = undefined;\n        this.zmax = undefined;\n        this.zoff = 0;\n        this.dbmin = 0.0;\n        this.pxscl = 0.0;\n        this.pyscl = 0.0;\n        this.pmt = 0.0;\n\n        this.note = \"\";\n        // this.mouse unnecssary because we don't have res table\n        this.format = \"\";\n\n        this.pl = 0;\n        this.pr = 0;\n        this.pt = 0;\n        this.pb = 0;\n        this.px1 = 0; // specifies plotting field\n        this.px2 = 0;\n        this.py1 = 0;\n        this.py2 = 0;\n\n        this.pyl = 0;\n        this.pthk = 0; // thickness of pan drag box\n\n        this.modlayer = 0;\n        this.modsource = 0;\n        this.modified = false;\n        this.modmode = 0;\n\n        this.xdiv = 0;\n        this.ydiv = 0;\n\n        this.all = false;\n        this.expand = false;\n        this.cross = false;\n        this.grid = true;\n        this.gridBackground = undefined;\n        this.index = false;\n        this.pan = true;\n        this.specs = true;\n        this.legend = true;\n        this.xdata = false;\n\n        this.show_x_axis = true;\n        this.show_y_axis = true;\n        this.show_readout = true;\n        this.hide_note = false;\n        this.autohide_readout = false;\n        this.autohide_panbars = false;\n        this.panning = undefined;\n        this.panmode = 0; // TODO Is this a good default value? Where is this\n        // changed?\n        this.hold = false;\n\n        this.sections = 0; // number of plot sections, -1 for layers\n        this.iysec = 0;\n        this.nsec = 0; // actual number of sections\n        this.isec = 0; // current sections\n\n        this.xlab = undefined;\n        this.xlabel = undefined;\n        this.ylab = undefined;\n        this.ylabel = undefined;\n\n        // 0 - use HTML5 canvas smoothing\n        // 1 - average\n        // 2 - min\n        // 3 - max\n        // 4 - first\n        // 5 - max abs\n        this.xcompression = 0;\n\n        this.default_rubberbox_action = \"zoom\";\n        this.default_rubberbox_mode = \"box\";\n\n        this.wheelscroll_mode_natural = true;\n        this.scroll_time_interval = 10;\n\n        this.repeatPanning = undefined;\n        this.stillPanning = undefined; // TODO maybe merge this variable with\n        // Gx.panning in future?\n\n        this.autol = -1;\n\n        this.lineSmoothing = false; // not implemented\n        this.rasterSmoothing = false;\n\n        this.wheelZoom = false;\n        this.wheelZoomPercent = 0.2;\n        this.inContinuousZoom = false;\n\n        this.lyr = [];\n        this.HCB = [];\n        this.plugins = [];\n\n        this.plotData = document.createElement(\"canvas\");\n        this.plotData.valid = false;\n\n        // Large colorbar info, like button locations\n        this.lg_colorbar = false;\n\n        // Colorbar button top or bottom positions\n        this.cbb_top_x1 = 0;\n        this.cbb_top_y1 = 0;\n        this.cbb_bot_x1 = 0;\n        this.cbb_bot_y1 = 0;\n        this.cbb_width = 0;\n        this.cbb_height = 0;\n\n        //P_cuts info\n        this.p_cuts = false;\n        this.x_box_x = 0;\n        this.x_box_y = 0;\n        this.x_box_h = 0;\n        this.x_box_w = 0;\n        this.y_box_x = 0;\n        this.y_box_y = 0;\n        this.y_box_h = 0;\n        this.y_box_w = 0;\n        this.p_cuts_xpos = undefined;\n        this.p_cuts_ypos = undefined;\n        this.x_cut_data = [];\n        this.y_cut_data = [];\n        //the plot to hold the x-cut on bottom\n        this.xcut = undefined;\n        //layer xcut that will be displayed on pop-up\n        this.xcut_layer = undefined;\n        this.x_cut_press_on = false;\n        //variable that is true if the bottom xcut is being drawn\n        this.xcut_now = false;\n        //the plot to hold the y-cut\n        this.ycut = undefined;\n        //layer ycut that will be displayed on pop-up\n        this.ycut_layer = undefined;\n        this.y_cut_press_on = false;\n        //variable that is true if the ycut is being drawn\n        this.ycut_now = false;\n        this.ylabel_stash = undefined;\n        this.xlabel_stash = undefined;\n        //div to hold x-cut\n        this.element1 = undefined;\n        //div to hold y cut\n        this.element2 = undefined;\n\n        //x and y sticky key configuration (\"automatic\" displays point on\n        //1D and cut on 2D, \"disable\" doesn't display anything, \"pop-up\"\n        //displays point on both, and \"cuts\" displays only cuts on 2D)\n        this.xyKeys = \"automatic\";\n        //true if the x value is being displayed on plot\n        this.x_pop_now = false;\n        //true if the y value is being displayed on plot\n        this.y_pop_now = false;\n\n        //the drawmode and autol before the x or y cut was showing\n        this.old_drawmode = undefined;\n        this.old_autol = undefined;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function setup_cmap(plot, cmap) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        // If a color map array was provided make a custom map\n        if (Array.isArray(cmap)) {\n            var custom_cmap = {\n                name: \"Custom\",\n                colors: cmap\n            };\n            if (m.Mc.colormap[m.Mc.colormap.length - 1].name === \"Custom\") {\n                m.Mc.colormap[m.Mc.colormap.length - 1].colors = cmap;\n            } else {\n                m.Mc.colormap.push(custom_cmap);\n            }\n            Gx.cmap = m.Mc.colormap.length - 1;\n        } else if (typeof cmap === \"string\") {\n            Gx.cmap = -1;\n            for (var xc = 0; xc < m.Mc.colormap.length; xc++) {\n                if (m.Mc.colormap[xc].name === cmap) {\n                    Gx.cmap = xc;\n                    break;\n                }\n            }\n        } else {\n            Gx.cmap = cmap;\n        }\n\n        if (Gx.ncolors < 0) {\n            Gx.ncolors = -1 * Gx.ncolors;\n            Gx.cmap = Math.max(1, Gx.cmap);\n        }\n        if ((Gx.cmap < 0) || (Gx.cmap > m.Mc.colormap.length)) {\n            if (Gx.cmode === 2) {\n                Gx.cmap = 2; // wheel\n            } else {\n                Gx.cmap = 1; // ramp\n            }\n        }\n\n        mx.colormap(Mx, m.Mc.colormap[Gx.cmap].colors, Gx.ncolors);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_x(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ls = Gx.aretx.toString();\n        if (Gx.iabsc === 1) {\n            mx.message(Mx, \"INDEX = \" + ls);\n        } else if (Gx.iabsc === 2) {\n            mx.message(Mx, \"1/X = \" + ls);\n        } else {\n            //if (Gx.xlab === 4) {\n            // TODO\n            //}\n            mx.message(Mx, \"X = \" + ls);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_timecode(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.lyr.length > 0) {\n            //var hcb = Gx.HCB[Gx.lyr[0].hcb];\n            var hcb = Gx.lyr[0].hcb; // mmm-TODO-needs investigation\n            if ((hcb[\"class\"] === 1) && ((hcb.xunits === 1) || (hcb.xunits === 4))) {\n                mx.message(Mx, \"Time = \" + m.sec2tod(hcb.timecode + Gx.retx), true);\n            } else if ((hcb[\"class\"] === 2) && ((hcb.yunits === 1) || (hcb.yunits === 4))) {\n                mx.message(Mx, \"Time = \" + m.sec2tod(hcb.timecode + Gx.rety), true);\n            } else {\n                mx.message(Mx, \"Time = UNK\");\n            }\n\n        }\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_y(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ls = Gx.arety.toString();\n        if (Gx.iabsc === 2) {\n            mx.message(Mx, \"1/Y = \" + ls);\n        } else {\n            //if (Gx.xlab === 4) {\n            // TODO\n            //}\n            mx.message(Mx, \"Y = \" + ls);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_z(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.zmin && Gx.zmax) { // at least one layer has a z dimension\n            var msg = \"\";\n            if (Gx.lyr.length === 1) {\n                var msg = \"Z = \" + Gx.lyr[0].get_z(Gx.retx, Gx.rety).toString();\n            } else {\n                var msg = \"TODO\"; // TODO we need to think of what we want to display here\n            }\n            mx.message(Mx, msg);\n        }\n    }\n\n    /**\n     * Constructs a menu for updating the pan scale of the plot.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param command\n     *            The scroll direction to use. Either \"XPAN\" or \"YPAN\" are\n     *            acceptable.\n     * @private\n     */\n    function sigplot_scrollScaleMenu(plot, command) {\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        mx.menu(Mx, {\n            title: \"SCROLLBAR\",\n            refresh: function() {\n                plot.refresh();\n            },\n            finalize: function() {\n                mx.addEventListener(Mx, \"mousedown\",\n                    plot.onmousedown, false);\n                plot.refresh();\n            },\n            items: [{\n                text: \"Expand Range\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_EXPAND, command);\n                }\n            }, {\n                text: \"Shrink Range\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_SHRINK, command);\n                }\n            }, {\n                text: \"Expand Full\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_FULL, command);\n                }\n            }]\n        });\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_mainmenu(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        // show mainmenu\n        //\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        // Sub-menus\n        var CONTROLS_MENU = {\n            text: \"Cntrls...\",\n            menu: {\n                title: \"CONTROLS OPTIONS\",\n                items: [{\n                    text: \"Continuous (Disabled)\",\n                    checked: Gx.cntrls === -2,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: -2\n                        });\n                    }\n                }, {\n                    text: \"LM Click (Disabled)\",\n                    checked: Gx.cntrls === -1,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: -1\n                        });\n                    }\n                }, {\n                    text: \"Off\",\n                    checked: Gx.cntrls === 0,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 0\n                        });\n                    }\n                }, {\n                    text: \"LM Click\",\n                    checked: Gx.cntrls === 1,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 1\n                        });\n                    }\n                }, {\n                    text: \"Continuous\",\n                    checked: Gx.cntrls === 2,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 2\n                        });\n                    }\n                }]\n            }\n        };\n\n        var CXMODE_MENU = {\n            text: \"CX Mode...\",\n            menu: {\n                title: \"COMPLEX MODE\",\n                items: [{\n                    text: \"Magnitude\",\n                    checked: Gx.cmode === 1,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 1\n                        });\n                    }\n                }, {\n                    text: \"Phase\",\n                    checked: Gx.cmode === 2,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 2\n                        });\n                    }\n                }, {\n                    text: \"Real\",\n                    checked: Gx.cmode === 3,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 3\n                        });\n                    }\n                }, {\n                    text: \"Imaginary\",\n                    checked: Gx.cmode === 4,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 4\n                        });\n                    }\n                }, {\n                    text: \"IR: Imag/Real\",\n                    checked: Gx.cmode === 5,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 5\n                        });\n                    }\n                }, {\n                    text: \"10*Log10\",\n                    checked: Gx.cmode === 6,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 6\n                        });\n                    }\n                }, {\n                    text: \"20*Log10\",\n                    checked: Gx.cmode === 7,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 7\n                        });\n                    }\n                }]\n            }\n        };\n\n        var SCALING_MENU = {\n            text: \"Scaling...\",\n            menu: {\n                title: \"SCALING\",\n                items: [{\n                    text: \"Y Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autoy === 0),\n                    handler: function() {\n                        Gx.autoy = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"Y Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Mx.stk[Mx.level].ymax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        updateViewbox(\n                                            plot,\n                                            Mx.stk[Mx.level].ymin,\n                                            parseFloat(finalValue),\n                                            \"Y\");\n                                    } else {\n                                        plot.refresh();\n                                    }\n                                }, Mx.stk[Mx.level].ymax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Mx.stk[Mx.level].ymin) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    updateViewbox(plot,\n                                        parseFloat(finalValue),\n                                        Mx.stk[Mx.level].ymax,\n                                        \"Y\");\n                                } else {\n                                    plot.refresh();\n                                }\n\n                            }, Mx.stk[Mx.level].ymin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autoy === 1),\n                    handler: function() {\n                        Gx.autoy = 1;\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autoy === 2),\n                    handler: function() {\n                        Gx.autoy = 2;\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autoy === 3),\n                    handler: function() {\n                        Gx.autoy = 3;\n                    }\n                }, {\n                    text: \"X Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autox === 0),\n                    handler: function() {\n                        Gx.autox = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"X Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Mx.stk[Mx.level].xmax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        updateViewbox(\n                                            plot,\n                                            Mx.stk[Mx.level].xmin,\n                                            parseFloat(finalValue),\n                                            \"X\");\n                                    } else {\n                                        plot.refresh();\n                                    }\n                                }, Mx.stk[Mx.level].xmax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Mx.stk[Mx.level].xmin) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    updateViewbox(plot,\n                                        parseFloat(finalValue),\n                                        Mx.stk[Mx.level].xmax,\n                                        \"X\");\n                                } else {\n                                    plot.refresh();\n                                }\n                            }, Mx.stk[Mx.level].xmin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autox === 1),\n                    handler: function() {\n                        Gx.autox = 1;\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autox === 2),\n                    handler: function() {\n                        Gx.autox = 2;\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autox === 3),\n                    handler: function() {\n                        Gx.autox = 3;\n                    }\n                }, {\n                    text: \"Z Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autoz === 0),\n                    handler: function() {\n                        Gx.autoz = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"Z Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Gx.zmax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        plot.change_settings({\n                                            zmax: finalValue\n                                        });\n                                    }\n                                }, Gx.zmax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Z Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.zmin) {\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    plot.change_settings({\n                                        zmin: finalValue\n                                    });\n                                }\n                            }, Gx.zmin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autoz === 1),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 1\n                        });\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autoz === 2),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 2\n                        });\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autoz === 3),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 3\n                        });\n                    }\n                }]\n            }\n        };\n\n        var GRID_MENU = {\n            text: \"Grid\",\n            handler: function() {\n                plot.change_settings({\n                    grid: !Gx.grid\n                });\n            }\n        };\n\n        var SETTINGS_MENU = {\n            text: \"Settings...\",\n            menu: {\n                title: \"SETTINGS\",\n                items: [{\n                    text: \"ALL Mode\",\n                    checked: Gx.all,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            all: !Gx.all\n                        });\n                    }\n                }, {\n                    text: \"Controls...\",\n                    menu: {\n                        title: \"CONTROLS OPTIONS\",\n                        items: [{\n                            text: \"Continuous (Disabled)\",\n                            checked: Gx.cntrls === -2,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: -2\n                                });\n                            }\n                        }, {\n                            text: \"LM Click (Disabled)\",\n                            checked: Gx.cntrls === -1,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: -1\n                                });\n                            }\n                        }, {\n                            text: \"Off\",\n                            checked: Gx.cntrls === 0,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 0\n                                });\n                            }\n                        }, {\n                            text: \"LM Click\",\n                            checked: Gx.cntrls === 1,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 1\n                                });\n                            }\n                        }, {\n                            text: \"Continuous\",\n                            checked: Gx.cntrls === 2,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 2\n                                });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Mouse...\",\n                    menu: {\n                        title: \"MOUSE OPTIONS\",\n                        items: [{\n                            text: \"LM Drag (Zoom)\",\n                            checked: Gx.default_rubberbox_action === \"zoom\",\n                            handler: function() {\n                                Gx.default_rubberbox_action = \"zoom\";\n                            }\n                        }, {\n                            text: \"LM Drag (Select)\",\n                            checked: Gx.default_rubberbox_action === \"select\",\n                            handler: function() {\n                                Gx.default_rubberbox_action = \"select\";\n                            }\n                        }, {\n                            text: \"LM Drag (Disabled)\",\n                            checked: Gx.default_rubberbox_action === null,\n                            handler: function() {\n                                Gx.default_rubberbox_action = null;\n                            }\n                        }, {\n                            text: \"RM Drag (Zoom)\",\n                            checked: Gx.default_rightclick_rubberbox_action === \"zoom\",\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = \"zoom\";\n                            }\n                        }, {\n                            text: \"RM Drag (Select)\",\n                            checked: Gx.default_rightclick_rubberbox_action === \"select\",\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = \"select\";\n                            }\n                        }, {\n                            text: \"RM Drag (Disabled)\",\n                            checked: Gx.default_rightclick_rubberbox_action === null,\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = null;\n                            }\n                        }, {\n                            text: \"Mode...\",\n                            menu: {\n                                title: \"MOUSE Mode\",\n                                items: [{\n                                    text: \"Box\",\n                                    checked: Gx.default_rubberbox_mode === \"box\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"box\";\n                                    }\n\n                                }, {\n                                    text: \"Horizontal\",\n                                    checked: Gx.default_rubberbox_mode === \"horizontal\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"horizontal\";\n                                    }\n                                }, {\n                                    text: \"Vertical\",\n                                    checked: Gx.default_rubberbox_mode === \"vertical\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"vertical\";\n                                    }\n                                }]\n                            }\n                        }, {\n                            text: \"CROSShairs...\",\n                            menu: {\n                                title: \"Crosshairs Mode\",\n                                items: [{\n                                    text: \"Off\",\n                                    checked: !Gx.cross,\n                                    handler: function() {\n                                        Gx.cross = false;\n                                    }\n\n                                }, {\n                                    text: \"On\",\n                                    checked: Gx.cross === true,\n                                    handler: function() {\n                                        Gx.cross = true;\n                                    }\n                                }, {\n                                    text: \"Horizontal\",\n                                    checked: Gx.cross === \"horizontal\",\n                                    handler: function() {\n                                        Gx.cross = \"horizontal\";\n                                    }\n                                }, {\n                                    text: \"Vertical\",\n                                    checked: Gx.cross === \"vertical\",\n                                    handler: function() {\n                                        Gx.cross = \"vertical\";\n                                    }\n                                }]\n                            }\n                        }, {\n                            text: \"Mousewheel Natural Mode\",\n                            checked: Gx.wheelscroll_mode_natural,\n                            style: \"checkbox\",\n                            handler: function() {\n                                plot\n                                    .change_settings({\n                                        wheelscroll_mode_natural: !Gx.wheelscroll_mode_natural\n                                    });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"CROSShairs\",\n                    checked: Gx.cross,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            cross: !Gx.cross\n                        });\n                    }\n                }, {\n                    text: \"GRID\",\n                    checked: Gx.grid,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            grid: !Gx.grid\n                        });\n                    }\n                }, {\n                    text: \"INDEX Mode\",\n                    checked: Gx.index,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            index: !Gx.index\n                        });\n                    }\n                }, {\n                    text: \"LEGEND\",\n                    checked: Gx.legend,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            legend: !Gx.legend\n                        });\n                    }\n                }, {\n                    text: \"PAN Scrollbars\",\n                    checked: Gx.pan,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            pan: !Gx.pan\n                        });\n                    }\n                }, {\n                    text: \"PHase UNITS...\",\n                    menu: {\n                        title: \"PHASE UNITS\",\n                        items: [{\n                            text: \"Radians\",\n                            checked: Gx.plab === 23,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'R'\n                                });\n                            }\n\n                        }, {\n                            text: \"Degrees\",\n                            checked: Gx.plab === 24,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'D'\n                                });\n                            }\n                        }, {\n                            text: \"Cycles\",\n                            checked: Gx.plab === 25,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'C'\n                                });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"SPECS\",\n                    checked: Gx.specs,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            specs: !Gx.specs\n                        });\n                    }\n                }, {\n                    text: \"P-Cuts\",\n                    checked: Gx.p_cuts,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            p_cuts: !Gx.p_cuts\n                        });\n                    }\n                }, {\n                    text: \"Large Colorbar\",\n                    checked: Gx.lg_colorbar,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            lg_colorbar: !Gx.lg_colorbar\n                        });\n                    }\n                }, {\n                    text: \"XDIVisions...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            var maxXDIV = m.trunc(Mx.width / 2); // TODO\n                            // Make value an option on the plot?\n                            // Maybe still a little too high\n                            // while dotted-line grids are\n                            // being drawn?\n                            if (isValid.valid && value > maxXDIV) {\n                                return {\n                                    valid: false,\n                                    reason: \"Exceeds maximum number of divisions (\" + maxXDIV + \").\"\n                                };\n                            } else {\n                                return isValid;\n                            }\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Divisions:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.xdiv) { // Only\n                                    // update if different value\n                                    if (finalValue === \"\") {\n                                        finalValue = 1;\n                                    }\n                                    Gx.xdiv = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.xdiv, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"XLABel...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            console.log(\"The value is \" + value);\n                            var isValid = mx.intValidator(value);\n                            return isValid;\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Units:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.xlab) { // Only\n                                    // update if different value\n                                    if (finalValue < 0) {\n                                        finalValue = 0;\n                                    }\n                                    Gx.xlab = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.xlab, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"YDIVisions...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            var maxYDIV = m.trunc(Mx.height / 2); // TODO\n                            // Make value an option on the plot?\n                            // Maybe still a little too high\n                            // while dotted-line grids are\n                            // being drawn?\n                            if (isValid.valid && value > maxYDIV) {\n                                return {\n                                    valid: false,\n                                    reason: \"Exceeds maximum number of divisions (\" + maxYDIV + \").\"\n                                };\n                            } else {\n                                return isValid;\n                            }\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Divisions:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.ydiv) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 1;\n                                    }\n                                    Gx.ydiv = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.ydiv, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"YINVersion\",\n                    checked: (Mx.origin === 4),\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            yinv: (Mx.origin !== 4)\n                        });\n                    }\n                }, {\n                    text: \"YLABel...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            return isValid;\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Units:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.ylab) { // Only\n                                    // update if different value\n                                    if (finalValue < 0) {\n                                        finalValue = 0;\n                                    }\n                                    Gx.ylab = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.ylab, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"X-axis\",\n                    checked: Gx.show_x_axis,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_x_axis: !Gx.show_x_axis\n                        });\n                    }\n                }, {\n                    text: \"Y-axis\",\n                    checked: Gx.show_y_axis,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_y_axis: !Gx.show_y_axis\n                        });\n                    }\n                }, {\n                    text: \"Readout\",\n                    checked: Gx.show_readout,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_readout: !Gx.show_readout\n                        });\n                    }\n                }, {\n                    text: \"Invert Colors\",\n                    checked: Mx.xi,\n                    style: \"checkbox\",\n                    handler: function() {\n                        mx.invertbgfg(Mx);\n                    }\n                }]\n            }\n        };\n\n        var COLORMAP_MENU = {\n            text: \"Colormap...\",\n            menu: {\n                title: \"COLORMAP\",\n                items: []\n            }\n        };\n\n        var colormap_handler = function(item) {\n            plot.change_settings({\n                cmap: this.cmap\n            });\n        };\n\n        for (var xc = 0; xc < m.Mc.colormap.length; xc++) {\n            var menuitem = {\n                text: m.Mc.colormap[xc].name,\n                cmap: xc,\n                checked: (Gx.cmap === xc),\n                handler: colormap_handler\n            };\n            COLORMAP_MENU.menu.items.push(menuitem);\n        }\n\n        var traceoptionsmenu = function(index) {\n            return {\n                title: \"TRACE OPTIONS\",\n                items: [{\n                    text: \"Dashed...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var thk = 1;\n                        if (index !== undefined) {\n                            thk = Math.abs(plot._Gx.lyr[index].thick);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n\n                            thk = Math.abs(plot._Gx.lyr[0].thick);\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                                    thk = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Line thickness:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                    plot._Gx.lyr[index].thick = -1 * finalValue;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                        plot._Gx.lyr[ii].line = 3;\n                                        plot._Gx.lyr[ii].thick = -1 * finalValue;\n                                        plot._Gx.lyr[ii].symbol = 0;\n                                    }\n                                }\n                            }, thk);\n                    }\n                }, {\n                    text: \"Colors...\",\n                    menu: {\n                        title: \"COLORS\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"Red\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"red\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"red\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"red\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Pink\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"pink\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"pink\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"pink\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Hot Pink\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#ff009e\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"#ff009e\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"#ff009e\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Orange\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"orange\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"orange\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"orange\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Yellow\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"yellow\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"yellow\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"yellow\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Lime Green\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#80f741\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"#80f741\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"#80f741\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Green\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"green\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"green\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"green\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Blue\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"blue\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"blue\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"blue\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Purple\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"purple\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"purple\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"purple\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Custom Hexcode\",\n                            handler: function() {\n                                setupPrompt(\n                                    plot,\n                                    \"Color code (requires #):\",\n                                    mx.hexValidator,\n                                    function(finalValue) {\n                                        if (index !== undefined) {\n                                            plot._Gx.lyr[index].color = finalValue;\n                                        } else {\n                                            for (var ii = 0; ii < Gx.lyr.length; index++) {\n                                                plot._Gx.lyr[ii].color = finalValue;\n                                            }\n                                        }\n                                    }, undefined, undefined, undefined, undefined);\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Dots...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var radius = 3;\n                        if (index !== undefined) {\n                            radius = Math.abs(plot._Gx.lyr[index].radius);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                if (radius !== Math.abs(plot._Gx.lyr[i].radius)) {\n                                    radius = 3;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Radius/Shape:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                var sym;\n                                var rad;\n                                if (finalValue < 0) {\n                                    sym = 3; // square\n                                    rad = Math.abs(finalValue);\n                                } else if (finalValue > 0) {\n                                    sym = 2; // circle\n                                    rad = finalValue;\n                                } else {\n                                    sym = 1;\n                                    rad = 0;\n                                }\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                    plot._Gx.lyr[index].radius = rad;\n                                    plot._Gx.lyr[index].symbol = sym;\n                                } else {\n                                    var i;\n                                    for (i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                        plot._Gx.lyr[i].radius = rad;\n                                        plot._Gx.lyr[i].symbol = sym;\n                                    }\n                                }\n                            }, radius);\n                    }\n                }, {\n                    text: \"Radius...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var radius = 3;\n                        if (index !== undefined) {\n                            radius = Math.abs(plot._Gx.lyr[index].radius);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                if (radius !== Math.abs(plot._Gx.lyr[i].radius)) {\n                                    radius = 3;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Radius:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                var sym;\n                                var rad;\n                                if (finalValue < 0) {\n                                    rad = Math.abs(finalValue);\n                                } else if (finalValue > 0) {\n                                    rad = finalValue;\n                                } else {\n                                    sym = 1;\n                                    rad = 0;\n                                }\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                    plot._Gx.lyr[index].radius = rad;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                        plot._Gx.lyr[i].radius = rad;\n                                    }\n                                }\n                            }, radius);\n                    }\n                }, {\n                    text: \"Solid...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var thk = 1;\n                        if (index !== undefined) {\n                            thk = Math.abs(plot._Gx.lyr[index].thick);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n\n                            thk = Math.abs(plot._Gx.lyr[0].thick);\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                                    thk = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Line thickness:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                    plot._Gx.lyr[index].thick = finalValue;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    var i;\n                                    for (i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 3;\n                                        plot._Gx.lyr[i].thick = finalValue;\n                                        plot._Gx.lyr[i].symbol = 0;\n                                    }\n                                }\n                            }, thk);\n                    }\n                }, {\n                    text: \"Toggle\",\n                    style: (index !== undefined) ? \"checkbox\" : undefined,\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].display : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].display = !plot._Gx.lyr[index].display;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].display = !plot._Gx.lyr[i].display;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Symbols...\",\n                    menu: {\n                        title: \"SYMBOLS\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"None\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 0;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 0;\n                                        plot._Gx.lyr[i].symbol = 0;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Pixels\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 1;\n                                    plot._Gx.lyr[index].symbol = 1;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 1;\n                                        plot._Gx.lyr[i].symbol = 1;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Circles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 2;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 2;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Squares\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 3;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 3;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Plusses\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 4 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 4;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 4;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"X's\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 5 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 5;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 5;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Triangles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 6 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 6;\n                                    plot._Gx.lyr[index].symbol = 6;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 6;\n                                        plot._Gx.lyr[i].symbol = 6;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Downward Triangles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 7 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 6;\n                                    plot._Gx.lyr[index].symbol = 7;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 6;\n                                        plot._Gx.lyr[i].symbol = 7;\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Line Type...\",\n                    menu: {\n                        title: \"LINE TYPE\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"None\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Verticals\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 1;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 1;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Horizontals\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 2;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 2;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Connecting\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 3;\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Thickness...\",\n                    handler: function() {\n                        var thickness = 1;\n                        if (index !== undefined) {\n                            thickness = plot._Gx.lyr[index].thick;\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Thickness\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (finalValue === \"\") {\n                                    finalValue = 1;\n                                }\n                                finalValue = Math.max(0, finalValue);\n\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].thick = finalValue;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].thick = finalValue;\n                                    }\n                                }\n                            }, thickness, undefined,\n                            undefined, undefined);\n                    }\n                }, {\n                    text: \"Opacity...\",\n                    handler: function() {\n                        var opacity = 1.0;\n                        if (index !== undefined) {\n                            opacity = plot._Gx.lyr[index].opacity;\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Opacity:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (finalValue === \"\") {\n                                    finalValue = 1.0;\n                                }\n                                finalValue = Math.max(0, finalValue);\n                                finalValue = Math.min(1, finalValue);\n\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].opacity = finalValue;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].opacity = finalValue;\n                                    }\n                                }\n                            }, opacity, undefined,\n                            undefined, undefined);\n                    }\n                }]\n            };\n        };\n\n        var VIEW_MENU = {\n            text: \"View...\",\n            menu: {\n                title: \"VIEW\",\n                items: [{\n                    text: \"Reset\",\n                    handler: function() {\n                        plot.unzoom();\n                    }\n                }, {\n                    text: \"Y Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Expand Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_EXPAND, \"YPAN\");\n                    }\n                }, {\n                    text: \"Shrink Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_SHRINK, \"YPAN\");\n                    }\n                }, {\n                    text: \"Expand Full\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_FULL, \"YPAN\");\n                    }\n                }, {\n                    text: \"X Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Expand Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_EXPAND, \"XPAN\");\n                    }\n                }, {\n                    text: \"Shrink Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_SHRINK, \"XPAN\");\n                    }\n                }, {\n                    text: \"Expand Full\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_FULL, \"XPAN\");\n                    }\n                }]\n            }\n        };\n\n        var TRACES_MENU = {\n            text: \"Traces...\",\n            menu: function() {\n                var Gx = plot._Gx;\n                var tracemenu = {\n                    title: \"TRACE\",\n                    items: []\n                };\n                // Add the ALL option\n                tracemenu.items.push({\n                    text: \"All\",\n                    menu: traceoptionsmenu()\n                });\n                // Add all the active layers\n                for (var i = 0; i < Gx.lyr.length; i++) {\n                    tracemenu.items.push({\n                        text: Gx.lyr[i].name,\n                        menu: traceoptionsmenu(i)\n                    });\n                }\n                return tracemenu;\n            }\n        };\n\n        var FILES_MENU = {\n            text: \"Files...\",\n            menu: {\n                title: \"FILES OPTIONS\",\n                items: [\n                    // Overlay File... is disabled\n                    // because it's actually very\n                    // difficult to bring up a\n                    // a file upload browse dialog\n                    /*\n                     * { text: \"Overlay File...\", handler: function() {\n                     * plot.change_settings( {phunits: 'R'} ); } },\n                     */\n                    {\n                        text: \"Deoverlay File...\",\n                        menu: function() {\n                            var Gx = plot._Gx;\n                            var deoverlaymenu = {\n                                title: \"DEOVERLAY\",\n                                items: []\n                            };\n                            deoverlaymenu.items.push({\n                                text: \"Deoverlay All\",\n                                handler: function() {\n                                    plot.deoverlay();\n                                }\n                            });\n                            /* jshint -W083 */\n                            /* TODO figure out how to not create functions within a loop */\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                var handler = (function(index) {\n                                    return function() {\n                                        plot.deoverlay(index);\n                                    };\n                                }(i));\n\n                                deoverlaymenu.items.push({\n                                    text: Gx.lyr[i].name,\n                                    handler: handler\n                                });\n                            }\n                            /* jshint +W083 */\n                            return deoverlaymenu;\n                        }\n                    }\n                ]\n            }\n        };\n\n        var PLUGINS_MENU = {\n            text: \"Plugins...\",\n            menu: {\n                title: \"PLUGINS\",\n                items: (function() { // Immediately\n                    // Invoked\n                    // Function\n                    var result = [];\n                    for (var i = 0; i < Gx.plugins.length; i++) {\n                        var plugin = Gx.plugins[i];\n                        if (plugin.impl.menu) {\n                            if (typeof plugin.impl.menu === 'function') {\n                                result.push(plugin.impl.menu());\n                            } else {\n                                result.push(plugin.impl.menu);\n                            }\n                        }\n                    }\n                    return result;\n                }())\n            }\n        };\n\n        var SAVE_MENU = {\n            text: \"Save as...\",\n            menu: {\n                title: \"SAVE AS\",\n                items: [{\n                    text: \"PNG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/png\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".png\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }, {\n                    text: \"JPG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/jpg\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".jpg\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }, {\n                    text: \"SVG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/svg\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".svg\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }]\n            }\n        };\n\n        var REFRESH_ITEM = {\n            text: \"Refresh\"\n            // no handler, just let the finalizer deal with it\n        };\n\n        var KEYPRESSINFO_ITEM = {\n            text: \"Keypress Info\",\n            handler: function() {\n                mx.message(Mx, KEYPRESS_HELP);\n            }\n        };\n\n        var EXIT_ITEM = {\n            text: \"Exit\",\n            handler: function() {\n                var evt = document.createEvent('Event');\n                evt.initEvent('sigplotexit', true, true);\n                mx.dispatchEvent(Mx, evt);\n            }\n        };\n\n        // Main Menu\n        var MAINMENU = {\n            title: \"SIG-PLOT\",\n            finalize: function() {\n                if (!Mx.prompt) {\n                    // A prompt may have been\n                    // created by a menu handler\n                    // - let it deal with\n                    // eventListener re-setting\n                    mx.addEventListener(Mx, \"mousedown\", plot.onmousedown,\n                        false);\n                }\n                plot.refresh();\n            },\n            items: [REFRESH_ITEM, CONTROLS_MENU, CXMODE_MENU, SCALING_MENU, VIEW_MENU,\n                GRID_MENU, SETTINGS_MENU, COLORMAP_MENU, TRACES_MENU, FILES_MENU,\n                PLUGINS_MENU, KEYPRESSINFO_ITEM, SAVE_MENU, EXIT_ITEM\n            ]\n        };\n\n        mx.menu(Mx, MAINMENU);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_legend_menu(plot, index) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        var DASHED = {\n            text: \"Dashed...\",\n            handler: function() {\n                // Figure out the current thickness\n                var thk = 1;\n                if (index !== undefined) {\n                    thk = Math.abs(plot._Gx.lyr[index].thick);\n                } else {\n                    if (Gx.lyr.length === 0) {\n                        return;\n                    }\n\n                    thk = Math.abs(plot._Gx.lyr[0].thick);\n                    for (var i = 0; i < Gx.lyr.length; i++) {\n                        if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                            thk = 1;\n                            break;\n                        }\n                    }\n                }\n                setupPrompt(\n                    plot,\n                    \"Line thickness:\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                            plot._Gx.lyr[index].thick = -1 * finalValue;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                plot._Gx.lyr[ii].line = 3;\n                                plot._Gx.lyr[ii].thick = -1 * finalValue;\n                                plot._Gx.lyr[ii].symbol = 0;\n                            }\n                        }\n                    }, thk);\n            }\n\n        };\n\n        var COLORS = {\n            text: \"Colors...\",\n            menu: {\n                title: \"COLORS\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"Red\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"red\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"red\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"red\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Pink\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"pink\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"pink\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"pink\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Hot Pink\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#ff009e\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"#ff009e\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"#ff009e\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Orange\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"orange\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"orange\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"orange\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Yellow\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"yellow\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"yellow\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"yellow\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Lime Green\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#80f741\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"#80f741\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"#80f741\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Green\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"green\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"green\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"green\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Blue\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"blue\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"blue\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"blue\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Purple\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"purple\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"purple\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"purple\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Custom Hexcode\",\n                    handler: function() {\n                        setupPrompt(\n                            plot,\n                            \"Color code (requires #):\",\n                            mx.hexValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = finalValue;\n                                } else {\n                                    for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                        plot._Gx.lyr[ii].color = finalValue;\n                                    }\n                                }\n                            }, undefined, undefined, undefined, undefined);\n                    }\n                }]\n            }\n        };\n\n        var SOLID = {\n            text: \"Solid...\",\n            handler: function() {\n                // Figure out the current thickness\n                var thk = 1;\n                if (index !== undefined) {\n                    thk = Math.abs(plot._Gx.lyr[index].thick);\n                } else {\n                    if (Gx.lyr.length === 0) {\n                        return;\n                    }\n\n                    thk = Math.abs(plot._Gx.lyr[0].thick);\n                    var i;\n                    for (i = 0; i < Gx.lyr.length; i++) {\n                        if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                            thk = 1;\n                            break;\n                        }\n                    }\n                }\n                setupPrompt(\n                    plot,\n                    \"Line thickness:\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                            plot._Gx.lyr[index].thick = finalValue;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 3;\n                                plot._Gx.lyr[i].thick = finalValue;\n                                plot._Gx.lyr[i].symbol = 0;\n                            }\n                        }\n                    }, thk);\n            }\n        };\n\n        var TOGGLE = {\n            text: \"Toggle\",\n            style: (index !== undefined) ? \"checkbox\" : undefined,\n            checked: (index !== undefined) ? plot._Gx.lyr[index].display : undefined,\n            handler: function() {\n                if (index !== undefined) {\n                    plot._Gx.lyr[index].display = !plot._Gx.lyr[index].display;\n                } else {\n                    for (var i = 0; i < Gx.lyr.length; i++) {\n                        plot._Gx.lyr[i].display = !plot._Gx.lyr[i].display;\n                    }\n                }\n            }\n        };\n\n        var SYMBOLS = {\n            text: \"Symbols...\",\n            menu: {\n                title: \"SYMBOLS\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"None\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 0 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 0;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 0;\n                                plot._Gx.lyr[i].symbol = 0;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Pixels\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 1 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 1;\n                            plot._Gx.lyr[index].symbol = 1;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 1;\n                                plot._Gx.lyr[i].symbol = 1;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Circles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 2 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 2;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 2;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Squares\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 3 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 3;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 3;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Plusses\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 4 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 4;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 4;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"X's\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 5 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 5;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 5;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Triangles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 6 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 6;\n                            plot._Gx.lyr[index].symbol = 6;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 6;\n                                plot._Gx.lyr[i].symbol = 6;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Downward Triangles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 7 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 6;\n                            plot._Gx.lyr[index].symbol = 7;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 6;\n                                plot._Gx.lyr[i].symbol = 7;\n                            }\n                        }\n                    }\n                }]\n            }\n        };\n\n        var LINE_TYPE = {\n            text: \"Line Type...\",\n            menu: {\n                title: \"LINE TYPE\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"None\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 0 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 0;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 0;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Verticals\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 1 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 1;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 1;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Horizontals\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 2 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 2;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 2;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Connecting\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 3 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 3;\n                            }\n                        }\n                    }\n                }]\n            }\n        };\n\n        var THICKNESS = {\n            text: \"Thickness...\",\n            handler: function() {\n                var thickness = 1;\n                if (index !== undefined) {\n                    thickness = plot._Gx.lyr[index].thick;\n                }\n                setupPrompt(\n                    plot,\n                    \"Thickness\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (finalValue === \"\") {\n                            finalValue = 1;\n                        }\n                        finalValue = Math.max(0, finalValue);\n\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].thick = finalValue;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].thick = finalValue;\n                            }\n                        }\n                    }, thickness, undefined,\n                    undefined, undefined);\n            }\n        };\n\n        var OPACITY = {\n            text: \"Opacity...\",\n            handler: function() {\n                var opacity = 1.0;\n                if (index !== undefined) {\n                    opacity = plot._Gx.lyr[index].opacity;\n                }\n                setupPrompt(\n                    plot,\n                    \"Opacity:\",\n                    mx.floatValidator,\n                    function(finalValue) {\n                        if (finalValue === \"\") {\n                            finalValue = 1.0;\n                        }\n                        finalValue = Math.max(0, finalValue);\n                        finalValue = Math.min(1, finalValue);\n\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].opacity = finalValue;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].opacity = finalValue;\n                            }\n                        }\n                    }, opacity, undefined,\n                    undefined, undefined);\n            }\n        };\n\n        var LEGEND_TRACE = {\n            title: Gx.lyr[index].name,\n            finalize: function() {\n                if (!Mx.prompt) {\n                    // A prompt may have been\n                    // created by a menu handler\n                    // - let it deal with\n                    // eventListener re-setting\n                    mx.addEventListener(Mx, \"mousedown\", plot.onmousedown,\n                        false);\n                }\n                plot.refresh();\n            },\n            items: [DASHED, COLORS, SOLID, TOGGLE, SYMBOLS, LINE_TYPE, THICKNESS, OPACITY]\n        };\n\n        mx.menu(Mx, LEGEND_TRACE);\n    }\n\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function rubberbox_cb(plot, triggerEvent) {\n        return function(event, xo, yo, xl, yl, action, mode) {\n            var Gx = plot._Gx;\n            var Mx = plot._Mx;\n\n            var x = Math.min(xo, xl);\n            var y = Math.min(yo, yl);\n            var w = Math.abs(xl - xo);\n            var h = Math.abs(yl - yo);\n\n            var takeAction = false;\n            if (event.which === triggerEvent) {\n                // On some browsers, a click will actually be sent as\n                // mousedown/mousemove/mouseup so\n                // don't make insanely small zooms...instead treat them as a\n                // click\n                if (mode === \"horizontal\") {\n                    takeAction = (w > 2);\n                } else if (mode === \"vertical\") {\n                    takeAction = (h > 2);\n                } else {\n                    takeAction = ((w > 2) && (h > 2));\n                }\n            }\n\n            if (!takeAction) {\n                // The mouse didn't shift enough to be considered\n                // as a rubberbox action so treat it as mouseup\n                plot.mouseup(event);\n            } else {\n                // action === null is disabled, but undefined is default\n                if ((action === undefined) || (action === \"zoom\")) {\n                    plot.pixel_zoom(xo, yo, xl, yl);\n                    plot.refresh();\n                } else if (action === \"select\") {\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('mtag', true, true);\n                    var re = pixel_to_real(plot, x, y);\n                    var rwh = pixel_to_real(plot, x + w, y + h);\n                    evt.x = re.x;\n                    evt.y = re.y;\n                    evt.xpos = x;\n                    evt.ypos = y;\n                    evt.w = Math.abs(rwh.x - re.x);\n                    evt.h = Math.abs(rwh.y - re.y);\n                    evt.wpxl = w;\n                    evt.hpxl = h;\n                    evt.shift = event.shiftKey;\n                    mx.dispatchEvent(Mx, evt);\n                }\n            }\n        };\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function plot_init(plot, o) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if (!o.xlab) {\n            o.xlab = 0;\n        }\n        if (!o.ylab) {\n            o.ylab = 0;\n        }\n\n        //Convert xunits and yunits to numbers if they are strings\n        o.xlab = m.unit_lookup(o.xlab);\n        o.ylab = m.unit_lookup(o.ylab);\n\n        // Equivalent to reading cmd line args\n        Gx.xmin = o.xmin === undefined ? 0.0 : o.xmin;\n        Gx.xmax = o.xmax === undefined ? 0.0 : o.xmax;\n        var havexmin = (o.xmin !== undefined);\n        var havexmax = (o.xmax !== undefined);\n        var address = o.cmode === undefined ? \"\" : o.cmode.toUpperCase();\n        var line = o.line === undefined ? 3 : o.line;\n        Gx.ylab = o.ylab;\n        Gx.ylabel = o.ylabel;\n        Gx.ymin = o.ymin === undefined ? 0.0 : o.ymin;\n        Gx.ymax = o.ymax === undefined ? 0.0 : o.ymax;\n        var haveymin = (o.ymin !== undefined);\n        var haveymax = (o.ymax !== undefined);\n        Gx.zmin = o.zmin;\n        Gx.zmax = o.zmax;\n        var havezmin = (o.zmin !== undefined);\n        var havezmax = (o.zmax !== undefined);\n\n        if (o.colors !== undefined) {\n            mx.setbgfg(Mx, o.colors.bg, o.colors.fg, Mx.xi);\n        }\n\n        if (o.xi !== undefined) {\n            mx.invertbgfg(Mx);\n        }\n\n        Gx.forcelab = o.forcelab === undefined ? true : o.forcelab;\n\n        Gx.all = o.all === undefined ? false : o.all;\n        // By default, SIGPLOT auto-scales only on the first buffer size.\n        // \"expand\" is a feature added for websigplot that when\n        // combined with \"all\" will expand the y-range automaticall\n        // to accomodate all of the samples\n        Gx.expand = o.expand === undefined ? false : o.expand;\n\n        // TODO Gx.mimic = M$GET_SWITCH ('MIMIC')\n        Gx.xlab = o.xlab;\n        Gx.xlabel = o.xlabel;\n        Gx.segment = o.segment === undefined ? false : o.segment;\n        Gx.plab = 24;\n\n        var phunits = (o.phunits === undefined) ? 'D' : o.phunits;\n        if (phunits[0] === 'R') {\n            Gx.plab = 23;\n        } else if (phunits[0] === 'C') {\n            Gx.plab = 25;\n        }\n        Gx.xdiv = o.xdiv === undefined ? 5 : o.xdiv;\n        Gx.ydiv = o.ydiv === undefined ? 5 : o.ydiv;\n\n        Gx.xcompression = o.xcmp || 0;\n        Gx.rasterSmoothing = o.smoothing || false;\n\n        Mx.origin = 1;\n        if (o.yinv) {\n            Mx.origin = 4;\n        }\n        Gx.pmt = o.pmt === undefined ? 1.0 : o.pmt;\n        Gx.bufmax = o.bufmax === undefined ? 32768 : o.bufmax;\n        Gx.sections = o.nsec === undefined ? 0 : o.nsec;\n        Gx.anno_type = o.anno_type === undefined ? 0 : o.anno_type;\n\n        Gx.xfmt = o.xfmt === undefined ? \"\" : o.xfmt;\n        Gx.yfmt = o.yfmt === undefined ? \"\" : o.yfmt;\n\n        // TODO Gx.xf.msgid = M$GET_SWITCH ('MSGID')\n        // Gx.xf.msgmask = max (0, M$GET_SWITCH ('MASK'))\n\n        Gx.index = o.index === undefined ? false : o.index;\n        var imode = (Gx.index || (address.slice(0, 2) === \"IN\"));\n        if (imode) {\n            if (havexmin && (Gx.xmin === 1.0)) {\n                havexmin = false;\n            }\n            if (havexmax && (Gx.xmin === 1.0)) {\n                havexmax = false;\n            }\n        }\n\n        Gx.xdata = false;\n        Gx.note = \"\";\n        Gx.hold = 0;\n        Gx.always_show_marker = o.always_show_marker || false;\n\n        m.vstype('D');\n\n        if (!o.inputs) {\n            basefile(plot, false);\n        } else {\n            // TODO load files\n        }\n\n        var cmode = address;\n\n        if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n            Gx.cmode = 1;\n        } else {\n            Gx.cmode = 3;\n        }\n\n        if ((cmode === \"MA\") || (cmode === \"INMA\") || (cmode === \"ABMA\") ||\n            (cmode === \"__MA\") || (cmode === \"MAGNITUDE\")) {\n            Gx.cmode = 1;\n        }\n        if ((cmode === \"PH\") || (cmode === \"INPH\") || (cmode === \"ABPH\") ||\n            (cmode === \"__PH\") || (cmode === \"PHASE\")) {\n            Gx.cmode = 2;\n        }\n        if ((cmode === \"RE\") || (cmode === \"INRE\") || (cmode === \"ABRE\") ||\n            (cmode === \"__RE\") || (cmode === \"REAL\")) {\n            Gx.cmode = 3;\n        }\n        if ((cmode === \"IM\") || (cmode === \"INIM\") || (cmode === \"ABIM\") ||\n            (cmode === \"__IM\") || (cmode === \"IMAGINARY\")) {\n            Gx.cmode = 4;\n        }\n        if ((cmode === \"LO\") || (cmode === \"D1\") || (cmode === \"INLO\") || (cmode === \"IND1\") ||\n            (cmode === \"ABIM\") || (cmode === \"ABD1\") || (cmode === \"__LO\") ||\n            (cmode === \"__D1\") || (cmode === \"10*LOG10\")) {\n            Gx.cmode = 6;\n        }\n        if ((cmode === \"L2\") || (cmode === \"D2\") || (cmode === \"INL2\") || (cmode === \"IND2\") ||\n            (cmode === \"ABLO\") || (cmode === \"ABD2\") || (cmode === \"__L2\") ||\n            (cmode === \"__D2\") || (cmode === \"20*LOG10\")) {\n            Gx.cmode = 7;\n        }\n        if ((cmode === \"RI\") || (cmode === \"IR\") || (cmode === \"INRI\") || (cmode === \"INIR\") ||\n            (cmode === \"ABRI\") || (cmode === \"ABIR\") || (cmode === \"__RI\") ||\n            (cmode === \"__IR\") || (cmode === \"IMAG/REAL\") || (cmode === \"REAL/IMAG\")) {\n            if (Gx.index) {\n                alert(\"Imag/Real mode not permitted in INDEX mode\");\n            } else {\n                Gx.cmode = 5;\n            }\n        }\n\n        Gx.basemode = Gx.cmode;\n\n        plot.change_settings({\n            cmode: Gx.cmode\n        });\n\n        // if ( (Gx.forcelab) .and. (Gx.xlab .le. 0) .and.\n        // & (Gx.ylab .le. 0) ) then\n        // call M$WARNING\n        // & ('/xlab or /ylab is missing with /forcelab usage')\n        // Gx.forcelab = .false.\n        // endif\n\n        Gx.dbmin = 1.0e-20;\n        if (Gx.cmode >= 6) {\n            var dbscale = 10.0;\n            if (Gx.cmode === 7) {\n                dbscale = 20.0;\n            }\n            if ((cmode[0] === \"L\") || (cmode[0] === \"1\") || (cmode[0] === \"2\")) {\n                if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                    Gx.ymin = Math.max(Gx.ymin, 1e-10);\n                    Gx.ymax = Math.max(Gx.ymax, 1e-10);\n                } else {\n                    Gx.ymin = Math.max(Gx.ymin, 1e-20);\n                    Gx.ymax = Math.max(Gx.ymax, 1e-20);\n                }\n                Gx.ymin = m.log10(Gx.ymin) * dbscale;\n                Gx.ymax = m.log10(Gx.ymax) * dbscale;\n            } else if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                Gx.ymin = Math.max(-18.0 * dbscale, Gx.ymin);\n                Gx.ymax = Math.max(-18.0 * dbscale, Gx.ymax);\n                Gx.dbmin = 1e-37;\n            } else if (Math.min(Gx.ymin, Gx.ymax) < -20.0 * dbscale) {\n                Gx.ymin = Math.max(-37.0 * dbscale, Gx.ymin);\n                Gx.ymax = Math.max(-37.0 * dbscale, Gx.ymax);\n                Gx.dbmin = Math.pow(10, Math.min(Gx.ymin, Gx.ymax) / dbscale);\n            }\n        }\n\n        Mx.level = 0;\n        if (imode && !Gx.index) {\n            if (havexmin) {\n                Gx.xmin = Gx.xstart + Gx.xdelta * (Gx.xmin - 1.0);\n            }\n            if (havexmin) {\n                Gx.xmax = Gx.xstart + Gx.xdelta * (Gx.xmax - 1.0);\n            }\n        }\n        Gx.xmult = o.xmult;\n        Gx.ymult = o.xmult;\n\n        //Convert string inputs of autox to numbers\n        switch (o.autox) {\n            case \"none\":\n                o.autox = -1;\n                break;\n            case \"min\":\n                o.autox = 1;\n                break;\n            case \"max\":\n                o.autox = 2;\n                break;\n            case \"full\":\n                o.autox = 3;\n                break;\n        }\n\n        Gx.autox = o.autox === undefined ? -1 : o.autox;\n        if (Gx.autox < 0) {\n            Gx.autox = 0;\n            if (!havexmin) {\n                Gx.autox += 1;\n            }\n            if (!havexmax) {\n                Gx.autox += 2;\n            }\n        }\n\n        //Convert string inputs of autoy to numbers\n\n        switch (o.autoy) {\n            case \"none\":\n                o.autoy = -1;\n                break;\n            case \"min\":\n                o.autoy = 1;\n                break;\n            case \"max\":\n                o.autoy = 2;\n                break;\n            case \"full\":\n                o.autoy = 3;\n                break;\n        }\n\n        Gx.autoy = o.autoy === undefined ? -1 : o.autoy;\n        if (Gx.autoy < 0) {\n            Gx.autoy = 0;\n            if (!haveymin) {\n                Gx.autoy += 1;\n            }\n            if (!haveymax) {\n                Gx.autoy += 2;\n            }\n        }\n\n        //Convert string inputs of autoz to numbers\n\n        switch (o.autoz) {\n            case \"none\":\n                o.autoz = -1;\n                break;\n            case \"min\":\n                o.autoz = 1;\n                break;\n            case \"max\":\n                o.autoz = 2;\n                break;\n            case \"full\":\n                o.autoz = 3;\n                break;\n        }\n\n        Gx.autoz = o.autoz === undefined ? -1 : o.autoz;\n        if (Gx.autoz < 0) {\n            Gx.autoz = 0;\n            if (!havezmin) {\n                Gx.autoz += 1;\n            }\n            if (!havezmax) {\n                Gx.autoz += 2;\n            }\n        }\n        Gx.autol = o.autol === undefined ? -1 : o.autol;\n\n        if (!havexmin) {\n            Gx.xmin = undefined;\n        }\n        if (!havexmax) {\n            Gx.xmax = undefined;\n        }\n\n        scale_base(plot, {\n            get_data: true\n        }, Gx.xmin, Gx.xmax, Gx.xlab, Gx.ylab);\n\n        if (!havexmin) {\n            Gx.xmin = Mx.stk[0].xmin;\n        }\n        if (!havexmax) {\n            Gx.xmax = Mx.stk[0].xmax;\n        }\n        if (!haveymin) {\n            Gx.ymin = Mx.stk[0].ymin;\n        }\n        if (!haveymax) {\n            Gx.ymax = Mx.stk[0].ymax;\n        }\n\n        if (Gx.xmin > Gx.xmax) {\n            Mx.stk[0].xmin = Gx.xmax;\n            Gx.xmax = Gx.xmin;\n            Gx.xmin = Mx.stk[0].xmin;\n        }\n        if (Gx.ymin > Gx.ymax) {\n            Mx.stk[0].ymin = Gx.ymax;\n            Gx.ymax = Gx.ymin;\n            Gx.ymin = Mx.stk[0].ymin;\n        }\n        Mx.stk[0].xmin = Gx.xmin;\n        Mx.stk[0].xmax = Gx.xmax;\n        Mx.stk[0].ymin = Gx.ymin;\n        Mx.stk[0].ymax = Gx.ymax;\n        Gx.panxmin = Math.min(Gx.panxmin, Gx.xmin);\n        Gx.panxmax = Math.max(Gx.panxmax, Gx.xmax);\n        Gx.panymin = Math.min(Gx.panymin, Gx.ymin);\n        Gx.panymax = Math.max(Gx.panymax, Gx.ymax);\n\n        Gx.xmin = Mx.stk[0].xmin;\n        Gx.ymin = Mx.stk[0].ymin;\n\n        if (o.font_family) {\n            Mx.font_family = o.font_family;\n        }\n        if (o.font_width) {\n            Mx.font_width = o.font_width;\n        }\n        if (o.font_scaled) {\n            Mx.font_scaled = true;\n        }\n\n        var font_width = Mx.font_width;\n        if (Mx.font_scaled) {\n            font_width = Math.min(Mx.font_width, Mx.width / 64);\n        }\n        mx.set_font(Mx, font_width);\n\n        Gx.ncolors = o.ncolors === undefined ? 500 : o.ncolors;\n        Gx.cmap = null;\n        if (o.cmap) {\n            Gx.cmap = o.cmap;\n        } else {\n            Gx.cmap = o.xc === undefined ? -1 : o.xc;\n        }\n\n        setup_cmap(plot, Gx.cmap);\n\n        // TODO setup annotate, boxes and points facilities\n\n        // TODO initialize layer structure line types\n\n        if (o.xcnt === \"leftmouse\") {\n            Gx.cntrls = 1;\n        } else if (o.xcnt === \"continuous\") {\n            Gx.cntrls = 2;\n        } else {\n            Gx.cntrls = o.xcnt === undefined ? 1 : o.xcnt;\n        }\n\n        Gx.default_rubberbox_mode = o.rubberbox_mode === undefined ? \"box\" : o.rubberbox_mode;\n        Gx.default_rubberbox_action = o.rubberbox_action === undefined ? \"zoom\" : o.rubberbox_action;\n        Gx.default_rightclick_rubberbox_mode = o.rightclick_rubberbox_mode === undefined ? \"box\" : o.rightclick_rubberbox_mode;\n        Gx.default_rightclick_rubberbox_action = o.rightclick_rubberbox_action === undefined ? null : o.rightclick_rubberbox_action;\n\n        Gx.cross = o.cross === undefined ? false : o.cross;\n        Gx.grid = o.nogrid === undefined ? true : !o.nogrid;\n        Gx.fillStyle = o.fillStyle;\n        Gx.gridBackground = o.gridBackground;\n        Gx.gridStyle = o.gridStyle;\n        Gx.wheelZoom = o.wheelZoom;\n        Gx.wheelZoomPercent = o.wheelZoomPercent;\n        Gx.legend = o.legend === undefined ? false : o.legend;\n        Gx.no_legend_button = o.no_legend_button === undefined ? false : o.no_legend_button;\n        Gx.legendBtnLocation = null;\n        Gx.pan = o.nopan === undefined ? true : !o.nopan;\n        Gx.nomenu = o.nomenu === undefined ? false : o.nomenu;\n\n        // TODO Gx.lmap.ip = 0\n        Gx.modmode = 0;\n        Gx.modlayer = -1; // 0-based indexing instead of 1\n        Gx.modsource = 0;\n        Gx.modified = (o.mod && Gx.lyr.length > 0);\n        // TODO Gx.marks(5) = 5\n        Gx.nmark = 0;\n        Gx.iabsc = 0;\n        if (Gx.index) {\n            Gx.iabsc = 1;\n        }\n        // TODO if (o.specs > 0) Gx.iabsc = M$SEARCH('IRS',c(1:1))\n        Gx.specs = !o.nospecs;\n\n        Gx.scroll_time_interval = o.scroll_time_interval === undefined ? Gx.scroll_time_interval : o.scroll_time_interval;\n\n        Gx.autohide_readout = o.autohide_readout;\n        Gx.autohide_panbars = o.autohide_panbars;\n        Gx.x_scrollbar_location = o.x_scrollbar_location;\n        if (Gx.specs) {\n            Gx.show_x_axis = !o.noxaxis;\n            Gx.show_y_axis = !o.noyaxis;\n            Gx.show_readout = !o.noreadout;\n            if (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout) {\n                Gx.specs = true;\n            } else {\n                Gx.specs = false;\n            }\n        } else {\n            Gx.show_x_axis = false;\n            Gx.show_y_axis = false;\n            Gx.show_readout = false;\n        }\n        Gx.hide_note = o.hide_note || false;\n\n        Gx.xmrk = 0.0;\n        Gx.ymrk = 0.0;\n\n        if (!o.nodragdrop) {\n            mx.addEventListener(Mx, \"dragover\", function(evt) {\n                evt.preventDefault();\n            }, false);\n\n            mx.addEventListener(Mx, \"drop\", (function(plot) {\n                return function(evt) {\n                    var files = evt.dataTransfer.files;\n                    if (files.length > 0) {\n                        evt.preventDefault();\n                        plot.load_files(files);\n                    }\n                };\n            }(plot)), false);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function basefile(plot, open) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        // != BASEFILE(false)\n\n        // unlike SIGPLOT, where if Gx.index == 1\n        // then xstart = 1.0 and xdelta = 1.0...technically\n        // Gx.retx is supposed to be the real X coordinate\n        // and Gx.aretx is supposed to be the X coordinate in the\n        // current abscissa mode\n        if (open) {\n            var hcb = Gx.HCB[0];\n            Gx.xstart = hcb.xstart;\n            Gx.xdelta = hcb.xdelta;\n            Mx.origin = 1;\n        } else {\n            Gx.xstart = 0.0;\n            Gx.xdelta = 1.0;\n            Gx.autol = -1;\n            Mx.origin = 1;\n        }\n\n        // if (!open) {\n        // Gx.lay[0].cx = false;\n        // }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_accessories(plot, mode) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        if (mode > 0) {\n            if ((mode >= 4) && (Gx.show_readout) && (!Gx.hide_note)) {\n                var ln = Gx.note.length;\n                mx.text(Mx, Mx.width - Gx.lbtn - (ln + 1) * Mx.text_w,\n                    Mx.text_h, Gx.note);\n            }\n            if (mode >= 4) {\n                draw_panbars(plot);\n            }\n            if ((mode >= 1) && (Gx.legend)) {\n                draw_legend(plot);\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_plugins(plot) {\n        var Gx = plot._Gx;\n        var ctx = plot._Mx.canvas.getContext(\"2d\");\n        var canvas;\n\n        var plugin_index = 0;\n        while (plugin_index < Gx.plugins.length) {\n            var plugin = Gx.plugins[plugin_index].impl;\n            if (plugin.refresh) {\n                canvas = Gx.plugins[plugin_index].canvas;\n\n                // Ensure the plugin canvas has the same size as the plot\n                if (canvas.width !== plot._Mx.canvas.width) {\n                    canvas.width = plot._Mx.canvas.width;\n                }\n                if (canvas.height !== plot._Mx.canvas.height) {\n                    canvas.height = plot._Mx.canvas.height;\n                }\n\n                // If the plugin canvas is visible, draw it\n                if (canvas.height !== 0 && canvas.width !== 0) {\n                    if (canvas.width !== plot._Mx.canvas.width) {\n                        canvas.width = plot._Mx.canvas.width;\n                    }\n                    if (canvas.height !== plot._Mx.canvas.height) {\n                        canvas.height = plot._Mx.canvas.height;\n                    }\n                    canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n                    Gx.plugins[plugin_index].impl.refresh(canvas);\n                    ctx.drawImage(canvas, 0, 0);\n                }\n            }\n            plugin_index = plugin_index + 1;\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_legend(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        //Gx.always_show_marker = true;\n        var ctx = Mx.canvas.getContext(\"2d\");\n\n        var i = 0;\n        var n = 0; // integer*4\n        var ix = 0; // integer*4\n        var iy = 0; // integer*4\n        var ln = 0; // integer*4\n        var tw = 0; // integer*4\n        var xc = 0; // integer*4\n        var yc = 0; // integer*4\n        var xs = 0; // integer*4\n        var ys = 0; // integer*4\n        var thk = 0; // integer*4\n        var ic = 0; // integer*4\n\n        tw = Mx.text_w;\n        xs = tw * 23;\n        ys = (Gx.lyr.length + 1) * Mx.text_h;\n        xc = Mx.r - xs;\n        yc = Mx.t;\n\n        var legendPos = {\n            x: xc + 2,\n            y: yc + 2,\n            width: xs - 5,\n            height: ys - 5\n        }; // default legend size\n\n        // Determine legend position and label offset based on label sizes\n        var defLabelWidth = 98; // a magic number - default width of pixels\n        var maxLabelWidth = 0;\n        var labelOffset = 0;\n        for (n = 0; n < Gx.lyr.length; n++) { // figure out maximum label\n            // length\n            var labelLength = ctx.measureText(Gx.lyr[n].name).width;\n            if (labelLength > maxLabelWidth) {\n                maxLabelWidth = labelLength;\n            }\n        }\n        if (maxLabelWidth > defLabelWidth) {\n            labelOffset = (maxLabelWidth - defLabelWidth);\n            legendPos.width += labelOffset;\n            legendPos.x -= labelOffset;\n        }\n\n        ctx.strokeStyle = Mx.fg; // Mx.xwfg swapped in for FGColor\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(legendPos.x, legendPos.y, legendPos.width,\n            legendPos.height); // Creating a filled box instead of using\n        // clear_area\n        ctx.strokeRect(legendPos.x, legendPos.y, legendPos.width,\n            legendPos.height);\n\n        for (n = 0; n < Gx.lyr.length; n++) {\n            ix = xc + 4 * tw;\n            iy = yc + n * Mx.text_h + Mx.text_h; // additional text_h to\n            // account for 0-based\n            // indexing\n            if (n === Gx.modlayer) {\n                mx.text(Mx, xc + tw - labelOffset, iy + Math.floor(Mx.text_w / 2), '**'); // Added text_w/2\n                // offset\n            }\n            if (Gx.lyr[n].display) {\n                ic = Gx.lyr[n].color;\n                if (Gx.lyr[n].line > 0) {\n                    thk = m.sign(Math.min(tw, Math.abs(Gx.lyr[n].thick)),\n                        Gx.lyr[n].thick);\n                    // added magic -3 offset to y coordinates to center lines\n                    // with text\n                    if (thk < 0 || thk === mx.L_dashed) {\n                        mx.draw_line(Mx, ic, ix - labelOffset, iy - 3, (ix + tw * 2) - labelOffset, iy - 3, Math.abs(thk), {\n                            mode: \"dashed\",\n                            on: 4,\n                            off: 4\n                        });\n                    } else {\n                        mx.draw_line(Mx, ic, ix - labelOffset, iy - 3, (ix + tw * 2) - labelOffset, iy - 3, Math.abs(thk));\n                    }\n                }\n                if (Gx.lyr[n].symbol > 0) {\n                    // New logic here with 0.6*tw to help with legend symbol\n                    // sizing\n                    if (Gx.lyr[n].radius < 0) {\n                        thk = -m.trunc(0.6 * tw);\n                    } else {\n                        thk = Math.min(Gx.lyr[n].radius, m.trunc(0.6 * tw));\n                    }\n\n                    mx.draw_symbol(Mx, ic, ix + tw - labelOffset, iy - 3,\n                        Gx.lyr[n].symbol, thk);\n                }\n                if (Gx.lyr[n].hcb[\"class\"] === 2) {\n                    //draw colormap\n                    mx.legend_colorbar(Mx, legendPos.x + 10, legendPos.y + (legendPos.height / 4),\n                        (legendPos.width / 4) - 10, legendPos.height / 2);\n                }\n            }\n            ix = ix + tw * 3;\n            iy = iy + Mx.text_h * 0.3;\n            mx.text(Mx, ix - labelOffset, iy, Gx.lyr[n].name);\n        }\n        // a variable to hold the legend y positon of each layer\n        var layerheight = legendPos.height / Gx.lyr.length;\n\n        for (i = 0; i < Gx.lyr.length; i++) {\n            if ((legendPos.x <= Mx.xpos) && ((legendPos.x + legendPos.width) >= Mx.xpos) &&\n                ((legendPos.y <= Mx.ypos)) && (legendPos.y + layerheight) >= Mx.ypos) {\n                //find a way to pull up the menu\n                sigplot_legend_menu(plot, i);\n            }\n            legendPos.y += layerheight;\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function form_plotnote(plot) {\n        var Gx = plot._Gx;\n        if (Gx.HCB.length === 0) {\n            Gx.note = \"\";\n        } else if (Gx.HCB[0].plotnote === undefined) {\n            var files = [];\n            for (var n = 0; n < Gx.HCB.length; n++) {\n                if (Gx.HCB[n].file_name) {\n                    files.push(Gx.HCB[n].file_name);\n                }\n            }\n            Gx.note = files.join(\"|\").toUpperCase();\n        }\n    }\n\n    function draw_pcut_x(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((Gx.zmin === undefined) || (Gx.zmax === undefined)) {\n            return;\n        }\n\n        //fill variables to draw x-cut box along bottom\n        // one-pixel lines need to be draw on half-pixel boundaries\n        var plot_width = Mx.r - Mx.l;\n        Gx.x_box_x = Math.floor(Mx.l - 2) + 0.5;\n        Gx.x_box_y = Math.floor(Mx.b + 25) + 0.5;\n        Gx.x_box_w = Math.floor(plot_width + 4);\n        Gx.x_box_h = Math.floor((5 * Mx.text_h) + 20);\n\n        mx.draw_box(Mx, Mx.fg, Gx.x_box_x, Gx.x_box_y, Gx.x_box_w, Gx.x_box_h, 1, Mx.bg);\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = Mx.fg;\n\n        var x = null;\n        var y = null;\n        for (var ii = 0; ii < plot._Gx.x_cut_data.length; ii++) {\n            var z = plot._Gx.x_cut_data[ii]; // the real z-value\n            // constrain to bounds\n            z = Math.min(Math.max(z, Gx.zmin), Gx.zmax);\n            var zrt = plot._Gx.x_box_h / (Gx.zmax - Gx.zmin); // the z-value to pixel ratio\n            var zpx = Math.round((z - Gx.zmin) * zrt);\n\n            var xrt = plot._Gx.x_box_w / plot._Gx.x_cut_data.length;\n            var xpx = Math.round(ii * xrt);\n\n            var xnew = plot._Gx.x_box_x + xpx;\n            var ynew = (plot._Gx.x_box_y + plot._Gx.x_box_h - zpx);\n\n            if (ii === 0) {\n                ctx.moveTo(xnew, ynew);\n            } else if ((xnew !== x) || (ynew !== y)) {\n                // only draw the line if we are moving to a new point\n                ctx.lineTo(xnew, ynew);\n                x = xnew;\n                y = ynew;\n            }\n        }\n        ctx.stroke();\n    }\n\n    function draw_pcut_y(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((Gx.zmin === undefined) || (Gx.zmax === undefined)) {\n            return;\n        }\n\n        var plot_height = Mx.b - Mx.t;\n\n        //fill variables to draw y-cut box along right sidea\n        // one-pixel lines need to be draw on half-pixel boundaries\n        Gx.y_box_x = Math.floor(Mx.r + 25) + 0.5;\n        Gx.y_box_y = Math.floor(Mx.t - 2) + 0.5;\n        Gx.y_box_w = Math.floor((5 * Mx.text_w) + 20);\n        Gx.y_box_h = Math.floor(plot_height + 2);\n\n        if (Gx.lg_colorbar) { //move over box if large colorbar displayed\n            Gx.y_box_x += 100;\n        }\n\n        //draw y-cut box\n        mx.draw_box(Mx, Mx.fg, Gx.y_box_x, Gx.y_box_y, Gx.y_box_w, Gx.y_box_h, 1, Mx.bg);\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = Mx.fg;\n\n        var x = null;\n        var y = null;\n        for (var ii = 0; ii < plot._Gx.y_cut_data.length; ii++) {\n            var z = plot._Gx.y_cut_data[ii]; // the real z-value\n            // constrain to bounds\n            z = Math.min(Math.max(z, Gx.zmin), Gx.zmax);\n            var zrt = plot._Gx.y_box_w / (Gx.zmax - Gx.zmin); // the z-value to pixel ratio\n            var zpx = Math.round((z - Gx.zmin) * zrt);\n\n            var yrt = plot._Gx.y_box_h / plot._Gx.y_cut_data.length;\n            var ypx = Math.round(ii * yrt);\n\n            var xnew = (plot._Gx.y_box_x + zpx);\n            var ynew = plot._Gx.y_box_y + ypx;\n\n            if (ii === 0) {\n                ctx.moveTo(xnew, ynew);\n            } else if ((xnew !== x) || (ynew !== y)) {\n                // only draw the line if we are moving to a new point\n                ctx.lineTo(xnew, ynew);\n                x = xnew;\n                y = ynew;\n            }\n        }\n        ctx.stroke();\n    }\n\n    function draw_layers(plot) {\n        var layers = plot._Gx.lyr;\n        for (var n = 0; n < layers.length; n++) {\n            //if (Gx.sections !== 0) {\n            // TODO\n            //}\n            draw_layer(plot, layers[n]);\n        }\n    }\n\n    /**\n     * Draws the specified layer.\n     *\n     * This is expected to be called after clearing the plot.\n     *\n     * @param {sigplot.Plot}\n     *            the plot object\n     * @param {Number}\n     *            the layer to draw\n     * @private\n     * @memberOf sigplot\n     */\n    function draw_layer(plot, layer) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((!layer.display) || (Gx.hold !== 0)) {\n            return;\n        }\n\n        layer.draw();\n\n        // TODO consider if this is a source of performance\n        // issues on streaming plots\n        var evt = document.createEvent('Event');\n        evt.initEvent('lyrdraw', true, true);\n        evt.index = layer.index;\n        evt.name = layer.name; // the name of the layer\n        evt.layer = layer;\n        mx.dispatchEvent(Mx, evt);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function delete_layer(plot, n) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        //if (n < Gx.modlayer) Gx.modlayer = Gx.modlayer - 1;\n        //if (n < Gx.modsource) Gx.modsource = Gx.modsource - 1;\n\n        // Notify listeners that a layer is about to be deleted\n        var evt = document.createEvent('Event');\n        evt.initEvent('lyrdel', true, true);\n        evt.index = n;\n        evt.name = Gx.lyr[n].name; // the name of the layer\n        evt.layer = Gx.lyr[n];\n        var executeDefault = mx.dispatchEvent(Mx, evt);\n        if (!executeDefault) {\n            return; // Delete was prevented\n        }\n\n        Gx.lyr[n].ybufn = 0;\n        Gx.lyr[n].ybuf = null;\n        if (n < Gx.lyr.length - 1) {\n            var lyr = Gx.lyr[n];\n            for (var i = n; i < Gx.lyr.length - 1; i++) {\n                Gx.lyr[i] = Gx.lyr[i + 1];\n            }\n        }\n        Gx.lyr.length -= 1;\n\n        if (Gx.HCB.length > 0) {\n            Gx.panxmin = 1.0;\n            Gx.panxmax = -1.0;\n            Gx.panymin = 1.0;\n            Gx.panymax = -1.0;\n        }\n    }\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n\n    function draw_p_cuts(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        if (Gx.lyr[0].hcb[\"class\"] !== 2) {\n            return;\n        }\n\n        var plot_height = Mx.b - Mx.t;\n        var plot_width = Mx.r - Mx.l;\n        var height = Gx.lyr[0].yframe;\n        var width = Gx.lyr[0].xframe;\n\n        if (Gx.p_cuts) {\n            if (!Gx.lyr[0].hcb.pipe) {\n                if (((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r) && (Gx.p_cuts_xpos !== Mx.xpos))) {\n                    var line = 0;\n                    var i = 0;\n\n                    //fill data for y_cut for this mouse xpos\n                    Gx.y_cut_data = [];\n                    line = Math.floor((width * (Mx.xpos - Mx.l)) / plot_width);\n                    for (i = line; i < (width * height); i += width) {\n                        Gx.y_cut_data.push(Gx.lyr[0].zbuf[i]);\n                    }\n                    draw_pcut_y(plot);\n                    Gx.p_cuts_xpos = Mx.xpos;\n                }\n                if (((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b) && (Gx.p_cuts_ypos !== Mx.ypos))) {\n                    var row = 0;\n                    var start = 0;\n                    var finish = 0;\n                    var i = 0;\n\n                    //fill data for x_cut for this mouse ypos\n                    row = Math.floor((height * (Mx.ypos - Mx.t)) / plot_height);\n                    start = row * width;\n                    finish = start + width;\n                    Gx.x_cut_data = Gx.lyr[0].zbuf.slice(start, finish);\n                    draw_pcut_x(plot);\n\n                    Gx.p_cuts_ypos = Mx.ypos;\n                }\n            } else {\n                if ((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r)) {\n                    var line = 0;\n                    var i = 0;\n                    height = Gx.lyr[0].lps;\n                    //fill data for y_cut for this mouse xpos\n                    Gx.y_cut_data = [];\n                    line = Math.floor((width * (Mx.xpos - Mx.l)) / plot_width);\n                    for (i = line; i < (width * height); i += width) {\n                        Gx.y_cut_data.push(Gx.lyr[0].zbuf[i]);\n                    }\n                    draw_pcut_y(plot);\n                }\n\n                if ((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b)) {\n                    var row = 0;\n                    var start = 0;\n                    var finish = 0;\n                    //fill data for x_cut for this mouse ypos\n                    Gx.x_cut_data = [];\n                    row = Math.floor((height * (Mx.ypos - Mx.t)) / plot_height);\n                    start = row * width;\n                    finish = start + width;\n                    Gx.x_cut_data = Gx.lyr[0].zbuf.slice(start, finish);\n                    draw_pcut_x(plot);\n                }\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_crosshairs(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.cross) {\n            if ((Gx.cross === \"vertical\") || (Gx.cross === true)) {\n                if ((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r) && (Gx.cross_xpos !== Mx.xpos)) {\n                    if (Gx.cross_xpos !== undefined) {\n                        mx.rubberline(Mx, Gx.cross_xpos, Mx.t, Gx.cross_xpos, Mx.b);\n                    }\n                    mx.rubberline(Mx, Mx.xpos, Mx.t, Mx.xpos, Mx.b);\n                    Gx.cross_xpos = Mx.xpos;\n                }\n            }\n            if ((Gx.cross === \"horizontal\") || (Gx.cross === true)) {\n                if ((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b) && (Gx.cross_ypos !== Mx.ypos)) {\n                    if (Gx.cross_ypos !== undefined) {\n                        mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r, Gx.cross_ypos);\n                    }\n\n                    mx.rubberline(Mx, Mx.l, Mx.ypos, Mx.r, Mx.ypos);\n                    Gx.cross_ypos = Mx.ypos;\n                }\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_marker(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.xmrk !== null && Gx.ymrk !== null) {\n            var pix = mx.real_to_pixel(Mx, Gx.xmrk, Gx.ymrk);\n            if ((Gx.lyr.length > 0) && (Gx.lyr[0].hcb[\"class\"] === 1)) {\n                if (pix.clipped) {\n                    return;\n                }\n            } else if ((Gx.lyr.length > 0) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                if (pix.clipped_x || !pix.clipped_y) {\n                    return;\n                }\n            }\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            ctx.beginPath();\n            ctx.strokeStyle = Mx.xwfg;\n            ctx.fillStyle = Mx.xwfg;\n            ctx.arc(pix.x, pix.y, 2, 0, 360);\n            ctx.stroke(); // just draw the arc's outline\n\n            // TODO add x/y coord\n            ctx.textBaseline = \"alphabetic\";\n            ctx.textAlign = \"left\";\n            ctx.fillStyle = Mx.fg;\n            ctx.font = Mx.font.font;\n\n            var text = \"x:\" + mx.format_g(Gx.xmrk, 6, 3, true);\n            ctx.fillText(text, pix.x + 5, pix.y - 5);\n            text = \"y:\" + mx.format_g(Gx.ymrk, 6, 3, true);\n            ctx.fillText(text, pix.x + 5, pix.y - 5 + Mx.text_h);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function changephunits(plot, newphunits) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        var newplab = Gx.plab;\n        if (newphunits === 'R') {\n            newplab = 23;\n        } else if (newphunits === 'D') {\n            newplab = 24;\n        }\n        if (newphunits === 'C') {\n            newplab = 25;\n        }\n        if (newplab !== Gx.plab) {\n            var phscale = [Math.PI, 180.0, 0.5];\n            var dscl = phscale[newplab - 23] / phscale[Gx.plab - 23];\n            Gx.plab = newplab;\n            if (Gx.cmode === 2) {\n                for (var i = 0; i <= Mx.level; i++) {\n                    Mx.stk[i].ymin = Mx.stk[i].ymin * dscl;\n                    Mx.stk[i].ymax = Mx.stk[i].ymax * dscl;\n                    Mx.stk[i].yscl = Mx.stk[i].yscl * dscl;\n                }\n\n                Gx.panymin = Gx.panymin * dscl;\n                Gx.panymax = Gx.panymax * dscl;\n                plot.refresh();\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function changemode(plot, newmode) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        Gx.xdata = false;\n        for (var n = 0; n < Gx.lyr.length; n++) {\n            if (newmode === 5) {\n                Gx.lyr[n].xdata = true;\n            } else {\n                Gx.lyr[n].xdata = false; // TODO (Gx.lyr(n).xsub > 0)\n            }\n            if (Gx.lyr[n].xdata) {\n                Gx.xdata = true;\n            }\n        }\n\n        if (newmode === Gx.cmode) {\n            return;\n        } else if (newmode === 5 && Gx.index) {\n            alert(\"Imag/Real mode not permitted in INDEX mode\");\n        } else if (Gx.lyr.length <= 0) {\n            Gx.cmode = newmode;\n            // The call to display specs isn't found in sigplot.for;\n            // which causes a small bug where the plot mode is\n            // changed but the mode label in the specs area\n            // isn't updated.\n            display_specs(plot);\n        } else if (newmode > 0) {\n            var oldmode = Gx.cmode;\n            Gx.cmode = newmode;\n\n            var autox = Gx.autox;\n            var autoy = Gx.autoy;\n            Gx.autox = 3;\n            Gx.autoy = 3;\n\n            if ((newmode === 5) || (oldmode === 5)) {\n                Gx.panxmin = 1.0;\n                Gx.panxmax = -1.0;\n                Gx.panymin = 1.0;\n                Gx.panymax = -1.0;\n                Mx.level = 0;\n\n                if (newmode === Gx.basemode) {\n                    Mx.stk[0].xmin = Gx.xmin;\n                    Mx.stk[0].xmax = Gx.xmax;\n                    Mx.stk[0].ymin = Gx.ymin;\n                    Mx.stk[0].ymax = Gx.ymax;\n                } else if ((newmode === 5) || (Gx.basemode === 5)) {\n                    scale_base(plot, {\n                        get_data: true\n                    });\n                } else {\n                    Mx.stk[0].xmin = Gx.xmin;\n                    Mx.stk[0].xmax = Gx.xmax;\n                    scale_base(plot, {\n                        get_data: true\n                    }, Gx.xmin, Gx.xmax);\n                }\n            } else {\n                if (newmode === Gx.basemode) { // This is only correct if we\n                    // didn't load a basefile\n                    Gx.panymin = 1.0;\n                    Gx.panymax = -1.0;\n                    Mx.stk[0].ymin = Gx.ymin;\n                    Mx.stk[0].ymax = Gx.ymax;\n                } else {\n                    scale_base(plot, {}, Mx.stk[Mx.level].xmin,\n                        Mx.stk[Mx.level].xmax);\n                }\n                for (var n = 1; n <= Mx.level; n++) {\n                    Mx.stk[n].ymin = Mx.stk[0].ymin;\n                    Mx.stk[n].ymax = Mx.stk[0].ymax;\n                }\n            }\n            Gx.autox = autox;\n            Gx.autoy = autoy;\n            plot.refresh();\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_panbars(plot) {\n        var k; // integer*4\n        //var i1; // integer*4\n        //var itext; // integer*4\n\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((!Gx.pan) || (Mx.widget)) {\n            return;\n        }\n\n        k = Mx.level; // Y scrollbar\n\n        var out = {\n            ps: Mx.stk[k].ymin,\n            pe: Mx.stk[k].ymax\n        };\n        var need_y_scrollbar = ((out.ps !== Gx.panymin) || (out.pe !== Gx.panymax));\n        need_y_scrollbar = need_y_scrollbar && (Mx.level > 0);\n\n        if (Gx.autohide_panbars && (!need_y_scrollbar || !plot.mouseOnCanvas) && !Gx.panning) {\n            var ctx = Mx.canvas.getContext(\"2d\");\n            ctx.fillStyle = Mx.bg;\n            ctx.fillRect(Gx.pyl, Mx.t, Gx.pyl + Gx.pthk, Mx.b - Mx.t);\n        } else {\n            var i1 = mx.scrollbar(Mx, 0, Gx.pyl, Gx.pyl + Gx.pthk, Mx.t, Mx.b, out,\n                Gx.panymin, Gx.panymax, undefined, Mx.scrollbar_y);\n            Mx.stk[k].ymin = out.ps;\n            Mx.stk[k].ymax = out.pe;\n        }\n\n        if (Gx.pl < Mx.width) { // X scrollbar\n            out = {\n                ps: Mx.stk[k].xmin,\n                pe: Mx.stk[k].xmax\n            };\n            var need_x_scrollbar = ((out.ps !== Gx.panxmin) || (out.pe !== Gx.panxmax));\n            need_x_scrollbar = need_x_scrollbar && (!Gx.all || (Mx.level > 0));\n\n            if (Gx.autohide_panbars && (!need_x_scrollbar || !plot.mouseOnCanvas) && !Gx.panning) {\n                var ctx = Mx.canvas.getContext(\"2d\");\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(Gx.pl, Gx.pt - 1, Gx.pr - Gx.pl, Gx.pthk + 4);\n            } else {\n                var i1 = mx.scrollbar(Mx, 0, Gx.pl, Gx.pr, Gx.pt, Gx.pt + Gx.pthk, out,\n                    Gx.panxmin, Gx.panxmax, undefined, Mx.scrollbar_x);\n                Mx.stk[k].xmin = out.ps;\n                Mx.stk[k].xmax = out.pe;\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function pan(plot, action, flag, mouseEvent) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var i; // an integer*4\n        var k; // an integer*4\n        // var ih // an integer*4\n        // var iw; // an integer*4\n        // var imin; // an integer*4\n        // var imax; // an integer*4\n        var j; // an integer*4\n        var xmin; // a real*8\n        var xmax; // a real*8\n        var xran; // a real*8\n        // var xtemp; // a real*8\n        var ymin; // a real*8\n        var ymax; // a real*8\n        var yran; // a real*8\n        // var ytemp; // a real*8\n        var warn; // a logical*4\n\n        var scrollbarState;\n\n        var sbx = new mx.SCROLLBAR(); // a SCROLLBAR\n        var sby = new mx.SCROLLBAR(); // a SCROLLBAR\n\n        var SIGPLOT_PAN = false;\n        k = Mx.level;\n        if (Gx.panmode > 0) {\n            sbx.flag = 11;\n            sby.flag = 11;\n        } else {\n            sbx.flag = -12;\n            sby.flag = -12;\n        }\n        if (flag === 0) {\n            sbx.action = 0;\n            sby.action = 0;\n        }\n\n        warn = true;\n        if (action.substring(0, 1) === 'Y') {\n            ymin = Mx.stk[k].ymin;\n            ymax = Mx.stk[k].ymax;\n            yran = ymax - ymin;\n            if (action === 'YPAN') {\n                scrollbarState = Mx.scrollbar_y;\n\n                var out = {\n                    ps: ymin,\n                    pe: ymax\n                };\n                i = mx\n                    .scrollbar(Mx, sby, Gx.pyl, Gx.pyl + Gx.pthk, Mx.t,\n                        Mx.b, out, Gx.panymin, Gx.panymax, mouseEvent,\n                        scrollbarState);\n                ymin = out.ps;\n                ymax = out.pe;\n                // TODO: Warn only if Scrollbar arrow is pressed and no\n                // movement.\n                if (sby.action !== 0) {\n                    j = mx.scroll(Mx, sby, mx.XW_UPDATE, undefined,\n                        scrollbarState);\n                }\n                warn = false;\n            } else if (action === 'YCENTER') {\n                // Orig code : ymin = ymin - yran * (Mx.ypos - (Mx.t + Mx.b) /\n                // 2) / (Mx.b - Mx.t) // TODO Worry about any int division here?\n                ymin = ymin - yran * (Mx.ypos - (Mx.t + Mx.b) / 2) / (Mx.b - Mx.t);\n                ymax = ymin + yran;\n                warn = false;\n            }\n\n            if (ymin !== Mx.stk[k].ymin || ymax !== Mx.stk[k].ymax) {\n                Mx.stk[k].ymin = ymin;\n                Mx.stk[k].ymax = ymax;\n                if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                    Gx.ymin = Math.min(Gx.ymin, ymin);\n                    Gx.ymax = Math.max(Gx.ymax, ymax);\n                }\n\n                this.inPan = true; // prevent recursive pans\n                var evt = document.createEvent('Event');\n                evt.initEvent('ypan', true, true);\n                evt.level = Mx.level;\n                evt.xmin = Mx.stk[Mx.level].xmin;\n                evt.ymin = Mx.stk[Mx.level].ymin;\n                evt.xmax = Mx.stk[Mx.level].xmax;\n                evt.ymax = Mx.stk[Mx.level].ymax;\n                mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n                this.inPan = false;\n\n                plot.refresh();\n                // MSGDO(MSK_PANY, Mx.level); // just sets plotinfo.xmin and\n                // xmax into the MQD for the menu\n                SIGPLOT_PAN = true;\n            }\n            // TODO Later - Implement a messagebox status method\n            // else if (warn) {\n            // mx.message('All panned out', -1.0);\n            // }\n        } else {\n            xmin = Mx.stk[k].xmin;\n            xmax = Mx.stk[k].xmax;\n            xran = xmax - xmin;\n            if (action === 'XPAN') {\n                scrollbarState = Mx.scrollbar_x;\n\n                var out = {\n                    ps: xmin,\n                    pe: xmax\n                };\n                i = mx\n                    .scrollbar(Mx, sbx, Gx.pl, Gx.pr, Gx.pt, Gx.pt + Gx.pthk, out, Gx.panxmin, Gx.panxmax,\n                        mouseEvent, scrollbarState);\n                xmin = out.ps;\n                xmax = out.pe;\n                // TODO: Warn only if Scrollbox arrow is pressed and no\n                // movement.\n                if (sbx.action !== 0) {\n                    j = mx.scroll(Mx, sbx, mx.XW_UPDATE, undefined,\n                        scrollbarState);\n                }\n                warn = false;\n            } else if (action === 'XCENTER') {\n                // Original code : xmin = xmin + xran * (Mx.xpos - (Mx.l + Gx.r)\n                // / 2) / (Mx.r - Mx.l) // TODO Worry about any int division\n                // here?\n                xmin = xmin + xran * (Mx.xpos - (Mx.l + Mx.r) / 2) / (Mx.r - Mx.l);\n                if (xmin !== Mx.stk[k].xmin) {\n                    xmax = xmin + xran;\n                }\n                warn = false;\n            }\n\n            if (Mx.stk[k].xmin !== xmin || Mx.stk[k].xmax !== xmax) {\n                Mx.stk[k].xmin = xmin;\n                Mx.stk[k].xmax = xmax;\n                if (!Gx.xdata && Mx.level === 1) {\n                    Gx.xmin = Mx.stk[1].xmin;\n                    Gx.xmax = Mx.stk[1].xmax;\n                }\n\n                this.inPan = true; // prevent recursive pans\n                var evt = document.createEvent('Event');\n                evt.initEvent('xpan', true, true);\n                evt.level = Mx.level;\n                evt.xmin = Mx.stk[Mx.level].xmin;\n                evt.ymin = Mx.stk[Mx.level].ymin;\n                evt.xmax = Mx.stk[Mx.level].xmax;\n                evt.ymax = Mx.stk[Mx.level].ymax;\n                mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n                this.inPan = false;\n\n                plot.refresh();\n                // MSGDO (MSK_PANX, Mx.level); // just sets plotinfo.xmin and\n                // xmax into the MQD for the menu\n                SIGPLOT_PAN = true;\n            }\n            // TODO Later - Implement a messagebox status method\n            // else if (warn) {\n            // mx.message('All panned out', -1.0);\n            // }\n        }\n\n        return SIGPLOT_PAN;\n    }\n\n    /**\n     * Direct method to handle the dragging of a scrollbar.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param scrollAction\n     *            The scroll action being performed. Either \"YPAN\" or \"XPAN\" are\n     *            accepted.\n     * @param event\n     *            The mouse move event.\n     * @private\n     * @memberOf sigplot\n     */\n    function drag_scrollbar(plot, scrollAction, event) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        var min;\n        var max;\n\n        // ----- Retrieve appropriate SCROLLBAR -----\n        var scrollbar;\n        if (scrollAction === \"XPAN\") {\n            scrollbar = plot._Mx.scrollbar_x;\n        } else if (scrollAction === \"YPAN\") {\n            scrollbar = plot._Mx.scrollbar_y;\n        } else {\n            throw \"Unable to drag scrollbar - scrollAction is not 'XPAN' or 'YPAN'!!\";\n        }\n\n        // ----- OLD SIGPLOT.PAN Logic -----\n        scrollbar.flag = -12; // TODO Necessary?\n        var k = Mx.level;\n        if (scrollAction === \"XPAN\") {\n            min = Mx.stk[k].xmin;\n            max = Mx.stk[k].xmax;\n        } else if (scrollAction === \"YPAN\") {\n            min = Mx.stk[k].ymin;\n            max = Mx.stk[k].ymax;\n        } else {\n            min = undefined;\n            max = undefined;\n        }\n\n        // ----- MX.SCROLLBAR Logic -----\n        var rangeOut = {\n            \"min\": min,\n            \"max\": max\n        };\n        drag_updateRange(Mx, Gx, scrollbar, scrollAction, rangeOut, event);\n        min = rangeOut.min;\n        max = rangeOut.max;\n\n        // ----- UPDATE SCROLLBAR -----\n        scrollbar.smin = min;\n        scrollbar.srange = max - min;\n        mx.redrawScrollbar(scrollbar, Mx, undefined);\n\n        // ----- Update the viewbox -----\n        updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange,\n            scrollAction.slice(0, 1));\n\n        this.inPan = true; // prevent recursive pans\n        var evt = document.createEvent('Event');\n        if (scrollAction === \"XPAN\") {\n            evt.initEvent('xpan', true, true);\n        } else if (scrollAction === \"YPAN\") {\n            evt.initEvent('ypan', true, true);\n        }\n        evt.level = Mx.level;\n        evt.xmin = Mx.stk[Mx.level].xmin;\n        evt.ymin = Mx.stk[Mx.level].ymin;\n        evt.xmax = Mx.stk[Mx.level].xmax;\n        evt.ymax = Mx.stk[Mx.level].ymax;\n        mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n        this.inPan = false;\n\n        scrollbar.action = 0; // TODO New step - reset action of the scrollbar\n        // after drag is done...\n        plot.refresh();\n    }\n\n    /**\n     * Method to update plot range based on a drag event. Takes the mouse offset\n     * introduced by the drag and adds a scale factor.\n     *\n     * @param Gx\n     *            The GX Context to work with.\n     * @param scrollbar\n     *            The Scrollbar to use.\n     * @param scrollAction\n     *            The scroll action being performed. Either \"YPAN\" or \"XPAN\" are\n     *            accepted.\n     * @param range\n     *            The plot' min and max range values to update.\n     * @param event\n     *            The mouse move event.\n     *\n     * @private\n     * @memberOf sigplot\n     */\n    function drag_updateRange(Mx, Gx, scrollbar, scrollAction, range, event) {\n        scrollbar.action = mx.SB_DRAG;\n\n        if (scrollAction === \"YPAN\") {\n            var scaleFactor = Mx.scrollbar_y.trange / Mx.scrollbar_y.h;\n            if (scrollbar.origin === 4) { // inverted y\n                scaleFactor *= -1;\n            }\n            var mouseOffset = event.screenY - Gx.panning.ypos;\n            var realOffset = mouseOffset * scaleFactor;\n\n            if ((Gx.panning.ymin - realOffset) < Gx.panymin) { // At the left\n                // edge\n                range.max = Gx.panymin + (range.max - range.min);\n                range.min = Gx.panymin;\n            } else if ((Gx.panning.ymax - realOffset) > Gx.panymax) { // At\n                // the\n                // right\n                // edge\n                range.min = Gx.panymax - (range.max - range.min);\n                range.max = Gx.panymax;\n            } else {\n                range.min = Gx.panning.ymin - realOffset;\n                range.max = Gx.panning.ymax - realOffset;\n            }\n        } else if (scrollAction === \"XPAN\") {\n            var scaleFactor = Mx.scrollbar_x.trange / Mx.scrollbar_x.w;\n            if (scrollbar.origin === 3) { // inverted x\n                scaleFactor *= -1;\n            }\n            var mouseOffset = event.screenX - Gx.panning.xpos;\n            var realOffset = mouseOffset * scaleFactor;\n\n            if ((Gx.panning.xmin + realOffset) < Gx.panxmin) { // At the left\n                // edge\n                range.max = Gx.panxmin + (range.max - range.min);\n                range.min = Gx.panxmin;\n            } else if ((Gx.panning.xmax + realOffset) > Gx.panxmax) { // At\n                // the\n                // right\n                // edge\n                range.min = Gx.panxmax - (range.max - range.min);\n                range.max = Gx.panxmax;\n            } else {\n                range.min = Gx.panning.xmin + realOffset;\n                range.max = Gx.panning.xmax + realOffset;\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function setupPrompt(plot, promptText, isValid, onSuccess, inputValue,\n        xpos, ypos, callback) {\n        var Mx = plot._Mx;\n\n        if (Mx.prompt) {\n            throw \"Prompt already exists! Can only have one prompt at a time!\";\n        }\n\n        // Disable Mx keypress/mouse listeners\n        mx.disableListeners(Mx);\n\n        // Disable Plot keypress/mouse listeners\n        plot.disable_listeners();\n\n        // Add on to the onSuccess method with plot specifics\n        var realOnSuccess = function(plot, onSuccess) {\n            return function(value) {\n                onSuccess(value);\n\n                // Re-enable Mx keypress/mouse listeners\n                mx.enableListeners(Mx);\n\n                // Re-enable Plot keypress/mouse listeners\n                plot.enable_listeners();\n\n                plot.refresh();\n\n                if (callback !== undefined) {\n                    callback();\n                }\n            };\n        };\n\n        var refresh = function() { // TODO Refactor this setup method to be\n            // more like mx.menu/main menu widget?\n            plot.refresh();\n        };\n\n        // Create the prompt\n        var errorMessageTimeout = 5000;\n\n        try {\n            mx.prompt(Mx, promptText, isValid, realOnSuccess(plot, onSuccess),\n                refresh, inputValue, xpos, ypos, errorMessageTimeout);\n        } catch (err) {\n            console.log(\"ERROR: Failed to set up prompt due to: \" + err);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function enable_listeners(plot) {\n        var Mx = plot._Mx;\n        mx.addEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n        mx.addEventListener(Mx, \"mousemove\", plot.throttledOnMouseMove, false);\n        document.addEventListener(\"mouseup\", plot.docMouseUp, false);\n        mx.addEventListener(Mx, \"mouseup\", plot.mouseup, false);\n        window.addEventListener(\"mousedown\", plot.dragMouseDownHandler, false);\n        window.addEventListener(\"mousemove\", plot.throttledDragOnMouseMove, false);\n        window.addEventListener(\"mouseup\", plot.dragMouseUpHandler, false);\n        window.addEventListener(\"wheel\", plot.wheelHandler, false);\n        window.addEventListener(\"mousewheel\", plot.wheelHandler, false);\n        window.addEventListener(\"DOMMouseScroll\", plot.wheelHandler, false);\n        window.addEventListener(\"keypress\", plot.onkeypress, false);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function disable_listeners(plot) {\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n        mx.removeEventListener(Mx, \"mousemove\", plot.throttledOnMouseMove,\n            false);\n        document.removeEventListener(\"mouseup\", plot.docMouseUp, false);\n        mx.removeEventListener(Mx, \"mouseup\", plot.mouseup, false);\n        window.removeEventListener(\"mousedown\", plot.dragMouseDownHandler,\n            false);\n        window.removeEventListener(\"mousemove\", plot.throttledDragOnMouseMove,\n            false);\n        window.removeEventListener(\"mouseup\", plot.dragMouseUpHandler, false);\n        window.removeEventListener(\"wheel\", plot.wheelHandler, false);\n        window.removeEventListener(\"mousewheel\", plot.wheelHandler, false);\n        window.removeEventListener(\"DOMMouseScroll\", plot.wheelHandler, false);\n        window.removeEventListener(\"keypress\", plot.onkeypress, false);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function display_specs(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var ctx = Mx.canvas.getContext(\"2d\");\n\n        // section logic\n        if (Gx.sections !== 0) {\n            // TODO\n        } else {\n            Gx.isec = 0;\n        }\n\n        // transform into realworld coordinates\n        // is already done by the mousemove listener\n        // adjust for abscissa mode\n        if (Mx.warpbox) {\n            var re = pixel_to_real(plot, Mx.warpbox.xo, Mx.warpbox.yo);\n            var rwh = pixel_to_real(plot, Mx.warpbox.xl, Mx.warpbox.yl);\n\n            Gx.aretx = re.x;\n            Gx.arety = re.y;\n            Gx.dretx = rwh.x - re.x;\n            Gx.drety = rwh.y - re.y;\n        } else {\n            Gx.aretx = Gx.retx;\n            Gx.arety = Gx.rety;\n            Gx.dretx = Gx.retx - Gx.xmrk;\n            Gx.drety = Gx.rety - Gx.ymrk;\n        }\n\n        if ((Gx.cmode === 5) && (Gx.iabsc === 1)) {\n            Gx.iabsc = 2;\n        } // R/I mode\n        if (Gx.iabsc === 1) { // index\n            Gx.aretx = Math.round((Gx.aretx - Gx.xstart) / Gx.xdelta);\n            if (!Gx.index) {\n                Gx.aretx += 1;\n            }\n            Gx.dretx = Math.round(Gx.dretx / Gx.xdelta);\n        } else if (Gx.iabsc === 2) { // 1/absc\n            if (Gx.aretx !== 0.0) {\n                Gx.aretx = 1.0 / Gx.aretx;\n            }\n            if (Gx.arety !== 0.0) {\n                Gx.arety = 1.0 / Gx.arety;\n            }\n            if (Gx.dretx !== 0.0) {\n                Gx.dretx = 1.0 / Gx.dretx;\n            }\n            if (Gx.drety !== 0.0) {\n                Gx.drety = 1.0 / Gx.drety;\n            }\n        }\n\n        if ((!Gx.show_readout) || (Mx.widget)) {\n            return;\n        }\n\n        // Clear the specs area\n        // First clear the y-row\n        ctx.fillStyle = Mx.bg;\n        var iy = Math.floor(Mx.height - 2.5 * Mx.text_h);\n        ctx.fillRect(Mx.text_w, iy - 1, 49 * Mx.text_w, iy + 1.5 * Mx.text_h);\n\n        // Then clear the x-row\n        iy = Math.floor(Mx.height - 0.5 * Mx.text_h);\n        var k = Math.max(Gx.pr + Mx.text_w, Mx.width - Mx.text_w * 2);\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(k, iy - Mx.text_h, Mx.text_w, Mx.text_h);\n\n        if (Gx.autohide_readout && !plot.mouseOnCanvas && !Gx.panning) {\n            return;\n        }\n\n        var xval, yval, xdelta, ydelta;\n        // TODO handle xfmt/yfmt using m.d2a_form equivalent\n        if ((Gx.iabsc === 0) && (Gx.ylab === 4)) {\n            yval = (m.sec2tspec(Gx.arety) + \"                \").substring(0, 16);\n            ydelta = (m.sec2tspec(Gx.drety, \"delta\") + \"                \").substring(0, 16);\n        } else {\n            yval = mx.format_g(Gx.arety, 16, 9, true);\n            ydelta = mx.format_g(Gx.drety, 16, 9);\n        }\n        if ((Gx.iabsc === 0) && (Gx.xlab === 4)) {\n            xval = (m.sec2tspec(Gx.aretx) + \"                \").substring(0, 16);\n            xdelta = (m.sec2tspec(Gx.dretx, \"delta\") + \"                \").substring(0, 16);\n        } else {\n            xval = mx.format_g(Gx.aretx, 16, 9, true);\n            xdelta = mx.format_g(Gx.dretx, 16, 9);\n        }\n\n        var chara = \"y: \" + yval + \" dy: \" + ydelta + \" L=\" + Mx.level + \" \" + cxm[Gx.cmode - 1];\n        var charb = \"x: \" + xval + \" dx: \" + xdelta + \" \" + cam[Gx.iabsc];\n        if (Gx.iabsc === 3) {\n            if (Gx.dretx === 0.0) {\n                chara = chara.substr(0, 20) + \"sl: Inf             \" + chara.substr(40, chara.length);\n            } else {\n                chara = chara.substr(0, 20) + \"sl: \" + mx.format_g(Gx.drety / Gx.dretx, 16, 9) + chara.substr(40, chara.length);\n            }\n        }\n\n        iy = Math.floor(Mx.height - 1.5 * Mx.text_h);\n        mx.text(Mx, Mx.text_w, iy, chara);\n        iy = Math.floor(Mx.height - 0.5 * Mx.text_h);\n        mx.text(Mx, Mx.text_w, iy, charb);\n\n        if (mx.LEGACY_RENDER) {\n            // display controls indicator\n            if (k < Mx.width) {\n                if (Gx.cntrls > 0) {\n                    mx.text(Mx, k, iy, 'C');\n                } else {\n                    mx.text(Mx, k, iy, ' ');\n                }\n            }\n        }\n\n        // draw color bar - large\n        var x = 0;\n        var y = 0;\n        var w = 0;\n        var h = 0;\n        if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n            var plot_height = Mx.b - Mx.t;\n\n            x = Mx.r + 35;\n            y = Mx.t + (1 / 8) * plot_height;\n            w = 5 * Mx.text_w;\n            h = (3 / 4) * plot_height;\n\n            // If I have a large color bar, I probably also want to add buttons\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            ctx.strokeStyle = \"rgba(124, 123, 121, 0.8)\";\n            ctx.fillStyle = \" rgba(124, 123, 121, 0.8)\";\n\n            // For more precise referencing\n            var colorbar_x = x;\n            var colorbar_y = y;\n            var colorbar_width = w;\n            var colorbar_height = h;\n            var button_width = colorbar_width - 2;\n            var button_height = button_width / 2;\n            var button_x = colorbar_x + ((colorbar_width - button_width) / 2);\n            var button_y = colorbar_y - 10;\n\n            // Draw the top button\n            ctx.beginPath();\n            ctx.moveTo(button_x, button_y);\n            ctx.lineTo(button_x + button_width, button_y);\n            ctx.lineTo(button_x + (1 / 2) * button_width, button_y - button_height);\n            ctx.lineTo(button_x, button_y);\n            ctx.stroke();\n            ctx.fill();\n\n            // Draw the bottom button\n            var button_y_2 = button_y + colorbar_height + 20;\n\n            ctx.beginPath();\n            ctx.moveTo(button_x, button_y_2);\n            ctx.lineTo(button_x + button_width, button_y_2);\n            ctx.lineTo(button_x + (1 / 2) * button_width, button_y_2 + button_height);\n            ctx.lineTo(button_x, button_y_2);\n            ctx.stroke();\n            ctx.fill();\n\n            // Store this info so we can access it later\n\n            Gx.cbb_top_x1 = button_x;\n            Gx.cbb_top_y1 = button_y;\n            Gx.cbb_bot_x1 = button_x;\n            Gx.cbb_bot_y1 = button_y_2;\n            Gx.cbb_width = button_width;\n            Gx.cbb_height = button_height;\n\n        } else { // draw a small colorbar\n            x = (49 * Mx.text_w) - 3;\n            y = Mx.height - Mx.text_h * 2.5;\n            w = Mx.text_w;\n            h = Mx.text_h * 2;\n        }\n\n        mx.colorbar(Mx, x, y, w, h);\n\n        //draw boxes for the p_cuts\n        if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n            draw_pcut_y(plot);\n            draw_pcut_x(plot);\n        }\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function scale_base(plot, mode, xxmin, xxmax, xlab, ylab) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var load = (mode.get_data === true);\n\n        Gx.panxmin = 1.0;\n        Gx.panxmax = -1.0;\n        Gx.panymin = 1.0;\n        Gx.panymax = -1.0;\n        var xmin = xxmin;\n        var xmax = xxmax;\n        var noxmin = (xmin === undefined);\n        var noxmax = (xmax === undefined);\n        if (Gx.lyr.length === 0) {\n            Gx.panxmin = -1.0;\n            Gx.panxmax = 1.0;\n            Gx.panymin = -1.0;\n            Gx.panymax = 1.0;\n        } else {\n            if (xlab === undefined) {\n                Gx.xlab = Gx.lyr[0].xlab;\n            }\n            if (ylab === undefined) {\n                Gx.ylab = Gx.lyr[0].ylab;\n            }\n\n            for (var n = 0; n < Gx.lyr.length; n++) {\n                if (Gx.lyr[n].display === false) {\n                    continue;\n                }\n                if (noxmin) {\n                    xmin = Gx.lyr[n].xmin;\n                }\n\n                if (noxmax) {\n                    xmax = Gx.lyr[n].xmax;\n                }\n\n                if (Gx.xlab !== Gx.lyr[n].xlab) {\n                    Gx.xlab = 0; // If the layers aren't consistent use None\n                }\n                if (Gx.ylab !== Gx.lyr[n].ylab) {\n                    Gx.ylab = 0; // If the layers aren't consistent use None\n                }\n\n                if (load) {\n                    Gx.lyr[n].get_data(xmin, xmax);\n                }\n\n                if (Gx.autox > 0 || Gx.autoy > 0) {\n                    while (xmin < xmax) {\n                        // get_data fills in the layer xbuf/ybuf with data\n                        Gx.lyr[n].get_data(xmin, xmax);\n\n                        // have the layer prep it's data to be rendered\n                        var npts = Gx.lyr[n].prep(xmin, xmax);\n\n                        // If both All and Expand are provided we\n                        // need to look at the entire file to auto-scale it\n                        if (Gx.all && Gx.expand) {\n                            if (Gx.lyr[n].size === 0) {\n                                xmin = xmax;\n                            } else {\n                                if (Gx.index) {\n                                    xmin = xmin + npts;\n                                } else {\n                                    if (Gx.lyr[n].xdelta >= 0) {\n                                        xmin = xmin + (Gx.lyr[n].size * Gx.lyr[n].xdelta);\n                                    } else {\n                                        xmax = xmax + (Gx.lyr[n].size * Gx.lyr[n].xdelta);\n                                    }\n                                }\n                            }\n                        } else {\n                            xmin = xmax;\n                        }\n                    }\n                } else {\n                    Gx.lyr[n].prep(1.0, -1.0);\n                }\n            }\n        }\n\n        var xran = Gx.panxmax - Gx.panxmin;\n        if (xran < 0.0) {\n            Gx.panxmax = Gx.panxmin;\n            Gx.panxmin = Gx.panxmax + xran;\n            xran = -xran;\n        }\n        if (xran <= 1.0e-20) {\n            Gx.panxmin = Gx.panxmin - 1.0;\n            Gx.panxmax = Gx.panxmax + 1.0;\n        }\n\n        if (((Gx.autox & 1) !== 0) && noxmin) {\n            Mx.stk[0].xmin = Gx.panxmin;\n        }\n        if (((Gx.autox & 2) !== 0) && noxmax) {\n            Mx.stk[0].xmax = Gx.panxmax;\n            if (!(Gx.all || Gx.xdata)) {\n                for (var n = 0; n < Gx.lyr.length; n++) {\n                    xmax = Math.min(Gx.lyr[n].xmax, Mx.stk[0].xmax);\n                    var dpts = Math.abs((xmax - Gx.lyr[n].xmin) / Gx.lyr[n].xdelta) - Gx.bufmax + 1.0;\n                    if (dpts > 0) {\n                        Mx.stk[0].xmax = xmax - dpts * Math.abs(Gx.lyr[n].xdelta);\n                    }\n                }\n            }\n        }\n\n        if (((Gx.autoy & 1) !== 0)) {\n            Mx.stk[0].ymin = Gx.panymin;\n        }\n        if (((Gx.autoy & 2) !== 0)) {\n            Mx.stk[0].ymax = Gx.panymax;\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function pixel_to_real(plot, xpos, ypos) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ret = mx.pixel_to_real(Mx, xpos, ypos);\n        if (Gx.index) {\n            ret.x = ret.x * Gx.xdelta;\n        }\n\n        return ret;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function coordsInRectangle(x, y, rect_x, rect_y, rect_width, rect_height) {\n        return (x >= rect_x && x <= rect_x + rect_width && y >= rect_y && y <= rect_y + rect_height);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function coordsInTriangle(x, y, tri_x1, tri_y1, tri_x2, tri_y2, tri_x3, tri_y3) {\n        // Uses barycentric coordinates\n        // https://en.wikipedia.org/wiki/Barycentric_coordinate_system ( and http://blackpawn.com/texts/pointinpoly/)\n\n        // Compute vectors\n        var v0 = [tri_x3 - tri_x1, tri_y3 - tri_y1];\n        var v1 = [tri_x2 - tri_x1, tri_y2 - tri_y1];\n        var v2 = [x - tri_x1, y - tri_y1];\n\n        // Compute dot products\n        var dot00 = (v0[0] * v0[0]) + (v0[1] * v0[1]);\n        var dot01 = (v0[0] * v1[0]) + (v0[1] * v1[1]);\n        var dot02 = (v0[0] * v2[0]) + (v0[1] * v2[1]);\n        var dot11 = (v1[0] * v1[0]) + (v1[1] * v1[1]);\n        var dot12 = (v1[0] * v2[0]) + (v1[1] * v2[1]);\n\n        var inv_denom = 1 / (dot00 * dot11 - dot01 * dot01);\n\n        var u = (dot11 * dot02 - dot01 * dot12) * inv_denom;\n        var v = (dot00 * dot12 - dot01 * dot02) * inv_denom;\n\n        /*\n        console.log(\"u \", u);\n        console.log(\"v \", v);\n        */\n\n        return (u >= 0 && v >= 0 && u + v < 1);\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function inPanRegion(plot, coord) {\n        var inPanRegion = false;\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var x = 0;\n        var y = 0;\n        if (coord === undefined) {\n            x = Mx.xpos;\n            y = Mx.ypos;\n\n            if (!plot.mouseOnCanvas) {\n                return false;\n            }\n        } else {\n            x = coord.x;\n            y = coord.y;\n        }\n\n        var command = ' ';\n\n        if (!Gx.pan) {\n            return false;\n        }\n\n        var outside_right_border = (x > Mx.r);\n        var above_top_border = (y <= Gx.pt + Gx.pthk + 2);\n        var below_bottom_border = (y > Gx.pt - 2);\n        var between_top_and_bottom = (y >= Mx.t && y <= Mx.b);\n        var between_left_and_right = (x >= Gx.pl && x <= Gx.pr);\n        var has_bottom_scrollbar = (Gx.show_readout || (Gx.x_scrollbar_location === \"bottom\"));\n\n        if (outside_right_border && between_top_and_bottom) { // YPAN\n            command = 'YPAN'; // Y scrollbar\n            // TODO do we want to\n            // reset the xposition?\n\n            if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                // Need to do an additional check since there is area outside Mx.r that is NOT the pan region\n                var right_of_colorbar = (x > Mx.r + 100); // Mx.r = Mx.r - 100 is how we moved it initally\n                if (right_of_colorbar) {\n                    inPanRegion = true;\n                } else {\n                    inPanRegion = false;\n                }\n\n            } else {\n                Mx.xpos = Gx.pyl + m.trunc(Gx.pthk / 2);\n                inPanRegion = true;\n            }\n            //possibly do another check for p_cuts as well;\n        } else if (has_bottom_scrollbar && between_left_and_right && below_bottom_border) {\n            command = 'XPAN'; // X scrollbar\n            Mx.ypos = Gx.pt + m.trunc(Gx.pthk / 2); // TODO Do we want to reset\n            // the yposition?\n            inPanRegion = true;\n        } else if (!has_bottom_scrollbar && between_left_and_right && above_top_border) {\n            command = 'XPAN'; // X scrollbar\n            Mx.ypos = Gx.pt + m.trunc(Gx.pthk / 2); // TODO Do we want to reset\n            // the yposition?\n            inPanRegion = true;\n        }\n\n        return {\n            inPanRegion: inPanRegion,\n            command: command\n        };\n    }\n\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function inPanCenterRegion(plot) {\n        var inCenterRegion = false;\n        var Mx = plot._Mx;\n        var x = Mx.xpos;\n        var y = Mx.ypos;\n        var th = Mx.text_h;\n        var tw = Mx.text_w;\n        var command = ' ';\n\n        if (x < Mx.l - tw && y <= Mx.b && y >= Mx.t) { // YCENTER\n            // Mx.canvas.getContext(\"2d\").strokeStyle = \"blue\";\n            // Mx.canvas.getContext(\"2d\").strokeRect(0, Mx.t, Mx.l - tw, Mx.b -\n            // Mx.t);\n            command = 'YCENTER';\n            inCenterRegion = true;\n        } else if (y > Mx.b + m.trunc(0.5 * tw) && y <= Mx.b + m.trunc(m.trunc(3 * th) / 2) && x >= Mx.l && x <= Mx.r) { // XCENTER\n            // Mx.canvas.getContext(\"2d\").strokeStyle = \"red\";\n            // Mx.canvas.getContext(\"2d\").strokeRect(Mx.l, Mx.b + m.trunc(.5 *\n            // tw),\n            // Mx.r - Mx.l, (Mx.b + m.trunc(m.trunc(3 * th) / 2)) - (Mx.b +\n            // m.trunc(.5 * tw)));\n            command = 'XCENTER';\n            inCenterRegion = true;\n        }\n\n        return {\n            inCenterRegion: inCenterRegion,\n            command: command\n        };\n    }\n\n    /**\n     * Returns true if position is within the given scrollbar's area. Depends on\n     * mx.scroll_real2pix method.\n     *\n     * @param position\n     *            An object containing 'x' and 'y' pixel values that represent a\n     *            position.\n     * @param scrollbar\n     *            The scrollbar object itself.\n     *\n     * @private\n     * @memberOf sigplot\n     */\n    function onScrollbar(position, scrollbar) {\n        var s1;\n        var sw;\n\n        /*\n         * Compute s, the offset in pixels from the 'origin' of the scrollbar's\n         * on-screen region.\n         */\n        var s;\n        if (scrollbar.origin & 1) {\n            s = position.x - scrollbar.x;\n            if (scrollbar.origin & 2) {\n                s = scrollbar.w - s;\n            }\n        } else {\n            s = position.y - scrollbar.y;\n            if (scrollbar.origin <= 2) {\n                s = scrollbar.h - s;\n            }\n        }\n\n        // Update s1 and sw values\n        var scrollReal2PixOut = mx.scroll_real2pix(scrollbar);\n        s1 = scrollReal2PixOut.s1;\n        sw = scrollReal2PixOut.sw;\n\n        // Determine if mouse is on scrollbar\n        if (s >= s1 && s <= s1 + sw) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Performs the middle-click scroll-menu action specified on the plot.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param action\n     *            The scrollbar action to perform.\n     * @param direction\n     *            The scroll direction to update. Acceptable directions are\n     *            either \"XPAN\" or \"YPAN\".\n     * @memberOf sigplot\n     * @private\n     */\n    function middleClickScrollMenuAction(plot, action, direction) {\n        var Mx = plot._Mx;\n\n        // Determine the appropriate scrollbar to work with\n        var scrollbar;\n        if (direction === \"XPAN\") {\n            scrollbar = Mx.scrollbar_x;\n        } else if (direction === \"YPAN\") {\n            scrollbar = Mx.scrollbar_y;\n        }\n\n        // Set scrollbar action\n        scrollbar.action = action;\n        scrollbar.step = 0.1 * scrollbar.srange;\n        scrollbar.page = 9 * scrollbar.step;\n        scrollbar.scale = 2.0;\n\n        // Update min and range to the appropriate values based on action\n        mx.scroll(Mx, scrollbar, mx.XW_COMMAND, undefined, scrollbar);\n\n        // Update the viewbox based on new min and max values\n        updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange,\n            direction.slice(0, 1));\n\n        this.inPan = true; // prevent recursive pans\n        var evt = document.createEvent('Event');\n        if (direction === \"XPAN\") {\n            evt.initEvent('xpan', true, true);\n        } else if (direction === \"YPAN\") {\n            evt.initEvent('ypan', true, true);\n        }\n        evt.level = Mx.level;\n        evt.xmin = Mx.stk[Mx.level].xmin;\n        evt.ymin = Mx.stk[Mx.level].ymin;\n        evt.xmax = Mx.stk[Mx.level].xmax;\n        evt.ymax = Mx.stk[Mx.level].ymax;\n        mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n        this.inPan = false;\n\n    }\n\n    /**\n     * Updates a plot's viewbox along a given axis to the provided min and max\n     * values.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param newMin\n     *            The new minimum axis value to use\n     * @param newMax\n     *            The new maximum axis value to use\n     * @param axis\n     *            The axis to update. Acceptable axis values are \"X\" or \"Y\".\n     * @memberOf sigplot\n     * @private\n     */\n    function updateViewbox(plot, newMin, newMax, axis) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var k = Mx.level;\n\n        if (axis === \"X\") {\n            var xmin = newMin;\n            var xmax = newMax;\n\n            if (Mx.stk[k].xmin !== xmin || Mx.stk[k].xmax !== xmax) {\n                Mx.stk[k].xmin = xmin;\n                Mx.stk[k].xmax = xmax;\n                if (!Gx.xdata && Mx.level === 1) {\n                    Gx.xmin = Mx.stk[1].xmin;\n                    Gx.xmax = Mx.stk[1].xmax;\n                }\n                plot.refresh();\n            }\n        } else if (axis === \"Y\") {\n            var ymin = newMin;\n            var ymax = newMax;\n\n            if (ymin !== Mx.stk[k].ymin || ymax !== Mx.stk[k].ymax) {\n                Mx.stk[k].ymin = ymin;\n                Mx.stk[k].ymax = ymax;\n                if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                    Gx.ymin = Math.min(Gx.ymin, ymin);\n                    Gx.ymax = Math.max(Gx.ymax, ymax);\n                }\n                plot.refresh();\n            }\n        }\n    }\n\n    module.exports = sigplot;\n\n}());\n","/**\n * @license\n * File: m.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true*/\n\n//Uses Immediately-invoked Function Expressions (IIFE)s for namespaces\n//See http://addyosmani.com/blog/essential-js-namespacing/ for details.\n\n/* global module */\n/* global require */\n\n(function() {\n    'use strict';\n\n    var bluefile = require(\"./bluefile\");\n    var loglevel = require(\"loglevel\");\n\n    function m() {}\n\n    m.log = loglevel;\n\n    /**\n     *\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var PointArray = null;\n\n    /**\n     * True if we detected that we are on an iOS device\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);\n    if ((iOS) || // iOS doesn't support Float64\n        (typeof Float64Array === 'undefined') || // If it's undefined it's obviously not supported\n        (Float64Array.emulated) || // If it's emulated, don't waste time on extra precision\n        (!Float64Array.BYTES_PER_ELEMENT)) { // If bytes per element isn't defined, it's a buggy implementation (i.e. PhantomJS)\n        m.PointArray = Float32Array;\n    } else {\n        m.PointArray = Float64Array;\n    }\n\n\n    /** UNITS Structure:\n     *\t\t0: [\"None\", \"U\"],\n     *\t\t1: [\"Time\", \"sec\"],\n     *\t\t2: [\"Delay\", \"sec\"],\n     *\t\t3: [\"Frequency\", \"Hz\"],\n     *\t\t4: [\"Time code format\", \"\"],\n     *\t\t5: [\"Distance\", \"m\"],\n     *\t\t6: [\"Speed\", \"m/s\"],\n     *\t\t7: [\"Acceleration\", \"m/sec^2\"],\n     *\t\t8: [\"Jerk\", \"m/sec^3\"],\n     *\t\t9: [\"Doppler\", \"Hz\"],\n     *\t\t10: [\"Doppler rate\", \"Hz/sec\"],\n     *\t\t11: [\"Energy\", \"J\"],\n     *\t\t12: [\"Power\", \"W\"],\n     *\t\t13: [\"Mass\", \"g\"],\n     *\t\t14: [\"Volume\", \"l\"],\n     *\t\t15: [\"Angular power density\", \"W/ster\"],\n     *\t\t16: [\"Integrated power density\", \"W/rad\"],\n     *\t\t17: [\"Spatial power density\", \"W/m^2\"],\n     *\t\t18: [\"Integrated power density\", \"W/m\"],\n     *\t\t19: [\"Spectral power density\", \"W/MHz\"],\n     *\t\t20: [\"Amplitude\", \"U\"],\n     *\t\t21: [\"Real\", \"U\"],\n     *\t\t22: [\"Imaginary\", \"U\"],\n     *\t\t23: [\"Phase\", \"rad\"],\n     *\t\t24: [\"Phase\", \"deg\"],\n     *\t\t25: [\"Phase\", \"cycles\"],\n     *\t\t26: [\"10*Log\", \"U\"],\n     *\t\t27: [\"20*Log\", \"U\"],\n     *\t\t28: [\"Magnitude\", \"U\"],\n     *\t\t29: [\"Unknown\", \"U\"],\n     *\t\t30: [\"Unknown\", \"U\"],\n     *\t\t31: [\"General dimensionless\", \"\"],\n     *\t\t32: [\"Counts\", \"\"],\n     *\t\t33: [\"Angle\", \"rad\"],\n     *\t\t34: [\"Angle\", \"deg\"],\n     *\t\t35: [\"Relative power\", \"dB\"],\n     *\t\t36: [\"Relative power\", \"dBm\"],\n     *\t\t37: [\"Relative power\", \"dBW\"],\n     *\t\t38: [\"Solid angle\", \"ster\"],\n     *\t\t40: [\"Distance\", \"ft\"],\n     *\t\t41: [\"Distance\", \"nmi\"],\n     *\t\t42: [\"Speed\", \"ft/sec\"],\n     *\t\t43: [\"Speed\", \"nmi/sec\"],\n     *\t\t44: [\"Speed\", \"knots=nmi/hr\"],\n     *\t\t45: [\"Acceleration\", \"ft/sec^2\"],\n     *\t\t46: [\"Acceleration\", \"nmi/sec^2\"],\n     *\t\t47: [\"Acceleration\", \"knots/sec\"],\n     *\t\t48: [\"Acceleration\", \"G\"],\n     *\t\t49: [\"Jerk\", \"G/sec\"],\n     *\t\t50: [\"Rotation\", \"rps\"],\n     *\t\t51: [\"Rotation\", \"rpm\"],\n     *\t\t52: [\"Angular velocity\", \"rad/sec\"],\n     *\t\t53: [\"Angular velocity\", \"deg/sec\"],\n     *\t\t54: [\"Angular acceleration\", \"rad/sec^2\"],\n     *\t\t55: [\"Angular acceleration\", \"deg/sec^2\"],\n     *\t\t60: [\"Latitude\", \"deg\"],\n     *\t\t61: [\"Longitude\", \"deg\"],\n     *\t\t62: [\"Altitude\", \"ft\"],\n     *\t\t63: [\"Altitude\", \"m\"]\n     * @global\n     */\n    var UNITS = {\n        0: [\"None\", \"U\", true, true],\n        1: [\"Time\", \"sec\", true, true],\n        2: [\"Delay\", \"sec\", true, false],\n        3: [\"Frequency\", \"Hz\", true, true],\n        4: [\"Time code format\", \"\", true, false],\n        5: [\"Distance\", \"m\", true, true],\n        6: [\"Speed\", \"m/s\", true, true],\n        7: [\"Acceleration\", \"m/sec^2\", true, true],\n        8: [\"Jerk\", \"m/sec^3\", true, true],\n        9: [\"Doppler\", \"Hz\", true, false],\n        10: [\"Doppler rate\", \"Hz/sec\", true, true],\n        11: [\"Energy\", \"J\", true, true],\n        12: [\"Power\", \"W\", true, true],\n        13: [\"Mass\", \"g\", true, true],\n        14: [\"Volume\", \"l\", true, true],\n        15: [\"Angular power density\", \"W/ster\", true, true],\n        16: [\"Integrated power density\", \"W/rad\", true, true],\n        17: [\"Spatial power density\", \"W/m^2\", true, true],\n        18: [\"Integrated power density\", \"W/m\", false, true],\n        19: [\"Spectral power density\", \"W/MHz\", true, true],\n        20: [\"Amplitude\", \"U\", true, false],\n        21: [\"Real\", \"U\", true, false],\n        22: [\"Imaginary\", \"U\", true, false],\n        23: [\"Phase\", \"rad\", true, true],\n        24: [\"Phase\", \"deg\", false, true],\n        25: [\"Phase\", \"cycles\", false, true],\n        26: [\"10*Log\", \"U\", true, false],\n        27: [\"20*Log\", \"U\", true, false],\n        28: [\"Magnitude\", \"U\", true, false],\n        29: [\"Unknown\", \"U\", true, false],\n        30: [\"Unknown\", \"U\", false, false],\n        31: [\"General dimensionless\", \"\", true, true],\n        32: [\"Counts\", \"\", true, false],\n        33: [\"Angle\", \"rad\", true, false],\n        34: [\"Angle\", \"deg\", false, false],\n        35: [\"Relative power\", \"dB\", true, true],\n        36: [\"Relative power\", \"dBm\", false, true],\n        37: [\"Relative power\", \"dBW\", false, true],\n        38: [\"Solid angle\", \"ster\", true, true],\n        40: [\"Distance\", \"ft\", false, true],\n        41: [\"Distance\", \"nmi\", false, true],\n        42: [\"Speed\", \"ft/sec\", false, true],\n        43: [\"Speed\", \"nmi/sec\", false, true],\n        44: [\"Speed\", \"knots=nmi/hr\", false, true],\n        45: [\"Acceleration\", \"ft/sec^2\", false, true],\n        46: [\"Acceleration\", \"nmi/sec^2\", false, true],\n        47: [\"Acceleration\", \"knots/sec\", false, true],\n        48: [\"Acceleration\", \"G\", false, true],\n        49: [\"Jerk\", \"G/sec\", false, true],\n        50: [\"Rotation\", \"rps\", true, false],\n        51: [\"Rotation\", \"rpm\", false, false],\n        52: [\"Angular velocity\", \"rad/sec\", true, true],\n        53: [\"Angular velocity\", \"deg/sec\", false, true],\n        54: [\"Angular acceleration\", \"rad/sec^2\", true, true],\n        55: [\"Angular acceleration\", \"deg/sec^2\", false, true],\n        60: [\"Latitude\", \"deg\", true, false],\n        61: [\"Longitude\", \"deg\", true, false],\n        62: [\"Altitude\", \"ft\", true, false],\n        63: [\"Altitude\", \"m\", false, false]\n    };\n\n    m.UNITS = UNITS;\n\n    /** Common structure\n     * @private\n     */\n    m.Mc = {\n        // Colormaps are stored as 7 element tables which are then\n        //\tinterpolated to the number of colors actually used in a graphics routine\n        //\tcall to MX$COLORMAP.\n\n        // There are 4 colormap tables stored in the environment: A GREYSCALE,\n        // COLORRAMP, COLORWHEEL, COLORSPECTRUM, or SUNSET.  The specific values that\n        // are listed here are from xcolordef.prm (use the XCOLORMAP widget).\n        //\n        // The actual values are a result of tribal knowledge and years of experience\n        colormap: [{\n                name: \"Greyscale\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 60,\n                    red: 50,\n                    green: 50,\n                    blue: 50\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }]\n            }, {\n                name: \"Ramp Colormap\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 0,\n                    blue: 15\n                }, {\n                    pos: 10,\n                    red: 0,\n                    green: 0,\n                    blue: 50\n                }, {\n                    pos: 31,\n                    red: 0,\n                    green: 65,\n                    blue: 75\n                }, {\n                    pos: 50,\n                    red: 0,\n                    green: 85,\n                    blue: 0\n                }, {\n                    pos: 70,\n                    red: 75,\n                    green: 80,\n                    blue: 0\n                }, {\n                    pos: 83,\n                    red: 100,\n                    green: 60,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }]\n            }, {\n                name: \"Color Wheel\",\n                colors: [{\n                    pos: 0,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 20,\n                    red: 0,\n                    green: 80,\n                    blue: 40\n                }, {\n                    pos: 30,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 50,\n                    red: 10,\n                    green: 10,\n                    blue: 0\n                }, {\n                    pos: 65,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 88,\n                    red: 100,\n                    green: 40,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }]\n            }, {\n                name: \"Spectrum\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 75,\n                    blue: 0\n                }, {\n                    pos: 22,\n                    red: 0,\n                    green: 90,\n                    blue: 90\n                }, {\n                    pos: 37,\n                    red: 0,\n                    green: 0,\n                    blue: 85\n                }, {\n                    pos: 49,\n                    red: 90,\n                    green: 0,\n                    blue: 85\n                }, {\n                    pos: 68,\n                    red: 90,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 80,\n                    red: 90,\n                    green: 90,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 95,\n                    green: 95,\n                    blue: 95\n                }]\n            }, {\n                name: \"calewhite\",\n                colors: [{\n                    pos: 0,\n                    red: 100,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 16.666,\n                    red: 0,\n                    green: 0,\n                    blue: 100\n                }, {\n                    pos: 33.333,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 50,\n                    red: 0,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 66.666,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 83.333,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 0,\n                    blue: 100\n                }]\n            }, {\n                name: \"HotDesat\",\n                colors: [{\n                    pos: 0,\n                    red: 27.84,\n                    green: 27.84,\n                    blue: 85.88\n                }, {\n                    pos: 14.2857,\n                    red: 0,\n                    green: 0,\n                    blue: 35.69\n                }, {\n                    pos: 28.571,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 42.857,\n                    red: 0,\n                    green: 49.8,\n                    blue: 0\n                }, {\n                    pos: 57.14286,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 71.42857,\n                    red: 100,\n                    green: 37.65,\n                    blue: 0\n                }, {\n                    pos: 85.7143,\n                    red: 41.96,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 87.84,\n                    green: 29.8,\n                    blue: 29.8\n                }]\n            }, {\n                name: \"Sunset\",\n                colors: [{\n                    pos: 0,\n                    red: 10,\n                    green: 0,\n                    blue: 23\n                }, {\n                    pos: 18,\n                    red: 34,\n                    green: 0,\n                    blue: 60\n                }, {\n                    pos: 36,\n                    red: 58,\n                    green: 20,\n                    blue: 47\n                }, {\n                    pos: 55,\n                    red: 74,\n                    green: 20,\n                    blue: 28\n                }, {\n                    pos: 72,\n                    red: 90,\n                    green: 43,\n                    blue: 0\n                }, {\n                    pos: 87,\n                    red: 100,\n                    green: 72,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 76\n                }]\n            },\n            {\n                name: \"Hot\",\n                colors: [\"#000000\", \"#7f0000\", \"#b30000\", \"#d7301f\", \"#ef6548\", \"#fc8d59\", \"#fdbb84\", \"#fdd49e\", \"#fee8c8\", \"#fff7ec\", \"#ffffff\"]\n            }, {\n                name: \"Cold\",\n                colors: [\"#000000\", \"#023858\", \"#045a8d\", \"#0570b0\", \"#3690c0\", \"#74a9cf\", \"#a6bddb\", \"#d0d1e6\", \"#ece7f2\", \"#fff7fb\", \"#ffffff\"]\n            },\n            {\n                name: \"Purple\",\n                colors: [\"#230022\", \"#4d004b\", \"#810f7c\", \"#88419d\", \"#8c6bb1\", \"#8c96c6\", \"#9ebcda\", \"#bfd3e6\", \"#e0ecf4\", \"#f7fcfd\"]\n            }, {\n                name: \"BuGn\",\n                colors: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b']\n            }, {\n                name: \"YlOrBr\",\n                colors: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506']\n            }, {\n                name: \"YlGnBu\",\n                colors: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58']\n            }, {\n                name: \"YlOrRd\",\n                colors: [\"#000000\", \"#662506\", \"#993404\", \"#cc4c02\", \"#ec7014\", \"#fe9929\", \"#fec44f\", \"#fee391\", \"#fff7bc\", \"#ffffe5\", \"#ffffff\"]\n            }, {\n                name: \"GreyNRed\",\n                colors: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'].reverse()\n            }\n        ]\n    };\n\n    /** Pipe Size\n     * @private\n     */\n    m.PIPESIZE = 1024 * 1024;\n\n    /**\n     * Converts unit strings to number code\n     * @param\t{string}\tunitInput\tUser unit input\n     */\n    m.unit_lookup = function(unitInput) {\n        for (var i = 0; i < 64; i++) {\n            var u;\n            if (UNITS[i] === undefined) {\n                u = UNITS[0];\n            } else {\n                u = UNITS[i];\n            }\n            var first = u[0];\n            var second = u[1];\n            var comparer1 = u[0] + \" \" + u[1];\n            var comparer2 = u[0] + \"_\" + u[1];\n            if (unitInput === first) {\n                if (u[2]) {\n                    return i;\n                }\n            } else if (unitInput === second) {\n                if (u[3]) {\n                    return i;\n                }\n            } else if ((unitInput === comparer1) || (unitInput === comparer2)) {\n                return i;\n            }\n        }\n        return unitInput;\n    };\n\n    /**\n     * Creates new file with header initialized to type-1000 defaults\n     * and data appended. (tbd)\n     * @param\t{string}\tfilename\tName of File to Create\n     * @param  \t{array}\t\tdata\t\tInput data buffer\n     * @param  \t{array}\t  \toverrides\tList of fields/values to be overridden in the bluefile header\n     * @return \t{header} \thcb\t\tReturn <hcb> type-1000 bluefile header, filename=null\n     */\n    m.initialize = function(data, overrides) {\n        var hcb = new bluefile.BlueHeader(null);\n\n        hcb.version = 'BLUE';\n        hcb.size = 0;\n        hcb.type = 1000;\n        hcb.format = 'SF';\n        hcb.timecode = 0.0;\n        hcb.xstart = 0.0;\n        hcb.xdelta = 1.0;\n        hcb.xunits = 0;\n        hcb.subsize = 1;\n        hcb.ystart = 0.0;\n        hcb.ydelta = 1.0;\n        hcb.yunits = 0;\n        hcb.enabled_streaming_pcut = false;\n\n        if (!overrides) { /* if no overrides provided...set it to empty*/\n            overrides = {};\n        }\n\n        for (var field in overrides) {\n            hcb[field] = overrides[field];\n        }\n\n        //Convert xunits and yunits to numbers if they are strings\n        hcb[\"xunits\"] = m.unit_lookup(hcb[\"xunits\"]);\n        hcb[\"yunits\"] = m.unit_lookup(hcb[\"yunits\"]);\n\n\n        // Force type 2000 is subsize is specified\n        if (hcb[\"subsize\"] > 1) {\n            hcb.type = 2000;\n        } else if (Array.isArray(data) && Array.isArray(data[0])) {\n            //If this is a 2-D array automatically set subsize\n            hcb.type = 2000;\n            hcb.subsize = data[0].length;\n        }\n        hcb[\"class\"] = hcb.type / 1000;\n        // If this is a type 2000 , subsize *must* be provided\n        if ((hcb[\"class\"] === 2) && (hcb[\"subsize\"] === undefined)) {\n            throw \"subsize must be provided with type 2000 files\";\n        }\n\n\n        if (!overrides.pipe) {\n            hcb.setData(data);\n        } else {\n            hcb.pipe = true;\n            hcb.in_byte = 0;\n            hcb.out_byte = 0;\n            // TODO round pipe size to nearest number of elements\n            var pipesize = overrides.pipesize || m.PIPESIZE;\n\n            hcb.buf = new ArrayBuffer(pipesize);\n            hcb.setData(hcb.buf);\n            hcb.data_free = hcb.dview.length;\n        }\n\n        return hcb;\n    };\n\n    /**\n     * Convert type-2000 header internals to force GRAB and FILAD routines to treat file as a 1000-type file.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     */\n    m.force1000 = function(hcb) {\n        if (hcb[\"class\"] === 2) {\n            if ((hcb.size) && (!hcb.pipe)) {\n                hcb.size = hcb.subsize * hcb.size;\n            } else {\n                // assume the size is 0\n                hcb.size = 0;\n            }\n            hcb.bpe = hcb.bpe / hcb.subsize;\n            hcb.ape = 1;\n        }\n    };\n\n    /**\n     * Get data from file at specified start location.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{array}\t\tbufview\t\tData buffer to receive data\n     * @param\t{number}\tstart\t\tStart location\n     * @param\t{number}\tnget\t\tNumber of requested data\n     * @return\t{number}\tngot\t\tNumber of received data\n     */\n    m.grab = function(hcb, bufview, start, nget) {\n        if (!hcb.dview) {\n            return 0;\n        }\n\n        // TODO reformat\n        if (hcb.format[0] === 'C') {\n            start = start * 2;\n        }\n\n        nget = hcb.ape * nget; // TODO - this is never used????\n\n        //var ngot = Math.min(bufview.length, (hcb.dview.length-start)); //mmm\n        var ngot = Math.min(bufview.length, (hcb.dview.length - start));\n        // iOS doesn't have .set on TypedArrays\n        if (bufview.set === undefined) {\n            for (var i = 0; i < ngot; i++) {\n                bufview[i] = hcb.dview[start + i];\n            }\n        } else {\n            bufview.set(hcb.dview.subarray(start, start + ngot));\n        }\n        if (hcb.format[0] === 'C') {\n            ngot = ngot / 2;\n        }\n        return ngot;\n    };\n\n    /**\n     * Append data buffer to file specified in the bluefile header control block.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{array}\t\tdata\t\tData buffer\n     * @param   {boolean}       [sync=false]    dispatch onpipewrite syncronously\n     */\n    m.filad = function(hcb, data, sync) {\n        if (hcb.data_free < data.length) {\n            throw \"Pipe full\";\n        }\n        var sidx = hcb.in_byte / hcb.dview.BYTES_PER_ELEMENT;\n        var eidx = (sidx + data.length);\n        if (eidx > hcb.dview.length) {\n            var head = hcb.dview.length - sidx;\n            var tail = data.length - head;\n            if (data.subarray) {\n                hcb.dview.set(data.subarray(0, head), sidx);\n                hcb.dview.set(data.subarray(head, data.length), 0);\n            } else {\n                hcb.dview.set(data.slice(0, head), sidx);\n                hcb.dview.set(data.slice(head, data.length), 0);\n            }\n            hcb.in_byte = (tail * hcb.dview.BYTES_PER_ELEMENT);\n        } else {\n            hcb.dview.set(data, sidx);\n            hcb.in_byte = (eidx * hcb.dview.BYTES_PER_ELEMENT) % hcb.buf.byteLength;\n        }\n        hcb.data_free -= data.length;\n        if (hcb.onwritelisteners) {\n            for (var i = 0; i < hcb.onwritelisteners.length; i++) {\n                if (!sync) {\n                    window.setTimeout(hcb.onwritelisteners[i], 0);\n                } else {\n                    hcb.onwritelisteners[i]();\n                }\n            }\n        }\n    };\n\n    /**\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @return\t{number}\telements available\n     * @private\n     */\n    m.pavail = function(hcb) {\n        return hcb.dview.length - hcb.data_free;\n    };\n\n    /**\n     * Get data from file in dataflow fashion.\n     * @param\t{array}\t\thcb\tBluefile header control block\n     * @param \t{array}\t\tdview\tData buffer to receive data\n     * @param\t{number}\tnget\tInput variable name of parameter to receive data\n     * @param\t{number}\toffset\tOffset into file\n     * @return\t{number}\tngot\tNumber of data values gotten\n     */\n    // WARNING - nget is number of scalars...which differs from the normal API\n    m.grabx = function(hcb, dview, nget, offset) {\n        var navail = hcb.dview.length - hcb.data_free;\n        if (offset === undefined) {\n            offset = 0;\n        }\n        if (!nget) {\n            nget = Math.min(dview.length - offset, navail);\n        } else if (nget > dview.length - offset) {\n            throw \"m.grabx : nget larger then available buffer space\";\n        }\n        if (nget < 0) {\n            throw \"m.grabx : nget cannot be negative\";\n        }\n        if (nget > navail) {\n            return 0;\n        }\n\n        var sidx = hcb.out_byte / hcb.dview.BYTES_PER_ELEMENT;\n        var eidx = (sidx + nget);\n        if (eidx >= hcb.dview.length) {\n            var head = hcb.dview.length - sidx;\n            eidx = eidx - hcb.dview.length;\n            dview.set(hcb.dview.subarray(sidx, hcb.dview.length), offset);\n            dview.set(hcb.dview.subarray(0, eidx), offset + head);\n        } else {\n            dview.set(hcb.dview.subarray(sidx, eidx), offset);\n        }\n        hcb.out_byte = (eidx * hcb.dview.BYTES_PER_ELEMENT) % hcb.buf.byteLength;\n        hcb.data_free += nget;\n        var ngot = nget;\n        return ngot;\n    };\n\n\n    /**\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{number}\tonwrite\t\t-\n     * @private\n     */\n    m.addPipeWriteListener = function(hcb, onwrite) {\n        if (!hcb.onwritelisteners) {\n            hcb.onwritelisteners = [];\n        }\n        if (hcb.onwritelisteners.indexOf(onwrite) === -1) {\n            hcb.onwritelisteners.push(onwrite);\n        }\n    };\n\n    /**\n     * Returns ASCII description of units code\n     * @param \t{number}\tUNITS array index (see global UNITS)\n     * @return \t{string}\tASCII code pair\n     */\n    // ~= M$UNITS_NAME\n    m.units_name = function(units) {\n        var u = UNITS[units];\n        return u[0] + \" (\" + u[1] + \")\";\n    };\n\n    /**\n     * Extract filename from full path\n     * @param \t{string}\tpathfilename\tFull path, including filename\n     * @return\t{string}\tfilename\t    Trimmed filename\n     */\n    m.trim_name = function(pathfilename) {\n        var i = pathfilename.indexOf(']');\n        if (i === -1) {\n            i = pathfilename.indexOf('/');\n        }\n        if (i === -1) {\n            i = pathfilename.indexOf(':');\n        }\n        var j = pathfilename.substr(i + 1, pathfilename.length).indexOf('.');\n        if (j < 0) {\n            j = pathfilename.length - i;\n        }\n        var filename = pathfilename.substr(i + 1, i + j + 1);\n        return filename;\n    };\n\n    /**\n     * Takes an integer code for units and a multiplier and returns the string representation of the two.\n     * Example: l = m.label(1,1.0e3) ==> l =  Time (Ksec)\n     * @param \t{number}\tunits\tInteger code for Unit (see global UNITS)\n     * @param \t{number} \tmult\tUnits multiplier (i.e 1.0e3 ==> 'K')\n     * @return {string} representation of units and multiplier\n     */\n    // ~= M$LABEL\n    m.label = function(units, mult) {\n        var u = [\"Unknown\", \"U\"];\n\n        if (typeof units === \"string\") {\n            u = [units, null];\n        } else if (Array.isArray(units)) {\n            u = units;\n        } else {\n            u = UNITS[units];\n            if (u === undefined) {\n                u = [\"Unknown\", \"U\"];\n            }\n        }\n\n        var prefix = m.mult_prefix(mult);\n\n        if (u[1]) {\n            return u[0] + \" (\" + prefix + u[1] + \")\";\n        } else {\n            return u[0];\n        }\n    };\n\n    /**\n     * @method bound\n     * @param a\n     * @param b\n     * @param c\n     */\n    m.bound = function(a, b, c) {\n        return a < b ? b : (a > c ? c : a);\n    };\n\n    m.touch_distance = function(touchA, touchB) {\n        var xd = (touchA.pageX - touchB.pageX);\n        var yd = (touchA.pageY - touchB.pageY);\n        return Math.sqrt((xd * xd) + (yd * yd));\n    };\n\n    m.mult_prefix = function(mult) {\n        var prefix = \"?\";\n\n        /* jshint -W116 */\n        if (mult == 1) {\n            prefix = \"\";\n        } else if (mult == 10) {\n            prefix = 'da';\n        } else if (mult == 0.1) {\n            prefix = 'd';\n        } else if (mult == 100) {\n            prefix = 'h';\n        } else if (mult == 0.01) {\n            prefix = 'c';\n        } else if (mult == 1.0e3) {\n            prefix = 'K';\n        } else if (mult == 1.0e-3) {\n            prefix = 'm';\n        } else if (mult == 1.0e6) {\n            prefix = 'M';\n        } else if (mult == 1.0e-6) {\n            prefix = 'u';\n        } else if (mult == 1.0e9) {\n            prefix = 'G';\n        } else if (mult == 1.0e-9) {\n            prefix = 'n';\n        } else if (mult == 1.0e12) {\n            prefix = 'T';\n        } else if (mult == 1.0e-12) {\n            prefix = 'p';\n        }\n        /* jshint +W116 */\n\n        return prefix;\n    };\n\n    /**\n     * @private\n     */\n    var VECTOR = {\n        MV: 'F', // vector type\n        MS: 'F', // scalar type...not really necessary in javascript\n        nbpt: 4,\n        view: undefined\n    };\n\n\n    /**\n     * Sets data type for all subsequent calls to vector libraries.  Remains in effect until another call to this routine.\n     * @param ctype\n     */\n    // ~= VSTYPE - not really necessary\n    m.vstype = function(ctype) {\n        VECTOR.MS = ctype;\n        VECTOR.MV = ctype;\n        if (VECTOR.MV === 'D') {\n            VECTOR.nbpt = 8;\n        } else if ((VECTOR.MV === 'L') || (VECTOR.MV === 'F')) {\n            VECTOR.nbpt = 4;\n        } else if (VECTOR.MV === 'I') {\n            VECTOR.nbpt = 2;\n        } else if (VECTOR.MV === 'B') {\n            VECTOR.nbpt = 1;\n        } else {\n            alert(\"Unsupported vector type\");\n        }\n    };\n\n    m.log10 = function(v, lo_thresh) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        return Math.log(Math.max(v, lo_thresh)) / Math.log(10);\n    };\n\n    /**\n     * For each vector element in <src>, determine the max of <src> element and <lo_thresh>, returns the log(base10) of that value in <dst>\n     * @param\t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number} \tlo_thresh\tUser-set minimum log threshold (if not defined, set default=1.0e-20). Prevent computing log of 0 or negative values.\n     * @param \t{array}\t\tdst\t\tOuput vector.  If undefined, <src> elements will be overwritten.\n     */\n    // ~= M$VLOG10- not really necessary\n    m.vlog10 = function(src, lo_thresh, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        for (var i = 0; i < src.length; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = Math.log(Math.max(src[i], lo_thresh)) / Math.log(10);\n        }\n    };\n\n    /**\n     * Same as vlog10 but multiply each output value by a scale factor <dbscale>.\n     * @param \t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number}\tlo_thresh\tUser-set minimum log threshold.\n     *                                              If undefined, defaults to 1.0e-20. Prevent computing log of 0 or negative values.\n     * @param \t{number}\tdbscale\t\tOutput scale factor. If undefined, defaults to 1.\n     * @param \t{array}\t\tdst\t\tOutput vector. If undefined, <src> elements will be overwritten.\n     * @private\n     */\n    m.vlogscale = function(src, lo_thresh, dbscale, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dbscale === undefined) {\n            dbscale = 1;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        for (var i = 0; i < src.length; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = Math.log(Math.abs(Math.max(src[i], lo_thresh))) / Math.log(10);\n            dst[i] = dst[i] * dbscale;\n        }\n    };\n\n    /**\n     * Same as vlogscale but computes magnitude squared.\n     *\n     * @param \t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number}\tlo_thresh\tUser-set minimum log threshold.\n     *                                              If undefined, defaults to 1.0e-20. Prevent computing log of 0 or negative values.\n     * @param \t{number}\tdbscale\t\tOutput scale factor. If undefined, defaults to 1.\n     * @param \t{array}\t\tdst\t\tOutput vector. If undefined, <src> elements will be overwritten.\n     * @private\n     */\n    m.cvmag2logscale = function(src, lo_thresh, dbscale, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dbscale === undefined) {\n            dbscale = 1;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        var j = 0;\n        for (var i = 0; i < dst.length; i++) {\n            j = 2 * i + 1;\n            if (j >= src.length) {\n                break;\n            }\n            dst[i] = (src[j - 1] * src[j - 1]) + (src[j] * src[j]);\n            dst[i] = Math.log(Math.abs(Math.max(dst[i], lo_thresh))) / Math.log(10);\n            dst[i] = dst[i] * dbscale;\n        }\n    };\n\n    /**\n     * Multiply <count> elements of <src> by <mul>, store results in <dst>\n     * @param\t{array} \tsrc\t\tInput vector.\n     * @param\t{number}\tmul\t\tVector multiplier.\n     * @param\t{array}\t\tdst\t\tOutput vector. If not defined, <src> elements will be overwritten.\n     * @param\t{number}\tcount\t\tNumber of elements to apply multiplier, starting with first <src> element.\n     */\n    // ~= M$VSMUL\n    m.vsmul = function(src, mul, dst, count) {\n        if (dst === undefined) {\n            dst = src;\n        }\n        if (count === undefined) {\n            count = dst.length;\n        }\n        count = Math.min(dst.length, count);\n        count = Math.min(src.length, count);\n\n        for (var i = 0; i < count; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = src[i] * mul;\n        }\n    };\n\n    /**\n     * Finds max and min values in vector <vec> and returns values.\n     * @param \t{array}\t\tvec\t\tInput vector.\n     * @param\t{number}\tsize\t\tNumber of elements to search to find max.min values.\n     * @return \t{array}\t\tmxmin\t\tIndex and value of min and max elements in <vec>.\n     */\n    // ~= M$VMXMN\n    m.vmxmn = function(vec, size) {\n        // Originally this code used an object to hold the values\n        // but Chrome 34.0.1847.131 seemed to have a bug where\n        // these values would somehow get messed up...oddly\n        // putting printouts or breakpoints prevented the\n        // problem from showing up.\n        var smax = vec[0];\n        var smin = vec[0];\n        var imax = 0;\n        var imin = 0;\n        size = Math.min(size, vec.length);\n        for (var i = 0; i < size; i++) {\n            if (vec[i] > smax) {\n                smax = vec[i];\n                imax = i;\n            }\n            if (vec[i] < smin) {\n                smin = vec[i];\n                imin = i;\n            }\n        }\n        return {\n            smax: smax,\n            smin: smin,\n            imax: imax,\n            imin: imin\n        };\n    };\n\n    /**\n     * Move <count> elements from <src> to <dest>.  Stride is the distance between each array element in either or both the input and output vectors.\n     * @param {array}\tsrc\t\tInput vector.\n     * @param {number}\tsstride\t\tInput stride.\n     * @param {array}\tdest\t\tOutput vector.\n     * @param {number}\tdstride\t\tOutput stride.\n     * @param {number}\tcount\t\tNumber of input vector elements to move, starting with 0th element of <vec>. Cannot exceed vector lengths,\n     *\t\t\t\t\ttaking into account the strides.\n     */\n    m.vmov = function(src, sstride, dest, dstride, count) {\n        if (count === undefined) {\n            count = src.length;\n        }\n        count = Math.min(src.length, count);\n        //count = Math.min(src.length, count, (count)*(dest.length)*(dstride)); //mmm-TODO\n\n        for (var i = 0; i < count; i++) {\n            var s = i * sstride;\n            var d = i * dstride;\n            if (s >= src.length) {\n                break;\n            }\n            if (d >= dest.length) {\n                break;\n            }\n            dest[d] = src[s];\n        }\n    };\n\n    /**\n     * Initialize <count> consecutive elements of input vector <vec> with value <inpval>.\n     * @param\t{array}\t\tvec\t\tInput vector\n     * @param\t{number}\tinpval\t\tValue\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <vec>.  If undefined, entire <vec> is written.\n     */\n    // ~= M$VFILL\n    // TODO - more optimal version?\n    m.vfill = function(vec, inpval, count) {\n        if (count === undefined) {\n            count = vec.length;\n        }\n        count = Math.min(vec.length, count);\n        for (var i = 0; i < count; i++) {\n            vec[i] = inpval;\n        }\n    };\n\n    /**\n     * Compute the absolute value of <count> elements in <vec> and write to output vector <dest>\n     * @param \t{array}\t\tvec\t\tInput vector.\n     * @param \t{array}\t\tdest\t\tOuput vector. If <dest> is undefined, overwrite input vector <vec>.\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <vec>. Cannot exceed vector lengths.\n     */\n    m.vabs = function(vec, dest, count) {\n        if (count === undefined) {\n            count = vec.length;\n        }\n        if (dest === undefined) {\n            dest = vec;\n        }\n        //count = Math.min(dest.length, count, vec.length); //mmm-TODO\n        for (var i = 0; i < count; i++) {\n            dest[i] = Math.abs(vec[i]);\n        }\n    };\n\n\n    /**\n     * Computes the magnitude of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVMAG\n    m.cvmag = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        for (var i = 0; i < count; i++) {\n            var j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            dest[i] = Math.sqrt((cxvec[j - 1] * cxvec[j - 1]) + (cxvec[j] * cxvec[j]));\n        }\n    };\n\n    /**\n     * Computes the magnitude squared of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVMAG2\n    m.cvmag2 = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        var j = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            dest[i] = (cxvec[j - 1] * cxvec[j - 1]) + (cxvec[j] * cxvec[j]);\n        }\n    };\n\n    /**\n     * Computes phase in radians of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVPHA\n    m.cvpha = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        var j = 0;\n        var re = 0;\n        var im = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            re = cxvec[j - 1];\n            im = cxvec[j];\n            if ((re === 0.0) && (im === 0.0)) {\n                re = 1.0;\n            }\n            dest[i] = Math.atan2(im, re);\n        }\n    };\n\n    /**\n     * Computes the phase in degrees of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVPHAD\n    m.cvphad = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n\n        var j = 0;\n        var re = 0;\n        var im = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            re = cxvec[j - 1];\n            im = cxvec[j];\n            if ((re === 0.0) && (im === 0.0)) {\n                re = 1.0;\n            }\n            dest[i] = Math.atan2(im, re) * (180.0 / Math.PI);\n        }\n    };\n\n    /**\n     * @param n\n     * @private\n     */\n    // ~= INT(), DINT\n    m.trunc = function(n) {\n        return n - n % 1;\n    };\n\n    /**\n     * @param a1\n     * @param a2\n     * @private\n     */\n    // Transfer of sign function from Fortran\n    m.sign = function(a1, a2) {\n        if (a2 >= 0) {\n            return Math.abs(a1);\n        } else {\n            return -Math.abs(a1);\n        }\n    };\n\n    /**\n     * @method pad2\n     * @param number\n     * @private\n     */\n\n    function pad2(number) {\n        return (number < 10 ? '0' : '') + number;\n    }\n\n    /**\n     * Convert J1950 time or seconds-since-Epoch (midnight Dec-31-1949) to time-of-day. Fractional seconds accurate to milliseconds.\n     * @param \t{number}\tsec\t\tNumber of seconds.\n     * @return\t{string}\ttod\t\tTime of day\n     */\n\n    /* Output string can be in different forms as follows:\n     * -31536000 <  sec < 0                   -DDD::HH:MM:SS\n     *         0 <= sec < 86400                     HH:MM:SS\n     *         86400 <= sec < 31536000         DDD::HH:MM:SS\n     *         31536000 <=sec            YYYY:MM:DD:HH:MM:SS.<FFFFFF>\n     *                                    where FFFFFF is in microseconds\n     *\n     */\n\n    m.sec2tod = function(sec, trim_trailing_zeros) {\n        var tod = \"\";\n        var j1950 = Date.UTC(1950, 0, 1); //From 1950 to 1970\n        var j1950Date = new Date(j1950); //debug var\n        var j1949 = Date.UTC(1949, 11, 31);\n        var j1949Date = new Date(j1949); //debug var\n        var d = new Date();\n        var midnightToday = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0, 0);\n        var diffDaySecs = 86400; //    86400 secs = 24*60*60\n        var diffYearSecs = 31536000; // 31536000 secs = 365*24*60*60\n        var negDiffYearSecs = -1 * diffYearSecs; //-31536000 secs\n\n        if (sec >= 0) {\n            if (sec < diffDaySecs) {\n                // hh:mm:ss\n                var millisecs = midnightToday.getTime() + (sec * 1000);\n                var d = new Date(millisecs);\n                tod = pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n            } else if (sec === 86400) {\n                tod = \"24:00:00\";\n            } else if (sec < diffYearSecs) {\n                // ddd:hh:mm:ss\n                var days = sec / diffDaySecs;\n                days = [days > 0 ? Math.floor(days) : Math.ceil(days)];\n                var d = new Date((sec * 1000) + midnightToday.getTime());\n                tod = days.toString() + \"::\" + pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n            } else {\n                // convert to j1950\n                var secMilli = Math.floor(sec * 1000) + j1950;\n                d = new Date(secMilli);\n                tod = d.getUTCFullYear() + \":\" + pad2(d.getUTCMonth() + 1) + \":\" + pad2(d.getUTCDate()) + \"::\" +\n                    pad2(d.getUTCHours()) + \":\" + pad2(d.getUTCMinutes()) + \":\" + pad2(d.getUTCSeconds());\n            }\n        } else {\n            if (sec > negDiffYearSecs) {\n                // -ddd:hh:mm:ss\n                var days = sec / diffDaySecs;\n                days = (days <= 0) ? Math.ceil(days) : Math.floor(days);\n                var d = new Date(Math.abs(sec * 1000) + midnightToday.getTime());\n                if (days === 0) {\n                    days = \"-0\";\n                } else {\n                    days = days.toString();\n                }\n                tod = days + \"::\" + pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n            } else {\n                // convert to j1950\n                var secMilli = Math.floor(sec * 1000) + j1950;\n                d = new Date(secMilli);\n                tod = d.getUTCFullYear() + \":\" + pad2(d.getUTCMonth() + 1) + \":\" + pad2(d.getUTCDate()) + \"::\" +\n                    pad2(d.getUTCHours()) + \":\" + pad2(d.getUTCMinutes()) + \":\" + pad2(d.getUTCSeconds());\n            }\n        }\n\n        // violate legacy behavior, include full precision always\n        // even if we are on a full second boundary, otherwise\n        // on rising/falling rasters it can look like the display\n        // is flickering\n        var fractional = (sec % 1);\n        if (fractional === 0.0) {\n            tod += \".000000\";\n        } else {\n            tod += \".\" + Math.abs(sec % 1).toPrecision(6).slice(2, 8);\n        }\n\n        if (trim_trailing_zeros) {\n            var dloc = tod.indexOf(\".\");\n            var zloc = -1;\n            // If there is a 'decimal point'\n            if (dloc !== -1) {\n                zloc = tod.substr(dloc, tod.length).indexOf(\"0\");\n            }\n            if (zloc !== -1) {\n                tod = tod.substr(0, dloc + zloc);\n            }\n        }\n        return tod;\n\n    };\n\n    /**\n     * The offset to convert midnight Jan 1st 1970 to\n     * midnight Jan 1st 1950.\n     *\n     * @private\n     */\n    var j1950offset = (20.0 * 365.0 + 5.0) * (24 * 3600);\n\n    /**\n     * 0.0 - 86400 == m.sec2tod\n     * >86400 then modulo 86400\n     *   if modulo <= 0 return m.sec2tod(modulo)+86400\n     *   if module <\n     */\n    m.sec2tspec = function(sec, mode, trim_trailing_zeros) {\n        mode = mode || \"\";\n        if (sec >= 0 && sec <= 86400) {\n            return m.sec2tod(sec, trim_trailing_zeros);\n        } else {\n            sec = sec % 86400;\n            if (mode !== \"delta\" && sec <= 0) {\n                return m.sec2tod(sec + 86400, trim_trailing_zeros);\n            } else if (mode === \"delta\" && sec <= 0) {\n                return \"-\" + m.sec2tod(-1 * sec, trim_trailing_zeros);\n            } else {\n                return m.sec2tod(sec, trim_trailing_zeros);\n            }\n        }\n    };\n\n    /**\n     * @param \t{number}\tsec\t\tNumber of seconds.\n     * @return\t{string}\ttod\t\tTime of day\n     */\n\n    m.sec2tod_j1970 = function(sec) {\n        var tod = \"\";\n        var d;\n        if ((sec >= 0) && (sec < 86400)) {\n            // hh:mm:ss\n            d = new Date(sec * 1000);\n            tod = pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n\n        } else if ((sec < 0) && (sec > -31536000)) {\n            // -ddd:hh:mm:ss\n            var days = -1 * (sec / (24 * 60 * 60));\n            d = new Date(sec * 1000);\n            tod = days.toString() + \"::\" + pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n        } else {\n            // convert to j1950\n            d = new Date((sec - j1950offset) * 1000);\n            tod = d.getFullYear() + \":\" + pad2(d.getMonth()) + \":\" + pad2(d.getDate()) + \"::\" +\n                pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n        }\n        if ((sec % 1) !== 0) {\n            tod += \".\" + (sec % 1).toPrecision(6).slice(2, 8);\n        }\n        return tod;\n    };\n\n    m.j1970toj1950 = function(t) {\n        if (t.getTime !== undefined) {\n            return ((t.getTime() / 1000) + j1950offset);\n        } else {\n            return (t + j1950offset);\n        }\n    };\n\n    m.j1950toj1970 = function(t) {\n        return (t - j1950offset);\n    };\n\n    /**\n     * @private\n     */\n    // Throttle calls to \"callback\" routine and ensure that it\n    // is not invoked any more often than \"delay\" milliseconds.\n    //\n    m.throttle = function(delay, callback) {\n        var previousCall = new Date().getTime();\n        return function() {\n            var time = new Date().getTime();\n\n            //\n            // if \"delay\" milliseconds have expired since\n            // the previous call then propagate this call to\n            // \"callback\"\n            //\n            if ((time - previousCall) >= delay) {\n                previousCall = time;\n                callback.apply(null, arguments);\n            }\n        };\n    };\n\n    // Node: Export function\n    module.exports = m;\n\n}());\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plot } from 'sigplot';\n\nexport default class SigPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getChildContext() {\n    return {\n      plot: this.plot,\n    };\n  }\n\n  componentDidMount() {\n    const { options } = this.props;\n    this.plot = new Plot(this.element, options);\n\n    // Have to trigger context tree, setting state does that.\n    // eslint-disable-next-line react/no-did-mount-set-state\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ plot: this.plot });\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      children: propChildren,\n    } = this.props;\n    const { plot } = this;\n    const children = plot\n      ? React.Children.map(propChildren, (child) => {\n        if (child) {\n          return React.cloneElement(child, { plot });\n        }\n        return null;\n      }) : null;\n\n    return (\n      <div\n        style={{ height, width, display: 'inline-block' }}\n        ref={element => this.element = element}\n      >\n        { children }\n      </div>);\n  }\n}\n\nSigPlot.childContextTypes = {\n  plot: PropTypes.instanceOf(Plot)\n};\n\nSigPlot.propTypes = {\n  children: PropTypes.node,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  options: PropTypes.object,\n};\n\nSigPlot.defaultProps = {\n  height: 300,\n  width: 300,\n  options: {\n    all: true,\n    expand: true,\n    autol: 100,\n    autohide_panbars: true\n  },\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plot } from 'sigplot';\n\n/**\n * Abstract base class for all Layers\n */\nexport default class Layer extends Component {\n  componentWillUnmount() {\n    this.plot.remove_layer(this.layer);\n  }\n\n  get plot() {\n    const { plot } = this.context;\n    return plot;\n  }\n\n  render() {\n    return false;\n  }\n}\n\nLayer.contextTypes = {\n  plot: PropTypes.instanceOf(Plot)\n};\n\nLayer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.number), // eslint-disable-line react/no-unused-prop-types\n  options: PropTypes.object // eslint-disable-line react/no-unused-prop-types\n};\n","import React from 'react';\nimport Layer from './layer';\n\nexport default class ArrayLayer extends Layer {\n  componentDidMount() {\n    this.layer = this.plot.overlay_array(this.props.data, this.props.options);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data !== this.props.data) {\n      this.plot.reload(this.layer, nextProps.data);\n    }\n  }\n}\n","import React from 'react';\nimport Layer from './layer';\n\nexport default class PipeLayer extends Layer {\n  componentDidMount() {\n    this.layer = this.plot.overlay_pipe(this.props.options);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data && nextProps.data !== this.props.data) {\n      this.plot.push(this.layer, nextProps.data);\n    }\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Layer from './layer';\n\nexport default class HrefLayer extends Layer {\n  componentDidMount() {\n    const { href, onload, options } = this.props;\n    this.plot.deoverlay();\n    this.layer = this.plot.overlay_href(href, onload, options);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      href: oldHref,\n      options: oldOptions,\n    } = this.props;\n\n    const {\n      href: newHref,\n      onload: newOnload,\n      options: newOptions,\n    } = nextProps;\n\n    // we only care if `href` or `options` changes;\n    if (newHref !== oldHref) {\n      this.plot.deoverlay();\n      this.plot.overlay_href(newHref, newOnload, newOptions);\n    } else if (newOptions !== oldOptions) {\n      this.plot.change_settings(newOptions);\n    }\n  }\n}\n\nHrefLayer.propTypes = {\n  href: PropTypes.string,\n  onload: PropTypes.func,\n  options: PropTypes.object,\n};\n\nHrefLayer.defaultProps = {\n  href: '',\n  onload: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Layer from './layer';\n\nexport default class WebsocketLayer extends Layer {\n  componentDidMount() {\n    const { wsurl, overrides, options } = this.props;\n    this.layer = this.plot.overlay_websocket(wsurl, overrides, options);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      wsurl: oldWsurl,\n      options: oldOptions,\n    } = this.props;\n\n    const {\n      wsurl: newWsurl,\n      overrides: newOverrides,\n      options: newOptions,\n    } = nextProps;\n\n    // we only care if `wsurl` or `options` changes;\n    if (newWsurl !== oldWsurl) {\n      this.plot.overlay_websocket(newWsurl, newOverrides, newOptions);\n    } else if (newOptions !== oldOptions) {\n      this.plot.change_settings(newOptions);\n    }\n  }\n}\n\nWebsocketLayer.propTypes = {\n  wsurl: PropTypes.string,\n  overrides: PropTypes.func,\n  options: PropTypes.object,\n};\n\nWebsocketLayer.defaultProps = {\n  wsurl: '',\n};\n","export { default as SigPlot } from './sigplot';\nexport { default as ArrayLayer } from './arraylayer';\nexport { default as PipeLayer } from './pipelayer';\nexport { default as HrefLayer } from './hreflayer';\nexport { default as WebsocketLayer } from './websocketlayer';\n","/**\n * @license\n * File: common.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\nmodule.exports = {};\n\nif (window.ArrayBuffer) {\n    if (!ArrayBuffer.prototype.slice) {\n        //Monkey Patching for iOS and early Firefox\n        ArrayBuffer.prototype.slice = function(start, end) {\n            var that = new Uint8Array(this);\n            if (end === undefined) {\n                end = that.length;\n            }\n            var result = new ArrayBuffer(end - start);\n            var resultArray = new Uint8Array(result);\n            for (var i = 0; i < resultArray.length; i++) {\n                resultArray[i] = that[i + start];\n            }\n            return result;\n        };\n    }\n}\n\n// Shim for requestAnimationFrame compatibility\nwindow.requestAnimFrame = (function(callback) {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n        function(callback) {\n            return window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nwindow.cancelAnimFrame = (function(callback) {\n    return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCanelAnimationFrame ||\n        function(timeoutID) {\n            window.clearTimeout(timeoutID);\n    };\n})();\n\n// Handle various ways to draw dashed lines\nmodule.exports.dashOn = function(ctx, on, off) {\n    if (ctx.setLineDash) {\n        ctx.setLineDash([on, off]);\n        return true;\n    } else if (ctx.mozDash !== undefined) { // Gecko 7.0+\n        ctx.mozDash = [on, off];\n        return true;\n    } else if (ctx.webkitLineDash && ctx.webkitLineDash.length === 0) {\n        ctx.webkitLineDash = [on, off];\n        return true;\n    }\n    return false;\n};\n\nmodule.exports.dashOff = function(ctx) {\n    if (ctx.setLineDash) {\n        ctx.setLineDash([]);\n    } else if (ctx.mozDash) { // Gecko 7.0+\n        ctx.mozDash = null;\n    } else if (ctx.webkitLineDash) {\n        ctx.webkitLineDash = [];\n    }\n};\n\n// Firefox behaves differntly for keypress events\nmodule.exports.getKeyCode = function(e) {\n    e = window.event || e;\n    e = e.charCode || e.keyCode;\n    return e;\n};\n\nmodule.exports.setKeypressHandler = function(handler) {\n    if (window.addEventListener) { window.addEventListener('keypress', handler, false); }\n    else if (window.attachEvent) {\n        window.attachEvent('onkeypress', handler);\n    }\n};\n\n// Array.isArray\n// FF 4+\n// IE 9+\n// SF 5+\n// http://kangax.github.io/es5-compat-table/#Array.isArray\nif (!Array.isArray) {\n    Array.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\n    };\n}\n\nif (!window.Float64Array) {\n    //Monkey Patching for iOS\n    // This is essentially ReadOnly because\n    // if someone does x[i] = 5\n    // the value will be set in the array\n    // but not in the underlying buffer\n    window.Float64Array = (function() {\n        return window.Float64Array ||\n            function(buffer, byteOffset, length) {\n                if (!(buffer instanceof ArrayBuffer)) {\n                    throw \"Invalid type\";\n                }\n                var dv = new DataView(buffer);\n                var b = [];\n                var maxlength = (buffer.byteLength - byteOffset) / 8;\n                if (length === undefined) {\n                    b.length = maxlength;\n                } else {\n                    b.length = Math.min(length, maxlength);\n                }\n\n                for (var i = 0; i < b.length; i++) {\n                    b[i] = dv.getFloat64(i * 8 + byteOffset, true);\n                }\n                b.subarray = function(begin, end) {\n                    return b.slice(begin, end);\n                };\n                return b;\n        };\n    })();\n}\n\n// Shims\n(function() {\n    /* console shim*/\n    var f = function() {};\n    if (!window.console) {\n        window.console = {\n            log: f,\n            info: f,\n            warn: f,\n            debug: f,\n            error: f\n        };\n    }\n\n    // Firefox 4 has a glaring subarray bug\n    // http://ryanberdeen.com/2011/04/16/firefox-subarray-bug.html\n    if (new Int8Array([0, 1, 0]).subarray(1).subarray(1)[0]) {\n        var subarray = function(begin, end) {\n            if (arguments.length === 0) {\n                begin = 0;\n                end = this.length;\n            } else {\n                if (begin < 0) {\n                    // relative to end\n                    begin += this.length;\n                }\n                // clamp to 0, length\n                begin = Math.max(0, Math.min(this.length, begin));\n                if (arguments.length === 1) {\n                    // slice to end\n                    end = this.length;\n                } else {\n                    if (end < 0) {\n                        // relative to end\n                        end += this.length;\n                    }\n                    // clamp to begin, length\n                    end = Math.max(begin, Math.min(this.length, end));\n                }\n            }\n\n            var byteOffset = this.byteOffset + begin * this.BYTES_PER_ELEMENT;\n            return new this.constructor(this.buffer, byteOffset, end - begin);\n        };\n\n        var typedArrays = [Int8Array, Uint8Array, Int16Array, Uint16Array,\n            Int32Array, Uint32Array, Float32Array, Float64Array\n        ];\n        typedArrays.forEach(function(cls) {\n            cls.prototype.subarray = subarray;\n        });\n    }\n\n}());\n\n// https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel?redirectlocale=en-US&redirectslug=DOM%2FMozilla_event_reference%2Fwheel#Listening_to_this_event_across_browser\n// creates a global \"addWheelListener\" method\n// example: addWheelListener( elem, function( e ) { console.log( e.deltaY ); e.preventDefault(); } );\n(function(window, document) {\n\n    var prefix = \"\",\n        _addEventListener, onwheel, support;\n\n    // detect event model\n    if (window.addEventListener) {\n        _addEventListener = \"addEventListener\";\n    } else {\n        _addEventListener = \"attachEvent\";\n        prefix = \"on\";\n    }\n\n    // detect available wheel event\n    support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n    document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n    \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n    window.addWheelListener = function(elem, callback, useCapture) {\n        _addWheelListener(elem, support, callback, useCapture);\n\n        // handle MozMousePixelScroll in older Firefox\n        if (support === \"DOMMouseScroll\") {\n            _addWheelListener(elem, \"MozMousePixelScroll\", callback, useCapture);\n        }\n    };\n\n    /* jshint -W030 */\n    function _addWheelListener(elem, eventName, callback, useCapture) {\n        elem[_addEventListener](prefix + eventName, support === \"wheel\" ? callback : function(originalEvent) {\n            !originalEvent && (originalEvent = window.event);\n\n            // create a normalized event object\n            var event = {\n                // keep a ref to the original event object\n                originalEvent: originalEvent,\n                target: originalEvent.target || originalEvent.srcElement,\n                type: \"wheel\",\n                deltaMode: originalEvent.type === \"MozMousePixelScroll\" ? 0 : 1,\n                deltaX: 0,\n                delatZ: 0,\n                preventDefault: function() {\n                    originalEvent.preventDefault ?\n                        originalEvent.preventDefault() :\n                        originalEvent.returnValue = false;\n                }\n            };\n\n            // calculate deltaY (and deltaX) according to the event\n            if (support === \"mousewheel\") {\n                event.deltaY = -1 / 40 * originalEvent.wheelDelta;\n                // Webkit also support wheelDeltaX\n                originalEvent.wheelDeltaX && (event.deltaX = -1 / 40 * originalEvent.wheelDeltaX);\n            } else {\n                event.deltaY = originalEvent.detail;\n            }\n\n            // it's time to fire the callback\n            return callback(event);\n\n        }, useCapture || false);\n    }\n    /* jshint +W030 */\n\n})(window, document);\n\n//Updates destenation object with source values\nmodule.exports.update = function update(dst, src) {\n    for (var prop in src) {\n        var val = src[prop];\n        if (typeof val === \"object\") { // recursive\n            update(dst[prop], val);\n        } else {\n            dst[prop] = val;\n        }\n    }\n    return dst; // return dst to allow method chaining\n};\n\n}());\n","/**\n * @license\n * File: mx.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true*/\n\n//Uses Immediately-invoked Function Expressions (IIFE)s for namespaces\n//See http://addyosmani.com/blog/essential-js-namespacing/ for details.\n\n/**\n * This namespace includes generic graphical routines and functions\n * the manipulate a canvas.\n *\n * @namespace\n */\n\n/* global module */\n/* global require */\n/* global requestAnimFrame */\n/* global cancelAnimFrame */\n\n(function() {\n\n    var tinycolor = require(\"tinycolor2\");\n    var ColorMap = require(\"./ColorMap\");\n    var common = require(\"./common\");\n    var CanvasInput = require(\"./CanvasInput\");\n    var m = require(\"./m\");\n\n    function mx() {}\n\n\n    mx.XW_INIT = -3;\n    mx.XW_DRAW = 1;\n    mx.XW_EVENT = 2;\n    mx.XW_UPDATE = 3;\n    mx.XW_COMMAND = 5;\n    mx.SB_EXPAND = 1;\n    mx.SB_SHRINK = 2;\n    mx.SB_FULL = 3;\n    mx.SB_STEPINC = 4;\n    mx.SB_STEPDEC = 5;\n    mx.SB_PAGEINC = 6;\n    mx.SB_PAGEDEC = 7;\n    mx.SB_DRAG = 8;\n    mx.SB_WHEELUP = 9;\n    mx.SB_WHEELDOWN = 10;\n\n    // Grayscale colors:\n    // \"15%,15%,10%\" - very dark gray\n    // \"25%,25%,20%\" - dark gray\n    // \"35%,35%,30%\" - medium gray\n    // \"40%,40%,35%\" - light medium gray\n    // \"60%,60%,55%\" - light gray\n    // \"70%,70%,65%\" - very light gray\n    // \"80%,80%,75%\" - very very light gray\n\n    mx.L_ArrowLeft = 1001;\n    mx.L_ArrowRight = 1002;\n    mx.L_ArrowUp = 1003;\n    mx.L_ArrowDown = 1004;\n    mx.L_dashed = 801;\n    mx.GBorder = 3; // TODO Is this a good original value to use...?\n    mx.L_RModeOff = 900;\n    mx.L_RModeOn = 901;\n    mx.L_PixelSymbol = 1;\n    mx.L_CircleSymbol = 2;\n    mx.L_SquareSymbol = 3;\n    mx.L_PlusSymbol = 4;\n    mx.L_XSymbol = 5;\n    mx.L_TriangleSymbol = 6;\n    mx.L_ITriangleSymbol = 7;\n    mx.L_HLineSymbol = 8;\n    mx.L_VLineSymbol = 9;\n\n    /**\n     * Set to True for a retro look that would make hipsters proud\n     */\n    mx.LEGACY_RENDER = false;\n\n    /**\n     * The zoom stack structure object\n     * @private\n     */\n    mx.STKSTRUCT = function() {\n        this.xmin = 0.0; // real world val at x1(origin=1,4) or x2(origin=2,4)\n        this.xmax = 0.0; // real world val at x2(origin=1,4) or x1(origin=2,4)\n        this.ymin = 0.0; // real world val at y2(origin=1,2) or y1(origin=3,4)\n        this.ymax = 0.0; // real world val at y1(origin=1,2) or y2(origin=3,4)\n        this.xscl = 0.0; // ratio of X real world units to pixel units\n        this.yscl = 0.0; // ratio of Y real world units to pixel units\n        this.x1 = 0; // left edge relative to window (pixels)\n        this.y1 = 0; // top edge relative to window (pixels)\n        this.x2 = 0; // right edge relative to window (pixels)\n        this.y2 = 0; // bottom edge relative to window (pixels)\n    };\n\n    /**\n     * The scrollbar structure object used to hold state about scrolling\n     * @private\n     */\n    mx.SCROLLBAR = function() {\n        this.flag = null; // int_4 // flag field for MX$SCROLLBAR routine\n        this.action = null; // int_4 // returned action performed (XW_EVENT)\n        this.smin = null;\n        this.srange = null; // real_8 // real_8 // min and range values of scroll\n        // bar\n        this.tmin = null;\n        this.trange = null; // real_8 // real_8 // min and range values of trough\n        this.step = null; // real_8 // ratios of smin to move for step\n        this.page = null; // real_8 // ratios of smin to move for page\n        this.scale = null; // real_8 // ratio to scale by for expand/shrink\n        this.dragoutline = null; // bool_4 // FALSE = smooth scroll, TRUE = drag &\n        // drop\n        this.initial_pause = null; // real_4\n        this.repeat_pause = null; // real_4\n\n        this.x = null;\n        this.y = null;\n        this.w = null;\n        this.h = null; // int_2 // These fields are private and are to be\n        this.s1 = null;\n        this.sw = null;\n        this.swmin = null;\n        this.soff = null; // int_2 // set through other interfaces\n        this.a1 = null;\n        this.a2 = null;\n        this.arrow = null; // int_2\n        this.mxevent = null; // bool_1\n        this.origin = null; // int_1\n        this.repeat_count = null; // int_4\n    };\n\n    /**\n     * @method WARPBOX\n     * @private\n     */\n    function WARPBOX() {\n        this.xo = 0;\n        this.yo = 0;\n        this.xl = 0;\n        this.yl = 0;\n        this.xmin = 0;\n        this.xmax = 0;\n        this.ymin = 0;\n        this.ymax = 0;\n        this.func = undefined;\n        this.mode = undefined;\n    }\n\n    /**\n     * Defines 2 canvas layers, canvas and wid_canvas\n     * @method MX\n     * @param element\n     * @private\n     */\n    function MX(element) { // this is where the canvases are setup/defined\n        this.root = element;\n\n        // Create a div to hold all the various canvas layers\n        this.parent = document.createElement('div');\n        this.parent.style.position = \"relative\";\n        //this.parent.style.height = \"100%\"; //element.clientHeight;\n        //this.parent.style.width = \"100%\"; //element.clientHeight;\n        //this.parent.clientWidth = element.clientWidth;\n        this.parent.width = element.clientWidth;\n        this.parent.height = element.clientHeight;\n        element.appendChild(this.parent);\n\n        // Create the canvas that will hold the plot\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0px\";\n        this.canvas.style.left = \"0px\";\n        this.canvas.width = element.clientWidth;\n        this.canvas.height = element.clientHeight;\n\n        this.parent.appendChild(this.canvas);\n        this.active_canvas = this.canvas;\n\n        // This canvas holds all widgets and reacts to mouse events\n        this.wid_canvas = document.createElement('canvas');\n        this.wid_canvas.style.position = \"absolute\";\n        this.wid_canvas.style.top = \"0px\";\n        this.wid_canvas.style.left = \"0px\";\n        this.wid_canvas.style.zIndex = 1;\n        this.wid_canvas.width = element.clientWidth;\n        this.wid_canvas.height = element.clientHeight;\n\n        this.parent.appendChild(this.wid_canvas);\n\n        //if ((this.canvas.height <= 0) || (this.canvas.width <= 0)) {\n        //\tthrow \"Plot could not be instantiated correctly; did you specify a size for your placeholder?\";\n        //}\n\n        this.font = undefined; // the full calculated font string\n        this.font_family = \"Courier New, monospace\"; // default font family\n        this.font_width = 8;\n        this.font_scaled = false;\n        this.text_w = 0; // text width\n        this.text_h = 0; // text height\n        this.level = 0; // current zoom level\n        this.width = this.parent.width; // width of window\n        this.height = this.parent.height; // height of window\n        this.xpos = 0; // x-pixel loc of mouse during event\n        this.ypos = 0; // y-pixel loc of mouse during event\n        this.xmrk = 0.0; // absc coord of mark\n        this.ymrk = 0.0;\n        this.origin = 1;\n        this.stk = [new mx.STKSTRUCT()]; // zoom stack\n\n        mx.setbgfg(this, \"black\", \"white\");\n\n        // Custom stuff for the Javascript implementation\n        this.event_cb = undefined;\n        this.warpbox = undefined;\n\n        // draw_mode flags;\n        this.rmode = false;\n        this.linewidth = 1;\n        this.style = undefined;\n        this.xi = false;\n\n        // Button Eventing variables\n        this.button_release = 0;\n        this.button_press = 0;\n        this.state_mask = 0;\n\n        // Specifies display field\n        this.l = 0;\n        this.r = this.width;\n        this.t = 0;\n        this.b = this.height;\n\n        // Scrollbar state\n        this.scrollbar_x = new mx.SCROLLBAR();\n        this.scrollbar_y = new mx.SCROLLBAR();\n\n        // Prompt mode state variable\n        this.prompt = undefined;\n\n        // Colormap\n        this.pixel = [];\n\n        // Render Canvas\n        this._renderCanvas = document.createElement(\"canvas\");\n    }\n\n    /* This is used as a helper function for defining highlight ranges/\n     */\n\n    function in_fill_range(ele, range_begin, range_end) {\n        var left = false;\n        var right = false;\n\n        if (ele >= range_begin) {\n            left = true;\n        }\n\n\n        if (ele <= range_end) {\n            right = true;\n        }\n\n        if (left === true && right === true) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Create Canvas and it's Mx structure and functions\n     * @param {element}\telement \tReference to a DOM window element\n     */\n    /* Step #5*/\n    mx.open = function(element) {\n        var Mx = new MX(element); /* Step #6*/\n\n        Mx.wid_canvas.oncontextmenu = function(event) {\n            event.preventDefault();\n            return false;\n        };\n\n        this._ctx = Mx.active_canvas.getContext(\"2d\");\n\n        Mx.onmousemove = (function(Mx) {\n            return function(e) {\n                var rect = e.target.getBoundingClientRect();\n                // Screen x/y of mouse\n                Mx.x = e.x || e.clientX;\n                Mx.y = e.y || e.clientY;\n                // Plot relative x/y of mouse\n                Mx.xpos = (e.offsetX === undefined) ? (e.pageX - rect.left - window.scrollX) : e.offsetX;\n                Mx.ypos = (e.offsetX === undefined) ? (e.pageY - rect.top - window.scrollY) : e.offsetY;\n\n                //\t\t\t\tMx.xpos = (e.offsetX === undefined) ? e.layerX : e.offsetX;\n                //\t\t\t\tMx.ypos = (e.offsetY === undefined) ? e.layerY : e.offsetY;\n\n                if (Mx.warpbox) {\n                    if ((e.ctrlKey || e.metaKey) && (Mx.warpbox.alt_style !== undefined)) {\n                        Mx.warpbox.style = Mx.warpbox.alt_style;\n                    } else {\n                        Mx.warpbox.style = Mx.warpbox.def_style;\n                    }\n                    mx.redraw_warpbox(Mx);\n                }\n\n                mx.widget_callback(Mx, e);\n            };\n        })(Mx);\n\n        Mx.onmouseup = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    mx.onWidgetLayer(Mx, function() {\n                        mx.erase_window(Mx);\n                    });\n\n                    var old_warpbox = Mx.warpbox;\n                    Mx.warpbox = undefined;\n\n                    if (event.which === 1 || event.which === 3) {\n                        if (old_warpbox.func) {\n                            var xo = old_warpbox.xo;\n                            var yo = old_warpbox.yo;\n                            var xl = old_warpbox.xl;\n                            var yl = old_warpbox.yl;\n\n                            if (old_warpbox.mode === \"vertical\") {\n                                xo = Mx.l;\n                                xl = Mx.r;\n                            } else if (old_warpbox.mode === \"horizontal\") {\n                                yo = Mx.t;\n                                yl = Mx.b;\n                            } // else \"box\"\n                            old_warpbox.func(event, xo, yo, xl, yl,\n                                old_warpbox.style.return_value,\n                                old_warpbox.mode);\n                        }\n                    }\n\n                }\n                mx.widget_callback(Mx, event);\n            };\n        })(Mx);\n\n        Mx.onmousedown = (function(Mx) {\n            return function(event) {\n                event.preventDefault();\n                mx.widget_callback(Mx, event);\n                return false;\n            };\n        })(Mx);\n\n        Mx.onkeydown = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    var keyCode = common.getKeyCode(event);\n                    if (((keyCode === 17) || // Ctrl\n                            (keyCode === 224) || // Mac Command Firefox\n                            (keyCode === 91) || // Safari/Chrome Left-command\n                            (keyCode === 93)) && // Safari/Chrome Right-command\n                        (Mx.warpbox.style !== Mx.warpbox.alt_style)) {\n                        Mx.warpbox.style = Mx.warpbox.alt_style;\n                        mx.redraw_warpbox(Mx);\n                    }\n                }\n\n                mx.widget_callback(Mx, event);\n            };\n        })(Mx);\n\n        Mx.onkeyup = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    var keyCode = common.getKeyCode(event);\n                    if (((keyCode === 17) || // Ctrl\n                            (keyCode === 224) || // Mac Command Firefox\n                            (keyCode === 91) || // Safari/Chrome Left-command\n                            (keyCode === 93)) && // Safari/Chrome Right-command\n                        (Mx.warpbox.style !== Mx.warpbox.def_style)) {\n                        Mx.warpbox.style = Mx.warpbox.def_style;\n                        mx.redraw_warpbox(Mx);\n                    }\n                }\n            };\n        })(Mx);\n\n        Mx.ontouchend = (function(Mx) {\n            return function(event) {\n                Mx.onmouseup({\n                    which: 1\n                });\n            };\n        })(Mx);\n\n        Mx.ontouchmove = (function(Mx) {\n            return function(event) {\n                // Compute the total offset - consider caching offset and only calculating on resize\n                var element = Mx.canvas;\n                var offsetX = 0;\n                var offsetY = 0;\n                if (element.offsetParent !== undefined) {\n                    do {\n                        offsetX += element.offsetLeft;\n                        offsetY += element.offsetTop;\n                    } while ((element = element.offsetParent));\n                }\n\n                Mx.xpos = event.targetTouches[0].pageX - offsetX;\n                Mx.ypos = event.targetTouches[0].pageY - offsetY;\n                mx.redraw_warpbox(Mx);\n            };\n        })(Mx);\n\n        mx.enableListeners(Mx);\n\n        return Mx;\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.enableListeners = function(Mx) {\n        mx.addEventListener(Mx, \"mousemove\", Mx.onmousemove, false);\n        window.addEventListener(\"mouseup\", Mx.onmouseup, false);\n        mx.addEventListener(Mx, \"mousedown\", Mx.onmousedown, false);\n        window.addEventListener(\"keydown\", Mx.onkeydown, false);\n        window.addEventListener(\"keyup\", Mx.onkeyup, false);\n        //mx.addEventListener(Mx, \"touchend\", Mx.ontouchend);\n        //mx.addEventListener(Mx, 'touchmove', Mx.ontouchmove, false);\n\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.disableListeners = function(Mx) {\n        mx.removeEventListener(Mx, \"mousemove\", Mx.onmousemove, false);\n        window.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n        mx.removeEventListener(Mx, \"mousedown\", Mx.onmousedown, false);\n        window.removeEventListener(\"keydown\", Mx.onkeydown, false);\n        window.removeEventListener(\"keyup\", Mx.onkeyup, false);\n        //mx.addEventListener(Mx, \"touchend\", Mx.ontouchend);\n        //mx.addEventListener(Mx, 'touchmove', Mx.ontouchmove, false);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @param callback\n     * @param useCapture\n     * @private\n     */\n    mx.addEventListener = function(Mx, event, callback, useCapture) {\n        return Mx.wid_canvas.addEventListener(event, callback, useCapture);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @param callback\n     * @param useCapture\n     * @private\n     */\n    mx.removeEventListener = function(Mx, event, callback, useCapture) {\n        return Mx.wid_canvas.removeEventListener(event, callback, useCapture);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @private\n     */\n    mx.dispatchEvent = function(Mx, event) {\n        return Mx.wid_canvas.dispatchEvent(event);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.onWidgetLayer = function(Mx, func) {\n        mx.onCanvas(Mx, Mx.wid_canvas, func);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.onCanvas = function(Mx, canvas, func) {\n        var current_active = Mx.active_canvas;\n        Mx.active_canvas = canvas;\n        try {\n            if (func) {\n                return func();\n            }\n        } finally {\n            Mx.active_canvas = current_active;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.withWidgetLayer = function(Mx, func) {\n        var f = function() {\n            mx.onWidgetLayer(Mx, func);\n        };\n        return f;\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.render = function(Mx, func) {\n        if (!func) {\n            return;\n        }\n\n        var active_canvas = Mx.active_canvas;\n\n        if (!active_canvas._animationFrameHandle) {\n            active_canvas._animationFrameHandle = requestAnimFrame(function() {\n                active_canvas._animationFrameHandle = undefined;\n                func();\n            });\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param value\n     * @private\n     */\n    mx.fullscreen = function(Mx, value) {\n        if (value === undefined) {\n            value = !Mx.fullscreen;\n        }\n        if (value) {\n            Mx.fullscreen = {\n                position: Mx.root.style.position,\n                height: Mx.root.style.height,\n                width: Mx.root.style.width,\n                left: Mx.root.style.left,\n                top: Mx.root.style.top,\n                zIndex: Mx.root.style.zIndex\n            };\n            Mx.root.style.position = \"fixed\";\n            Mx.root.style.height = \"100%\";\n            Mx.root.style.width = \"100%\";\n            Mx.root.style.left = \"0px\";\n            Mx.root.style.top = \"0px\";\n            Mx.root.style.zIndex = 16777271; // http://www.puidokas.com/max-z-index/\n        } else {\n            Mx.root.style.position = Mx.fullscreen.position;\n            Mx.root.style.height = Mx.fullscreen.height;\n            Mx.root.style.width = Mx.fullscreen.width;\n            Mx.root.style.left = Mx.fullscreen.left;\n            Mx.root.style.top = Mx.fullscreen.top;\n            Mx.root.style.zIndex = Mx.fullscreen.zIndex;\n            Mx.fullscreen = undefined;\n        }\n        mx.checkresize(Mx);\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.checkresize = function(Mx) {\n        var canvas = Mx.canvas;\n        if ((canvas.height !== Mx.root.clientHeight) || (canvas.width !== Mx.root.clientWidth)) {\n\n            Mx.height = Mx.root.clientHeight;\n            Mx.width = Mx.root.clientWidth;\n\n            Mx.canvas.height = Mx.height;\n            Mx.canvas.width = Mx.width;\n            Mx.wid_canvas.height = Mx.height;\n            Mx.wid_canvas.width = Mx.width;\n\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.invertbgfg = function(Mx) {\n        mx.setbgfg(Mx, Mx.fg, Mx.bg, !Mx.xi);\n    };\n\n    /**\n     * @param color1\n     * @param color2\n     * @param color3\n     * @private\n     */\n    mx.mixcolor = function(color1, color2, perc1to2) {\n        var c1 = tinycolor(color1).toRgb();\n        var c2 = tinycolor(color2).toRgb();\n        var mix = 1.0 - perc1to2;\n        c2.r = c1.r * mix + c2.r * perc1to2;\n        c2.g = c1.g * mix + c2.g * perc1to2;\n        c2.b = c1.b * mix + c2.b * perc1to2;\n        return tinycolor(c2).toHexString(true);\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param fillStyle\n     * @private\n     */\n    mx.linear_gradient = function(Mx, x, y, w, h, fillStyle) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        var step_size = 1.0 / fillStyle.length;\n        var lingrad = ctx.createLinearGradient(x, y, w, h);\n        for (var i = 0; i < fillStyle.length - 1; i++) {\n            lingrad.addColorStop(step_size * (i), fillStyle[i]);\n        }\n        lingrad.addColorStop(1, fillStyle[fillStyle.length - 1]);\n        return lingrad;\n    };\n\n    /**\n     * Set's the background and foreground\n     * xwfg : usually used for text on a widget\n     * xwbg : background for a widget\n     * @param Mx\n     * @param bg\n     * @param fg\n     * @param xi\n     * @private\n     */\n    mx.setbgfg = function(Mx, bg, fg, xi) {\n        Mx.bg = tinycolor(bg).toHexString();\n        Mx.fg = tinycolor(fg).toHexString();\n        Mx.xi = tinycolor(xi).toHexString();\n\n        if ((tinycolor.equals(Mx.bg, \"black\")) && (tinycolor.equals(Mx.fg, \"white\"))) { ///mmm\n            Mx.xwfg = Mx.fg; // X-Widget Foreground color\n            Mx.xwbg = \"rgb(35%,35%,30%)\"; // X-Widget Background color\n            Mx.xwts = \"rgb(60%,60%,55%)\"; // X-Widget top shadow color\n            Mx.xwbs = \"rgb(25%,25%,20%)\"; // X-Widget bottom shadow color\n            Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n            Mx.xwlo = \"rgb(15%,15%,10%)\"; // X-Widget top shadow color\n            Mx.hi = Mx.xwts; //  Highlight color\n        } else if ((tinycolor.equals(Mx.bg, \"white\")) && (tinycolor.equals(Mx.fg, \"black\"))) {\n            Mx.xwfg = Mx.fg; // X-Widget Foreground color\n            Mx.xwbg = \"rgb(60%,60%,55%)\"; // X-Widget Background color\n            Mx.xwts = \"rgb(80%,80%,75%)\"; // X-Widget top shadow color\n            Mx.xwbs = \"rgb(40%,40%,35%)\"; // X-Widget bottom shadow color\n            Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n            Mx.xwlo = \"rgb(70%,70%,65%)\";\n            Mx.hi = Mx.xwbs; //  Highlight color\n        } else {\n            var clr = tinycolor(Mx.bg).toRgb();\n            var hsp = Math.sqrt( // HSP equation from http://alienryderflex.com/hsp.html\n                0.299 * (clr.r * clr.r) +\n                0.587 * (clr.g * clr.g) +\n                0.114 * (clr.b * clr.b)\n            );\n            if (hsp > 127.5) { // light\n                Mx.xwfg = \"black\";\n                Mx.xwbg = \"rgb(60%,60%,55%)\"; // X-Widget Background color\n                Mx.xwts = \"rgb(80%,80%,75%)\"; // X-Widget top shadow color\n                Mx.xwbs = \"rgb(40%,40%,35%)\"; // X-Widget bottom shadow color\n                Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n                Mx.xwlo = \"rgb(70%,70%,65%)\";\n                Mx.hi = Mx.xwts;\n            } else { // dark\n                Mx.xwfg = \"white\";\n                Mx.xwbg = \"rgb(35%,35%,30%)\"; // X-Widget Background color\n                Mx.xwts = \"rgb(60%,60%,55%)\"; // X-Widget top shadow color\n                Mx.xwbs = \"rgb(25%,25%,20%)\"; // X-Widget bottom shadow color\n                Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n                Mx.xwlo = \"rgb(15%,15%,10%)\"; // X-Widget top shadow color\n                Mx.hi = Mx.xwbs;\n            }\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param theme\n     * @private\n     */\n    mx.settheme = function(Mx, theme) {\n        Mx.bg = theme.bg;\n        Mx.fg = theme.fg;\n        Mx.xi = theme.xi;\n        Mx.xwfg = theme.xwfg;\n        Mx.xwbg = theme.xwbg;\n        Mx.xwts = theme.xwts;\n        Mx.xwbs = theme.xwbs;\n        Mx.xwlo = theme.xwlo;\n        Mx.hi = theme.hi;\n    };\n\n    /**\n     * Close graphics windows.\n     * @param Mx\n     */\n    mx.close = function(Mx) {\n        var canvas = Mx.wid_canvas;\n        canvas.removeEventListener(\"mousemove\", Mx.onmousemove, false);\n        //canvas.removeEventListener(\"touchmove\", Mx.ontouchmove);\n        canvas.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n        //canvas.addEventListener(\"touchend\", Mx.onmouseup);\n\n        if (Mx.parent && Mx.parent.parentNode) {\n            Mx.parent.parentNode.removeChild(Mx.parent);\n        }\n    };\n\n    /**\n     * Draws and implements a scrollbar\n     * @param Mx\n     * @param sb\n     * @param xs\n     * @param xe\n     * @param ys\n     * @param ye\n     * @param out\n     * @param qs\n     * @param qe\n     * @param mouseEvent\n     * @param scrollbarState\n     */\n    //\n    // ~= MX$SCROLLBAR\n    //\n    mx.scrollbar = function(Mx, sb, xs, xe, ys, ye, out, qs, qe, mouseEvent, scrollbarState) {\n        // Param types:\n        // mx.SCROLLBAR* sb,\n        // int xs, int xe, int ys, int ye,\n        // real* ps, real* pe, real qs, real qe\n\n        var mode; // an int\n        var action; // an int\n        var origin; // an int\n        var stat = 0; // an int\n\n        var step; // a real_8\n        var page; // a real_8\n        var scale; // a real_8\n        var sblocal = new mx.SCROLLBAR(); // a SCROLLBAR\n\n        mode = (sb.flag !== undefined ? sb.flag : sb); // REFACTOR - if user sends in a number instead of a scrollbar\n        action = Math.abs(mode);\n\n        if (ye - ys > xe - xs) {\n            if (Mx.origin < 3) {\n                origin = 2; /* inverted Y scrollbar */\n            } else {\n                origin = 4; /* normal Y scrollbar */\n            }\n        } else {\n            if (Mx.origin & 2) {\n                origin = 3; /* inverted X scrollbar */\n            } else {\n                origin = 1; /* normal X scrollbar */\n            }\n        }\n\n        if (action < 10) {\n            sb = sblocal; /* use local SB structure */\n        }\n        if (action < 10 || sb.action === 0) { /* re-init the SB structure */\n            mx.scroll(Mx, sb, mx.XW_INIT, undefined, scrollbarState);\n            sb.flag = mode;\n            /* Turn off repeated event handling in mx_scroll */\n            sb.initial_pause = -1.0;\n            mx.scroll_loc(sb, xs, ys, xe - xs + 1, ye - ys + 1, origin, scrollbarState);\n        }\n        sb.srange = out.pe - out.ps;\n\n        switch (action) {\n            case 0:\n                step = page = scale = 1.0;\n                break;\n            case 1:\n            case 11:\n                step = page = 0.9 * sb.srange;\n                scale = 2.0;\n                break;\n            case 2:\n            case 12:\n                step = 0.1 * sb.srange;\n                page = 9 * step;\n                scale = 2.0;\n                break;\n            case 3:\n            case 13:\n                step = 1.0;\n                page = sb.srange - 1.0;\n                scale = 1.0;\n                break;\n            default:\n                return 0;\n        }\n        mx.scroll_vals(sb, out.ps, sb.srange, qs, qe - qs, step, page, scale, scrollbarState);\n\n        if (mode === 0) {\n            mx.scroll(Mx, sb, mx.XW_DRAW, undefined, undefined); // No need for a mouse event\n        } else {\n            if (mx.scroll(Mx, sb, mx.XW_EVENT, mouseEvent, scrollbarState)) {\n                if (out.ps !== sb.smin) {\n                    out.ps = sb.smin;\n                    stat += 1;\n                }\n                if (out.pe !== sb.smin + sb.srange) {\n                    out.pe = sb.smin + sb.srange;\n                    stat += 2;\n                }\n            }\n        }\n        return stat;\n    };\n\n    /**\n     * Instantiate scrollbar on graphics window\n     * @param Mx\n     * @param sv\n     * @param op\n     * @param mouseEvent\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll\n    //\n    mx.scroll = function(Mx, sv, op, mouseEvent, scrollbarState) {\n        var btn; // an int\n        var smin; // a real_8\n        var srange; // a real_8\n        var s; // an int_4\n\n        if (sv === undefined) {\n            return false; /* an mx.SCROLLBAR */\n        }\n\n        switch (op) {\n            case mx.XW_INIT:\n                mx.scroll_loc(sv, 0, 0, Mx.width, 20, 1, scrollbarState);\n                mx.scroll_vals(sv, 0.0, 10.0, 0.0, 100.0, 1.0, 10.0, 1.0, scrollbarState);\n                sv.flag = 0;\n                sv.action = 0;\n                sv.initial_pause = 0.25;\n                sv.repeat_pause = 0.05;\n                sv.mxevent = true;\n                sv.repeat_count = 0;\n                break;\n            case mx.XW_EVENT:\n                /*  Determine which button, if any, was pressed/released\n                 */\n                btn = 0;\n                if (sv.mxevent) { // TODO make sure mxevent is set properly when an event goes off - how is this supposed to be set?\n                    btn = (Mx.button_release) ? -Mx.button_release : Mx.button_press;\n                } else if (mouseEvent.type === \"mousedown\" || mouseEvent.type === \"mouseup\") {\n                    // TODO Does this case ever happen?\n                    switch (mouseEvent.which) {\n                        case 1:\n                            btn = 1;\n                            break;\n                        case 2:\n                            btn = 2;\n                            break;\n                        case 3:\n                            btn = 3;\n                            break;\n                            /* Add these cases for the mouse wheel */\n                        case 4:\n                            btn = 4;\n                            break;\n                        case 5:\n                            btn = 5;\n                            break;\n                    }\n                    if (mouseEvent.type === \"mouseup\") {\n                        btn = -btn;\n                    }\n                } else if (mouseEvent.type === \"mousewheel\" || mouseEvent.type === \"DOM-MouseScroll\") {\n                    // TODO Does this case ever happen?\n                    if (mouseEvent.wheelDelta && mouseEvent.wheelDelta > 0) {\n                        btn = 4; // TODO is 4 right for negative scroll (aka a scroll forwards away from the user)\n                        // TODO Do we need to worry about a release here?\n                    } else if (mouseEvent.wheelDelta && mouseEvent.wheelDelta < 0) {\n                        btn = 5; // TODO is 5 right for negative scroll (aka a scroll backward towards the user)\n                        // TODO Do we need to worry about a release here?\n                    }\n                }\n\n                if (sv.action === 0) {\n                    /*  First-time action -- only interested in button presses\n                     *  1 or 2 within our bounds\n                     */\n                    /* If scroll wheel, pretend we're on vertical scroll bar */\n                    if (btn === 4 || btn === 5) {\n                        Mx.xpos = sv.x;\n                    }\n\n\n                    /* Button !=1,2,4,5 OR NOT on scroll bar */\n                    if ((btn !== 1 && btn !== 2 && btn !== 4 && btn !== 5) ||\n                        Mx.xpos < sv.x || Mx.ypos < sv.y ||\n                        Mx.xpos > sv.x + sv.w || Mx.ypos > sv.y + sv.h) {\n                        return false;\n                    }\n                } else if (btn < 0) {\n                    /* Any button release within a repeated action will make us exit */\n                    sv.action = sv.repeat_count = 0; // TODO Update scrollbarState's action?\n                    return true;\n                }\n\n                /*  Compute s, the offset in pixels from the 'origin' of\n                 *  the scrollbar's on-screen region.\n                 */\n                if (sv.origin & 1) {\n                    s = Mx.xpos - sv.x;\n                    if (sv.origin & 2) {\n                        s = sv.w - s;\n                    }\n                } else {\n                    s = Mx.ypos - sv.y;\n                    if (sv.origin <= 2) {\n                        s = sv.h - s;\n                    }\n                }\n\n                /*  Determine action */\n                if (sv.action === 0) {\n                    /* First-time action */\n\n                    sv.repeat_count = 0; // TODO Is repeat count necessary any more?\n\n                    var scrollReal2PixOut = mx.scroll_real2pix(sv);\n                    // UPDATE SCROLLBAR STATE as well\n                    sv.s1 = scrollbarState.s1 = scrollReal2PixOut.s1;\n                    sv.sw = scrollbarState.sw = scrollReal2PixOut.sw;\n                    sv.soff = scrollbarState.soff = s - sv.s1;\n                    if (sv.trange === 0.0) {\n                        // UPDATE SCROLLBAR STATE as well\n                        sv.smin = scrollbarState.smin = sv.tmin;\n                        sv.srange = scrollbarState.srange = 0.0;\n                    } else switch (btn) {\n                        case 1:\n                            if (s > sv.a1 && s < sv.a2) { /* on scroll trough */\n                                sv.action = (sv.soff > 0) ? mx.SB_PAGEINC : mx.SB_PAGEDEC;\n                            } else { /* on arrows */\n                                sv.action = (sv.soff > 0) ? mx.SB_STEPINC : mx.SB_STEPDEC;\n                            }\n                            break;\n                        case 4:\n                            sv.action = mx.SB_WHEELUP;\n                            break;\n                        case 5:\n                            sv.action = mx.SB_WHEELDOWN;\n                            break;\n                    }\n                } else {\n                    /* We're repeating sv.action */\n                    switch (sv.action) {\n                        case mx.SB_WHEELUP:\n                        case mx.SB_WHEELDOWN:\n                        case mx.SB_EXPAND:\n                            /* we don't want to repeat these */\n                        case mx.SB_SHRINK:\n                        case mx.SB_FULL:\n                            sv.action = sv.repeat_count = 0;\n                    }\n                }\n                /* FALL THROUGH!!! */\n                /* jshint -W086 */\n            case mx.XW_COMMAND:\n                /* jshint +W086 */\n\n                smin = sv.smin;\n                srange = sv.srange;\n\n                switch (sv.action) {\n                    case mx.SB_STEPINC:\n                        smin += sv.step;\n                        break;\n                    case mx.SB_STEPDEC:\n                        smin -= sv.step;\n                        break;\n                    case mx.SB_PAGEINC:\n                        smin += sv.page;\n                        break;\n                    case mx.SB_PAGEDEC:\n                        smin -= sv.page;\n                        break;\n                    case mx.SB_FULL:\n                        smin = sv.tmin;\n                        srange = sv.trange;\n                        break;\n                    case mx.SB_EXPAND:\n                        srange = srange * sv.scale;\n                        if (smin <= 0 && smin + sv.srange >= 0) {\n                            smin *= sv.scale;\n                        } else {\n                            smin -= (srange - sv.srange) / 2.0;\n                        }\n                        break;\n                    case mx.SB_SHRINK:\n                        srange = srange / sv.scale;\n                        if (smin < 0 && smin + sv.srange >= 0) {\n                            smin += srange / sv.scale; /* Plot crosses axis */\n                        } else if (smin === 0 && smin + sv.srange >= 0) {\n                            smin = srange / sv.scale; /* Plot touches axis */\n                        } else {\n                            smin += (sv.srange - srange) / 2.0; /* Plot is completely contained on positive side of axis */\n                        }\n                        break;\n                        /* The mouse wheel needs to scroll 1 page at a time, if you want an\n\t\t           application to scroll differently, change sv.page with\n\t\t           mx_scroll_vals in the application code */\n                    case mx.SB_WHEELUP:\n                        smin -= sv.page;\n                        break;\n                    case mx.SB_WHEELDOWN:\n                        smin += sv.page;\n                        break;\n                }\n\n                if (sv.trange > 0) {\n                    smin = Math.max(sv.tmin, Math.min(smin, sv.tmin + sv.trange - srange));\n                    srange = Math.min(srange, sv.trange);\n                } else {\n                    smin = Math.min(sv.tmin, Math.max(smin, sv.tmin + sv.trange - srange));\n                    srange = Math.max(srange, sv.trange);\n                }\n\n                if (sv.smin === smin && sv.srange === srange) {\n                    if (sv.action !== mx.SB_DRAG) {\n                        sv.action = sv.repeat_count = 0;\n                    }\n                } else {\n                    // UPDATE SCROLLBAR STATE as well\n                    sv.smin = scrollbarState.smin = smin;\n                    sv.srange = scrollbarState.srange = srange;\n                    sv.repeat_count++;\n                }\n\n                if (op === mx.XW_COMMAND) {\n                    mx.scroll(Mx, sv, mx.XW_UPDATE, undefined);\n                    sv.action = 0;\n                }\n\n                break;\n            case mx.XW_DRAW:\n            case mx.XW_UPDATE:\n                mx.redrawScrollbar(sv, Mx, op);\n\n        } /* switch */\n        return true;\n    };\n\n    /**\n     * Specify location and orientation of a scrollbar\n     * @param sv\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param origin\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll_loc\n    //\n    mx.scroll_loc = function(sv, x, y, w, h, origin, scrollbarState) {\n        // UPDATE local scrollbar and SCROLLBAR STATE\n        if (sv === undefined) {\n            return; /* mx.SCROLLBAR */\n        }\n        sv.x = scrollbarState.x = x; // int\n        sv.y = scrollbarState.y = y; // int\n        sv.w = scrollbarState.w = w; // int\n        sv.h = scrollbarState.h = h; // int\n        sv.origin = scrollbarState.origin = Math.max(1, Math.min(4, origin)); // int\n\n        if (sv.origin & 1) {\n            sv.a2 = scrollbarState.a2 = sv.w;\n            sv.arrow = scrollbarState.arrow = Math.min(m.trunc((sv.w - m.trunc(2 * mx.GBorder)) / 3), sv.h + mx.GBorder);\n        } else {\n            sv.a2 = scrollbarState.a2 = sv.h;\n            sv.arrow = scrollbarState.arrow = Math.min(m.trunc((sv.h - m.trunc(2 * mx.GBorder)) / 3), sv.w + mx.GBorder);\n        }\n        sv.a1 = scrollbarState.a1 = sv.arrow + mx.GBorder;\n        sv.a2 -= sv.arrow + mx.GBorder;\n        scrollbarState.a2 -= sv.arrow + mx.GBorder;\n        sv.swmin = scrollbarState.swmin = Math.min(10, sv.a2 - sv.a1);\n        sv.s1 = scrollbarState.s1 = 0;\n        sv.sw = scrollbarState.sw = 0;\n        sv.action = scrollbarState.action = 0;\n    };\n\n    /**\n     * Set coordinates in scrollbar structure\n     * @param sv\n     * @param smin\n     * @param srange\n     * @param tmin\n     * @param trange\n     * @param step\n     * @param page\n     * @param scale\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll_vals\n    //\n    mx.scroll_vals = function(sv, smin, srange, tmin, trange, step, page, scale, scrollbarState) {\n        // UPDATE SCROLLBAR STATE as well\n        if (sv === undefined) {\n            return; /* an mx.SCROLLBAR */\n        }\n        sv.smin = scrollbarState.smin = smin;\n        sv.srange = scrollbarState.srange = srange;\n        sv.tmin = scrollbarState.tmin = tmin;\n        sv.trange = scrollbarState.trange = trange;\n        sv.step = scrollbarState.step = step;\n        sv.page = scrollbarState.page = page;\n        sv.scale = scrollbarState.scale = Math.max(scale, 1.0);\n    };\n\n    /**\n     * Draw single symbol centered at pixel (x,y)\n     * @param Mx\n     * @param ic\n     * @param x\n     * @param y\n     * @param symbol\n     * @param rr\n     */\n    //\n    // ~= MX$DRAW_SYMBOL\n    //\n    mx.draw_symbol = function(Mx, ic, x, y, symbol, rr, n) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var r = 0; // int\n        var d = 0; // int\n        var d2 = 0; // int\n        var rmode = false; // bool\n        var fill = false; // bool\n        var tri = []; // XPoint array of size 4\n        for (var cnt = 0; cnt < 4; cnt++) { // initializing 4 points in the array\n            tri[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var c = ''; // char\n\n        fill = rr < 0;\n        r = Math.abs(rr);\n        d = r * 2;\n\n        // Set the foreground color\n        ctx.fillStyle = ic;\n        ctx.strokeStyle = ic;\n\n        if (typeof symbol === \"function\") {\n            symbol(ctx, n, x, y);\n        } else {\n            switch (symbol) {\n                case mx.L_CircleSymbol:\n                    ctx.beginPath();\n                    if (fill) {\n                        ctx.arc(x, y, r, 0, 360); // draw arc\n                        ctx.fill(); // fill in the area of the arc\n                    } else {\n                        ctx.arc(x, y, r, 0, 360);\n                        ctx.stroke(); // just draw the arc's outline\n                    }\n                    break;\n                case mx.L_SquareSymbol:\n                    if (fill) {\n                        fill_rectangle(ctx, x - r, y - r, d, d);\n                    } else {\n                        draw_rectangle(ctx, x - r, y - r, d, d);\n                    }\n                    break;\n                case mx.L_PixelSymbol:\n                    d = 1; // d = 2*GMaxLines; // TODO Do we care about a maximum number of lines?\n                    // No native way to draw just a pixel - so use a circle instead\n                    ctx.beginPath();\n                    ctx.arc(x, y, 1, 0, 2 * Math.PI, true);\n                    ctx.fill();\n                    break;\n                case mx.L_ITriangleSymbol:\n                    r = -r; // TODO Refactor without switch fall-through?\n                    /* jshint -W086 */\n                case mx.L_TriangleSymbol:\n                    /* jshint +W086 */\n                    d = m.trunc(r * 1.5);\n                    d2 = m.trunc(r * 0.80);\n\n                    // Coordinates of just the triangle itself\n                    tri[1].x = -d2;\n                    tri[1].y = d;\n                    tri[2].x = d2 * 2;\n                    tri[2].y = 0;\n                    tri[3].x = -d2;\n                    tri[3].y = -d;\n\n                    var tempTri = []; // XPoint array of size 4\n                    for (var cnt = 0; cnt < 4; cnt++) { // initializing 4 points in the array\n                        tempTri[cnt] = {\n                            x: 0,\n                            y: 0\n                        };\n                    }\n\n                    if (fill) {\n                        tempTri[0].x = x;\n                        tempTri[0].y = y - r;\n\n                        // Replacement for CoordModePrevious offset (updating coordinates to be relative to origin, instead of previous pt)\n                        tempTri[1].x = tempTri[0].x + tri[1].x;\n                        tempTri[1].y = tempTri[0].y + tri[1].y;\n                        tempTri[2].x = tempTri[1].x + tri[2].x;\n                        tempTri[2].y = tempTri[1].y + tri[2].y;\n                        tempTri[3].x = tempTri[2].x + tri[3].x;\n                        tempTri[3].y = tempTri[2].y + tri[3].y;\n\n                        fill_poly(ctx, tempTri);\n                    } else {\n                        tempTri[0].x = x;\n                        tempTri[0].y = y - r;\n\n                        // Replacement for CoordModePrevious offset (updating coordinates to be relative to origin, instead of previous pt)\n                        tempTri[1].x = tempTri[0].x + tri[1].x;\n                        tempTri[1].y = tempTri[0].y + tri[1].y;\n                        tempTri[2].x = tempTri[1].x + tri[2].x;\n                        tempTri[2].y = tempTri[1].y + tri[2].y;\n                        tempTri[3].x = tempTri[2].x + tri[3].x;\n                        tempTri[3].y = tempTri[2].y + tri[3].y;\n\n                        draw_poly(ctx, tempTri);\n                    }\n                    break;\n                case mx.L_PlusSymbol:\n                    draw_line(ctx, x, y + r, x, y - r);\n                    draw_line(ctx, x + r, y, x - r, y);\n                    break;\n                case mx.L_HLineSymbol:\n                    draw_line(ctx, x + r, y, x - r, y);\n                    break;\n                case mx.L_VLineSymbol:\n                    draw_line(ctx, x, y + r, x, y - r);\n                    break;\n                case mx.L_XSymbol:\n                    draw_line(ctx, x - r, y - r, x + r, y + r);\n                    draw_line(ctx, x + r, y - r, x - r, y + r);\n                    break;\n                default:\n                    c = symbol;\n                    r = m.trunc(Mx.text_w / 2); //tbd\n                    if (fill && !rmode) {\n                        ctx.fillText(c.substring(0, 2), x - r, y + r); // TODO Does this cover it? Do we need to also fill in a rectangle behind\n                    }\n                    break;\n            } // end switch (symbol)\n        }\n    };\n\n    /**\n     * Plot symbols at centers defined by an array of pixels\n     * @param Mx\n     * @param ic\n     * @param pixx\n     * @param pixy\n     * @param npix\n     * @param symbol\n     * @param rr\n     * @private\n     */\n    //\n    // ~= MX$DRAW_SYMBOLS\n    //\n    mx.draw_symbols = function(Mx, ic, pixx, pixy, npix, symbol, rr, istart) {\n        for (var i = 0; i < npix; i++) {\n            mx.draw_symbol(Mx, ic, pixx[i], pixy[i], symbol, rr, i + istart);\n        }\n    };\n\n    /* http://geomalgorithms.com/a01-_area.html\n     *   > 0 left\n     *   = 0 on\n     *   < 0 right\n     */\n    /**\n     * Test if a point is Left|On|Right of an infinite 2D line.\n     * @method isLeft\n     * @param p_x Point's x-coordinate\n     * @param p_y Point's y-coordinate\n     * @param e_x1 Lines's x1-coordinate\n     * @param e_y1 Lines's y1-coordinate\n     * @param e_x2 Lines's x2-coordinate\n     * @param e_y2 Lines's y2-coordinate\n     * @private\n     */\n    function isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) {\n        return ((e_x1 - p_x) * (e_y2 - p_y) - (e_x2 - p_x) * (e_y1 - p_y));\n    }\n\n    /**\n     * @method update_winding_number\n     * @param wn\n     * @param p_x\n     * @param p_y\n     * @param e_x1\n     * @param e_y1\n     * @param e_x2\n     * @param e_y2\n     * @private\n     */\n    function update_winding_number(wn, p_x, p_y, e_x1, e_y1, e_x2, e_y2) {\n        if (e_y1 <= p_y) { // start y <= P.y\n            if (e_y2 > p_y) { // an upward crossing\n                if (isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) > 0) {\n                    wn += 1;\n                }\n            }\n        } else { // start y > P.y (no test needed)\n            if (e_y2 <= p_y) { // a downward crossing\n                if (isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) < 0) {\n                    wn -= 1;\n                }\n            }\n        }\n        return wn;\n    }\n\n    /**\n     * Converts array of (x,y) coordinates to pixel coordinates, plots lines or dots\n     * @param Mx\n     * @param color\n     * @param xpoint\n     * @param ypoint\n     * @param npts\n     * @param skip\n     * @param line\n     * @param symb\n     * @param rad\n     * @param options\n     */\n    //\n    // ~= MX$TRACE\n    //\n    mx.trace = function(Mx, color, xpoint, ypoint, npts, istart, skip, line, symb, rad, options) {\n        if ((xpoint === undefined) || (ypoint === undefined)) {\n            throw \"mx.trace requires xpoint and ypoint\";\n        }\n\n        if (skip === undefined) {\n            skip = 1;\n        }\n\n        if (line === undefined) {\n            line = 1;\n        }\n\n        if (symb === undefined) {\n            symb = 0;\n        }\n\n        if (rad === undefined) {\n            rad = 0;\n        }\n\n        if (options === undefined) {\n            options = {};\n        }\n\n        if (npts <= 0) {\n            m.log.warn(\"No points to draw\");\n            return;\n        }\n\n        if ((line === 0) && (symb === 0)) {\n            m.log.warn(\"No line or symbol to draw\");\n            return;\n        }\n\n        var style;\n        if (options.dashed) {\n            style = {\n                mode: \"dashed\",\n                on: 4,\n                off: 4\n            };\n        }\n\n        var stk4 = mx.origin(Mx.origin, 4, Mx.stk[Mx.level]);\n        if ((stk4.xscl === 0.0) || (stk4.yscl === 0.0)) {\n            // the min and max are the same\n            return;\n        }\n\n        var left = stk4.x1;\n        var top = stk4.y1;\n\n        var xxmin = stk4.xmin;\n        var xscl = 1.0 / stk4.xscl;\n\n        var yymin = stk4.ymin;\n        var yscl = 1.0 / stk4.yscl;\n\n        if (!options.noclip) {\n            mx.clip(Mx, left, top, stk4.x2 - left + 1, stk4.y2 - top + 1);\n        }\n\n        var dx = Math.abs(stk4.xmax - stk4.xmin);\n        var dy = Math.abs(stk4.ymax - stk4.ymin);\n        var xmin = Math.min(stk4.xmin, stk4.xmax);\n        var ymin = Math.min(stk4.ymin, stk4.ymax);\n        var xmax = xmin + dx;\n        var ymax = ymin + dy;\n        //dx = dx * 0.5;\n        //if ((line == -1) || (line == 1)) {\n        //\tdy = dy * 10.0;\n        //} else {\n        //\tdy = dy * 0.5;\n        //}\n        //xmin = xmin - dx;\n        //ymin = ymin - dy;\n        //xmax = xmax + dx;\n        //ymax = ymax + dy;\n        // These buffers need to be able to hold 2 times the number of points.\n        // if all points are on screen, then we will will need 'n' points\n        // if all points are off the screen, then we will need (2*n)-2\n        var bufsize = 4 * Math.ceil(2 * xpoint.length);\n        var pixx = new Int32Array(new ArrayBuffer(bufsize));\n        var pixy = new Int32Array(new ArrayBuffer(bufsize));\n\n        var ib = 0;\n        if ((line === 0) && (symb !== 0)) {\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                var lvisible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n                if (lvisible) {\n                    pixx[0] = Math.round((x - xxmin) * xscl) + left;\n                    pixy[0] = Math.round((y - yymin) * yscl) + top;\n                    mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                }\n            }\n        }\n        if (options.vertsym === true) {\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                if ((x >= xmin) && (x <= xmax)) {\n                    var i = Math.round((x - xxmin) * xscl) + left;\n                    mx.draw_line(Mx, color, i, 0, i, Mx.height);\n                    if ((y >= ymin) && (y <= ymax)) {\n                        pixx[0] = i;\n                        pixy[0] = Math.round((y - yymin) * yscl) + top;\n                        mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                    }\n                }\n            }\n        }\n        if (options.horzsym === true) {\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                if ((y >= ymin) && (y <= ymax)) {\n                    var i = Math.round((y - yymin) * yscl) + top;\n                    mx.draw_line(Mx, color, 0, i, Mx.width, i);\n                    if ((x >= xmin) && (x <= xmax)) {\n                        pixx[0] = Math.round((x - xxmin) * xscl) + left;\n                        pixy[0] = i;\n                        mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                    }\n                }\n            }\n        } else if (line !== 0) {\n            var colors;\n            if ((options) && (options.highlight)) {\n                colors = [];\n                for (var sn = 0; sn < options.highlight.length; sn++) {\n                    if (options.highlight[sn].xstart >= xmax) {\n                        continue;\n                    }\n                    if (options.highlight[sn].xend <= xmin) {\n                        continue;\n                    }\n\n                    var xs = Math.max(options.highlight[sn].xstart, xmin);\n                    var xe = Math.min(options.highlight[sn].xend, xmax);\n\n                    if (xs < xe) {\n                        var rxs = Math.round((xs - xxmin) * xscl) + left;\n                        var rxe = Math.round((xe - xxmin) * xscl) + left;\n\n                        for (var cn = colors.length - 1; cn >= 0; cn--) {\n                            // This highlight overlaps the entire range of a previous\n                            // highlight...we can thus remove the color\n                            if ((rxs <= colors[cn].start) && (rxe >= colors[cn].end)) {\n                                colors.splice(cn, 1);\n                                continue;\n                            }\n                            // This highlight splits a previous highlight...we need\n                            // to create a new color range\n                            else if ((rxs >= colors[cn].start) && (rxe <= colors[cn].end)) {\n                                colors.push({\n                                    start: rxe,\n                                    end: colors[cn].end,\n                                    color: colors[cn].color\n                                });\n                                colors[cn].end = rxs;\n\n                            }\n                            // This highlight overlaps partially\n                            else if ((rxs <= colors[cn].start) && (rxe >= colors[cn].start)) {\n                                colors[cn].start = rxe;\n                            } else if ((rxs <= colors[cn].end) && (rxe >= colors[cn].end)) {\n                                colors[cn].end = rxs;\n                            }\n\n                            // See if this colors is still valid\n                            if (colors[cn].end <= colors[cn].start) {\n                                colors.splice(cn, 1);\n                            }\n                        }\n\n                        colors.push({\n                            start: rxs,\n                            end: rxe,\n                            color: options.highlight[sn].color\n                        });\n                    }\n                }\n\n                // The first color is the start of the plot\n                // in the base-line color\n                colors.push({\n                    start: left,\n                    color: color\n                });\n\n                colors.sort(function(a, b) {\n                    return a.start - b.start;\n                });\n\n            } else {\n                colors = color;\n            }\n\n            var wn = 0; // the winding number counter http://geomalgorithms.com/a03-_inclusion.html\n            var mid_x = (Mx.stk[Mx.level].xmax + Mx.stk[Mx.level].xmin) / 2.0;\n            var mid_y = (Mx.stk[Mx.level].ymax + Mx.stk[Mx.level].ymin) / 2.0;\n\n            var x = xpoint[0];\n            var y = ypoint[0];\n\n            wn = update_winding_number(wn, mid_x, mid_y, Mx.stk[Mx.level].xmin, Mx.stk[Mx.level].ymin, x, y);\n\n            var lvisible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n            // The first point is visible\n            if (lvisible) {\n                pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                ib += 1;\n                if (symb !== 0) {\n                    mx.draw_symbols(Mx, color, pixx, pixy, 1, symb, rad, istart);\n                }\n            } else {\n                ib = 0;\n            }\n\n            var ie = 0;\n            var visible = false;\n            for (var n = skip; n <= (skip * (npts - 1)); n += skip) {\n\n                var lx = x;\n                var ly = y;\n                x = xpoint[n];\n                y = ypoint[n];\n\n                wn = update_winding_number(wn, mid_x, mid_y, lx, ly, x, y);\n\n                visible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n                if ((lvisible) && (visible)) {\n                    // both the left point and right point are visible, so we can draw the trace\n                    pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                    pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                    ib += 1;\n                } else {\n                    // clipping necessary, either the left or right point are not visible\n                    lvisible = visible;\n                    // calculate the difference between the last point and this point\n                    dx = lx - x;\n                    dy = ly - y;\n                    if ((dx !== 0.0) || (dy !== 0.0)) {\n                        var o = {\n                            tL: 1.0,\n                            tE: 0.0\n                        };\n                        // Between the last point and the current point,\n                        // determine the ratio of the x and y porionts\n                        // that intersects the border.  If clipt returns\n                        // false then no portion of the line between the two\n                        // points is visible\n                        if (clipt(dx, xmin - x, o)) {\n                            if (clipt(-dx, x - xmax, o)) {\n                                if (clipt(dy, ymin - y, o)) {\n                                    if (clipt(-dy, y - ymax, o)) {\n                                        // If this point is starting the on-screen portion, start the line\n                                        if (o.tL < 1) {\n                                            pixx[ib] = Math.round((x - xxmin + o.tL * dx) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin + o.tL * dy) * yscl) + top;\n                                            ib += 1;\n                                        }\n\n                                        // If this point is ending the on-screen portion draw the line\n                                        if (o.tE > 0) {\n                                            pixx[ib] = Math.round((x - xxmin + o.tE * dx) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin + o.tE * dy) * yscl) + top;\n                                            ib += 1;\n                                            mx.draw_lines(Mx, colors, pixx.subarray(ie, ib), pixy.subarray(ie, ib), (ib - ie), line, style);\n\n                                            if (symb !== 0 && (ib - ie) > 2) {\n                                                mx.draw_symbols(Mx,\n                                                    color,\n                                                    pixx.subarray(ie + 1, ib - 1),\n                                                    pixy.subarray(ie + 1, ib - 1), (ib - ie - 2),\n                                                    symb,\n                                                    rad,\n                                                    istart + n - (ib - ie - 2));\n                                            }\n                                            ie = ib;\n                                        } else {\n                                            // otherwise add it to the line to be drawn\n                                            pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                                            ib += 1;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            wn = update_winding_number(wn, mid_x, mid_y, x, y, Mx.stk[Mx.level].xmax, Mx.stk[Mx.level].ymin);\n            wn = update_winding_number(wn, mid_x, mid_y, Mx.stk[Mx.level].xmax, Mx.stk[Mx.level].ymin, Mx.stk[Mx.level].xmin, Mx.stk[Mx.level].ymin);\n            if ((ib - ie) > 0) {\n                mx.draw_lines(Mx, colors, pixx.subarray(ie, ib), pixy.subarray(ie, ib), (ib - ie), line, style);\n                if (visible) {\n                    ie = ie + 1;\n                }\n                if (symb !== 0 && (ib - ie) > 1) {\n                    // TODO ib - 1 is used below because\n                    // otherwise the last point has undefined\n                    // for it's x/y coordinates...but this may\n                    // be a bug because it may neglect drawing\n                    // the last data point\n                    mx.draw_symbols(Mx,\n                        color,\n                        pixx.subarray(ie - 1, ib),\n                        pixy.subarray(ie - 1, ib),\n                        ib - ie - 1,\n                        symb,\n                        rad,\n                        n - ib + istart);\n                }\n            }\n\n            if (options.fillStyle && !Mx.fillMin && !Mx.fillMax) {\n                if ((ib > 1) || (wn !== 0)) {\n                    // if we have at least one point\n                    // or the entire plot area is in the fill zone\n                    mx.fill_trace(Mx, options.fillStyle, pixx, pixy, ib);\n                }\n            }\n\n            if (options.highlight) {\n                for (var i = 0; i < options.highlight.length; i++) {\n                    var highlight = options.highlight[i];\n                    if (!highlight.fill) {\n                        continue;\n                    }\n\n                    var x_start = highlight.xstart;\n                    var x_end = highlight.xend;\n\n                    console.log(\"x start \", x_start);\n                    console.log(\"x end \", x_end);\n\n                    if (x_start >= Mx.stk[Mx.level].xmax) {\n                        continue;\n                    }\n                    if (x_end <= Mx.stk[Mx.level].xmin) {\n                        continue;\n                    }\n\n                    if ((ib > 1) || (wn !== 0)) {\n\n                        var xstart_pixel_value = mx.real_to_pixel(Mx, x_start, 0);\n                        var xend_pixel_value = mx.real_to_pixel(Mx, x_end, 0);\n\n                        var pi_start = xstart_pixel_value.x;\n                        var pi_end = xend_pixel_value.x;\n                        //console.log('start: ', pi_start, 'end: ', pi_end);\n                        var pixx_new = [];\n                        var pixy_new = [];\n                        for (var q = 0; q < ib; q++) {\n                            var this_point = pixx[q];\n                            var this_point_y = pixy[q];\n                            //console.log(this_point);\n                            if (in_fill_range(this_point, pi_start, pi_end) === true) {\n                                //console.log('in range: ', this_point);\n                                pixx_new.push(this_point);\n                                pixy_new.push(this_point_y);\n\n                            }\n                        }\n\n                        if ((pixx_new.length > 0) || (wn !== 0)) {\n                            pi_start = Math.max(pi_start, pixx_new[0]);\n                            pi_end = Math.min(pi_end, pixx_new[pixx_new.length - 1]);\n                            mx.fill_trace(Mx, highlight.fill, pixx_new, pixy_new, pixx_new.length, pi_start, pi_end);\n                        }\n                    }\n\n                }\n            }\n\n\n        }\n\n        if (!options.noclip) {\n            mx.clip(Mx, 0, 0, 0, 0);\n        }\n    };\n\n    /**\n     * Set dashed or solid lines mode.\n     * @param Mx\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_MODE\n    //\n    mx.draw_mode = function(Mx, linewidth, style) {\n        Mx.linewidth = (linewidth === undefined) ? 1 : linewidth;\n        Mx.style = style;\n    };\n\n    /**\n     * @param Mx\n     * @param color\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_LINES\n    //\n    mx.draw_line = function(Mx, color, x1, y1, x2, y2, linewidth, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (linewidth === undefined) {\n            linewidth = Mx.linewidth;\n        }\n        if (style === undefined) {\n            style = Mx.style;\n        }\n        // Look up the color in Mx.pixels\n        if (typeof color === \"number\") {\n            if (!Mx.pixel) {\n                m.log.warn(\"COLORMAP not initialized, defaulting to foreground\");\n                color = Mx.fg;\n            } else {\n                if (isNaN(color)) {\n                    color = 0;\n                }\n                var cidx = Math.max(0, Math.min(Mx.pixel.map.length, color));\n                color = Mx.pixel.getColor(color);\n                color = to_rgb(\n                    color.red,\n                    color.green,\n                    color.blue);\n            }\n        }\n        draw_line(ctx, x1, y1, x2, y2, style, color, linewidth);\n    };\n\n    /**\n     * @param Mx\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     */\n    //\n    // ~= MX$RUBBERLINE\n    //\n    mx.rubberline = function(Mx, x1, y1, x2, y2) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        draw_line(ctx, x1, y1, x2, y2, {\n            mode: \"xor\"\n        }, \"white\", 1);\n    };\n\n    /**\n     * @param Mx\n     * @param fillStyle\n     * @param pixx\n     * @param pixy\n     * @param npts\n     * @private\n     */\n    mx.fill_trace = function(Mx, fillStyle, pixx, pixy, npts, l, r) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (Array.isArray(fillStyle)) {\n            ctx.fillStyle = mx.linear_gradient(Mx, 0, 0, 0, Mx.b - Mx.t, fillStyle);\n        } else {\n            ctx.fillStyle = fillStyle;\n        }\n\n        if (npts < 1) {\n            ctx.fillRect(Mx.l, Mx.t, (Mx.r - Mx.l), (Mx.b - Mx.t));\n            return;\n        }\n\n        if (l === undefined) {\n            l = Mx.l;\n        }\n        if (r === undefined) {\n            r = Mx.r;\n        }\n\n        if (fillStyle) {\n            var x = pixx[0];\n            var y = pixy[0];\n\n            ctx.beginPath();\n            if (y === Mx.t) {\n                ctx.lineTo(l, Mx.t);\n            } else {\n                ctx.lineTo(l, Mx.b);\n            }\n\n\n            ctx.lineTo(x, y);\n\n\n\n            for (var i = 1; i < npts; i++) {\n                x = pixx[i];\n                y = pixy[i];\n                ctx.lineTo(x, y);\n            }\n\n            if (y === Mx.t) {\n                ctx.lineTo(r, Mx.t);\n            }\n            ctx.lineTo(r, Mx.b);\n            if (pixy[0] === Mx.t) {\n                ctx.lineTo(l, Mx.b);\n            }\n\n            ctx.closePath();\n            ctx.fill(\"evenodd\");\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param colors\n     * @param pixx\n     * @param pixy\n     * @param npts\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_LINES\n    //\n    mx.draw_lines = function(Mx, colors, pixx, pixy, npts, linewidth, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (npts < 1) {\n            return;\n        }\n\n        var x = pixx[0];\n        var y = pixy[0];\n\n        if (linewidth === undefined) {\n            linewidth = Mx.linewidth;\n        }\n        if (style === undefined) {\n            style = Mx.style;\n        }\n\n        if ((style) && (style.mode === \"dashed\")) {\n            var dash_supported = common.dashOn(ctx, style.on, style.off);\n            if (!dash_supported) {\n                m.log.warn(\"WARNING: Dashed lines aren't supported on your browser\");\n            }\n        }\n\n        ctx.lineWidth = linewidth;\n        var current_color = 0;\n\n        if (typeof colors === \"string\") {\n            colors = [{\n                start: 0,\n                color: colors\n            }];\n        } else if (!(colors instanceof Array)) {\n            if (colors.start === undefined) {\n                colors.start = 0;\n            }\n            colors = [colors];\n        }\n\n        var n;\n        for (n = (colors.length - 1); n >= 0; n--) {\n            if ((colors[n].end != null) && (colors[n].end < x)) {\n                colors.splice(n, 1);\n            }\n        }\n\n        // Find the first valid color (expects colors to be sorted)\n        for (n = 0; n < colors.length; n++) {\n            if (colors[n].start < x) {\n                current_color = n;\n            }\n        }\n\n        ctx.strokeStyle = colors[current_color].color;\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n\n        for (var i = 0; i < npts; i++) {\n            if ((x === pixx[i]) && (y === pixy[i])) {\n                continue;\n            }\n            x = pixx[i];\n            y = pixy[i];\n\n            var newcolor = false;\n            if ((current_color > 0) && (colors[current_color].end != null) && (colors[current_color].end < x)) {\n                newcolor = true;\n                while ((colors[current_color].end != null) && (colors[current_color].end < x)) {\n                    colors.splice(current_color, 1);\n                    current_color -= 1;\n                    if (current_color === 0) {\n                        break;\n                    }\n                }\n            }\n\n            if (((current_color + 1) < colors.length) && (colors[current_color + 1].start <= x)) {\n                newcolor = true;\n                while (((current_color + 1) < colors.length) && (colors[current_color + 1].start <= x)) {\n                    current_color++;\n                }\n            }\n\n            ctx.lineTo(x, y);\n            if (newcolor) {\n                ctx.stroke();\n                ctx.strokeStyle = colors[current_color].color;\n                ctx.beginPath();\n                ctx.lineTo(x, y);\n            }\n        }\n        ctx.stroke();\n        common.dashOff(ctx);\n        ctx.beginPath();\n    };\n\n    /**\n     * @param Mx\n     * @param left\n     * @param top\n     * @param width\n     * @param height\n     */\n    //\n    // ~= MX$CLIP\n    //\n    mx.clip = function(Mx, left, top, width, height) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if ((left === 0) && (top === 0) && (width === 0) && (height === 0)) {\n            ctx.restore();\n            return;\n        }\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(left, top, width, height);\n        ctx.clip();\n    };\n\n    /**\n     * @param Mx\n     */\n    //\n    // ~= MX$CLEAR_WINDOW\n    //\n    mx.clear_window = function(Mx) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(0, 0, Mx.width, Mx.height);\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.erase_window = function(Mx) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        ctx.clearRect(0, 0, Mx.width, Mx.height);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @param mode\n     * @param def_style\n     * @param alt_style\n     */\n    //\n    // ~= MX$RUBBERBOX\n    // Unlike MX$RUBBERBOX, this is a non-blocking call.  As such the 'func' is a callback for then the rubberbox is finished.\n    //\n    // When CTRL is pressed, alt_style is used\n    //\n    mx.rubberbox = function(Mx, func, mode, def_style, alt_style) {\n        mx.warpbox(Mx, Mx.xpos, Mx.ypos, Mx.xpos, Mx.ypos, 0, Mx.width, 0, Mx.height, func, mode, def_style, alt_style);\n    };\n\n    /**\n     * @param Mx\n     * @param xo\n     * @param yo\n     * @param xl\n     * @param yl\n     * @param xmin\n     * @param xmax\n     * @param ymin\n     * @param ymax\n     * @param func\n     * @param mode\n     * @param def_style\n     * @param alt_style\n     */\n    //\n    // ~= MX$WARPBOX\n    // Unlike MX$WARPBOX, this is a non-blocking call.   As such the 'func' is a callback for then the rubberbox is finished.\n    //\n    mx.warpbox = function(Mx, xo, yo, xl, yl, xmin, xmax, ymin, ymax, func, mode, def_style, alt_style) {\n        if (!def_style) {\n            def_style = {};\n        }\n\n        Mx.warpbox = new WARPBOX();\n        Mx.warpbox.xo = xo;\n        Mx.warpbox.yo = yo;\n        Mx.warpbox.xl = xl;\n        Mx.warpbox.yl = yl;\n        Mx.warpbox.xmin = xmin;\n        Mx.warpbox.xmax = xmax;\n        Mx.warpbox.ymin = ymin;\n        Mx.warpbox.ymax = ymax;\n        Mx.warpbox.func = func;\n        Mx.warpbox.mode = mode;\n\n        Mx.warpbox.style = def_style;\n        Mx.warpbox.def_style = def_style;\n        Mx.warpbox.alt_style = alt_style;\n    };\n\n    /**\n     * @param inorigin\n     * @param outorigin\n     * @param instk\n     */\n    //\n    // ~= M$ORIGIN\n    //\n    mx.origin = function(inorigin, outorigin, instk) {\n        inorigin = Math.max(1, inorigin);\n        outorigin = Math.max(1, outorigin);\n\n        var outstk = new mx.STKSTRUCT();\n\n        outstk.xmin = instk.xmin;\n        outstk.xmax = instk.xmax;\n        outstk.ymin = instk.ymin;\n        outstk.ymax = instk.ymax;\n        outstk.xscl = instk.xscl;\n        outstk.yscl = instk.yscl;\n        outstk.x1 = instk.x1;\n        outstk.y1 = instk.y1;\n        outstk.x2 = instk.x2;\n        outstk.y2 = instk.y2;\n\n        if (inorigin !== outorigin) {\n            var diff = Math.abs(outorigin - inorigin); // used to simplify boolean logic\n            var sum = outorigin + inorigin;\n            if (diff === 2 || sum !== 5) { // (1<->3) (2<->4) (1<->2) (3<->4)\n                outstk.xmin = instk.xmax;\n                outstk.xmax = instk.xmin;\n                outstk.xscl = -instk.xscl;\n            }\n            if (diff === 2 || sum === 5) { // (1<->3) (2<->4) (1<->4) (2<->3)\n                outstk.ymin = instk.ymax;\n                outstk.ymax = instk.ymin;\n                outstk.yscl = -instk.yscl;\n            }\n        }\n        return outstk;\n    };\n\n    /**\n     * @param end1\n     * @param end2\n     */\n    //\n    // ~= MX$MULT\n    //\n    mx.mult = function(end1, end2) {\n        var absmax = Math.max(Math.abs(end1), Math.abs(end2));\n        if (absmax === 0) {\n            return 1.0;\n        }\n        var kengr = 0.1447648 * Math.log(absmax);\n        kengr = kengr | kengr; // Math.floor always rounds down, so -3.3 becomes -4 use this bitwise hack instead\n        if (absmax < 1.0) {\n            kengr = kengr - 1;\n        }\n        if (kengr < 0) {\n            return 1.0 / Math.pow(10, (-3 * kengr));\n        } else {\n            return Math.pow(10, (3 * kengr));\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @private\n     */\n    //\n    // event may be undefined or null\n    mx.widget_callback = function(Mx, event) {\n        if (Mx.prompt) {\n            if (event.which === 3) {\n                Mx.prompt.input.onsubmit();\n            }\n        }\n\n        if (Mx.widget) {\n            Mx.widget.callback(event);\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param promptText\n     * @param isValid\n     * @param onSuccess\n     * @param refresh\n     * @param inputValue\n     * @param xpos\n     * @param ypos\n     * @param errorTimeout\n     */\n    //\n    // ~= MX$DPROMPT - only higher-level\n    mx.prompt = function(Mx, promptText, isValid, onSuccess, refresh, inputValue, xpos, ypos, errorTimeout) {\n        if (inputValue !== undefined) {\n            var inputValid = isValid(inputValue);\n\n            if (!inputValid.valid) {\n                throw \"Prompt default input value not valid due to '\" + inputValid.reason + \"'\";\n            }\n        }\n\n        // TODO Validation - make sure promptText is not too long and isn't multi-line...\n        mx.onWidgetLayer(Mx, function() {\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            var maxNumChars = 30;\n\n            // Construct the input box\n            var pxIndex = ctx.font.indexOf('px');\n            var fontIndex = pxIndex + 3;\n            var fontSize = ctx.font.substr(0, pxIndex);\n            var fontFamily = ctx.font.substr(fontIndex, ctx.font.length).toString();\n\n            /* TODO Note: There is a scrolling bug - you can scroll to the right, but not the left of the value\n\t\t\tAnd... when truncating the width of an input field - it shows the value as though truncated\n\t\t\tfrom the right (say if its cut off by 1 and that one happened to be a negative sign, the value\n\t\t\twould look like a positive) .\n\t\t\t */\n            var canvasInput = new CanvasInput({\n                height: Mx.text_h,\n                fontFamily: fontFamily,\n                /* jshint -W053 */\n                fontSize: new Number(fontSize),\n                /* jshint +W053 */\n                backgroundColor: Mx.bg,\n                fontColor: Mx.fg,\n                borderWidth: 0,\n                borderRadius: 0,\n                padding: 0,\n                boxShadow: \"none\",\n                innerShadow: \"none\",\n                width: Mx.text_w * maxNumChars,\n                value: (inputValue !== undefined ? inputValue.toString() : \"\"),\n                disableBlur: true,\n                renderOnReturn: false,\n                tabToClear: true\n            });\n\n            var subHandlerCreator = function(messageX, messageY) {\n                return function() {\n                    var newValue = this.value();\n\n                    var inputValid = isValid(newValue);\n\n                    if (!inputValid.valid) {\n                        mx.message(Mx, \"Value: '\" + newValue + \"' isn't valid due to '\" + inputValid.reason + \"' - RETRY\", undefined, messageX, messageY);\n\n                        // Clear error message\n                        setTimeout(function() {\n                            mx.onWidgetLayer(Mx, function() {\n                                mx.erase_window(Mx);\n                            });\n                            Mx.widget = null;\n                            //refresh();\n                        }, errorTimeout != null ? errorTimeout : 4000);\n                    } else {\n                        Mx.prompt = undefined; // clear state variable\n\n                        // Kill CanvasInput\n                        this.cleanup();\n                        mx.onWidgetLayer(Mx, function() {\n                            mx.erase_window(Mx);\n                        });\n\n                        onSuccess(newValue);\n                    }\n                };\n            };\n\n            // Create redraw method\n            var redrawPromptCreator = function(Mx, input, promptText) {\n                return function(xpos, ypos) {\n                    mx.onWidgetLayer(Mx, function() {\n                        var GBorder = 3;\n\n                        // Calculate the position variables\n\n                        var xssPrompt = (promptText.length + 2) * Mx.text_w;\n                        var xss = xssPrompt + (maxNumChars + 1) * Mx.text_w;\n                        var yss = 2 * Mx.text_h;\n\n                        var xs = xss + 2 * GBorder;\n                        var ys = yss + 2 * GBorder;\n                        if (!xpos) {\n                            xpos = Mx.xpos;\n                        }\n                        if (!ypos) {\n                            ypos = Mx.ypos;\n                        }\n                        var xc = Math.max(0, Math.min(xpos, Mx.width - xs));\n                        var yc = Math.max(0, Math.min(ypos, Mx.height - ys));\n                        var xcc = xc + GBorder;\n                        var ycc = yc + GBorder;\n\n                        var yPos = ycc + Mx.text_h * 1.5;\n                        var inputXPos = xcc + Mx.text_w;\n\n                        // Draw the box and label text\n                        mx.widgetbox(Mx, xc, yc, xs, ys, xcc, ycc, 0, \"\");\n                        mx.text(Mx, inputXPos, yPos, promptText);\n\n                        var inputYPos = yPos - Mx.text_h * 1.15;\n\n                        // Redraw the input at the new location\n                        input.x(xcc + Mx.text_w + xssPrompt - Mx.text_w);\n                        input.y(inputYPos);\n\n                        input.onsubmit(subHandlerCreator(xc, inputYPos - 75)); // TODO Refactor positioning based on char length of reason code...\n                        if (!input.canvas()) {\n                            input.canvas(Mx.active_canvas);\n                        } else {\n                            input.render();\n                        }\n                    });\n                };\n            };\n\n            var redrawPrompt = redrawPromptCreator(Mx, canvasInput, promptText);\n\n            //refresh();\n            redrawPrompt(xpos, ypos);\n            canvasInput.focus();\n\n            // Set state variable\n            Mx.prompt = {\n                redraw: redrawPrompt,\n                input: canvasInput\n            };\n        });\n    };\n\n    /**\n     * Floating-point number validator. Verifies that value is a valid floating point\n     * number. Validation is loose by default - meaning empty strings are considered valid.\n     * @param value The value to validate.\n     * @param strict If strict is set to true - does not consider empty strings as valid floating point numbers.\n     * @private\n     */\n    mx.floatValidator = function(value, strict) {\n        if (!(((strict === undefined || strict === false) && value === \"\")) &&\n            isNaN(parseFloat(value)) || !isFinite(value)) {\n            return {\n                valid: false,\n                reason: \"Failed float validation: not a valid floating point number\"\n            };\n        }\n\n        return {\n            valid: true,\n            reason: \"\"\n        };\n    };\n\n    /**\n     * Integer number validator. Verifies that value is a valid integer.\n     * Validation is loose by default - meaning empty strings are considered valid.\n     * @param value The value to validate.\n     * @param strict If strict is set to true - does not consider empty strings as valid integers.\n     * @private\n     */\n    mx.intValidator = function(value, strict) {\n        if (((strict === undefined || strict === false) && value === \"\") ||\n            ((parseFloat(value) === parseInt(value, 10)) && !isNaN(value))) {\n            return {\n                valid: true,\n                reason: \"\"\n            };\n        } else {\n            return {\n                valid: false,\n                reason: \"Failed integer validation: not a valid integer\"\n            };\n        }\n    };\n\n    mx.hexValidator = function(value, strict) {\n        var regColorcode = /^(#)?([0-9a-fA-F]{3})([0-9a-fA-F]{3})?$/;\n        if (((strict === undefined || strict === false) && value === \"\") ||\n            (regColorcode.test(value) !== false)) {\n            return {\n                valid: true,\n                reason: \"\"\n            };\n        } else {\n            return {\n                valid: false,\n                reason: \"Failed hexcode validation: not a valid hexcode\"\n            };\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param msg\n     * @param time - unused?\n     * @param xpos\n     * @param ypos\n     */\n    //\n    // ~= MX$MESSAGE\n    //\n    mx.message = function(Mx, msg, time, xpos, ypos, type) {\n        mx.onWidgetLayer(Mx, function() {\n\n            mx.render_message_box(Mx, msg, xpos, ypos);\n\n            Mx.widget = {\n                type: type || \"ONESHOT\",\n                callback: function(event) {\n                    if ((event.type === \"mousedown\") || (event.type === \"keydown\")) {\n                        Mx.widget = null;\n                        mx.onWidgetLayer(Mx, function() {\n                            mx.erase_window(Mx);\n                        });\n                    }\n                }\n            };\n        });\n    };\n\n    mx.render_message_box = function(Mx, msg, xpos, ypos, textColor) {\n        var GBorder = 3;\n\n        // Unlike MX$MESSAGE, this implementaion if the message\n        // already contains newlines, the text will placed in the\n        // box as-is.\n        var beg = msg.split(/\\r\\n|\\r|\\n/g);\n        var linel = 0;\n        var center;\n        if (beg.length === 1) {\n            beg = [];\n            var MESSWIDTH = 40;\n\n            linel = Math.min((((Mx.width - 2 * GBorder) / Mx.text_w) - 2), msg.length);\n            if (linel <= 0) {\n                return;\n            }\n            while ((linel > MESSWIDTH) && (2.5 * Mx.text_h * msg.length < Mx.height * linel)) {\n                linel -= 5;\n            }\n\n            var cur = 0;\n            var bg = 0;\n            var i = 0;\n            var j = 0;\n            var end = 0;\n            var brk = 0;\n            var beg = [];\n\n            center = true;\n            while (bg < msg.length) {\n                end = bg + linel - 1;\n                brk = end = Math.min(end, msg.length - 1);\n                var endinreturn = false;\n                for (cur = bg; cur <= end && !endinreturn; cur++) {\n                    switch (msg[cur]) {\n                        case ',':\n                        case ';':\n                        case ' ':\n                        case ':':\n                            brk = cur;\n                            break;\n                        case '-':\n                        case '/':\n                            if (brk !== cur - 1) {\n                                brk = cur;\n                            }\n                            break;\n                        case '@':\n                        case '\\n':\n                        case '\\r':\n                            center = false;\n                            endinreturn = true;\n                            brk = cur;\n                            break;\n                    }\n                }\n                if (cur === msg.length) {\n                    brk = end;\n                }\n                if (endinreturn) {\n                    beg.push(msg.substring(bg, brk));\n                } else {\n                    // trim leading space\n                    var s = msg.substring(bg, brk + 1).replace(/^\\s+/, \"\");\n                    beg.push(s);\n                }\n                bg = brk + 1;\n                j = Math.max(j, beg[i].length);\n            }\n        } else {\n            for (var i = 0; i < beg.length; i++) {\n                linel = Math.min((((Mx.width - 2 * GBorder) / Mx.text_w) - 2), Math.max(linel, beg[i].length));\n            }\n        }\n\n        var lines = beg.length;\n        if (lines > 6) {\n            center = false;\n        }\n        var cur = 0;\n        var winlines = Math.max(1, Mx.height / Mx.text_h);\n        var lastline = Math.min(lines, cur + winlines - 1);\n\n        var xss = (linel + 2) * Mx.text_w;\n        var yss = (lastline - cur + 1) * Mx.text_h;\n\n        var xs = xss + 2 * GBorder;\n        var ys = yss + 2 * GBorder;\n        if (!xpos) {\n            xpos = Mx.xpos;\n        }\n        if (!ypos) {\n            ypos = Mx.ypos;\n        }\n        var xc = Math.max(Mx.l, Math.min(xpos, Mx.r - xs));\n        var yc = Math.max(Mx.t, Math.min(ypos, Mx.b - ys));\n        var xcc = xc + GBorder;\n        var ycc = yc + GBorder;\n\n        mx.widgetbox(Mx, xc, yc, xs, ys, xcc, ycc, 0, \"\");\n\n        var j = ycc + Mx.text_h / 3;\n        var i = xcc + Mx.text_w;\n        while (cur < lastline) {\n            j += Mx.text_h;\n            if (center) {\n                i = xc + xs / 2 - ((beg[cur].length * Mx.text_w) / 2);\n            }\n            mx.text(Mx, i, j, beg[cur], textColor);\n            cur++;\n        }\n    };\n\n    /**\n     * Based on http://js-bits.blogspot.co.uk/2010/07/canvas-rounded-corner-rectangles.html\n     *\n     * @param Mx\n     * @param color\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} w\n     * @param {Number} h\n     * @param fill_opacity\n     * @param fill_color\n     * @param {Number} radius The corner radius. Defaults to 5;\n     */\n    mx.draw_round_box = function(Mx, color, x, y, w, h, fill_opacity, fill_color, radius) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!radius) {\n            radius = 5;\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + w - radius, y);\n        ctx.quadraticCurveTo(x + w, y, x + w, y + radius);\n        ctx.lineTo(x + w, y + h - radius);\n        ctx.quadraticCurveTo(x + w, y + h, x + w - radius, y + h);\n        ctx.lineTo(x + radius, y + h);\n        ctx.quadraticCurveTo(x, y + h, x, y + h - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = color;\n        ctx.stroke();\n\n        if ((fill_opacity !== undefined) && (fill_opacity > 0)) {\n            var oldAlpha = ctx.globalAlpha;\n            ctx.globalAlpha = fill_opacity;\n            if (fill_color) {\n                ctx.fillStyle = fill_color;\n            } else {\n                ctx.fillStyle = color;\n            }\n            ctx.fill();\n            ctx.globalAlpha = oldAlpha;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param color\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param fill_opacity\n     * @param fill_color\n     */\n    //\n    // ~= MX$DRAW_BOX\n    //\n    mx.draw_box = function(Mx, color, x, y, w, h, fill_opacity, fill_color) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (color !== \"xor\") {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = color;\n            ctx.strokeRect(x, y, w, h);\n        } else {\n            if (typeof Uint8ClampedArray === 'undefined') {\n                // we don't have typed arrays, so canvas getImageData operations\n                // will be very slow, so use Mx.fg instead\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = Mx.fg;\n                ctx.strokeRect(x, y, w, h);\n            } else {\n                // TODO switch to using TypedArrays\n                x = Math.floor(x);\n                y = Math.floor(y);\n                w = Math.floor(w);\n                h = Math.floor(h);\n\n                // For now assume xor always uses the base canvas\n                // even if it draws on another canvas\n                var dctx = Mx.canvas.getContext(\"2d\");\n\n                var imgd = dctx.getImageData(x, y, w, 1);\n                var pix = imgd.data;\n                for (var c = 0; c < imgd.data.length; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y);\n\n                imgd = dctx.getImageData(x, y + h, w, 1);\n                pix = imgd.data;\n                for (var c = 0; c < imgd.data.length; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y + h);\n\n                var imgd = dctx.getImageData(x, y, 1, h);\n                var pix = imgd.data;\n                for (var c = 0; c < h; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y);\n\n                imgd = dctx.getImageData(x + w, y, 1, h);\n                pix = imgd.data;\n                for (var c = 0; c < h; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x + w, y);\n            }\n        }\n\n        if ((fill_opacity !== undefined) && (fill_opacity > 0)) {\n            var oldAlpha = ctx.globalAlpha;\n            ctx.globalAlpha = fill_opacity;\n            if (fill_color) {\n                ctx.fillStyle = fill_color;\n            } else {\n                ctx.fillStyle = color;\n            }\n            ctx.fillRect(x + 1, y + 1, w - 1, h - 1);\n            ctx.globalAlpha = oldAlpha;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param width\n     */\n    // ~= MX$SETFONT\n    mx.set_font = function(Mx, width) {\n        var ctx = Mx.canvas.getContext(\"2d\");\n        var ctx_wid = Mx.wid_canvas.getContext(\"2d\");\n\n        if ((Mx.font) && (Mx.font.width === width)) {\n            // use the cached font\n            ctx.font = Mx.font.font;\n            ctx_wid.font = Mx.font.font;\n        } else {\n            // figure out the font\n            var text_h = 1;\n            do {\n                text_h = text_h + 1;\n                ctx.font = text_h + \"px \" + Mx.font_family;\n                ctx_wid.font = text_h + \"px \" + Mx.font_family;\n                var font_size = ctx.measureText('M'); // the capital M is typically the same height and width\n                Mx.text_w = font_size.width;\n                Mx.text_h = text_h;\n            } while (Mx.text_w < width);\n            Mx.font = {\n                font: text_h + \"px \" + Mx.font_family,\n                width: width\n            };\n        }\n    };\n\n\n    /**\n     * @param Mx\n     * @param xstart\n     * @param ystart\n     * @param xend\n     * @param yend\n     * @param style\n     */\n    // ~= MX$FTEXTLINE\n    mx.textline = function(Mx, xstart, ystart, xend, yend, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (!style) {\n            style = {};\n        }\n        if (!style.color) {\n            style.color = Mx.fg;\n        }\n        if (!style.width) {\n            style.width = 1;\n        }\n        draw_line(ctx, xstart, ystart, xend, yend, style, style.color, style.width);\n    };\n\n    /**\n     * @param dmin\n     * @param dmax\n     * @param ndiv\n     */\n    // ~= MX$TICS\n    mx.tics = function(dmin, dmax, ndiv, timecode) {\n        var dtic = 1;\n        var dtic1 = dmin;\n\n        // handle degenerate case\n        if (dmax === dmin) {\n            return {\n                dtic: 1,\n                dtic1: dmin\n            };\n        }\n\n        // split up range into about ndiv 'nice' chunks\n        // zero is included only if   dmin < zero < dmax\n        var dran = Math.abs(dmax - dmin);\n        var df = dran / ndiv;\n        var sig = log10(Math.max(df, 1.0e-36));\n        var nsig;\n        if (sig < 0.0) {\n            nsig = Math.ceil(sig);\n            nsig = nsig - 1;\n        } else {\n            nsig = Math.floor(sig);\n        }\n\n        var ddf = df * Math.pow(10.0, (-nsig));\n        sig = Math.pow(10.0, nsig);\n        var dft = ddf * sig;\n        // If timecode has been requested and it looks like\n        // timecode\n        if (timecode && (dft >= 5.0 && dft <= 59.5 * 3600 * 24)) {\n            var dscl;\n            if (dft < 17.5) {\n                dscl = 5.0; // align to 5 sec tics\n            } else if (dft < 37.5) {\n                dscl = 15.0; // align to 15 sec tics\n            } else if (dft < 4.5 * 60) {\n                dscl = 60.0; // 1 minute tics\n            } else if (dft < 17.5 * 60) {\n                dscl = 5.0 * 60; // and so on\n            } else if (dft < 37.5 * 60) {\n                dscl = 15.0 * 60;\n            } else if (dft < 2.0 * 3600) {\n                dscl = 1.0 * 3600;\n            } else if (dft < 4.5 * 3600) {\n                dscl = 3.0 * 3600;\n            } else if (dft < 9.0 * 3600) {\n                dscl = 6.0 * 3600;\n            } else if (dft < 1.5 * 3600 * 24) {\n                dscl = 12.0 * 3600;\n            } else if (dft < 6.0 * 3600 * 24) {\n                dscl = 1.0 * 3600 * 24; // 1 day\n            } else {\n                dscl = 1.0 * 3600 * 24 * 7; // 1 week\n            }\n            dtic = Math.round(dft / dscl) * dscl;\n        } else {\n            if (ddf < 1.75) {\n                dtic = sig;\n            } else if (ddf < 2.25) {\n                dtic = 2.0 * sig;\n            } else if (ddf < 3.5) {\n                dtic = 2.50 * sig;\n            } else if (ddf < 7.0) {\n                dtic = 5.0 * sig;\n            } else {\n                dtic = 10.0 * sig;\n            }\n        }\n\n        // redefine dmin and dmax to line up on 'nice' boundaries\n        if (dtic === 0.0) {\n            dtic = 1.0;\n        }\n        var nseg;\n        if (dmax >= dmin) {\n            if (dmin >= 0.0) {\n                nseg = dmin / dtic + 0.995;\n            } else {\n                nseg = dmin / dtic - 0.005;\n            }\n            nseg = Math.floor(nseg); // floor\n            dtic1 = nseg * dtic;\n        } else {\n            if (dmin >= 0.0) {\n                nseg = dmin / dtic + 0.005;\n            } else {\n                nseg = dmin / dtic - 0.995;\n            }\n            nseg = Math.floor(nseg); // floor\n            dtic1 = nseg * dtic;\n            dtic = -1 * dtic;\n        }\n        if (dtic1 + dtic === dtic1) {\n            dtic = dmax - dmin;\n        }\n\n        return {\n            dtic: dtic,\n            dtic1: dtic1\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param xdiv\n     * @param ydiv\n     * @param xlab\n     * @param ylab\n     * @param flags\n     */\n    // ~= MX$FDRAWAXIS\n    mx.drawaxis = function(Gx, Mx, xdiv, ydiv, xlab, ylab, flags) {\n        var stk1 = mx.origin(Mx.origin, 1, Mx.stk[Mx.level]);\n        var iscl = 0;\n        var isct = 0;\n        var iscr = 0;\n        var iscb = 0;\n        var width = 0;\n        var height = 0;\n\n        xlab = (xlab === undefined) ? 30 : xlab;\n        ylab = (ylab === undefined) ? 30 : ylab;\n\n\n        if (flags.exactbox) {\n            iscl = Math.floor(stk1.x1);\n            isct = Math.floor(stk1.y1);\n            iscr = Math.floor(stk1.x2);\n            iscb = Math.floor(stk1.y2);\n            width = iscr - iscl;\n            height = iscb - isct;\n        } else {\n            iscl = Math.max(Math.floor(stk1.x1) - 2, 0);\n            isct = Math.max(Math.floor(stk1.y1) - 2, 0);\n            iscr = Math.min(Math.floor(stk1.x2) + 2, Mx.width);\n            iscb = Math.min(Math.floor(stk1.y2) + 2, Mx.height);\n            width = iscr - iscl - 4;\n            height = iscb - isct - 4;\n        }\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (flags.fillStyle) {\n            if (Array.isArray(flags.fillStyle)) {\n                ctx.fillStyle = mx.linear_gradient(Mx, 0, 0, 0, iscb - isct, flags.fillStyle);\n            } else {\n                ctx.fillStyle = flags.fillStyle;\n            }\n        } else {\n            ctx.fillStyle = Mx.bg;\n        }\n        ctx.fillRect(iscl, isct, iscr - iscl, iscb - isct);\n\n        if (!flags.noaxisbox) {\n            mx.textline(Mx, iscl, isct, iscr, isct);\n            mx.textline(Mx, iscr, isct, iscr, iscb);\n            mx.textline(Mx, iscr, iscb, iscl, iscb);\n            mx.textline(Mx, iscl, iscb, iscl, isct);\n        }\n\n        var xTIC = {\n            dtic: 0,\n            dtic1: 0\n        };\n        var yTIC = {\n            dtic: 0,\n            dtic1: 0\n        };\n\n        if (xdiv < 0) {\n            xTIC.dtic1 = stk1.xmin;\n            xTIC.dtic = (stk1.xmin - stk1.xmax) / xdiv;\n        } else {\n            xTIC = mx.tics(stk1.xmin, stk1.xmax, xdiv, flags.xtimecode);\n        }\n\n\n        var _xmult = 1.0;\n        if (flags.xmult) { // if xmult was provided\n            _xmult = flags.xmult;\n        } else if (!flags.xtimecode) {\n            _xmult = mx.mult(stk1.xmin, stk1.xmax);\n        }\n        if (ydiv < 0) {\n            yTIC.dtic1 = stk1.ymin;\n            yTIC.dtic = (stk1.ymin - stk1.ymax) / ydiv;\n        } else {\n            yTIC = mx.tics(stk1.ymin, stk1.ymax, ydiv, flags.ytimecode);\n        }\n        var _ymult = 1.0;\n        if (flags.ymult) { // if ymult was provided\n            _ymult = flags.ymult;\n        } else if (!flags.ytimecode) {\n            _ymult = mx.mult(stk1.ymin, stk1.ymax);\n        }\n\n        var xticlabels = !flags.noxtlab;\n        var yticlabels = !flags.noytlab;\n\n        // add labels\n        var ix = Math.max(0, iscl - 4 * Mx.text_w);\n        var iy = 0;\n        if (flags.ontop) {\n            iy = Math.min(Mx.height, Math.floor(iscb + 1.5 * Mx.text_h));\n        } else {\n            iy = Math.max(Mx.text_h, Math.floor(isct - 0.5 * Mx.text_h));\n        }\n\n        var xlabel;\n        var ylabel;\n\n        if (iy > 0) {\n            var ly = 0;\n            if (!flags.noyplab) {\n                if (flags.ylabel instanceof Function) {\n                    ylabel = flags.ylabel(ylab, _ymult);\n                } else if (flags.ylabel !== undefined) {\n                    ylabel = flags.ylabel;\n                } else {\n                    ylabel = m.label(ylab, _ymult);\n                }\n            }\n            if (!flags.noxplab) {\n                if (flags.xlabel instanceof Function) {\n                    xlabel = flags.xlabel(xlab, _xmult);\n                } else if (flags.xlabel !== undefined) {\n                    xlabel = flags.xlabel;\n                } else {\n                    xlabel = m.label(xlab, _xmult);\n                }\n            }\n        }\n\n        if (xlabel && ylabel) {\n            mx.text(Mx, ix, iy, ylabel + \" vs \" + xlabel);\n        } else if (xlabel) {\n            mx.text(Mx, ix, iy, xlabel);\n        } else if (ylabel) {\n            mx.text(Mx, ix, iy, ylabel);\n        }\n\n        var itext = 5.5 * Mx.text_w;\n        var jtext = 0;\n        if (flags.ontop) {\n            if (flags.inside) {\n                jtext = isct + 1.0 * Mx.text_h;\n            } else {\n                jtext = isct - 0.2 * Mx.text_h;\n            }\n        } else {\n            if (flags.inside) {\n                jtext = iscb - 0.5 * Mx.text_h;\n            } else {\n                jtext = iscb + 1.0 * Mx.text_h + 2;\n            }\n        }\n        var fact;\n        if (stk1.xmin !== stk1.xmax) {\n            fact = width / (stk1.xmax - stk1.xmin);\n        } else {\n            fact = width / 1.0;\n        }\n\n        var fmul;\n        if (_xmult !== 0) {\n            fmul = 1.0 / _xmult;\n        } else {\n            fmul = 1.0;\n        }\n\n        // Figure out how many characters can fit between tics\n        var xlbl_maxlen = Math.min(12, Math.round(fact * xTIC.dtic) / Mx.text_w);\n\n        // The sp flag decides if all tics should be labeled, or just the first tic.\n        // in LEGACY rendering when sp=0 you should get one tic at the start\n        // that then displays like XPOS += tic-delta\n        //\n        // The original logic basically says, if the tic-delta (i.e. dtic) is very small\n        // relative to the first tic, only render the first tic.  Specifically:\n        //    sp = (Math.abs(xTIC.dtic) / Math.max(Math.abs(xTIC.dtic1), Math.abs(xTIC.dtic)) > 1.0e-6);\n        //\n        // However, it's probably more important to decide this based off the significant digits of the\n        // tic labels.  In other words, if the tics cannot be labeled uniquely then you need to make sp=0.\n        var sp = 1;\n        var x;\n        var xlbl = \"\";\n        if (xticlabels) {\n            if (flags.xtimecode) {\n                xlbl = m.sec2tod(xTIC.dtic1);\n                // If the label is no longer than half of the total width display multiple labels\n                sp = (xlbl.length * Mx.text_w < (iscr - iscl) / 2);\n            } else {\n                // Ensure that all of the tic labels will render uniquely\n                var last_xlbl;\n                for (x = xTIC.dtic1; x <= stk1.xmax; x = x + xTIC.dtic) {\n                    xlbl = mx.format_f(x * fmul, xlbl_maxlen, xlbl_maxlen / 2);\n                    if (xlbl === last_xlbl) {\n                        sp = 0;\n                        break;\n                    }\n                    last_xlbl = xlbl;\n                }\n            }\n        }\n        if (xTIC.dtic === 0) {\n            xTIC.dtic = stk1.xmax - xTIC.dtic1 + 1.0;\n        }\n\n        var i;\n        ix = 0;\n        xlbl = \"\";\n        for (x = xTIC.dtic1; x <= stk1.xmax; x = x + xTIC.dtic) {\n            i = iscl + Math.round(fact * (x - stk1.xmin)) + 2;\n            if (i < iscl) {\n                continue;\n            }\n            if (flags.grid && flags.grid !== \"y\") {\n                if (!flags.gridStyle) {\n                    if (mx.LEGACY_RENDER) {\n                        flags.gridStyle = {\n                            mode: \"dashed\",\n                            on: 1,\n                            off: 3\n                        };\n                    } else {\n                        flags.gridStyle = {\n                            \"color\": Mx.xwms,\n                            mode: \"dashed\",\n                            on: 1,\n                            off: 3\n                        };\n                    }\n                }\n                mx.textline(Mx, i, iscb, i, isct, flags.gridStyle);\n            } else {\n                mx.textline(Mx, i, iscb - 2, i, iscb + 2);\n                mx.textline(Mx, i, isct - 2, i, isct + 2);\n            }\n            if (xticlabels) {\n                if (sp) {\n                    xlbl = null;\n                    if (flags.xtimecode) {\n                        // If we have enough space to draw the next tic label\n                        if (i > ix) {\n                            xlbl = m.sec2tod(x, true);\n                            ix = i + (Mx.text_w * (xlbl.length + 1));\n                        }\n                    } else {\n                        xlbl = mx.format_f(x * fmul, xlbl_maxlen, xlbl_maxlen / 2);\n                        xlbl = trimlabel(xlbl, true);\n                    }\n                    if (xlbl) {\n                        var itexti = Math.round(xlbl.length / 2) * Mx.text_w;\n                        if (flags.inside) {\n                            i = Math.max(iscl + itexti, i);\n                            i = Math.min(iscr - itexti, i);\n                        }\n                        if (i - itexti >= 0) {\n                            mx.text(Mx, i - itexti, jtext, xlbl);\n                        }\n                    }\n                } else if (x === xTIC.dtic1) {\n                    if (flags.xtimecode) {\n                        xlbl = m.sec2tod(x, true);\n                        if (flags.inside) {\n                            i = Math.floor(Math.max(iscl + itext, i));\n                        }\n                        mx.text(Mx, i - itext, jtext, xlbl + \" +\\u0394 \" + m.sec2tod(xTIC.dtic));\n                    } else {\n                        xlbl = (xTIC.dtic1 * fmul).toString();\n                        if (flags.inside) {\n                            i = Math.floor(Math.max(iscl + itext, i));\n                        }\n                        mx.text(Mx, i - itext, jtext, xlbl + \" +\\u0394 \" + (xTIC.dtic * fmul));\n                    }\n                }\n            }\n        }\n\n        // Add y-tick marks\n        if (flags.yonright) { // TODO - yonright probably doesn't work\n            if (flags.inside) {\n                itext = Math.min(iscr - 6 * Mx.text_w, Mx.width - 5 * Mx.text_w);\n            } else {\n                itext = Math.min(iscr + Mx.text_w, Mx.width - 5 * Mx.text_w);\n            }\n        } else {\n            if (flags.inside) {\n                itext = Math.max(0, iscl + Mx.text_w);\n            } else {\n                itext = Math.max(0, Math.floor(iscl - (Mx.l - 0.5) * Mx.text_w));\n            }\n        }\n        jtext = 0.4 * Mx.text_h;\n        if (stk1.ymin !== stk1.ymax) {\n            fact = -height / (stk1.ymax - stk1.ymin);\n        } else {\n            fact = -height / 1.0;\n        }\n        if (_ymult !== 0) {\n            fmul = 1.0 / _ymult;\n        } else {\n            fmul = 1;\n        }\n        var ytic, ytic1, endtic;\n        if (yTIC.dtic === 0) {\n            ytic = stk1.ymax - ytic1 + 1.0;\n        }\n        if (stk1.ymax >= stk1.ymin) {\n            endtic = function(val) {\n                return (val <= stk1.ymax);\n            };\n        } else {\n            endtic = function(val) {\n                return (val >= stk1.ymax);\n            };\n        }\n        var ylbl;\n        for (var y = yTIC.dtic1; endtic(y); y = y + yTIC.dtic) {\n            i = iscb + Math.round(fact * (y - stk1.ymin)) - 2;\n            if (i > iscb) {\n                continue;\n            }\n            if (flags.grid && flags.grid !== \"x\") {\n                if (!flags.gridStyle) {\n                    flags.gridStyle = {\n                        mode: \"dashed\",\n                        on: 1,\n                        off: 3\n                    };\n                }\n                mx.textline(Mx, iscl, i, iscr, i, flags.gridStyle);\n            } else {\n                mx.textline(Mx, iscl - 2, i, iscl + 2, i);\n                mx.textline(Mx, iscr - 2, i, iscr + 2, i);\n            }\n            if (yticlabels) {\n                // TODO\n                if (flags.inside &&\n                    ((i < isct + Mx.text_h) || (i > iscb - Mx.text_h * 2))) {\n                    // out of range for inside labels\n                } else if (flags.ytimecode) {\n                    ylbl = m.sec2tod(y); // don't trim zeros because we use them later\n                    // y-axis timecodes\n                    // use three lines\n                    // YYYY:MM:DD\n                    // HH:MM\n                    // SS.factional\n                    var k = i + jtext - Mx.text_h;\n                    var sep = ylbl.indexOf(\"::\");\n                    if (sep !== -1) {\n                        if (k > isct && k < iscb) {\n                            // it the label has space, draw it\n                            mx.text(Mx, itext, k, ylbl.substring(0, sep));\n                        }\n                        sep += 1; // adjust for the next stage\n                    }\n                    // The draw the primary portion\n                    mx.text(Mx, itext, Math.min(iscb, i + jtext), ylbl.substring(sep + 1, sep + 6));\n                    // Finally the sections portion if it fits on the screen\n                    // and is necessary\n                    k = i + jtext + Mx.text_h;\n                    if ((k > isct && k < iscb)) {\n                        if (ylbl.substring(sep + 7, sep + 9) !== \"00\") {\n                            // add the .00 which is safe to do unconditionally because\n                            // we truncate on the following line and we know that\n                            // sec2tod either returns no decimal places or 6 decimal places\n                            ylbl = ylbl + \".00\";\n                            mx.text(Mx, itext, k, ylbl.substring(sep + 7, sep + 12));\n                        }\n                    }\n                } else {\n                    ylbl = mx.format_f(y * fmul, 12, 6);\n                    ylbl = trimlabel(ylbl, flags.inside);\n                    mx.text(Mx, itext, Math.min(iscb, i + jtext), ylbl);\n                }\n            }\n        }\n    };\n\n    /**\n     * @param x\n     * @param y\n     * @param rect_x\n     * @param rect_y\n     * @param rect_width\n     * @param rect_height\n     * @private\n     */\n    mx.inrect = function(x, y, rect_x, rect_y, rect_width, rect_height) {\n        return (x >= rect_x && x <= rect_x + rect_width &&\n            y >= rect_y && y <= rect_y + rect_height);\n    };\n    /**\n     * @private\n     */\n    var MENU_CONSTANTS = {\n        GBorder: 3,\n        sidelab: 0,\n        toplab: 1,\n        n_show: 0\n    };\n\n    /**\n     * @method _menu_redraw\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_redraw(Mx, menu) {\n        if (menu.animationFrameHandle) {\n            return;\n        }\n        // Use the current mouse position and the size of the plot to determine available space\n        //var mouse_pos = Mx.ypos; TODO: Use mouse position\n        var plot_height = Mx.canvas.height;\n        var buffer_sz = 35; // estimate of how much of the canvas is spacing around plot\n        var avail_space = plot_height - 2 * buffer_sz;\n\n        // Calculate how many menu items can fit inside that space\n        var menu_item_height = Mx.text_h * 1.5;\n        var n_items = Math.floor(avail_space / menu_item_height);\n        if (n_items >= menu.items.length) {\n            MENU_CONSTANTS.n_show = menu.items.length;\n        } else {\n            MENU_CONSTANTS.n_show = n_items;\n        }\n\n\n        menu.animationFrameHandle = requestAnimFrame(mx.withWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n\n            menu.animationFrameHandle = undefined;\n            var yb = Mx.text_h * 1.5;\n            menu.x = Math.max(menu.x, 0);\n            menu.y = Math.max(menu.y, 0);\n            menu.x = Math.min(menu.x, Mx.width - menu.w);\n            menu.y = Math.min(menu.y, Mx.height - menu.h);\n\n            var xcc = menu.x + MENU_CONSTANTS.GBorder + Math.max(0, MENU_CONSTANTS.sidelab);\n            var ycc = menu.y + MENU_CONSTANTS.GBorder + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            var xss = menu.w - 2 * MENU_CONSTANTS.GBorder - Math.abs(MENU_CONSTANTS.sidelab);\n            var yss = menu.h - 2 * MENU_CONSTANTS.GBorder - MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            mx.widgetbox(Mx, menu.x, menu.y, menu.w, menu.h, xcc, ycc, xss, yss, menu.title);\n\n            //ctx.fillStyle = xwlo;\n            //ctx.fillRect(xcc, ycc, xss, yss);\n\n            var ctx = Mx.wid_canvas.getContext(\"2d\");\n            ctx.lineWidth = 1;\n\n            ctx.strokeStyle = Mx.xwbs; // xwbs\n            ctx.beginPath();\n            ctx.moveTo(xcc, ycc - 4 + 0.5);\n            ctx.lineTo(xcc + xss - 1, ycc - 4 + 0.5);\n            ctx.stroke();\n\n            ctx.strokeStyle = Mx.xwts; // xwts\n            ctx.beginPath();\n            ctx.moveTo(xcc, ycc - 3 + 0.5);\n            ctx.lineTo(xcc + xss - 1, ycc - 3 + 0.5);\n            ctx.stroke();\n\n            var i_begin = menu.queue[0];\n            var i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n            if (i_end === 0) {\n                // now we are starting over\n                for (var q = 0; q < MENU_CONSTANTS.n_show; q++) {\n                    menu.queue[q] = q;\n                }\n                i_begin = menu.queue[0];\n                i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n            }\n            var menu_counter = 0;\n            for (var i = i_begin; i <= i_end; i++) {\n                var item = menu.items[i];\n                var y = ycc + yb * menu_counter;\n                menu_counter = menu_counter + 1;\n\n                if (item.style === \"separator\") {\n                    ctx.fillStyle = Mx.xwbs;\n                    ctx.fillRect(xcc, y, xss, yb);\n\n                    ctx.beginPath();\n                    ctx.moveTo(xcc, y + 0.5);\n                    ctx.lineTo(xcc + xss, y + 0.5);\n                    ctx.stroke();\n\n                    ctx.textBaseline = \"middle\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = Mx.xwfg;\n                    ctx.fillText(\" \" + item.text + \" \", xcc + Mx.text_w * 2, y + yb / 2);\n                } else {\n                    if (mx.LEGACY_RENDER) {\n                        ctx.fillStyle = Mx.xwlo;\n                        ctx.fillRect(xcc, y, xss, yb);\n                        ctx.beginPath();\n                        ctx.moveTo(xcc, y + 0.5);\n                        ctx.lineTo(xcc + xss, y + 0.5);\n                        ctx.stroke();\n                        if (item.selected) {\n                            mx.shadowbox(Mx, xcc - 1, y, xss + 2, yb, 1, 2, \"\", 0.75);\n                        }\n                    } else {\n                        ctx.save();\n                        ctx.globalAlpha = 0.75;\n                        if (item.selected) {\n                            ctx.fillStyle = Mx.xwts;\n                        } else {\n                            ctx.fillStyle = Mx.xwlo;\n                        }\n                        ctx.fillRect(xcc, y, xss, yb);\n                        ctx.restore();\n                        ctx.strokeStyle = Mx.bg;\n                        ctx.beginPath();\n                        ctx.moveTo(xcc, y + 0.5);\n                        ctx.lineTo(xcc + xss, y + 0.5);\n                        ctx.stroke();\n                    }\n\n                    ctx.textBaseline = \"middle\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = Mx.xwfg;\n                    if (item.style === \"checkbox\") {\n                        ctx.fillText(\" \" + item.text + \" \", xcc + Mx.text_w * 2, y + yb / 2);\n                        ctx.strokeStyle = Mx.xwfg;\n                        ctx.strokeRect(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2), Mx.text_w, Mx.text_w);\n                        if (item.checked) {\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2));\n                            ctx.lineTo(xcc + 1 + Mx.text_w + Mx.text_w, y + ((yb - Mx.text_w) / 2) + Mx.text_w);\n                            ctx.stroke();\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1 + Mx.text_w + Mx.text_w, y + ((yb - Mx.text_w) / 2));\n                            ctx.lineTo(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2) + Mx.text_w);\n                            ctx.stroke();\n                        }\n                    } else {\n                        ctx.fillText(\" \" + item.text + \" \", xcc, y + yb / 2);\n\n                        // draw the triangle\n                        if (item.checked) {\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1, y + Mx.text_h / 4);\n                            ctx.lineTo(xcc + 1 + Mx.text_w - 2, y + Mx.text_h / 4 + Mx.text_h / 2);\n                            ctx.lineTo(xcc + 1, y + Mx.text_h / 4 + Mx.text_h);\n                            ctx.lineTo(xcc + 1, y + Mx.text_h / 4);\n                            ctx.fill();\n                        }\n                    }\n                }\n            }\n\n\n        }));\n    }\n\n    /**\n     * @method _menu_takeaction\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_takeaction(Mx, menu) {\n        mx.onWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n        });\n        Mx.menu = undefined;\n        Mx.widget = null;\n\n        for (var i = 0; i < menu.items.length; i++) {\n            var item = menu.items[i];\n            if (item.selected) {\n                if (item.handler) {\n                    item.handler();\n                } else if (item.menu) {\n                    var newmenu = item.menu;\n                    if (typeof item.menu === 'function') {\n                        newmenu = item.menu();\n                    }\n                    newmenu.finalize = menu.finalize;\n                    mx.menu(Mx, newmenu);\n                }\n                break;\n            }\n        }\n        if ((!Mx.menu) && (menu.finalize)) {\n            menu.finalize();\n        }\n    }\n\n    /**\n     * @method _menu_dismiss\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_dismiss(Mx, menu) {\n        mx.onWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n        });\n        Mx.menu = undefined;\n        Mx.widget = null;\n\n        if ((!Mx.menu) && (menu.finalize)) {\n            menu.finalize();\n        }\n    }\n\n    /**\n     * @method _menu_callback\n     * @param Mx\n     * @param menu\n     * @param event\n     * @private\n     */\n    function _menu_callback(Mx, menu, event) {\n        // Keep track of whats visible currently\n        var i_begin = menu.queue[0];\n        var i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n        if (event === undefined) {\n            // no event, just refresh the menu\n            _menu_redraw(Mx, menu);\n        } else if (event.type === \"mousemove\") {\n            // Update position\n            if (menu.drag_x !== undefined && menu.drag_y !== undefined && Math.abs(Mx.xpos - menu.drag_x) > 2 && Math.abs(Mx.ypos - menu.drag_y) > 2) {\n                menu.x += Mx.xpos - menu.drag_x;\n                menu.y += Mx.ypos - menu.drag_y;\n                menu.drag_x = Mx.xpos;\n                menu.drag_y = Mx.ypos;\n            }\n\n            // All of these variables suck and are common in other places...refactoring is necessary\n            var xcc = menu.x + MENU_CONSTANTS.GBorder + Math.max(0, MENU_CONSTANTS.sidelab);\n            var xss = menu.w - 2 * MENU_CONSTANTS.GBorder - Math.abs(MENU_CONSTANTS.sidelab);\n            var yb = Mx.text_h * 1.5;\n            var ycc = menu.y + MENU_CONSTANTS.GBorder + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            for (var i = i_begin; i <= i_end; i++) {\n                var y = ycc + yb * i;\n                var item = menu.items[i];\n                item.selected = false;\n                if (mx.inrect(Mx.xpos, Mx.ypos, xcc, y, xss, yb)) {\n                    item.selected = true;\n                }\n            }\n            _menu_redraw(Mx, menu);\n        } else if (event.type === \"mouseup\") {\n            // No longer dragging menu\n            if (event.which === 1) {\n                if ((menu.drag_x !== undefined) && (menu.drag_y !== undefined)) {\n                    menu.drag_x = undefined;\n                    menu.drag_y = undefined;\n                } else {\n                    _menu_takeaction(Mx, menu);\n                }\n            } else if (event.which === 3) {\n                _menu_dismiss(Mx, menu);\n            }\n        } else if (event.type === \"mousedown\") {\n            event.preventDefault();\n            if (event.which === 1) {\n                if (Mx.xpos > menu.x && Mx.xpos < (menu.x + menu.w) && Mx.ypos > menu.y && Mx.ypos < (menu.y + Mx.text_h * 1.5)) {\n                    menu.drag_x = Mx.xpos;\n                    menu.drag_y = Mx.ypos;\n                }\n            } else if (event.which === 2) {\n                _menu_takeaction(Mx, menu);\n            }\n        } else if (event.type === \"keydown\") {\n            // Remember that keydown triggers periodically while a key is held\n            if (Mx.menu) {\n                var menu = Mx.menu;\n                event.preventDefault();\n                var keyCode = common.getKeyCode(event);\n                if (keyCode === 13) { // enter\n                    _menu_takeaction(Mx, menu);\n                } else if (keyCode === 38) { // up arrow\n                    for (var i = i_begin; i < i_end; i++) {\n                        var item = menu.items[i];\n                        if (item.selected) {\n                            item.selected = false;\n                            if (menu.items[i - 1] !== undefined) {\n                                menu.items[i - 1].selected = true;\n                            }\n                            break;\n                        } else if (i === i_begin && i_begin !== 0) {\n                            // we are at the end of the list and nothing was selected so pick the last element\n                            //item.selected = true;\n                            menu.queue.pop();\n                            menu.queue.unshift(i_begin - 1);\n                            _menu_redraw(Mx, menu);\n                            menu.items[i_end - 1].selected = true;\n\n                        } else if (i_begin === 0 && menu.items[i_begin].selected === true) {\n                            _menu_redraw(Mx, menu);\n                            menu.items[0].selected = true;\n                        }\n                    }\n                    _menu_redraw(Mx, menu);\n                } else if (keyCode === 40) { // down arrow\n                    for (var i = i_begin; i < i_end; i++) {\n                        var item = menu.items[i];\n                        if (item.selected) {\n                            item.selected = false;\n                            if (menu.items[i + 1] !== undefined) {\n                                menu.items[i + 1].selected = true;\n                            }\n                            break;\n                        } else if (i === (i_end - 1)) {\n                            // nothing was selected so select the top\n                            var next_item = i_end + 1;\n\n                            if (i_end + 1 === menu.items.length) {\n                                next_item = 0;\n                            }\n\n                            menu.queue.shift();\n                            menu.queue.push(next_item);\n                            menu.items[i_end].selected = false;\n                            menu.items[next_item].selected = true;\n                            _menu_redraw(Mx, menu);\n                        }\n                    }\n                    _menu_redraw(Mx, menu);\n                } else if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 65 && keyCode <= 90)) {\n                    var inp = String.fromCharCode(keyCode).toUpperCase();\n\n                    if (menu.keypresses === undefined) {\n                        menu.keypresses = inp;\n                    } else {\n                        menu.keypresses = menu.keypresses + inp;\n                    }\n\n                    var matches = 0;\n                    for (var i = 0; i < menu.items.length; i++) {\n                        var item = menu.items[i];\n                        item.selected = false;\n                        if (!item.text) {\n                            continue;\n                        }\n\n                        if (item.text.toUpperCase().indexOf(menu.keypresses) === 0) {\n                            if (matches === 0) {\n                                item.selected = true;\n                            }\n                            matches++;\n                        }\n                    }\n\n                    if (matches === 0) {\n                        menu.keypresses = undefined;\n                        _menu_redraw(Mx, menu);\n                    } else if (matches === 1) {\n                        _menu_takeaction(Mx, menu);\n                    } else {\n                        _menu_redraw(Mx, menu);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    mx.menu = function(Mx, menu) {\n        var yb = Mx.text_h * 1.5;\n        //MENU_CONSTANTS.n_show = menu.items.length;\n\n        var plot_height = Mx.canvas.height;\n        var buffer_sz = 35; // estimate of how much of the canvas is spacing around plot\n        var avail_space = plot_height - 2 * buffer_sz;\n        // Calculate how many menu items can fit inside that space\n        var menu_item_height = Mx.text_h * 1.5;\n        var n_items = Math.floor(avail_space / menu_item_height);\n        if (n_items >= menu.items.length) {\n            MENU_CONSTANTS.n_show = menu.items.length;\n        } else {\n            MENU_CONSTANTS.n_show = n_items;\n        }\n\n        if (menu) {\n            if (!Mx.widget) {\n                menu.x = Mx.xpos;\n                menu.y = Mx.ypos;\n                menu.val = 0;\n\n                menu.h = MENU_CONSTANTS.GBorder * 2 + yb * MENU_CONSTANTS.n_show + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder) - 1;\n                menu.y = menu.y - ((MENU_CONSTANTS.toplab + (Math.max(1, menu.val)) - 0.5) * yb + (1 + MENU_CONSTANTS.toplab) * MENU_CONSTANTS.GBorder) + 1;\n\n                var xb = menu.title.length;\n                var yadj = 0;\n                for (var i = 0; i < menu.items.length; i++) {\n                    var item = menu.items[i];\n                    xb = Math.max(xb, item.text.length);\n                    if (item.style === \"checkbox\") {\n                        xb += 2;\n                    }\n                    if (item.style === \"separator\") {\n                        xb += 2;\n                    }\n                    if (item.checked && item.style !== \"checkbox\") {\n                        yadj = yb * i;\n                    }\n                }\n\n                menu.queue = [];\n\n                for (var q = 0; q < MENU_CONSTANTS.n_show; q++) {\n                    menu.queue.push(q);\n\n                }\n\n                menu.y = menu.y - yadj;\n                xb += 2;\n                xb = xb * Mx.text_w;\n\n                menu.w = MENU_CONSTANTS.GBorder * 2 + Math.abs(MENU_CONSTANTS.sidelab) + xb - 1;\n                menu.x = menu.x - menu.w / 2;\n\n                Mx.menu = menu;\n\n                Mx.widget = {\n                    type: \"MENU\",\n                    callback: function(event) {\n                        _menu_callback(Mx, menu, event);\n                    }\n                };\n            }\n            _menu_redraw(Mx, menu);\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param inx\n     * @param iny\n     * @param inw\n     * @param inh\n     * @param name\n     * @private\n     */\n    mx.widgetbox = function(Mx, x, y, w, h, inx, iny, inw, inh, name) {\n        var GBorder = 3;\n        mx.shadowbox(Mx, x, y, w, h, 1, 2, \"\", 0.75);\n        if (name) {\n            var length = name.length;\n            length = Math.min(length, w / Mx.text_w);\n            length = Math.max(length, 1);\n            var xt = x + (w - length * Mx.text_w) / 2;\n            y += GBorder;\n            var yt = y + (iny - y + 0.7 * Mx.text_h) / 2;\n\n            mx.text(Mx, xt, yt, name, Mx.xwfg);\n        }\n        if (inw > 0 && inh > 0) {\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            if (mx.LEGACY_RENDER) {\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(inx, iny, inw, inh);\n            } else {\n                ctx.save();\n                ctx.globalAlpha = 0.1;\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(inx, iny, inw, inh);\n                ctx.restore();\n            }\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param lbl\n     * @param color\n     * @private\n     */\n    //\n    // ~= MX$TEXT\n    //\n    mx.text = function(Mx, x, y, lbl, color) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        x = Math.max(0, x);\n        y = Math.max(0, y);\n        if ((x < 0) || (y < 0)) {\n            throw \"On No!\";\n        }\n        ctx.textBaseline = \"bottom\";\n        ctx.textAlign = \"left\";\n        ctx.font = Mx.font.font;\n        if (color === undefined) {\n            ctx.fillStyle = Mx.fg;\n        } else {\n            ctx.fillStyle = color;\n        }\n\n        ctx.fillText(lbl, x, y);\n    };\n\n    /**\n     * @method clipt\n     * @param denom\n     * @param num\n     * @param o\n     * @private\n     */\n    // ~= glibf1.for CLIPT\n    function clipt(denom, num, o) {\n        var accept = true;\n        var t;\n\n        t = num / denom;\n        if (denom > 0) {\n            if (t > o.tL) {\n                accept = false;\n            } else if (t > o.tE) {\n                o.tE = t;\n            }\n        } else if (denom < 0) {\n            if (t < o.tE) {\n                accept = false;\n            } else if (t < o.tL) {\n                o.tL = t;\n            }\n        } else {\n            if (num > 0) {\n                accept = false;\n            }\n        }\n\n        return accept;\n    }\n\n    /**\n     * Method which draws a line in a graphics context.\n     * In the graphics context provided, draws a line.\n     * Mimics XLib's XDrawLines method in at least the basic functionality.\n     * @method draw_line\n     * @param ctx\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param style\n     * @param color\n     * @param width\n     * @private\n     */\n    function draw_line(ctx, x1, y1, x2, y2, style, color, width) {\n        // For odd width lines (i.e. 1,3,5...) if you draw right\n        // on the pixel boundry the canvas will actually draw a slightly\n        // grey line 2 px wide.  You have to add .5 to get what you want.\n\n        // Handle boundary cases - instead of throwing an exception, just bound\n        // the value to 0\n        if (x1 < 0) {\n            x1 = 0;\n        }\n        if (y1 < 0) {\n            y1 = 0;\n        }\n        if (x2 < 0) {\n            x2 = 0;\n        }\n        if (y2 < 0) {\n            y2 = 0;\n        }\n\n        if (width) {\n            ctx.lineWidth = width;\n        }\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        if (ctx.lineWidth % 2 === 1) {\n            if (x1 === x2) {\n                x1 = Math.floor(x1) + 0.5;\n                x2 = x1;\n            }\n            if (y1 === y2) {\n                y1 = Math.floor(y1) + 0.5;\n                y2 = y1;\n            }\n        }\n\n        if (!style || !style.mode) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n            ctx.beginPath();\n        } else if (style.mode === \"dashed\") {\n            var dash_supported = common.dashOn(ctx, style.on, style.off);\n            if (dash_supported) {\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n                common.dashOff(ctx);\n                ctx.beginPath();\n            } else {\n                // Fallback that only supports vertical/horizontal\n                ctx.beginPath();\n                if (y1 === y2) {\n                    var x = Math.min(x1, x2);\n                    x2 = Math.max(x1, x2);\n                    while (x < x2) {\n                        ctx.moveTo(x, y1);\n                        ctx.lineTo(x + style.on, y1);\n                        ctx.stroke();\n                        x += (style.on + style.off);\n                    }\n                } else if (x1 === x2) {\n                    // vertical line\n                    var y = Math.min(y1, y2);\n                    y2 = Math.max(y1, y2);\n                    while (y < y2) {\n                        ctx.moveTo(x1, y);\n                        ctx.lineTo(x1, y + style.on);\n                        ctx.stroke();\n                        y += (style.on + style.off);\n                    }\n                } else {\n                    throw \"Only horizontal or vertical dashed lines are supported\";\n                }\n                ctx.beginPath();\n            }\n        } else if (style.mode === \"xor\") {\n            if (typeof Uint8ClampedArray === 'undefined') {\n                // we don't have typed arrays, so canvas getImageData operations\n                // will be very slow, so use color instead\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n                ctx.beginPath();\n            } else {\n                // currently xor-style is only supported for horizontal or vertical lines\n                var w = 0;\n                var h = 0;\n                if (y1 === y2) {\n                    w = Math.abs(x2 - x1);\n                    h = width;\n                    x1 = Math.min(x1, x2);\n                } else if (x1 === x2) {\n                    w = width;\n                    h = Math.abs(y2 - y1);\n                    y1 = Math.min(y1, y2);\n                } else {\n                    throw \"Only horizontal and vertical lines can be drawn with XOR\";\n                }\n\n                if ((w === 0) || (h === 0)) {\n                    return;\n                }\n\n                x1 = Math.floor(x1);\n                y1 = Math.floor(y1);\n                var imgd = ctx.getImageData(x1, y1, w, h);\n                var pix = imgd.data;\n                // Loop over each pixel and invert the color.\n                for (var i = 0, n = pix.length; i < n; i += 4) {\n                    pix[i] = 255 - pix[i]; // red\n                    pix[i + 1] = 255 - pix[i + 1]; // green\n                    pix[i + 2] = 255 - pix[i + 2]; // blue\n                    pix[i + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x1, y1);\n                ctx.clearRect(0, 0, 1, 1);\n            }\n        }\n    }\n\n    /**\n     * Method which draws a polygon in a graphics context.\n     * In the graphics context provided, draws a polygon.\n     * Mimics XLib's XDrawLines method in at least the basic functionality.\n     * @method draw_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param color - The color of the rectangle\n     * @param width - The line width to set.\n     * @private\n     */\n    function draw_poly(ctx, pix, color, width) { // TODO Should this be a public method?\n        start_poly(ctx, pix, width);\n\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        ctx.stroke(); // draw the shape outlined in the path\n        ctx.closePath();\n    }\n\n    /**\n     * Method which draws a filled polygon in a graphics context.\n     * In the graphics context provided draws a polygon, then fills it.\n     * Mimics XLib's XFillPolygon method in at least the basic functionality.\n     * Some differences between this and Xlib's method are:\n     *  -no way to specify convex/non-convex\n     *  -no way to specify CoordModeOrigin\n     *  -no need to specify the number of points to draw (plots all points in pix)\n     * @method fill_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param lineColor - The line color of the polygon\n     * @param fillColor - The fill color of the polygon\n     * @param lineWidth - The line width to set\n     * @private\n     */\n    function fill_poly(ctx, pix, lineColor, fillColor, width) { // TODO Should this be a public method?\n        start_poly(ctx, pix, width);\n\n        if (lineColor) {\n            ctx.strokeStyle = lineColor;\n        }\n        if (fillColor) {\n            ctx.fillStyle = fillColor;\n        }\n\n        ctx.fill(); // fill in the shape only, no outline drawn\n        ctx.closePath();\n    }\n\n    /**\n     * Helper method which starts drawing a polygon in a graphics context.\n     * In the graphics context provided, begins a path at the first point in pix,\n     * then draws lines from each point in pix to the next. It also sets the width\n     * of the line.\n     * @method start_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param width - The line width to set.\n     * @private\n     */\n    function start_poly(ctx, pix, width) {\n        if (pix.length < 1) {\n            return;\n        }\n\n        var x = pix[0].x;\n        var y = pix[0].y;\n\n        if (width) {\n            ctx.lineWidth = width;\n        } else {\n            ctx.lineWidth = 1; // Default\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n\n        for (var i = 0; i < pix.length; i++) {\n            x = pix[i].x;\n            y = pix[i].y;\n            ctx.lineTo(x, y);\n        }\n    }\n\n    /**\n     * Method which draws a rectangle (hollowed) in a graphics context.\n     * In the graphics context provided, draws a hollow rectangle.\n     * Mimics XLib's XDrawRectangle method in at least the basic functionality.\n     * @method draw_rectangle\n     * @param ctx - The graphics context to draw in\n     * @param x - The x coordinate\n     * @param y - The y coordinate\n     * @param width - The width of the rectangle\n     * @param height - The height of the rectangle\n     * @param color - The color of the rectangle\n     * @param lineWidth - The line width to set.\n     * @private\n     */\n    function draw_rectangle(ctx, x, y, width, height, color, lineWidth) { // TODO Should this be a public method?\n        if (lineWidth) {\n            ctx.lineWidth = lineWidth;\n        }\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        ctx.strokeRect(x, y, width, height);\n    }\n\n    /**\n     * Method which draws a rectangle (filled) in a graphics context.\n     * In the graphics context provided, draws a filled rectangle.\n     * Mimics XLib's XFillRectangle method in at least the basic functionality.\n     * @method fill_rectangle\n     * @param ctx - The graphics context to draw in\n     * @param x - The x coordinate\n     * @param y - The y coordinate\n     * @param width - The width of the rectangle\n     * @param height - The height of the rectangle\n     * @param fillColor - The fill color of the rectangle\n     * @param strokeColor - The line color of the rectangle\n     * @param lineWidth - The line width to set.\n     * @private\n     */\n    function fill_rectangle(ctx, x, y, width, height, fillColor, strokeColor, lineWidth) { // TODO Should this be a public method?\n        if (lineWidth) {\n            ctx.lineWidth = lineWidth;\n        }\n        if (strokeColor) {\n            ctx.strokeStyle = strokeColor;\n        }\n        if (fillColor) {\n            ctx.fillStyle = fillColor;\n        }\n\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * @method pc2px\n     * @param perc\n     * @private\n     */\n    function pc2px(perc) {\n        return Math.floor(Math.round(255 * (perc / 100)));\n    }\n\n    /**\n     * @method to_rgb\n     * @param red\n     * @param green\n     * @param blue\n     * @private\n     */\n    function to_rgb(red, green, blue) {\n        return \"rgb(\" + Math.round(red) + \", \" + Math.round(green) + \", \" + Math.round(blue) + \")\";\n    }\n\n    /**\n     *\n     * Instead of dealing with color tables and stuff, all we really need\n     * is the ability to on-the-fly generate a color from the map\n     * @param Mx\n     * @param map\n     * @param z\n     * @private\n     */\n    mx.getcolor = function(Mx, map, z) {\n        var iz = 0;\n        for (; iz < 6 && map[iz + 1].pos === 0; iz++) {}\n\n        while (z > map[iz].pos && iz < 6) {\n            iz++;\n        }\n        if ((iz === 0) || (z >= map[iz].pos)) {\n            // above, below, or directly on boundry\n            return to_rgb(\n                pc2px(map[iz].red),\n                pc2px(map[iz].green),\n                pc2px(map[iz].blue));\n        } else {\n            // interpolation my dear watson\n            var pf = (z - map[iz - 1].pos) / (map[iz].pos - map[iz - 1].pos);\n            var zf = pc2px(pf * 100);\n            var zf1 = 255 - zf;\n            return to_rgb(\n                (zf * (map[iz].red / 100) + zf1 * (map[iz - 1].red / 100)), (zf * (map[iz].green / 100) + zf1 * (map[iz - 1].green / 100)), (zf * (map[iz].blue / 100) + zf1 * (map[iz - 1].blue / 100)));\n        }\n    };\n\n    /**\n     * @method trimlabel\n     * @param lbl\n     * @param inside\n     * @private\n     */\n    // ~= glibf1.for TRIMLABEL\n    function trimlabel(lbl, inside) {\n        var k;\n        var j;\n        if (lbl.substring(5, 8) === \".000000\") { // this line seems to always evaluate to false\n            k = 4;\n        } else {\n            k = lbl.length - 1;\n            while (lbl[k] === \"0\") {\n                k = k - 1;\n            }\n        }\n        j = 0;\n        while ((lbl[j] === \" \") && ((k - j + 1 > 5) || inside)) {\n            j = j + 1;\n        }\n        var res = lbl.substring(j, k + 1);\n        if (res.indexOf(\".\") === -1) {\n            res += \".\";\n        }\n        return res;\n    }\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.redraw_warpbox = function(Mx) {\n        if (Mx.warpbox) {\n            if (Mx._animationFrameHandle) {\n                cancelAnimFrame(Mx._animationFrameHandle);\n            }\n            Mx._animationFrameHandle = requestAnimFrame(function() {\n                display_warpbox(Mx);\n            });\n        }\n    };\n\n    /**\n     * @method display_warpbox\n     * @param Mx\n     * @private\n     */\n    function display_warpbox(Mx) {\n        Mx._animationFrameHandle = undefined;\n        var warpbox = Mx.warpbox;\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!warpbox) {\n            return;\n        }\n\n        if (((Mx.xpos >= warpbox.xmin) && (Mx.xpos <= warpbox.xmax)) &&\n            ((Mx.ypos >= warpbox.ymin) && (Mx.ypos <= warpbox.ymax))) {\n\n            // Update the position\n            warpbox.xl = Mx.xpos;\n            warpbox.yl = Mx.ypos;\n\n            // Draw the current box\n            var x = Math.min(warpbox.xo, warpbox.xl);\n            var y = Math.min(warpbox.yo, warpbox.yl);\n            var w = Math.abs(warpbox.xl - warpbox.xo);\n            var h = Math.abs(warpbox.yl - warpbox.yo);\n\n            if ((w === 0) || (h === 0)) {\n                // Nothing to draw\n                return;\n            }\n\n            if (warpbox.mode === \"vertical\") {\n                x = Mx.l;\n                w = Mx.r - Mx.l;\n            } else if (warpbox.mode === \"horizontal\") {\n                y = Mx.t;\n                h = Mx.b - Mx.t;\n            } // else box\n\n            mx.onWidgetLayer(Mx, function() {\n                mx.erase_window(Mx);\n                mx.draw_box(Mx, \"xor\", x, y, w, h, warpbox.style.opacity, warpbox.style.fill_color);\n            });\n        }\n\n    }\n\n    /**\n     * @method log10\n     * @param val\n     * @private\n     */\n    function log10(val) {\n        return Math.log(val) / Math.log(10);\n    }\n\n\n    /**\n     * Attempts to format a number in the same manner\n     * as the FORTRAN format code 1p1g16.9\n     * 1p1g16.9\n     * 16 character fields\n     * 9 for decimals\n     * 3 for exponent (E)\n     * 1 for sign\n     * 1 for starting 0\n     * 1 for decimal point\n     * 1 for blank space\n     *\n     * The E format code is used for scientific (exponential) notation.\n     * The value is rounded to d decimal positions and right-justified\n     * into an external field that is w characters wide. The value of w\n     * must be large enough to include a minus sign when necessary, at least\n     * one digit to the left of the decimal point, the decimal point,\n     * d digits to the right of the decimal point, a plus or minus sign for\n     * the exponent, the character \"e\" or \"E\", and at least two characters for the exponent.\n     *\n     * The G format code uses the F output style when reasonable and\n     * E for other values, but displays exactly d significant digits\n     * rather than d digits following the decimal point.\n     *\n     * @param num\n     * @param w\n     * @param d\n     * @param leading_nonzer\n     * @private\n     */\n    mx.format_g = function(num, w, d, leading_nonzero) {\n        var w = Math.min(w, d + 7);\n        var f = Math.abs(num).toString();\n\n        var decloc = f.indexOf(\".\");\n        // If there is no decimal point, add one at the end.\n        if (decloc === -1) {\n            f = f + \".\";\n            decloc = f.length;\n        }\n\n        var exp = 0;\n        var eloc = f.indexOf(\"e\");\n        // If there is already an 'e' in the string parse it out\n        if (eloc !== -1) {\n            exp = parseInt(f.slice(eloc + 1, f.length), 10);\n            f = f.slice(0, eloc);\n        }\n\n        // Add zero's to the end if necessary\n        var dz = Math.min(d - (f.length - decloc) + 1, d);\n        for (var i = 0; i < dz; i++) {\n            f = f + \"0\";\n        }\n\n        if (num !== 0) {\n            if (Math.abs(num) < 1.0) {\n                if (f.slice(0, 2) === \"0.\") {\n                    // Shift to the left until the first number is non-zero\n                    for (var i = 2; i < f.length; i++) {\n                        if (f[i] === \"0\") {\n                            exp -= 1;\n                        } else {\n                            f = \"0.\" + f.slice(i, i + d);\n                            break;\n                        }\n                    }\n                } else {\n                    f = f.slice(0, d + 2);\n                }\n            } else if (decloc > d) {\n                var exp = Math.max(0, decloc - 1);\n                f = f[0] + \".\" + f.slice(1, d + 1);\n            } else {\n                f = f.slice(0, d + 2);\n            }\n        }\n\n        if (exp === 0) {\n            f = f + \"    \";\n        } else {\n            var e = mx.pad(Math.abs(exp).toString(), 2, \"0\");\n            if (exp < 0) {\n                f = f + \"E-\" + e;\n            } else {\n                f = f + \"E+\" + e;\n            }\n        }\n\n        if (num < 0) {\n            f = \"-\" + f;\n        } else {\n            f = \" \" + f;\n        }\n        return f;\n    };\n\n    /**\n     *\n     * Behave like fortran format code\n     * fs.d\n     * @param num the number to format\n     * @param s the width of digits\n     * @param d number of digits after the decimal\n     * @private\n     */\n    mx.format_f = function(num, s, d) {\n        d = Math.max(Math.min(d, 20), 0);\n        var f = num.toFixed(d).toString();\n        f = mx.pad(f, (s + d), \" \");\n        return f;\n    };\n\n    /**\n     * @param s\n     * @param size\n     * @param c\n     * @private\n     */\n    mx.pad = function(s, size, c) {\n        while (s.length < size) {\n            s = c + s;\n        }\n        return s;\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param shape\n     * @param func\n     * @param label\n     * @private\n     */\n    // ~= MX$SHADOWBOX\n    mx.legacy_shadowbox = function(Mx, x, y, w, h, shape, func, label) {\n        var length = label.length; // Original method declaration includes a length - but it only represents the length of the label\n\n        var xt = 0; // Originally an int\n        var yt = 0; // Originally an int\n        var bw = 0; // Originally an int\n\n        var pix = []; // Originally declared as a size 11 XPoint array\n        for (var cnt = 0; cnt < 11; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var fill = !(func === 1 || func === -1); // Originally a bool\n\n        // Removed the G.BW section - since we don't need to support black & white displays\n\n        var j = (shape === mx.L_ArrowLeft || shape === mx.L_ArrowUp) ? 1 : 2;\n\n        if (func !== 0 && mx.GBorder > 0) {\n            bw = m.trunc(Math.min(w, h) / 3);\n            bw = Math.max(1, Math.min(bw, mx.GBorder));\n        }\n\n        if (bw > 0) {\n            /* outer shape */\n            pix[0].x = pix[1].x = x;\n            pix[8].x = pix[9].x = x + w;\n            pix[1].y = pix[8].y = y;\n            pix[0].y = pix[9].y = y + h;\n\n            switch (shape) {\n                case mx.L_ArrowLeft:\n                    pix[0].y = pix[1].y = y + m.trunc(h / 2);\n                    x += 2;\n                    --w;\n                    break;\n                case mx.L_ArrowRight:\n                    pix[8].y = pix[9].y = y + m.trunc(h / 2);\n                    --x;\n                    --w;\n                    break;\n                case mx.L_ArrowUp:\n                    pix[1].x = pix[8].x = x + m.trunc(w / 2);\n                    y += 2;\n                    --h;\n                    break;\n                case mx.L_ArrowDown:\n                    pix[0].x = pix[9].x = x + m.trunc(w / 2);\n                    --y;\n                    --h;\n                    break;\n            }\n            pix[2] = pix[8];\n            pix[10] = pix[0];\n\n            x += bw;\n            y += bw;\n            w -= 2 * bw;\n            h -= 2 * bw;\n        }\n\n        /* inner shape */\n        pix[4].x = pix[5].x = x;\n        pix[3].x = pix[6].x = x + w;\n        pix[3].y = pix[4].y = y;\n        pix[5].y = pix[6].y = y + h;\n        switch (shape) {\n            case mx.L_ArrowLeft:\n                pix[4].y = pix[5].y = y + m.trunc(h / 2);\n                break;\n            case mx.L_ArrowRight:\n                pix[3].y = pix[6].y = y + m.trunc(h / 2);\n                break;\n            case mx.L_ArrowUp:\n                pix[3].x = pix[4].x = x + m.trunc(w / 2);\n                break;\n            case mx.L_ArrowDown:\n                pix[5].x = pix[6].x = x + m.trunc(w / 2);\n                break;\n        }\n        pix[7] = pix[3];\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (bw > 0) {\n            ctx.fillStyle = (func > 0) ? Mx.xwts : Mx.xwbs; // Set foreground color\n            fill_poly(ctx, pix.slice(0, 7));\n            //\tif (shape !== 1) { draw_poly(ctx, pix.slice(0,7)); } // TODO what shape is this neccessary with - causes an issue with arrows\n\n            ctx.fillStyle = (func < 0) ? Mx.xwts : Mx.xwbs; // Set foreground color\n            fill_poly(ctx, pix.slice(5, 11));\n            //if (shape !== 1) { draw_poly(ctx, pix.slice(5, 11)); } // TODO what shape is this neccessary with - causes an issue with arrows\n        }\n\n        if (fill) {\n            ctx.fillStyle = Mx.xwbg; // Set foreground color\n            fill_poly(ctx, pix.slice(3, 8));\n            //if (shape !== 1) { draw_poly(ctx, pix.slice(3, 8)); } // TODO what shape is this neccessary with - causes an issue with arrows\n        }\n\n        ctx.fillStyle = Mx.xwfg; // Set foreground color\n        ctx.textBaseline = \"alphabetic\"; // Reset vertical text alignment\n\n        if (fill && length > 0) {\n            length = Math.min(length, m.trunc(w / Mx.text_w));\n            length = Math.max(length, 1);\n            xt = x + m.trunc((w - length * Mx.text_w) / 2);\n            yt = y + m.trunc((h + 0.7 * Mx.text_h) / 2);\n            ctx.fillText(label, xt, yt); // Draw a string\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param shape\n     * @param func\n     * @param label\n     * @private\n     */\n    // ~= MX$SHADOWBOX\n    mx.sigplot_shadowbox = function(Mx, x, y, w, h, shape, func, label, alpha) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var length = label.length; // Original method declaration includes a length - but it only represents the length of the label\n\n        var color = (func < 0) ? Mx.xwts : Mx.xwbs;\n\n        alpha = alpha || 1.0;\n\n        var pix = []; // Originally declared as a size 11 XPoint array\n        for (var cnt = 0; cnt < 11; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n\n        switch (shape) {\n            case mx.L_ArrowLeft:\n            case mx.L_ArrowRight:\n            case mx.L_ArrowUp:\n            case mx.L_ArrowDown:\n                var pix = mx.chevron(shape, x, y, w, h);\n                ctx.fillStyle = (func > 0) ? Mx.xwts : Mx.xwbs;\n                fill_poly(ctx, pix.slice(0, 6));\n                break;\n            default:\n                mx.draw_round_box(Mx, color, x, y, w, h, alpha, Mx.xwbg, 5, Mx.xwbs);\n                break;\n        }\n\n        ctx.fillStyle = Mx.xwfg; // Set foreground color\n        ctx.textBaseline = \"alphabetic\"; // Reset vertical text alignment\n\n        var fill = !(func === 1 || func === -1); // Originally a bool\n        if (fill && length > 0) {\n            length = Math.min(length, m.trunc(w / Mx.text_w));\n            length = Math.max(length, 1);\n            var xt = x + m.trunc((w - length * Mx.text_w) / 2);\n            var yt = y + m.trunc((h + 0.7 * Mx.text_h) / 2);\n            ctx.fillText(label, xt, yt); // Draw a string\n        }\n    };\n\n    if (mx.LEGACY_RENDER) { // TODO new-style conditional\n        mx.shadowbox = mx.legacy_shadowbox;\n    } else {\n        mx.shadowbox = mx.sigplot_shadowbox;\n    }\n\n    mx.chevron = function(shape, x, y, w, h, e) {\n        // Figure out the largest square dimension\n        var q = Math.min(w, h);\n\n        // if the edge width isn't provided use a decent one\n        if (!e) {\n            e = q * 0.25;\n        }\n\n\n\n        // Initialize the pixel array\n        var pix = [];\n        for (var cnt = 0; cnt < 6; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n\n        var x_offset = m.trunc(((w - q) / 2) + (q / 4) - (e / (2 * 1.414)));\n        var y_offset = m.trunc(((h - q) / 2) + (q / 4) - (e / (2 * 1.414)));\n        switch (shape) {\n            case mx.L_ArrowLeft:\n                // Chevron points from the tip around the edge clockwise\n                pix[0].x = x + x_offset;\n                pix[0].y = y + m.trunc(q / 2);\n                pix[1].x = x + x_offset + m.trunc(q / 2);\n                pix[1].y = y;\n                pix[2].x = x + x_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[2].y = y + m.trunc(e / 1.414);\n                pix[3].x = x + x_offset + m.trunc((2 * e) / 1.414);\n                pix[3].y = y + m.trunc(q / 2);\n                pix[4].x = x + x_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[4].y = y + h - m.trunc(e / 1.414);\n                pix[5].x = x + x_offset + m.trunc(q / 2);\n                pix[5].y = y + q;\n                break;\n            case mx.L_ArrowRight:\n                // Chevron points from the tip around the edge clockwise\n                pix[0].x = x + w - x_offset;\n                pix[0].y = y + m.trunc(q / 2);\n                pix[1].x = x + w - x_offset - m.trunc(q / 2);\n                pix[1].y = y;\n                pix[2].x = x + w - x_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[2].y = y + m.trunc(e / 1.414);\n                pix[3].x = x + w - x_offset - m.trunc((2 * e) / 1.414);\n                pix[3].y = y + m.trunc(q / 2);\n                pix[4].x = x + w - x_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[4].y = y + h - m.trunc(e / 1.414);\n                pix[5].x = x + w - x_offset - m.trunc(q / 2);\n                pix[5].y = y + q;\n                break;\n            case mx.L_ArrowUp:\n                // Chevron points from the tip around the edge counter-clockwise\n                pix[0].x = x + m.trunc(q / 2);\n                pix[0].y = y + y_offset;\n                pix[1].x = x;\n                pix[1].y = y + y_offset + m.trunc(q / 2);\n                pix[2].x = x + m.trunc(e / 1.414);\n                pix[2].y = y + y_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[3].x = x + m.trunc(q / 2);\n                pix[3].y = y + y_offset + m.trunc((2 * e) / 1.414);\n                pix[4].x = x + w - m.trunc(e / 1.414);\n                pix[4].y = y + y_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[5].x = x + q;\n                pix[5].y = y + y_offset + m.trunc(q / 2);\n                break;\n            case mx.L_ArrowDown:\n                // Chevron points from the tip around the edge counter-clockwise\n                pix[0].x = x + m.trunc(q / 2);\n                pix[0].y = y + h - y_offset;\n                pix[1].x = x;\n                pix[1].y = y + h - y_offset - m.trunc(q / 2);\n                pix[2].x = x + m.trunc(e / 1.414);\n                pix[2].y = y + h - y_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[3].x = x + m.trunc(q / 2);\n                pix[3].y = y + h - y_offset - m.trunc((2 * e) / 1.414);\n                pix[4].x = x + w - m.trunc(e / 1.414);\n                pix[4].y = y + h - y_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[5].x = x + q;\n                pix[5].y = y + h - y_offset - m.trunc(q / 2);\n                break;\n        }\n\n        return pix;\n    };\n\n    /**\n     * @param Mx\n     * @param mouseEvent\n     * @private\n     */\n    // ~= mx_ifevent\n    mx.ifevent = function(Mx, mouseEvent) {\n        Mx.button_press = 0;\n        Mx.button_release = 0;\n        Mx.state_mask = 0;\n\n        var rect = mouseEvent.target.getBoundingClientRect();\n        var eventXPos = (mouseEvent.offsetX === undefined) ? (mouseEvent.pageX - rect.left - window.scrollX) : mouseEvent.offsetX;\n        var eventYPos = (mouseEvent.offsetX === undefined) ? (mouseEvent.pageY - rect.top - window.scrollY) : mouseEvent.offsetY;\n\n        //\t\tvar eventXPos = (mouseEvent.offsetX === undefined) ? mouseEvent.layerX : mouseEvent.offsetX;\n        //\t\tvar eventYPos = (mouseEvent.offsetY === undefined) ? mouseEvent.layerY : mouseEvent.offsetY;\n\n        switch (mouseEvent.type) {\n            case \"mousedown\":\n                Mx.xpos = m.bound(eventXPos, 0, Mx.width);\n                Mx.ypos = m.bound(eventYPos, 0, Mx.height);\n                switch (mouseEvent.which) {\n                    case 1:\n                        Mx.button_press = 1;\n                        break;\n                    case 2:\n                        Mx.button_press = 2;\n                        break;\n                    case 3:\n                        Mx.button_press = 3;\n                        break;\n                    case 4:\n                        Mx.button_press = 4;\n                        break;\n                    case 5:\n                        Mx.button_press = 5;\n                }\n                //Mx.state_mask = TODO\n                break;\n            case \"mouseup\":\n                Mx.xpos = m.bound(eventXPos, 0, Mx.width);\n                Mx.ypos = m.bound(eventYPos, 0, Mx.height);\n                switch (mouseEvent.which) {\n                    case 1:\n                        Mx.button_release = 1;\n                        break;\n                    case 2:\n                        Mx.button_release = 2;\n                        break;\n                    case 3:\n                        Mx.button_release = 3;\n                        break;\n                    case 4:\n                        Mx.button_release = 4;\n                        break;\n                    case 5:\n                        Mx.button_release = 5;\n                }\n                //Mx.state_mask = TODO\n                break;\n        }\n    };\n\n    /**\n     * @param sv\n     * @private\n     */\n    //\n    // ~= scroll_real2pix\n    //\n    // TODO Refactor real2pix to return an object instead of sending in reference vars?\n    mx.scroll_real2pix = function(sv) {\n        // Param types:\n        // sv - mx.SCROLLBAR\n\n        if (sv.range === 0.0) {\n            return {\n                s1: sv.a1,\n                sw: sv.a2 - sv.a1\n            };\n            //\t\t\tout.s1 = sv.a1;\n            //\t\t\tout.sw = sv.a2 - sv.a1;\n        } else {\n            var dv; // real_8\n            var ts1; // int_2\n            var ts2; // int_2\n\n            dv = (sv.a2 - sv.a1) / sv.trange;\n\n            ts1 = sv.a1 + Math.floor(0.5 + (sv.smin - sv.tmin) * dv);\n            ts2 = ts1 + Math.floor(0.5 + sv.srange * dv);\n\n            if (ts1 > sv.a2 - sv.swmin) {\n                ts1 = sv.a2 - sv.swmin;\n            } else {\n                ts1 = Math.max(ts1, sv.a1);\n            }\n\n            if (ts2 < sv.a1 + sv.swmin) {\n                ts2 = sv.a1 + sv.swmin;\n            } else {\n                ts2 = Math.min(ts2, sv.a2);\n            }\n\n            return {\n                s1: ts1,\n                sw: Math.max(ts2 - ts1, sv.swmin)\n            };\n            //\t\t\tout.s1 = ts1;\n            //\t\t\tout.sw = Math.max(ts2 - ts1, sv.swmin);\n        }\n    };\n\n    /**\n     * Method to re-draw a scrollbar after update. Logic taken from mx.scroll's UPDATE section.\n     * @param sv The scrollbar to work with.\n     * @param Mx The Mx context to work with.\n     * @param op Optional op-code for XW_DRAW\n     * @private\n     */\n    mx.redrawScrollbar = function(sv, Mx, op) {\n        var x;\n        var y;\n        var xcc;\n        var ycc;\n        var xss;\n        var yss;\n        var p1;\n        var op1; // int\n        var s1;\n        var sw; // int_2\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var scrollReal2PixOut = mx.scroll_real2pix(sv);\n        s1 = scrollReal2PixOut.s1;\n        sw = scrollReal2PixOut.sw;\n\n        p1 = s1;\n        op1 = sv.s1;\n\n        xcc = sv.x;\n        ycc = sv.y;\n        xss = sv.w;\n        yss = sv.h;\n\n        // horizontal scroll bar\n        if (sv.origin & 1) {\n            y = ycc + yss / 2;\n            if (sv.origin & 2) {\n                op1 = xss - op1 - sv.sw;\n                p1 = xss - p1 - sw;\n            }\n            if (op === mx.XW_DRAW) {\n                var arrow = sv.arrow; // int\n\n                mx.shadowbox(Mx, xcc, ycc, arrow, yss - 1, mx.L_ArrowLeft, 2, \"\", 0);\n                mx.shadowbox(Mx, xcc + xss - arrow, ycc, arrow - 1, yss, mx.L_ArrowRight, 2, \"\", 0);\n            }\n\n\n            if (mx.LEGACY_RENDER) {\n                mx.draw_line(Mx, Mx.fg, xcc + sv.a1, y, xcc + sv.a2, y);\n                mx.shadowbox(Mx, xcc + p1, ycc, sw + 1, yss, 1, 2, \"\", 0);\n            } else {\n                // Veritical gradiant\n                var lingrad = ctx.createLinearGradient(xcc + sv.a1, 0, xcc + sv.a2, 0);\n                lingrad.addColorStop(0, Mx.xwbs);\n                lingrad.addColorStop(0.5, Mx.xwts);\n                lingrad.addColorStop(1, Mx.xwbs);\n                mx.draw_line(Mx, lingrad, xcc + sv.a1, y, xcc + sv.a2, y, 1);\n\n                var lingrad = ctx.createLinearGradient(0, ycc, 0, ycc + yss);\n                lingrad.addColorStop(0.1, Mx.xwts);\n                lingrad.addColorStop(0.75, Mx.xwbs);\n                mx.draw_round_box(Mx, Mx.xwbg, xcc + p1, ycc, sw + 1, yss, 1, lingrad, 8, Mx.xwbs);\n            }\n\n            // else vertical scroll bar\n        } else {\n            x = xcc + m.trunc(xss / 2);\n            if (sv.origin <= 2) {\n                op1 = yss - op1 - sv.sw;\n                p1 = yss - p1 - sw;\n            }\n            if (op === mx.XW_DRAW) {\n                var arrow = sv.arrow; // int\n                mx.shadowbox(Mx, xcc, ycc, xss - 1, arrow, mx.L_ArrowUp, 2, \"\", 0);\n                mx.shadowbox(Mx, xcc, ycc + yss - arrow, xss - 1, arrow, mx.L_ArrowDown, 2, \"\", 0);\n            }\n\n            if (mx.LEGACY_RENDER) {\n                mx.draw_line(Mx, Mx.fg, x, ycc + sv.a1, x, ycc + sv.a2);\n                mx.shadowbox(Mx, xcc, ycc + p1, xss, sw + 1, 1, 2, \"\", 0);\n            } else {\n                // Horizontal gradiant\n                var lingrad = ctx.createLinearGradient(0, ycc + sv.a1, 0, ycc + sv.a2);\n                lingrad.addColorStop(0, Mx.xwbs);\n                lingrad.addColorStop(0.5, Mx.xwts);\n                lingrad.addColorStop(1, Mx.xwbs);\n                mx.draw_line(Mx, lingrad, x, ycc + sv.a1, x, ycc + sv.a2, 1);\n\n                var lingrad = ctx.createLinearGradient(xcc, 0, xcc + xss, 0);\n                lingrad.addColorStop(0.1, Mx.xwts);\n                lingrad.addColorStop(0.75, Mx.xwbs);\n                mx.draw_round_box(Mx, Mx.xwbg, xcc - 1, ycc + p1, xss, sw + 1, 1, lingrad, 8, Mx.xwbs);\n            }\n\n        }\n\n        sv.s1 = s1;\n        sv.sw = sw;\n    };\n\n    /**\n     * @param {Object} Mx - the Mx object\n     * @param {number} x - the real-world x coordinate\n     * @param {number} y - the real-world y coordinate\n     * @param {boolean} [clip=false] set to clip the returned value to the plot area\n     * @returns {Object} pixel - the x,y coordinates in pixel coordinate space\n     * @returns {number} pixel.clipped - true if the point would have or has been clipped\n     * @private\n     */\n    mx.real_to_pixel = function(Mx, x, y, clip) {\n        var stk4 = mx.origin(Mx.origin, 4, Mx.stk[Mx.level]);\n        if ((stk4.xscl === 0.0) || (stk4.yscl === 0.0)) {\n            return {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var left = stk4.x1;\n        var top = stk4.y1;\n\n        var xxmin = stk4.xmin;\n        var xscl = 1.0 / stk4.xscl;\n\n        var yymin = stk4.ymin;\n        var yscl = 1.0 / stk4.yscl;\n\n        var clipped_x = false;\n        var clipped_y = false;\n\n        if (x !== null) {\n            clipped_x = ((x > stk4.xmax) || (x < stk4.xmin));\n            if (clip) {\n                x = Math.min(x, stk4.xmax);\n                x = Math.max(x, stk4.xmin);\n            }\n            x = Math.round((x - xxmin) * xscl) + left;\n        }\n        if (y !== null) {\n            clipped_y = ((y > stk4.ymin) || (y < stk4.ymax));\n            if (clip) {\n                y = Math.min(y, stk4.ymin);\n                y = Math.max(y, stk4.ymax);\n            }\n            y = Math.round((y - yymin) * yscl) + top;\n        }\n\n        x = Math.round(x);\n        y = Math.round(y);\n\n        return {\n            x: x,\n            y: y,\n            clipped_x: clipped_x,\n            clipped_y: clipped_y,\n            clipped: (clipped_x || clipped_y)\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param xpos\n     * @param ypos\n     * @private\n     */\n    mx.pixel_to_real = function(Mx, xpos, ypos) {\n        var iretx = Math.min(Mx.r, Math.max(Mx.l, xpos));\n        var irety = Math.min(Mx.b, Math.max(Mx.t, ypos));\n        var retx;\n        var rety;\n\n        var k = Mx.level;\n        if ((Mx.origin !== 2) && (Mx.origin !== 3)) {\n            retx = Mx.stk[k].xmin + (iretx - Mx.stk[k].x1) * Mx.stk[k].xscl;\n        } else {\n            retx = Mx.stk[k].xmin + (Mx.stk[k].x2 - iretx) * Mx.stk[k].xscl;\n        }\n        if (Mx.origin > 2) {\n            rety = Mx.stk[k].ymin + (irety - Mx.stk[k].y1) * Mx.stk[k].yscl;\n        } else {\n            rety = Mx.stk[k].ymin + (Mx.stk[k].y2 - irety) * Mx.stk[k].yscl;\n        }\n\n        return {\n            x: retx,\n            y: rety\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param map\n     * @param ncolors\n     * @private\n     */\n    mx.colormap = function(Mx, map, ncolors) {\n        Mx.pixel = new ColorMap(map, {\n            ncolors: ncolors\n        });\n        return;\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @private\n     */\n    mx.colorbar = function(Mx, x, y, w, h) {\n        Mx.pixel.setRange(0, Mx.pixel.map.length);\n        for (var j = 1; j < h; j++) {\n            var cidx = Math.floor(Mx.pixel.map.length * (j - 1) / h);\n            mx.draw_line(Mx, cidx, x, y + h - j, x + w, y + h - j);\n        }\n        mx.draw_box(Mx, Mx.fg, x + 0.5, y, w, h);\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @private\n     */\n    mx.legend_colorbar = function(Mx, x, y, w, h) {\n        for (var j = 1; j < w; j++) {\n            var cidx = Math.floor(Mx.pixel.length * (j - 1) / w);\n            mx.draw_line(Mx, cidx, x + w - j, y, x + w - j, y + h);\n        }\n        mx.draw_box(Mx, Mx.fg, x + 0.5, y, w, h);\n    };\n\n    /**\n     * Render image buffer to canvas.\n     *\n     * If we don't have access to Uint8ClampedArray (i.e. Firefox 3.6)\n     * use a slower approach that only supports rasters up to the size\n     * limit of the canvas\n     * @private\n     *\n     * @param ctx\n     *   {context} a canvas 2d context\n     * @param buf\n     *   {ArrayBuffer} a buffer of 32-bit image data\n     * @param opacity\n     *   the opacity to render the image with\n     * @param smoothing\n     *   if image smoothing should be enabled\n     * @param sx\n     *   source x position\n     * @param sy\n     *   source y position\n     * @param sw\n     *   source width\n     * @param sh\n     *   source height\n     * @param x\n     *   optional x canvas dest\n     * @param y\n     *   optional y canvas dest\n     * @param w\n     *   optional width\n     * @param h\n     *   optional height\n     */\n    function renderImageNoTypedArrays(Mx, ctx, buf, opacity, smoothing, x, y, w, h, sx, sy, sw, sh) {\n        if (sx === undefined) {\n            sx = 0;\n        }\n        if (sy === undefined) {\n            sy = 0;\n        }\n        if (sw === undefined) {\n            sw = buf.width - sx;\n        }\n        if (sh === undefined) {\n            sh = buf.height - sy;\n        }\n\n        // If the source buffer is small enough to be directly rendered, do that\n        Mx._renderCanvas.width = buf.width;\n        Mx._renderCanvas.height = buf.height;\n\n        var imgctx = Mx._renderCanvas.getContext(\"2d\");\n        var imgd = imgctx.createImageData(Mx._renderCanvas.width, Mx._renderCanvas.height);\n        var buf8 = new Uint8Array(buf);\n        for (var yy = 0; yy < buf.height; ++yy) {\n            for (var xx = 0; xx < buf.width; ++xx) {\n                var index = ((yy * buf.width) + xx) * 4;\n                imgd.data[index] = buf8[index]; // red\n                imgd.data[index + 1] = buf8[index + 1]; // green\n                imgd.data[index + 2] = buf8[index + 2]; // blue\n                imgd.data[index + 3] = 255; // alpha\n            }\n        }\n        imgctx.putImageData(imgd, 0, 0);\n\n        // Render the image to the destination\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        if (!smoothing) {\n            ctx.imageSmoothingEnabled = false;\n            ctx.mozImageSmoothingEnabled = false;\n            ctx.webkitImageSmoothingEnabled = false;\n        }\n        ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, w, h);\n        ctx.restore();\n    }\n\n    /**\n     * @private\n     *\n     * @param ctx\n     *   {context} a canvas 2d context\n     * @param buf\n     *   {ArrayBuffer} a buffer of 32-bit image data\n     * @param opacity\n     *   the opacity to render the image with\n     * @param smoothing\n     *   if image smoothing should be enabled\n     * @param sx\n     *   source x position\n     * @param sy\n     *   source y position\n     * @param sw\n     *   source width\n     * @param sh\n     *   source height\n     * @param x\n     *   optional x canvas dest\n     * @param y\n     *   optional y canvas dest\n     * @param w\n     *   optional width\n     * @param h\n     *   optional height\n     */\n    function renderImageTypedArrays(Mx, ctx, buf, opacity, smoothing, x, y, w, h, sx, sy, sw, sh) {\n        if (sx === undefined) {\n            sx = 0;\n        }\n        if (sy === undefined) {\n            sy = 0;\n        }\n        if (sw === undefined) {\n            sw = buf.width - sx;\n        }\n        if (sh === undefined) {\n            sh = buf.height - sy;\n        }\n\n        if ((buf.width < 32768) && (buf.height < 32768)) {\n            // If the source buffer is small enough to be directly rendered, do that\n            Mx._renderCanvas.width = buf.width;\n            Mx._renderCanvas.height = buf.height;\n\n            var imgctx = Mx._renderCanvas.getContext(\"2d\");\n            var imgd = imgctx.createImageData(Mx._renderCanvas.width, Mx._renderCanvas.height);\n\n            // TODO - This may not be portable to all browsers, if not\n            // we need to choose between this approach and the traditional\n            // for-loop based approach\n            var buf8 = new Uint8ClampedArray(buf);\n            imgd.data.set(buf8);\n            imgctx.putImageData(imgd, 0, 0);\n        } else {\n            if ((sw < 32768) && (sh < 32768)) {\n                // The clipped image is small enough to directly render\n                Mx._renderCanvas.width = sw;\n                Mx._renderCanvas.height = sh;\n                scaleImage(Mx._renderCanvas, buf, sx, sy, sw, sh);\n            } else {\n                // Downscale to twice the destination size\n                Mx._renderCanvas.width = Math.min(w * 2, buf.width);\n                Mx._renderCanvas.height = Math.min(h * 2, buf.height);\n                scaleImage(Mx._renderCanvas, buf, sx, sy, sw, sh);\n                sw = Mx._renderCanvas.width;\n                sh = Mx._renderCanvas.height;\n            }\n            sx = 0;\n            sy = 0;\n        }\n\n        // Render the image to the destination\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        if (!smoothing) {\n            ctx.imageSmoothingEnabled = false;\n            ctx.mozImageSmoothingEnabled = false;\n            ctx.webkitImageSmoothingEnabled = false;\n        }\n        ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, w, h);\n        ctx.restore();\n    }\n\n    /**\n     * Scale the image data (represented by buf) into the destination canvas\n     * using nearest neighbor.  In genearl, you should just use the scaling\n     * provided by drawImage...but if the buf is greater than 32767 pixels in\n     * either dimension that won't work and you have to use this.\n     *\n     * @param img\n     *   A canvas object\n     * @param buf\n     *   An ArrayBuf with .width and .height elements\n     *\n     * @private\n     */\n    function scaleImage(img, buf, sx, sy, sw, sh) {\n        // Source buffer, expected to have .width and .height elements\n        var src = new Uint32Array(buf);\n\n        if (!sw) {\n            sw = buf.width;\n        }\n        if (!sh) {\n            sh = buf.height;\n        }\n        if (!sx) {\n            sx = 0;\n        }\n        if (!sy) {\n            sy = 0;\n        }\n\n        // Cache to avoid get width calls in tight loop\n        var w = img.width;\n        var h = img.height;\n\n        // Destination element\n        var imgctx = img.getContext(\"2d\");\n        var imgd = imgctx.createImageData(w, h);\n        var ibuf = new ArrayBuffer(imgd.data.length);\n        var buf8 = new Uint8ClampedArray(ibuf);\n        var dest = new Uint32Array(ibuf);\n\n        // Scaling factor\n        var width_scaling = sw / w;\n        var height_scaling = sh / h;\n\n        // Perform the scaling\n        var xx = 0;\n        var yy = 0;\n        var jj = 0;\n        for (var i = 0; i < dest.length; i++) {\n            xx = Math.round(Math.floor(i % w) * width_scaling) + sx;\n            yy = Math.round(Math.floor(i / w) * height_scaling) + sy;\n            jj = Math.floor((yy * buf.width) + xx);\n            dest[i] = src[jj];\n        }\n\n        // Set the data\n        imgd.data.set(buf8);\n        imgctx.putImageData(imgd, 0, 0);\n    }\n\n    var renderImage = (typeof Uint8ClampedArray === 'undefined') ? renderImageNoTypedArrays : renderImageTypedArrays;\n\n    /**\n     * @param Mx\n     * @param img\n     * @param shift\n     * @private\n     */\n    mx.shift_image_rows = function(Mx, buf, shift) {\n        var imgd = new Uint32Array(buf);\n        if (shift > 0) { // shift down\n            shift = shift * buf.width;\n            imgd.set(imgd.subarray(0, imgd.length - shift), shift);\n        } else if (shift < 0) { // shift up\n            shift = Math.abs(shift) * buf.width;\n            imgd.set(imgd.subarray(shift));\n        }\n\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param img\n     * @param data\n     * @param row\n     * @param zmin\n     * @param zmax\n     * @private\n     */\n    mx.update_image_row = function(Mx, buf, data, row, zmin, zmax, xcompression) {\n        var imgd = new Uint32Array(buf, row * buf.width * 4, buf.width);\n\n        Mx.pixel.setRange(zmin, zmax);\n\n        var xc = Math.max(1, data.length / buf.width);\n        for (var i = 0; i < buf.width; i++) {\n            var didx = Math.floor(i * xc);\n            var value = data[didx];\n            if (xc > 1) {\n                if (xcompression === 1) { // average\n                    for (var j = 1; j < xc; j++) {\n                        value += data[didx + j];\n                    }\n                    value = (value / xc);\n                } else if (xcompression === 2) { // min\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.min(value, data[didx + j]);\n                    }\n                } else if (xcompression === 3) { // max\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(value, data[didx + j]);\n                    }\n                } else if (xcompression === 4) { // first\n                    value = data[i];\n                } else if (xcompression === 5) { // max abs\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(Math.abs(value), Math.abs(data[didx + j]));\n                    }\n                }\n            }\n            var color = Mx.pixel.getColor(value);\n            if (color) {\n                imgd[i] = color.color;\n\n            }\n        }\n\n        return imgd;\n    };\n\n    /**\n     * @param Mx\n     * @param data\n     * @param w\n     * @param h\n     * @param Mx\n     * @param zmin\n     * @param zmax\n     * @private\n     */\n    mx.create_image = function(Mx, data, subsize, w, h, zmin, zmax, xcompression) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!Mx.pixel) {\n            console.log(\"COLORMAP not initialized, defaulting to foreground\");\n            Mx.pixel = new ColorMap(m.Mc.colormap[1].colors);\n        }\n\n\n        Mx.pixel.setRange(zmin, zmax);\n        w = Math.ceil(w);\n        h = Math.ceil(h);\n        var buf = new ArrayBuffer(w * h * 4);\n        buf.width = w;\n        buf.height = h;\n\n        var nxc = Math.max(1, subsize / w);\n\n        var imgd = new Uint32Array(buf);\n        if (data) {\n            for (var i = 0; i < imgd.length; i++) {\n                var ix;\n                var iy;\n                if ((Mx.origin === 1) || (Mx.origin === 4)) {\n                    ix = Math.floor(i % w);\n                } else {\n                    ix = w - Math.floor(i % w) - 1;\n                }\n                if ((Mx.origin === 3) || (Mx.origin === 4)) {\n                    iy = Math.floor(i / w);\n                } else {\n                    iy = h - Math.floor(i / w) - 1;\n                }\n                if (iy === 1) {\n                    var test = 1;\n                }\n                var didx = (iy * subsize) + Math.floor(ix * nxc);\n                var value = data[didx];\n                if (nxc > 1) {\n                    if (xcompression === 1) { // average\n                        for (var j = 1; j < nxc; j++) {\n                            value += data[didx + j];\n                        }\n                        value = value / nxc;\n                    } else if (xcompression === 2) { // min\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.min(value, data[didx + j]);\n                        }\n                    } else if (xcompression === 3) { // max\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.max(value, data[didx + j]);\n                        }\n                    } else if (xcompression === 4) { // first\n                        value = data[didx];\n                    } else if (xcompression === 5) { // max abs\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.max(Math.abs(value), Math.abs(data[didx + j]));\n                        }\n                    }\n                }\n\n\n                var color = Mx.pixel.getColor(value);\n                if (color) {\n                    imgd[i] = color.color;\n                }\n            }\n        }\n\n        // Return the image in case the caller wishes to cache it\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param data\n     * @param nx\n     * @param ny\n     * @param nex\n     * @param ney\n     * @param xd\n     * @param yd\n     * @param level\n     * @param opacity\n     * @param smoothing\n     * @private\n     */\n    mx.put_image = function(Mx, data, nx, ny, nex, ney, xd, yd, level, opacity, smoothing) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!Mx.pixel) {\n            m.log.warn(\"COLORMAP not initialized, defaulting to foreground\");\n            Mx.pixel = new ColorMap(m.Mc.colormap[1].colors);\n        }\n\n        var w;\n        var h;\n\n        if (nex > 0) {\n            w = nx * nex;\n        } else {\n            w = -nex;\n        }\n        w = Math.floor(w);\n        h = Math.floor(ny * ney);\n\n        var buf = new ArrayBuffer(w * h * 4);\n        buf.width = w;\n        buf.height = h;\n\n        var imgd = new Uint32Array(buf);\n        for (var i = 0; i < imgd.length; i++) {\n            var color = Mx.pixel.getColor(data[i]);\n            if (color) {\n                imgd[i] = color.color;\n            }\n        }\n\n        //render the buffered canvas onto the original canvas element\n        renderImage(Mx, ctx, buf, opacity, smoothing, xd, yd, w, h);\n\n        // Return the image in case the caller wishes to cache it\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param buf\n     * @param xmin\n     * @param ymin\n     * @param xmax\n     * @param ymax\n     * @param opacity\n     * @param smoothing\n     * @private\n     */\n    mx.draw_image = function(Mx, buf, xmin, ymin, xmax, ymax, opacity, smoothing) {\n        var view_xmin = Math.max(xmin, Mx.stk[Mx.level].xmin);\n        var view_xmax = Math.min(xmax, Mx.stk[Mx.level].xmax);\n        var view_ymin = Math.max(ymin, Mx.stk[Mx.level].ymin);\n        var view_ymax = Math.min(ymax, Mx.stk[Mx.level].ymax);\n\n\n        if ((buf.width <= 1) || Math.abs(xmax - xmin) === 0) {\n            return;\n        }\n        if ((buf.height <= 1) || Math.abs(ymax - ymin) === 0) {\n            return;\n        }\n        var rx = buf.width / (xmax - xmin);\n        var ry = buf.height / (ymax - ymin);\n\n        // Ensure we are on buffer pixel boundaries, later we use clipping\n        // to constrain to the proper area\n        view_xmin = Math.floor(view_xmin * rx) / rx;\n        view_xmax = Math.ceil(view_xmax * rx) / rx;\n        view_ymin = Math.floor(view_ymin * ry) / ry;\n        view_ymax = Math.ceil(view_ymax * ry) / ry;\n\n        var ul, lr;\n        var sy, sx, sw, sh;\n        if (Mx.origin === 1) {\n            // regular x, regular y\n            sy = Math.max(0, Math.floor((ymax - view_ymax) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.floor((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmin, view_ymax);\n            lr = mx.real_to_pixel(Mx, view_xmax, view_ymin);\n        } else if (Mx.origin === 2) {\n            // inverted x, regular y\n            sy = Math.max(0, Math.floor((ymax - view_ymax) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.ceil((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmax, view_ymax);\n            lr = mx.real_to_pixel(Mx, view_xmin, view_ymin);\n        } else if (Mx.origin === 3) {\n            // inverted x, inverted y\n            sy = Math.max(0, Math.ceil((view_ymin - ymin) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.ceil((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmax, view_ymin);\n            lr = mx.real_to_pixel(Mx, view_xmin, view_ymax);\n        } else if (Mx.origin === 4) {\n            // regular x, inverted y\n            sy = Math.max(0, Math.ceil((view_ymin - ymin) * ry));\n            sh = Math.min(buf.height - sy, Math.floor((view_ymax - view_ymin) * ry));\n            sx = Math.max(0, Math.floor((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            ul = mx.real_to_pixel(Mx, view_xmin, view_ymin);\n            lr = mx.real_to_pixel(Mx, view_xmax, view_ymax);\n        }\n\n        var iw = lr.x - ul.x;\n        var ih = lr.y - ul.y;\n\n        // Always include at least one pixel from the source\n        sw = Math.max(1, sw);\n        sh = Math.max(1, sh);\n\n        // See if smart smoothing is requested\n        if (typeof smoothing === \"number\") {\n            // calculate the ratio of displayed pixels over\n            // displayed data-points\n            var ratio = (Mx.r - Mx.l) / sw;\n            // if the ratio is greater than the smoothing value\n            // turn on smoothing\n            smoothing = (ratio <= smoothing);\n        }\n\n        //render the buffered canvas onto the original canvas element\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(Mx.l, Mx.t, Mx.r - Mx.l, Mx.b - Mx.t);\n        ctx.clip();\n        renderImage(Mx, ctx, buf, opacity, smoothing, ul.x, ul.y, iw, ih, sx, sy, sw, sh);\n        ctx.restore();\n    };\n\n    // Node: Export function\n    module.exports = mx;\n\n}());\n\n///////////////////////////////////////////////////////////////////////////////\n","/**\n * @license\n * File: bluefile.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n/**\n * Bluefiles are a binary format directly supported by SigPlot.  A Bluefile consists of a 512-byte header\n * followed by binary data.\n * For more information on BLUEFILES, please visit http://nextmidas.techma.com/nm/htdocs/usersguide/BlueFiles.html\n *\n * Offset   Name        Size    Type        Description\n * -----------------------------------------------------------------------------\n * 0        version     4   char[4]     Header version\n * 4        head_rep    4   char[4]     Header representation\n * 8        data_rep    4   char[4]     Data representation\n *12        detached    4   int_4       Detached header\n *16        protected   4   int_4       Protected from overwrite\n *20        pipe        4   int_4       Pipe mode (N/A)\n *24        ext_start   4   int_4       Extended header start, in 512-byte blocks\n *28        ext_size    4   int_4       Extended header size in bytes\n *32        data_start  8   real_8      Data start in bytes\n *40        data_size   8   real_8      Data size in bytes\n *48        type        4   int_4       File type code\n *52        format      2   char[2]     Data format code\n *54        flagmask    2   int_2       16-bit flagmask (1=flagbit)\n *56        timecode    8   real_8      Time code field\n *64        inlet       2   int_2       Inlet owner\n *66        outlets     2   int_2       Number of outlets\n *68        outmask     4   int_4       Outlet async mask\n *72        pipeloc     4   int_4       Pipe location\n *76        pipesize    4   int_4       Pipe size in bytes\n *80        in_byte     8   real_8      Next input byte\n *88        out_byte    8   real_8      Next out byte (cumulative)\n *96        outbytes    64  real_8[8]   Next out byte (each outlet)\n *160       keylength   4   int_4       Length of keyword string\n *164       keywords    92  char[92]    User defined keyword string\n *256       Adjunct     256     char[256]   Type-specific adjunct union (See below for 1000 and 2000 type bluefiles)\n *\n *\n * Type-1000 Adjunct\n * 0        xstart      8   real_8      Abscissa value for first sample\n *8         xdelta      8   real_8      Abscissa interval between samples\n *16        xunits      4   int_4       Units for abscissa values\n *\n * Type-2000 Adjunct\n *0         xstart      8   real_8      Frame (column) starting value\n *8         xdelta      8   real_8      Increment between samples in frame\n *16        xunits      4   int_4       Frame (column) units\n *20        subsize     4   int_4       Number of data points per frame (row)\n *24        ystart      8   real_8      Abscissa (row) start\n *32        ydelta      8   real_8      Increment between frames\n *36        yunits      4   int_4       Abscissa (row) unit code\n *\n * @namespace bluefile\n */\n\n/* global module */\n/* global require */\n\n(function() {\n    'use strict';\n\n    var common = require(\"./common\");\n\n    function bluefile() {}\n\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);\n    // https://gist.github.com/TooTallNate/4750953\n    /**\n     * @memberof bluefile\n     * @private\n     */\n    function endianness() {\n        var b = new ArrayBuffer(4);\n        var a = new Uint32Array(b);\n        var c = new Uint8Array(b);\n        a[0] = 0xdeadbeef;\n        if (c[0] === 0xef) {\n            return 'LE';\n        }\n        if (c[0] === 0xde) {\n            return 'BE';\n        }\n        throw new Error('unknown endianness');\n    }\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var ARRAY_BUFFER_ENDIANNESS = endianness();\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _SPA = {\n        'S': 1,\n        'C': 2,\n        'V': 3,\n        'Q': 4,\n        'M': 9,\n        'X': 10,\n        'T': 16,\n        'U': 1,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9\n    };\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _BPS = {\n        'P': 0.125,\n        'A': 1,\n        'O': 1,\n        'B': 1,\n        'I': 2,\n        'L': 4,\n        'X': 8,\n        'F': 4,\n        'D': 8\n    };\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _XM_TO_TYPEDARRAY = {\n        'P': null,\n        'A': null,\n        'O': Uint8Array,\n        'B': Int8Array,\n        'I': Int16Array,\n        'L': Int32Array,\n        'X': null,\n        'F': Float32Array,\n        'D': Float64Array\n    };\n    /**\n     * @memberof bluefile\n     * @param   {array}     buf         Data bffer\n     * @param number\n     * @param bool\n     * @private\n     */\n    function getInt64(dataView, index, littleEndian) {\n        var highIndex, lowIndex;\n        var MAX_INT = Math.pow(2, 53);\n        if (littleEndian) {\n            highIndex = 4;\n            lowIndex = 0;\n        } else {\n            highIndex = 0;\n            lowIndex = 4;\n        }\n        var high = dataView.getInt32(index + highIndex, littleEndian);\n        var low = dataView.getInt32(index + lowIndex, littleEndian);\n        var rv = low + pow2(32) * high;\n        if (rv >= MAX_INT) {\n            window.console.info(\"Int is bigger than JS can represent.\");\n            return Infinity;\n        }\n        return rv;\n    }\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _XM_TO_DATAVIEW = {\n        'P': null,\n        'A': null,\n        'O': \"getUint8\",\n        'B': \"getInt8\",\n        'I': \"getInt16\",\n        'L': \"getInt32\",\n        'X': getInt64,\n        'F': \"getFloat32\",\n        'D': \"getFloat64\"\n    };\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _applySupportsTypedArray = true;\n    try {\n        var uintbuf = new Uint8Array(new ArrayBuffer(4));\n        uintbuf[0] = 66;\n        uintbuf[1] = 76;\n        uintbuf[2] = 85;\n        uintbuf[3] = 69;\n        var test = String.fromCharCode.apply(null, uintbuf);\n        if (test !== \"BLUE\") {\n            _applySupportsTypedArray = false;\n        }\n    } catch (error) {\n        _applySupportsTypedArray = false;\n    }\n    /**\n     * Convert an ArrayBuffer to a string\n     *\n     * @private\n     * @memberof bluefile\n     * @param   {array}     buf         Data bffer\n     */\n    function ab2str(buf) {\n        var uintbuf = new Uint8Array(buf);\n        // Firefox 3.6 nor iOS devices can use ArrayBuffers with .apply\n        if (_applySupportsTypedArray) {\n            return String.fromCharCode.apply(null, uintbuf);\n        } else {\n            var str = \"\";\n            for (var i = 0; i < uintbuf.length; i++) {\n                str += String.fromCharCode(uintbuf[i]);\n            }\n            return str;\n        }\n    }\n    /**\n     * Convert a string to an ArrayBuffer\n     *\n     * @private\n     * @memberof bluefile\n     * @param   {string}\n     */\n    function str2ab(str) {\n        var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n        var bufView = new Uint16Array(buf);\n        for (var i = 0, strLen = str.length; i < strLen; i++) {\n            bufView[i] = str.charCodeAt(i);\n        }\n        return buf;\n    }\n    /**\n     * Calculate 2^n\n     *\n     * If 31 > n >= 0 then a left-shift is used, otherwise Math.pow is used.\n     *\n     * @private\n     * @memberof bluefile\n     * @param   {number}\n     */\n    function pow2(n) {\n        return (n >= 0 && n < 31) ? (1 << n) : (pow2[n] || (pow2[n] = Math.pow(2, n)));\n    }\n    /**\n     * Constructor for a BlueHeader that extracts paramters from the 512-byte\n     * Bluefile binary header.  If the data segment of the bluefile is also\n     * included in the provided buffer it will be accessible as well\n     * via the dview property.\n     *\n     * @memberof bluefile\n     * @param {array} buf\n     *   - An existing ArrayBuffer of Bluefile data.\n     * @param {Object} options\n     *     - options that affect how the bluefile is read\n     * @param {string} [\"dict\"] options.ext_header_type\n     *     - if the BlueFile contains extended header keywords,\n     *       extract them either as a dictionary (\"dict\", \"json\", \n     *       {}, \"XMTable\", \"JSON\", \"DICT\") or as a list of \n     *       key value pairs.  The extended header keywords\n     *       will be accessible on the hdr.ext_header property\n     *       after the file has been read.\n     *\n     * See http://nextmidas.techma.com/nm/nxm/sys/docs/MidasBlueFileFormat.pdf for\n     * more details on header properties.\n     *\n     * @property {ArrayBuffer} buf\n     * @property {String} version - the header version extracted from the file, always 'BLUE'\n     * @property {String} headrep - endianness of header 'IEEE' or 'EEEI'\n     * @property {String} datarep - endianness of data 'IEEE' or 'EEEI'\n     * @property {Number} ext_start - byte offset for extended header binary data\n     * @property {Number} ext_size - byte size for extended header data\n     * @property {Number} type - the BLUEFILE type (1000 = 1-D data, 2000 = 2-D data)\n     * @property {Number} class - the BLUEFILE class (i.e. type/1000)\n     * @property {String} format - the BLUEFILE format, the format is a two character diagraph, such as SF.\n     * @property {Number} timecode - absolute time reference for the file (in seconds since Jan 1st 1950)\n     * @property {Number} xstart - relative offset for the first sample on the x-axis\n     * @property {Number} xdelta - delta between points on the x-axis \n     * @property {Number} xunits - the unitcode for the x-axis (see m.UNITS)\n     * @property {Number} ystart - relative offset for the first sample on the y-axis\n     * @property {Number} ydelta - delta between points on the y-axis \n     * @property {Number} yunits - the unitcode for the y-axis (see m.UNITS)\n     * @property {Number} subsize - the number of columns for a 2-D data file\n     * @property {Number} data_start - byte offset for data\n     * @property {Number} data_size - byte size for data\n     * @property {Object} ext_header - extracted extended header keywords\n     * @property {Number} spa - scalars per atom\n     * @property {Number} bps - bytes per scalar\n     * @property {Number} bpa - bytes per atom\n     * @property {Number} ape - atoms per element\n     * @property {Number} bpe - bytes per element\n     * @property {Number} size - number of elements in dview\n     * @property {DataView} dview - a Data\n     */\n    bluefile.BlueHeader = function(buf, options) {\n        this.options = {\n            ext_header_type: \"dict\"\n        };\n        common.update(this.options, options);\n        this.buf = buf;\n        if (this.buf != null) {\n            var dvhdr = new DataView(this.buf);\n            this.version = ab2str(this.buf.slice(0, 4));\n            this.headrep = ab2str(this.buf.slice(4, 8));\n            this.datarep = ab2str(this.buf.slice(8, 12));\n            var littleEndianHdr = (this.headrep === \"EEEI\");\n            var littleEndianData = (this.datarep === \"EEEI\");\n            this.ext_start = dvhdr.getInt32(24, littleEndianHdr);\n            this.ext_size = dvhdr.getInt32(28, littleEndianHdr);\n            this.type = dvhdr.getUint32(48, littleEndianHdr);\n            this[\"class\"] = this.type / 1000;\n            this.format = ab2str(this.buf.slice(52, 54));\n            this.timecode = dvhdr.getFloat64(56, littleEndianHdr);\n            // the adjunct starts at offset 0x100\n            if (this[\"class\"] === 1) {\n                this.xstart = dvhdr.getFloat64(0x100, littleEndianHdr);\n                this.xdelta = dvhdr.getFloat64(0x100 + 8, littleEndianHdr);\n                this.xunits = dvhdr.getInt32(0x100 + 16, littleEndianHdr);\n                this.yunits = dvhdr.getInt32(0x100 + 40, littleEndianHdr);\n                this.subsize = 1;\n            } else if (this[\"class\"] === 2) {\n                this.xstart = dvhdr.getFloat64(0x100, littleEndianHdr);\n                this.xdelta = dvhdr.getFloat64(0x100 + 8, littleEndianHdr);\n                this.xunits = dvhdr.getInt32(0x100 + 16, littleEndianHdr);\n                this.subsize = dvhdr.getInt32(0x100 + 20, littleEndianHdr);\n                this.ystart = dvhdr.getFloat64(0x100 + 24, littleEndianHdr);\n                this.ydelta = dvhdr.getFloat64(0x100 + 32, littleEndianHdr);\n                this.yunits = dvhdr.getInt32(0x100 + 40, littleEndianHdr);\n            }\n            this.data_start = dvhdr.getFloat64(32, littleEndianHdr);\n            this.data_size = dvhdr.getFloat64(40, littleEndianHdr);\n            var ds = this.data_start;\n            var de = this.data_start + this.data_size;\n            if (this.ext_size) {\n                this.ext_header = this.unpack_keywords(this.buf, this.ext_size, this.ext_start * 512, littleEndianHdr);\n            }\n            this.setData(this.buf, ds, de, littleEndianData);\n        }\n    };\n\n    bluefile.BlueHeader.prototype = {\n        /**\n         * Internal method that sets the dview up based off the\n         * provided buffer and fields extracted from the header.\n         *\n         * @memberof bluefile\n         * @private\n         * @param   buf\n         * @param   offset\n         * @param   data_end\n         * @param   littleEndian\n         */\n        setData: function(buf, offset, data_end, littleEndian) {\n            if (this[\"class\"] === 1) {\n                this.spa = _SPA[this.format[0]];\n                this.bps = _BPS[this.format[1]];\n                this.bpa = this.spa * this.bps;\n                this.ape = 1;\n                this.bpe = this.ape * this.bpa;\n            } else if (this[\"class\"] === 2) {\n                this.spa = _SPA[this.format[0]];\n                this.bps = _BPS[this.format[1]];\n                this.bpa = this.spa * this.bps;\n                this.ape = this.subsize;\n                this.bpe = this.ape * this.bpa;\n            }\n            if (littleEndian === undefined) {\n                littleEndian = (ARRAY_BUFFER_ENDIANNESS === \"LE\");\n            }\n            // TODO handle mismatch between host and data endianness using arrayBufferEndianness\n            if (ARRAY_BUFFER_ENDIANNESS === \"LE\" && !littleEndian) {\n                throw (\"Not supported \" + ARRAY_BUFFER_ENDIANNESS + \" \" + littleEndian);\n            } else if (ARRAY_BUFFER_ENDIANNESS === \"BE\" && this.littleEndianData) {\n                throw (\"Not supported \" + ARRAY_BUFFER_ENDIANNESS + \" \" + littleEndian);\n            }\n            if (buf) {\n                if ((offset) && (data_end)) {\n                    this.dview = this.createArray(buf, offset, (data_end - offset) / this.bps);\n                } else {\n                    this.dview = this.createArray(buf);\n                }\n                this.size = this.dview.length / (this.spa * this.ape);\n            } else {\n                this.dview = this.createArray(null, null, this.size);\n            }\n        },\n        /**\n         * Internal method that unpacks the extended header keywords into\n         * either a object (i.e. dictionary) or a list of key-value pairs\n         * depending on this.options.ext_header_type.\n         *\n         * @author Sean Sullivan https://github.com/desean1625\n         * @private\n         * @memberof bluefile\n         * @param   buf\n         * @param   lbuf\n         * @param   offset\n         * @param   littleEndian\n         */\n        unpack_keywords: function(buf, lbuf, offset, littleEndian) {\n            var lkey, lextra, ltag, format, tag, data, ldata, itag, idata;\n            var keywords = [];\n            var dic_index = {};\n            var dict_keywords = {};\n            var ii = 0;\n            window.buf = buf;\n            buf = buf.slice(offset, buf.byteLength);\n            var dvhdr = new DataView(buf);\n            buf = ab2str(buf);\n            while (ii < lbuf) {\n                idata = ii + 8;\n                lkey = dvhdr.getUint32(ii, littleEndian);\n                lextra = dvhdr.getInt16(ii + 4, littleEndian);\n                ltag = dvhdr.getInt8(ii + 6, littleEndian);\n                format = buf.slice(ii + 7, ii + 8);\n                ldata = lkey - lextra;\n                itag = idata + ldata;\n                tag = buf.slice(itag, itag + ltag);\n                if (format === \"A\") {\n                    data = buf.slice(idata, idata + ldata);\n                } else {\n                    if (_XM_TO_DATAVIEW[format]) {\n                        if (typeof _XM_TO_DATAVIEW[format] === \"string\") {\n                            data = dvhdr[_XM_TO_DATAVIEW[format]](idata, littleEndian);\n                        } else {\n                            data = _XM_TO_DATAVIEW[format](dvhdr, idata, littleEndian);\n                        }\n                    } else {\n                        //Should never get here now.\n                        window.console.info(\"Unsupported keyword format \" + format + \" for tag \" + tag);\n                    }\n                }\n                if (typeof dic_index[tag] === \"undefined\") {\n                    dic_index[tag] = 1;\n                } else {\n                    dic_index[tag]++;\n                    tag = \"\" + tag + dic_index[tag]; //Force to string just incase the tag is interpreted as a number\n                }\n                dict_keywords[tag] = data;\n                keywords.push({\n                    tag: tag,\n                    value: data\n                });\n                ii += lkey;\n            }\n            var dictTypes = ['dict', 'json', {}, 'XMTable', 'JSON', 'DICT'];\n            for (var k in dictTypes) {\n                if (dictTypes[k] === this.options.ext_header_type) {\n                    return dict_keywords;\n                }\n            }\n            return keywords;\n        },\n        /**\n         * Internal method to create typed array for the data based on the\n         * format extracted from the header.\n         *\n         * @private\n         * @memberof bluefile\n         * @param   buf\n         * @param   offset\n         * @param   length\n         * @returns -\n         */\n        createArray: function(buf, offset, length) {\n            var TypedArray = _XM_TO_TYPEDARRAY[this.format[1]];\n            if (TypedArray === undefined) {\n                throw (\"unknown format \" + this.format[1]);\n            }\n            // backwards compatibility with some implementations of typed array\n            // requires this\n            if (offset === undefined) {\n                offset = 0;\n            }\n            if (length === undefined) {\n                length = buf.length || (buf.byteLength / _BPS[this.format[1]]);\n            }\n            if (buf) {\n                // Flatten 2-D array into 1-D\n                if (Array.isArray(buf) && Array.isArray(buf[0])) {\n                    buf = [].concat.apply([], buf);\n                }\n                return new TypedArray(buf, offset, length);\n            } else {\n                return new TypedArray(length);\n            }\n        }\n    };\n\n    /**\n     * Internal method to create a new anchor element and uses location\n     * properties (inherent) to get the desired URL data. Some String\n     * operations are used (to normalize results across browsers).\n     *\n     * @private\n     * @memberof bluefile\n     * @param   url\n     * @returns -\n     *\n     * Based off http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n     */\n    function parseURL(url) {\n        var a = document.createElement('a');\n        a.href = url;\n        return {\n            source: url,\n            protocol: a.protocol.replace(':', ''),\n            host: a.hostname,\n            port: a.port,\n            query: a.search,\n            params: (function() {\n                var ret = {},\n                    seg = a.search.replace(/^\\?/, '').split('&'),\n                    len = seg.length,\n                    i = 0,\n                    s;\n                for (; i < len; i++) {\n                    if (!seg[i]) {\n                        continue;\n                    }\n                    s = seg[i].split('=');\n                    ret[s[0]] = s[1];\n                }\n                return ret;\n            })(),\n            file: (a.pathname.match(/\\/([^\\/?#]+)$/i) || [null, ''])[1],\n            hash: a.hash.replace('#', ''),\n            path: a.pathname.replace(/^([^\\/])/, '/$1'),\n            relative: (a.href.match(/tps?:\\/\\/[^\\/]+(.+)/) || [null, ''])[1],\n            segments: a.pathname.replace(/^\\//, '').split('/')\n        };\n    }\n    /**\n     * Internal method to convert text from an HTTP response\n     * into an ArrayBuffer.\n     *\n     * @private\n     * @memberof bluefile\n     * @param   text\n     * @param   oncomplete\n     * @param   blocksize\n     */\n    function text2buffer(text, oncomplete, blocksize) {\n        blocksize = blocksize || 1024;\n        var i = 0;\n        var arrayBuffer = new ArrayBuffer(text.length);\n        var bufView = new Uint8Array(arrayBuffer);\n        var worker = function() {\n            var end = i + blocksize;\n            for (; i < end; i++) {\n                bufView[i] = (text.charCodeAt(i) & 0xff);\n            }\n            if (i >= text.length) {\n                oncomplete(arrayBuffer);\n            } else {\n                setTimeout(worker, 0);\n            }\n        };\n        setTimeout(worker, 0);\n    }\n    /**\n     * Bluefile Reader constructor.\n     *\n     * @memberof bluefile\n     * @param {Object} options\n     *     - options that affect how the bluefile is read\n     * @param {string} [\"dict\"] options.ext_header_type\n     *     - if the BlueFile contains extended header keywords,\n     *       extract them either as a dictionary (\"dict\", \"json\", \n     *       {}, \"XMTable\", \"JSON\", \"DICT\") or as a list of \n     *       key value pairs.  The extended header keywords\n     *       will be accessible on the hdr.ext_header property\n     *       after the file has been read.\n     */\n    bluefile.BlueFileReader = function(options) {\n        this.options = options;\n    };\n\n    bluefile.BlueFileReader.prototype = {\n        /**\n         * @callback readCallback\n         * @param {BlueHeader}\n         *     - the extracted header, or null on failure\n         */\n\n        /**\n         * Read only the header from a local Bluefile.\n         *\n         * @memberof bluefile\n         * @param {File} theFile\n         *     - a File object for the bluefile\n         * @param {readCallback} onload\n         *     - callback when the header has been read\n         */\n        readheader: function readheader(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            var blob = theFile.webkitSlice(0, 512); // Chrome specific\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var rawhdr = reader.result;\n                    var hdr = new bluefile.BlueHeader(rawhdr, that.options);\n                    hdr.file = theFile;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(blob);\n        },\n        /**\n         * Read a local Bluefile on disk.\n         *\n         * @memberof bluefile\n         * @param {File} theFile\n         *     - a File object for the bluefile\n         * @param {readCallback} onload\n         *     - callback when the header has been read\n         */\n        read: function read(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var raw = reader.result;\n                    var hdr = new bluefile.BlueHeader(raw, that.options);\n                    hdr.file = theFile;\n                    hdr.file_name = theFile.name;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(theFile);\n        },\n        /**\n         * Read a Bluefile from a URL\n         *\n         * @memberof bluefile\n         * @param {string} href\n         *     - the URL for the bluefile\n         * @param {readCallback} onload\n         *     - callback when the header has been read\n         */\n        read_http: function read_http(href, onload) {\n            var that = this;\n            var oReq = new XMLHttpRequest();\n            oReq.open(\"GET\", href, true);\n            oReq.responseType = \"arraybuffer\";\n            oReq.overrideMimeType('text\\/plain; charset=x-user-defined');\n            oReq.onload = function(oEvent) {\n                if (oReq.readyState === 4) {\n                    if ((oReq.status === 200) || (oReq.status === 0)) { // status = 0 is necessary for file URL\n                        var arrayBuffer = null; // Note: not oReq.responseText\n                        if (oReq.response) {\n                            arrayBuffer = oReq.response;\n                            var hdr = new bluefile.BlueHeader(arrayBuffer, that.options);\n                            parseURL(href);\n                            var fileUrl = parseURL(href);\n                            hdr.file_name = fileUrl.file;\n                            onload(hdr);\n                        } else if (oReq.responseText) {\n                            text2buffer(oReq.responseText, function(arrayBuffer) {\n                                var hdr = new bluefile.BlueHeader(arrayBuffer, that.options);\n                                parseURL(href);\n                                var fileUrl = parseURL(href);\n                                hdr.file_name = fileUrl.file;\n                                onload(hdr);\n                            });\n                        }\n                        return;\n                    }\n                }\n                onload(null);\n            };\n            oReq.onerror = function(oEvent) {\n                onload(null);\n            };\n            oReq.send(null);\n        }\n    };\n\n    // Node: Export function\n    module.exports = bluefile;\n\n}());\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.5.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.async_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112;n&&Symbol.for(\"react.placeholder\");\nvar z=\"function\"===typeof Symbol&&Symbol.iterator;function A(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[d,c,e,g,h,f],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);A(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];e.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:I.current}}\nfunction M(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=z&&a[z]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function V(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=M(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function W(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,aa,b);R(b)}function ba(a,b){var d=I.currentDispatcher;null===d?B(\"277\"):void 0;return d.readContext(a,b)}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];W(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,V,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,Provider:null,Consumer:null,unstable_read:null};a.Provider={$$typeof:v,_context:a};a.Consumer=a;a.unstable_read=ba.bind(null,a);return a},forwardRef:function(a){return{$$typeof:y,render:a}},Fragment:r,StrictMode:t,unstable_AsyncMode:x,unstable_Profiler:u,createElement:L,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);\nvar k=void 0;a.type&&a.type.defaultProps&&(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];e.children=k}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.5.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,\nassign:m}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","//fgnass.github.com/spin.js#v1.2.5\n/**\n * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]\n * Licensed under the MIT license\n */\n\nvar prefixes = ['webkit', 'Moz', 'ms', 'O']; /* Vendor prefixes */\nvar animations = {}; /* Animation rules keyed by their name */\nvar useCssAnimations;\n\n/**\n * Utility function to create elements. If no tag name is given,\n * a DIV is created. Optionally properties can be passed.\n */\nfunction createEl(tag, prop) {\n  var el = document.createElement(tag || 'div');\n  var n;\n\n  for(n in prop) {\n    el[n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Appends children and returns the parent.\n */\nfunction ins(parent /* child1, child2, ...*/) {\n  for (var i=1, n=arguments.length; i<n; i++) {\n    parent.appendChild(arguments[i]);\n  }\n  return parent;\n}\n\n/**\n * Insert a new stylesheet to hold the @keyframe or VML rules.\n */\nvar sheet = function() {\n  var el = createEl('style');\n  ins(document.getElementsByTagName('head')[0], el);\n  return el.sheet || el.styleSheet;\n}();\n\n/**\n * Creates an opacity keyframe animation rule and returns its name.\n * Since most mobile Webkits have timing issues with animation-delay,\n * we create separate rules for each line/segment.\n */\nfunction addAnimation(alpha, trail, i, lines) {\n  var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-');\n  var start = 0.01 + i/lines*100;\n  var z = Math.max(1-(1-alpha)/trail*(100-start) , alpha);\n  var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();\n  var pre = prefix && '-'+prefix+'-' || '';\n\n  if (!animations[name]) {\n    sheet.insertRule(\n      '@' + pre + 'keyframes ' + name + '{' +\n      '0%{opacity:'+z+'}' +\n      start + '%{opacity:'+ alpha + '}' +\n      (start+0.01) + '%{opacity:1}' +\n      (start+trail)%100 + '%{opacity:'+ alpha + '}' +\n      '100%{opacity:'+ z + '}' +\n      '}', 0);\n    animations[name] = 1;\n  }\n  return name;\n}\n\n/**\n * Tries various vendor prefixes and returns the first supported property.\n **/\nfunction vendor(el, prop) {\n  var s = el.style;\n  var pp;\n  var i;\n\n  if(s[prop] !== undefined) return prop;\n  prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for(i=0; i<prefixes.length; i++) {\n    pp = prefixes[i]+prop;\n    if(s[pp] !== undefined) return pp;\n  }\n}\n\n/**\n * Sets multiple style properties at once.\n */\nfunction css(el, prop) {\n  for (var n in prop) {\n    el.style[vendor(el, n)||n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Fills in default values.\n */\nfunction merge(obj) {\n  for (var i=1; i < arguments.length; i++) {\n    var def = arguments[i];\n    for (var n in def) {\n      if (obj[n] === undefined) obj[n] = def[n];\n    }\n  }\n  return obj;\n}\n\n/**\n * Returns the absolute page-offset of the given element.\n */\nfunction pos(el) {\n  var o = {x:el.offsetLeft, y:el.offsetTop};\n  while((el = el.offsetParent)) {\n    o.x+=el.offsetLeft;\n    o.y+=el.offsetTop;\n  }\n  return o;\n}\n\nvar defaults = {\n  lines: 12,            // The number of lines to draw\n  length: 7,            // The length of each line\n  width: 5,             // The line thickness\n  radius: 10,           // The radius of the inner circle\n  rotate: 0,            // rotation offset\n  color: '#000',        // #rgb or #rrggbb\n  speed: 1,             // Rounds per second\n  trail: 100,           // Afterglow percentage\n  opacity: 1/4,         // Opacity of the lines\n  fps: 20,              // Frames per second when using setTimeout()\n  zIndex: 2e9,          // Use a high z-index by default\n  className: 'spinner', // CSS class to assign to the element\n  top: 'auto',          // center vertically\n  left: 'auto'          // center horizontally\n};\n\n/** The constructor */\nvar Spinner = function Spinner(o) {\n  if (!this.spin) return new Spinner(o);\n  this.opts = merge(o || {}, Spinner.defaults, defaults);\n};\n\nSpinner.defaults = {};\nmerge(Spinner.prototype, {\n  spin: function(target) {\n    this.stop();\n    var self = this;\n    var o = self.opts;\n    var el = self.el = css(createEl(0, {className: o.className}), {position: 'relative', zIndex: o.zIndex});\n    var mid = o.radius+o.length+o.width;\n    var ep; // element position\n    var tp; // target position\n\n    if (target) {\n      target.insertBefore(el, target.firstChild||null);\n      tp = pos(target);\n      ep = pos(el);\n      css(el, {\n        left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : o.left+mid) + 'px',\n        top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : o.top+mid)  + 'px'\n      });\n    }\n\n    el.setAttribute('aria-role', 'progressbar');\n    self.lines(el, self.opts);\n\n    if (!useCssAnimations) {\n      // No CSS animation support, use setTimeout() instead\n      var i = 0;\n      var fps = o.fps;\n      var f = fps/o.speed;\n      var ostep = (1-o.opacity)/(f*o.trail / 100);\n      var astep = f/o.lines;\n\n      !function anim() {\n        i++;\n        for (var s=o.lines; s; s--) {\n          var alpha = Math.max(1-(i+s*astep)%f * ostep, o.opacity);\n          self.opacity(el, o.lines-s, alpha, o);\n        }\n        self.timeout = self.el && setTimeout(anim, ~~(1000/fps));\n      }();\n    }\n    return self;\n  },\n  stop: function() {\n    var el = this.el;\n    if (el) {\n      clearTimeout(this.timeout);\n      if (el.parentNode) el.parentNode.removeChild(el);\n      this.el = undefined;\n    }\n    return this;\n  },\n  lines: function(el, o) {\n    var i = 0;\n    var seg;\n\n    function fill(color, shadow) {\n      return css(createEl(), {\n        position: 'absolute',\n        width: (o.length+o.width) + 'px',\n        height: o.width + 'px',\n        background: color,\n        boxShadow: shadow,\n        transformOrigin: 'left',\n        transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',\n        borderRadius: (o.width>>1) + 'px'\n      });\n    }\n    for (; i < o.lines; i++) {\n      seg = css(createEl(), {\n        position: 'absolute',\n        top: 1+~(o.width/2) + 'px',\n        transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n        opacity: o.opacity,\n        animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1/o.speed + 's linear infinite'\n      });\n      if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}));\n      ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));\n    }\n    return el;\n  },\n  opacity: function(el, i, val) {\n    if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////\n// VML rendering for IE\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * Check and init VML support\n */\n!function() {\n\n  function vml(tag, attr) {\n    return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n  }\n\n  var s = css(createEl('group'), {behavior: 'url(#default#VML)'});\n\n  if (!vendor(s, 'transform') && s.adj) {\n\n    // VML support detected. Insert CSS rule ...\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function(el, o) {\n      var r = o.length+o.width;\n      var s = 2*r;\n\n      function grp() {\n        return css(vml('group', {coordsize: s +' '+s, coordorigin: -r +' '+-r}), {width: s, height: s});\n      }\n\n      var margin = -(o.width+o.length)*2+'px';\n      var g = css(grp(), {position: 'absolute', top: margin, left: margin});\n\n      var i;\n\n      function seg(i, dx, filter) {\n        ins(g,\n          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),\n            ins(css(vml('roundrect', {arcsize: 1}), {\n                width: r,\n                height: o.width,\n                left: o.radius,\n                top: -o.width>>1,\n                filter: filter\n              }),\n              vml('fill', {color: o.color, opacity: o.opacity}),\n              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        );\n      }\n\n      if (o.shadow) {\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n        }\n      }\n      for (i = 1; i <= o.lines; i++) seg(i);\n      return ins(el, g);\n    };\n    Spinner.prototype.opacity = function(el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n      if (c && i+o < c.childNodes.length) {\n        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n  else {\n    useCssAnimations = vendor(s, 'animation');\n  }\n}();\n\nmodule.exports = Spinner;\n","/**\n * @license\n * File: matfile.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * MAT-files are a binary format directly supported by SigPlot.  A MAT-file consists of a 132-byte header\n * followed by binary data.\n * For more information on MAT-files, please visit https://www.mathworks.com/help/pdf_doc/matlab/matfile_format.pdf\n *\n * Offset   Name        Size    Type        Description\n * -----------------------------------------------------------------------------\n * 0        header     115   char[115]     Header\n * 116      subsys       7   char[7]\n * 124      version      2   int_2\n * 126      endianness   2   char[2]\n * 128      data_offset  4   int_4\n * 132      byte_offset  4   int_4\n *\n * @namespace matfile\n */\n(function(global) {\n    'use strict';\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);\n\n    // Descriptive text field\n    var headerTextBegin = 1;\n    var headerTextEnd = 116;\n\n    // Subsystem data offset field\n    var subsysOffsetBegin = 117;\n    var subsysOffsetEnd = 124;\n\n    // Version field\n    var versionOffsetBegin = 125;\n    var versionOffsetEnd = 126;\n\n    // Two character endian indicator. If the value reads \"MI\" then native computer\n    // has written the file in Big Endian, so no byte translation must occur.\n    // If value reads \"IM\" then native computer has written the file in Little Endian\n    // so byte-wise translation must be used on all data elements larger than 1 byte.\n    var endianCharsBegin = 127;\n    var endianCharsEnd = 128;\n\n    // Outermost data type and number of bytes. For data plottable in SigPlot this will\n    // most likely be a 1D array. The associated MATLAB type will most likely be \"miMATRIX\".\n\n    // WARNING: type \"miCOMPRESSED\" is the default for MATLAB files above version 6. These\n    // compressed files are currently UNREADABLE by this program as the file must be\n    // decompressed before reading.\n    var firstDataTypeOffsetBegin = 129;\n    var firstDataTypeOffsetEnd = 132;\n\n    var numBytesOffsetBegin = 133;\n    var numBytesOffsetEnd = 136;\n\n    // https://gist.github.com/TooTallNate/4750953\n    /**\n     * Returns the endianness of the browser\n     *\n     * @memberof matfile\n     * @private\n     */\n    function endianness() {\n        var b = new ArrayBuffer(4);\n        var a = new Uint32Array(b);\n        var c = new Uint8Array(b);\n        a[0] = 0xdeadbeef;\n        if (c[0] === 0xef) {\n            return 'LE';\n        }\n        if (c[0] === 0xde) {\n            return 'BE';\n        }\n        throw new Error('unknown endianness');\n    }\n\n    function getDataField(fileData, firstByte, lastByte) {\n        return fileData.slice(firstByte - 1, lastByte);\n    }\n\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var ARRAY_BUFFER_ENDIANNESS = endianness();\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var versionNames = {\n        256: \"MAT-file\"\n    };\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var dataTypeNames = {\n        1: {\n            name: \"miINT8\",\n            size: 1\n        },\n        2: {\n            name: \"miUINT8\",\n            size: 1\n        },\n        3: {\n            name: \"miINT16\",\n            size: 2\n        },\n        4: {\n            name: \"miUINT16\",\n            size: 2\n        },\n        5: {\n            name: \"miINT32\",\n            size: 4\n        },\n        6: {\n            name: \"miUINT32\",\n            size: 4\n        },\n        7: {\n            name: \"miSINGLE\",\n            size: 4\n        },\n        // 8 is reserved\n        9: {\n            name: \"miDOUBLE\",\n            size: 8\n        },\n        // 10 and 11 are reserved\n        12: {\n            name: \"miINT64\",\n            size: 8\n        },\n        13: {\n            name: \"miUINT64\",\n            size: 8\n        },\n        14: {\n            name: \"miMATRIX\",\n            size: null\n        },\n        15: {\n            name: \"miCOMPRESSED\",\n            size: null\n        },\n        16: {\n            name: \"miUTF8\",\n            size: null\n        },\n        17: {\n            name: \"miUTF16\",\n            size: null\n        },\n        18: {\n            name: \"miUTF32\",\n            size: null\n        }\n    };\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var arrayClassNames = {\n        1: \"mxCELL_CLASS\",\n        2: \"mxSTRUCT_CLASS\",\n        3: \"mxOBJECT_CLASS\",\n        4: \"mxCHAR_CLASS\",\n        5: \"mxSPARSE_CLASS\",\n        6: \"mxDOUBLE_CLASS\",\n        7: \"mxSINGLE_CLASS\",\n        8: \"mxINT8_CLASS\",\n        9: \"mxUINT8_CLASS\",\n        10: \"mxINT16_CLASS\",\n        11: \"mxUINT16_CLASS\",\n        12: \"mxINT32_CLASS\",\n        13: \"mxUINT32_CLASS\",\n        14: \"mxINT64_CLASS\",\n        15: \"mxUINT64_CLASS\"\n    };\n\n    /**\n     * @memberOf matfilee\n     * @private\n     */\n    var _SPA = {\n        'S': 1,\n        'C': 2,\n        'V': 3,\n        'Q': 4,\n        'M': 9,\n        'X': 10,\n        'T': 16,\n        'U': 1,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9\n    };\n\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _BPS = {\n        'P': 0.125,\n        'A': 1,\n        'O': 1,\n        'B': 1,\n        'I': 2,\n        'L': 4,\n        'X': 8,\n        'F': 4,\n        'D': 8\n    };\n\n    /**\n     * @memberOf bluefile\n     * @private\n     */\n    var _XM_TO_TYPEDARRAY = {\n        'P': null,\n        'A': null,\n        'O': Uint8Array,\n        'B': Int8Array,\n        'I': Int16Array,\n        'L': Int32Array,\n        'X': null,\n        'F': Float32Array,\n        'D': Float64Array\n    };\n\n    /**\n     * @memberof matfile\n     * @param   {array}     buf         Data bffer\n     * @param number\n     * @param bool\n     * @private\n     */\n    function getInt64(dataView, index, littleEndian) {\n        var highIndex, lowIndex;\n        var MAX_INT = Math.pow(2, 53);\n        if (littleEndian) {\n            highIndex = 4;\n            lowIndex = 0;\n        } else {\n            highIndex = 0;\n            lowIndex = 4;\n        }\n        var high = dataView.getInt32(index + highIndex, littleEndian);\n        var low = dataView.getInt32(index + lowIndex, littleEndian);\n        var rv = low + pow2(32) * high;\n        if (rv >= MAX_INT) {\n            window.console.info(\"Int is bigger than JS can represent.\");\n            return Infinity;\n        }\n        return rv;\n    }\n\n    /**\n     * @memberOf matfile\n     * @private\n     */\n    var _applySupportsTypedArray = true;\n    try {\n        var uintbuf = new Uint8Array(new ArrayBuffer(4));\n        uintbuf[0] = 66;\n        uintbuf[1] = 76;\n        uintbuf[2] = 85;\n        uintbuf[3] = 69;\n        var test = String.fromCharCode.apply(null, uintbuf);\n        if (test !== \"BLUE\") {\n            _applySupportsTypedArray = false;\n        }\n    } catch (error) {\n        _applySupportsTypedArray = false;\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {array}     buf         Data bffer\n     * @private\n     */\n    function ab2str(buf) {\n        var uintbuf = new Uint8Array(buf);\n        // Firefox 3.6 nor iOS devices can use ArrayBuffers with .apply\n        if (_applySupportsTypedArray) {\n            return String.fromCharCode.apply(null, uintbuf);\n        } else {\n            var str = \"\";\n            for (var i = 0; i < uintbuf.length; i++) {\n                str += String.fromCharCode(uintbuf[i]);\n            }\n            return str;\n        }\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {string}\n     * @private\n     */\n    function str2ab(str) {\n        var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n        var bufView = new Uint16Array(buf);\n        for (var i = 0, strLen = str.length; i < strLen; i++) {\n            bufView[i] = str.charCodeAt(i);\n        }\n        return buf;\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {number}\n     * @private\n     */\n    function pow2(n) {\n        return (n >= 0 && n < 31) ? (1 << n) : (pow2[n] || (pow2[n] = Math.pow(2, n)));\n    }\n\n    /**\n     * @memberof matfile\n     * @param   {array}\n     * @param   {number}\n     * @param   {number}\n     * @param   {string}\n     * @param   {endian}\n     * @private\n     */\n    function getArray(arrayBuff, startByte, byteLength, type) {\n        // Get a JS array from MATLAB array\n        // TODO: big endian implemenation\n\n        var outArr = [];\n        var dv = new DataView(arrayBuff, startByte, byteLength);\n\n        var array;\n        if (type === \"miINT8\") {\n            array = new Int8Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miUINT8\") {\n            array = new Uint8Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miINT16\") {\n            array = new Int16Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miUINT16\") {\n            array = new Uint16Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miINT32\") {\n            array = new Int32Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miUINT32\") {\n            array = new Uint32Array(arrayBuff, startByte, byteLength);\n        } else if (type === \"miDOUBLE\") {\n            array = new Float64Array(arrayBuff, startByte, byteLength);\n        } else {\n            window.console.warn(\"Array data type not supported yet.\");\n            return;\n        }\n\n        array.forEach(function(element) {\n            outArr.push(element);\n        });\n\n        return outArr;\n    }\n\n    function getDataWithType(dv, typeName, offset, littleEndian) {\n        var output;\n        switch (typeName) {\n            case \"miINT8\":\n                output = dv.getInt8(offset, littleEndian);\n                break;\n            case \"miUINT8\":\n                output = dv.getInt8(offset, littleEndian);\n                break;\n            case \"miINT16\":\n                output = dv.getInt16(offset, littleEndian);\n                break;\n            case \"miUINT16\":\n                output = dv.getUint16(offset, littleEndian);\n                break;\n            case \"miINT32\":\n                output = dv.getInt32(offset, littleEndian);\n                break;\n            case \"miUINT32\":\n                output = dv.getUint32(offset, littleEndian);\n                break;\n            case \"miSINGLE\":\n                output = dv.getFloat32(offset, littleEndian);\n                break;\n            case \"miDOUBLE\":\n                output = dv.getFloat64(offset, littleEndian);\n                break;\n            case \"miINT64\":\n                output = getInt64(dv, offset, littleEndian);\n                break;\n            default:\n                window.console.warn(typeName + \" not supported at thsi time\");\n                break;\n                /* TODO:           \n                case \"miUINT64\":\n                    break;\n                case \"miMATRIX\":\n                    break;\n                case \"miCOMPRESSED\":\n                    break;\n                case \"miUTF8\":\n                    break;\n                case \"miUTF16\":\n                    break;\n                case \"miUTF32\":\n                    break;*/\n        }\n        return output;\n    }\n\n    /**\n     * Create matfile header and attach data buffer\n     * @memberof matfile\n     * @param   {array}     buf         Data bffer\n     */\n    function MatHeader(buf, options) {\n        this.file = null;\n        this.file_name = null;\n        this.buf = buf;\n        if (this.buf != null) {\n            var dvhdr = new DataView(this.buf);\n            this.headerStr = ab2str(this.buf.slice(headerTextBegin - 1, headerTextEnd));\n\n            // get endianness\n            this.datarep = ab2str(this.buf.slice(endianCharsBegin - 1, endianCharsEnd));\n            var littleEndianHdr = (this.datarep === \"IM\");\n            var littleEndianData = (this.datarep === \"IM\");\n\n            this.headerList = this.headerStr.split(\",\").map(function(str) {\n                return str.trim();\n            });\n            this.matfile = this.headerList[0];\n            this.platform = this.headerList[1];\n            this.createdOn = this.headerList[2];\n            this.subsystemOffset = ab2str(this.buf.slice(subsysOffsetBegin - 1, subsysOffsetEnd));\n            this.version = dvhdr.getUint16(versionOffsetBegin - 1, littleEndianHdr);\n            this.versionName = versionNames[this.version];\n\n            this.dataType = dvhdr.getUint32(firstDataTypeOffsetBegin - 1, littleEndianHdr);\n            this.dataTypeName = dataTypeNames[this.dataType].name;\n            this.arraySize = dvhdr.getUint32(numBytesOffsetBegin - 1, littleEndianHdr);\n\n            var beginArray = numBytesOffsetEnd + 1;\n\n            // Start reading the file linearly from beginning and inc index as you go...\n            var currIndex = numBytesOffsetEnd + 1;\n            var typeNum = dvhdr.getUint32(currIndex - 1, littleEndianHdr);\n            var typeName = dataTypeNames[typeNum].name;\n            var typeSize = dataTypeNames[typeNum].size;\n            currIndex += 4;\n\n            // bytes per ``typeName``\n            var flagLength = getDataWithType(dvhdr, typeName, currIndex - 1, littleEndianData);\n            currIndex += typeSize;\n\n            // Array flags\n            // If bit is set:\n            // - complex: the data element includes an imaginary part\n            // - global: \"MATLAB loads the data element as a global variable in the base workspace\"\n            // - logical: indicates the array is used for logical indexing.\n            var arrayFlag = getDataWithType(dvhdr, typeName, currIndex - 1, littleEndianData);\n            currIndex += typeSize;\n\n            // TODO: use flags for future implementation\n            var complexFlag = arrayFlag & 0x80;\n            var globalFlag = arrayFlag & 0x40;\n            var logicalFlag = arrayFlag & 0x20;\n\n            // Find array class\n            var arrayClassNum = arrayFlag & 0xF;\n            var arrayClassName = arrayClassNames[arrayClassNum];\n\n            // TODO: sparse array data format implementation: which uses next 4 bytes\n            // Skip to next type field (array dimensions)\n            currIndex += typeSize;\n\n            // Dimensions type:\n            var dimTypeNum = dvhdr.getUint32(currIndex - 1, littleEndianData);\n            currIndex += 4;\n\n            var dimTypeName = dataTypeNames[dimTypeNum].name;\n            var dimTypeSize = dataTypeNames[dimTypeNum].size;\n\n            // Dimensions size:\n            var arrayDimTotalSize = dvhdr.getUint32(currIndex - 1, littleEndianData);\n            currIndex += 4;\n\n            // Get number of rows\n            var rows = getDataWithType(dvhdr, dimTypeName, currIndex - 1, littleEndianData);\n            currIndex += dimTypeSize;\n\n            // TODO: support for >= 2D array types\n            if (rows > 1) {\n                window.console.warn(\"Only 1D arrays are currently supported.\");\n            }\n\n            // Get number of columns\n            var cols = getDataWithType(dvhdr, dimTypeName, currIndex - 1, littleEndianData);\n            currIndex += typeSize;\n\n            // array name type\n            var arrayNameTypeNum = dvhdr.getUint32(currIndex - 1, littleEndianData);\n            currIndex += 4;\n\n            var nameSize = 0;\n            var small = false;\n            if (arrayNameTypeNum > 15) {\n                arrayNameTypeNum &= 0x00FF;\n                small = true;\n                nameSize = dvhdr.getUint16(currIndex - 5, littleEndianData);\n            }\n\n            var arrayNameTypeName = dataTypeNames[arrayNameTypeNum].name;\n            var arrayNameTypeSize = dataTypeNames[arrayNameTypeNum].size;\n\n            if (!small) {\n                nameSize = getDataWithType(dvhdr, arrayNameTypeName, currIndex - 1, littleEndianData);\n                currIndex += 4;\n            }\n\n            var arrayName = ab2str(this.buf.slice(currIndex - 1, currIndex + nameSize - 1));\n\n            // Pad to end of 64 bit word if necessary\n            var rndUp;\n            if (small) {\n                // Pad from the middle to the end of a 64 bit word\n                rndUp = (4 - (nameSize % 4)) % 4;\n            } else {\n                // Pad from the start of a new word\n                rndUp = (8 - (nameSize % 8)) % 8;\n            }\n\n            var jumpTo = nameSize + rndUp;\n            currIndex += jumpTo;\n\n            // set the data field in the header\n            this.setData(this.buf, dvhdr, currIndex, littleEndianData);\n        }\n    }\n    MatHeader.prototype = {\n        /**\n         * @memberof bluefile\n         * @param   buf\n         * @param   dvhdr\n         * @param   data_end\n         * @param   littleEndian\n         *\n         */\n        setData: function(buf, dvhdr, currIndex, littleEndian) {\n            var arrayValSize;\n\n            // Array value(s) type:\n            var typeNum = dvhdr.getUint32(currIndex - 1, littleEndian);\n\n            // Check for MATLAB \"small element type\"\n            var small = false;\n            if (typeNum > 15) {\n                typeNum &= 0x00FF;\n                small = true;\n                arrayValSize = dvhdr.getUint16(currIndex + 1, 2, littleEndian);\n            } else {\n                currIndex += 4;\n            }\n\n            var typeName = dataTypeNames[typeNum].name;\n            var typeSize = dataTypeNames[typeNum].size;\n\n            if (!small) {\n                arrayValSize = dvhdr.getUint32(currIndex - 1, littleEndian);\n                small = false;\n            }\n\n            currIndex += 4;\n\n            // Get JS array from MATLAB array\n            this.dview = getArray(buf, currIndex - 1, arrayValSize / typeSize, typeName);\n        }\n    };\n\n    // Internal method from http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n    /**\n     * This function creates a new anchor element and uses location\n     * properties (inherent) to get the desired URL data. Some String\n     * operations are used (to normalize results across browsers).\n     *\n     * @memberof bluefile\n     * @private\n     * @param   url\n     * @returns -\n     */\n    function parseURL(url) {\n        var a = document.createElement('a');\n        a.href = url;\n        return {\n            source: url,\n            protocol: a.protocol.replace(':', ''),\n            host: a.hostname,\n            port: a.port,\n            query: a.search,\n            params: (function() {\n                var ret = {},\n                    seg = a.search.replace(/^\\?/, '').split('&'),\n                    len = seg.length,\n                    i = 0,\n                    s;\n                for (; i < len; i++) {\n                    if (!seg[i]) {\n                        continue;\n                    }\n                    s = seg[i].split('=');\n                    ret[s[0]] = s[1];\n                }\n                return ret;\n            })(),\n            file: (a.pathname.match(/\\/([^\\/?#]+)$/i) || [null, ''])[1],\n            hash: a.hash.replace('#', ''),\n            path: a.pathname.replace(/^([^\\/])/, '/$1'),\n            relative: (a.href.match(/tps?:\\/\\/[^\\/]+(.+)/) || [null, ''])[1],\n            segments: a.pathname.replace(/^\\//, '').split('/')\n        };\n    }\n\n    /**\n     * @memberof bluefile\n     * @private\n     * @param   text\n     * @param   oncomplete\n     * @param   blocksize\n     */\n    function text2buffer(text, oncomplete, blocksize) {\n        blocksize = blocksize || 1024;\n        var i = 0;\n        var arrayBuffer = new ArrayBuffer(text.length);\n        var bufView = new Uint8Array(arrayBuffer);\n        var worker = function() {\n            var end = i + blocksize;\n            for (; i < end; i++) {\n                bufView[i] = (text.charCodeAt(i) & 0xff);\n            }\n            if (i >= text.length) {\n                oncomplete(arrayBuffer);\n            } else {\n                setTimeout(worker, 0);\n            }\n        };\n        setTimeout(worker, 0);\n    }\n\n    /**\n     * Matfile Reader\n     * @memberof    matfile\n     * @param   options\n     */\n    function MatFileReader(options) {\n        this.options = options;\n    }\n\n    MatFileReader.prototype = {\n        /**\n         * @memberof matfile\n         * @param   theFile\n         * @param   onload\n         *\n         */\n        readheader: function readheader(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            var blob = theFile.webkitSlice(0, 116); // Chrome specific\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var rawhdr = reader.result;\n                    var hdr = new MatHeader(rawhdr, that.options);\n                    hdr.file = theFile;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(blob);\n        },\n\n        /**\n         *\n         * @memberof matfile\n         * @param   theFile\n         * @param   onload\n         *\n         */\n        read: function read(theFile, onload) {\n            var that = this;\n            var reader = new FileReader();\n            // Closure to capture the file information.\n            reader.onloadend = (function(theFile) {\n                return function(e) {\n                    if (e.target.error) {\n                        onload(null);\n                        return;\n                    }\n                    var raw = reader.result;\n                    var hdr = new MatHeader(raw, that.options);\n                    hdr.file = theFile;\n                    hdr.file_name = theFile.name;\n                    onload(hdr);\n                };\n            })(theFile);\n            reader.readAsArrayBuffer(theFile);\n        },\n\n        /**\n         *\n         * @memberof matfile\n         * @param   href\n         * @param   onload\n         *\n         */\n        read_http: function read_http(href, onload) {\n            var that = this;\n            var oReq = new XMLHttpRequest();\n            oReq.open(\"GET\", href, true);\n            oReq.responseType = \"arraybuffer\";\n            oReq.overrideMimeType('text\\/plain; charset=x-user-defined');\n            oReq.onload = function(oEvent) {\n                if (oReq.readyState === 4) {\n                    if ((oReq.status === 200) || (oReq.status === 0)) { // status = 0 is necessary for file URL\n                        var arrayBuffer = null; // Note: not oReq.responseText\n                        if (oReq.response) {\n                            arrayBuffer = oReq.response;\n                            var hdr = new MatHeader(arrayBuffer, that.options);\n                            parseURL(href);\n                            var fileUrl = parseURL(href);\n                            hdr.file_name = fileUrl.file;\n                            onload(hdr);\n                        } else if (oReq.responseText) {\n                            text2buffer(oReq.responseText, function(arrayBuffer) {\n                                var hdr = new MatHeader(arrayBuffer, that.options);\n                                parseURL(href);\n                                var fileUrl = parseURL(href);\n                                hdr.file_name = fileUrl.file;\n                                onload(hdr);\n                            });\n                        }\n                        return;\n                    }\n                }\n                onload(null);\n            };\n            oReq.onerror = function(oEvent) {\n                onload(null);\n            };\n            oReq.send(null);\n        }\n    };\n    global['MatHeader'] = global['MatHeader'] || MatHeader;\n    global['MatFileReader'] = global['MatFileReader'] || MatFileReader;\n}(this));\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","/* global module */\n/* global require */\n (function() {\n     var tinycolor = require(\"tinycolor2\");\n     if (typeof Object.assign !== 'function') {\n         // Must be writable: true, enumerable: false, configurable: true\n         Object.defineProperty(Object, \"assign\", {\n             value: function assign(target, varArgs) { // .length of function is 2\n                 'use strict';\n                 if (target == null) { // TypeError if undefined or null\n                     throw new TypeError('Cannot convert undefined or null to object');\n                 }\n                 var to = Object(target);\n                 for (var index = 1; index < arguments.length; index++) {\n                     var nextSource = arguments[index];\n                     if (nextSource != null) { // Skip over if undefined or null\n                         for (var nextKey in nextSource) {\n                             // Avoid bugs when hasOwnProperty is shadowed\n                             if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                                 to[nextKey] = nextSource[nextKey];\n                             }\n                         }\n                     }\n                 }\n                 return to;\n             },\n             writable: true,\n             configurable: true\n         });\n     }\n     var ColorMap = window.ColorMap = function(colors, options) {\n         this.options = {\n             ncolors: 500,\n             alpha: 255\n         };\n         this.options = Object.assign(this.options, options);\n         this.map = [];\n         var _min = 0;\n         this._low = 0;\n         this._high = 1;\n         var ncolors = this.options.ncolors;\n         this._fscale = ncolors / (this._high - this._low);\n         var colorindex = 1;\n         var colorBlockIndex = 1;\n         colors = JSON.parse(JSON.stringify(colors)); //make a copy so we dont change the original colors\n         colors = this._parseColors(colors);\n         this.colors = colors;\n         var col1 = colors[0];\n         var col2 = colors[1];\n         var colorStop = colors[1].pos - colors[0].pos;\n         var colorsInBlock = ncolors * (colorStop / 100);\n         this.colorsInBlock = colorsInBlock;\n         var factorStep = 1 / colorsInBlock;\n         for (var n = 0; n < ncolors - 2; n++) {\n             if (colorBlockIndex > colorsInBlock) {\n                 col1 = colors[colorindex];\n                 col2 = colors[colorindex + 1];\n                 if (col2 === undefined) {\n                     break;\n                 }\n                 var colorStop = col2.pos - col1.pos;\n                 var colorsInBlock = ncolors * (colorStop / 100);\n                 this.colorsInBlock = colorsInBlock;\n                 var factorStep = 1 / colorsInBlock;\n                 var colorBlockIndex = 1;\n                 colorindex += 1;\n             }\n             this._addColor(this.interpolate(col1, col2, factorStep * colorBlockIndex));\n             colorBlockIndex += 1;\n         }\n         \n        this._addColor(colors[colors.length -1]);\n        this._addColor(colors[0], true);\n         \n     };\n     ColorMap.prototype = {\n         _addColor: function(color, front) {\n             color.hex = this._rgbToHex(color.red, color.green, color.blue);\n             color.color = (color.alpha << 24) | // alpha\n                 (color.blue << 16) | // blue\n                 (color.green << 8) | // green\n                 (color.red);\n             if (front) {\n                 this.map.unshift(color);\n             } else {\n                 this.map.push(color);\n             }\n         },\n         _parseColors: function(colors) {\n             for (var i = 0, c = colors.length; i < c; i++) {\n                 var color = colors[i];\n                 if (typeof color === \"string\") {\n                     colors[i] = this._hexToRgb(color);\n                     color = tinycolor(color);\n                     color = color.toRgb();\n                     colors[i] = {red:color.r,green:color.g,blue:color.b,alpha:this.options.alpha};\n\n                 } else if (color.hasOwnProperty(\"color\")) {\n                     var newColor = tinycolor(color.color);\n                     newColor = newColor.toRgb();\n                     newColor = {red:newColor.r,green:newColor.g,blue:newColor.b,alpha:this.options.alpha};\n                     if (color.hasOwnProperty(\"pos\")) {\n                         newColor.pos = color.pos;\n                     }\n                     colors[i] = newColor;\n                 } else {\n                     //assume if it has rgb values it is a percentage\n                     colors[i].red = Math.floor(Math.round(255 * (color.red / 100)));\n                     colors[i].green = Math.floor(Math.round(255 * (color.green / 100)));\n                     colors[i].blue = Math.floor(Math.round(255 * (color.blue / 100)));\n                 }\n                 if (!colors[i].hasOwnProperty(\"alpha\")) {\n                     colors[i].alpha = this.options.alpha;\n                 }\n             }\n             return this._checkColorStops(colors);\n         },\n         _checkColorStops: function(colors) {\n             var lastStop = 0;\n             var colorsWithNoStops = 0;\n             for (var i = 0, c = colors.length; i < c; i++) {\n                 var color = colors[i];\n                 if (!color.hasOwnProperty(\"pos\")) {\n                     colorsWithNoStops += 1;\n                 } else {\n                     if (colorsWithNoStops) {\n                         var stopSize = (color.pos - lastStop) / colorsWithNoStops;\n                         var currentPos = color.pos;\n                         for (var z = 1; z <= colorsWithNoStops; z++) {\n                             colors[i - z].pos = currentPos - stopSize;\n                             currentPos -= stopSize;\n                         }\n                     }\n                     colorsWithNoStops = 0;\n                 }\n             }\n             if (colorsWithNoStops) {\n                 var currentPos = 100;\n                 colors[colors.length - 1].pos = currentPos;\n                 if (lastStop === 0) {\n                     colors[0].pos = 0;\n                     colorsWithNoStops -= 1;\n                 }\n                 var stopSize = (currentPos - lastStop) / colorsWithNoStops;\n                 var i = colors.length - 1;\n                 for (var z = 1; z < colorsWithNoStops; z++) {\n                     colors[i - z].pos = currentPos - stopSize;\n                     currentPos -= stopSize;\n                 }\n             }\n             return colors;\n         },\n         _componentToHex: function(c) {\n             var hex = c.toString(16);\n             return hex.length === 1 ? \"0\" + hex : hex;\n         },\n         _rgbToHex: function(r, g, b) {\n             return \"#\" + this._componentToHex(r) + this._componentToHex(g) + this._componentToHex(b);\n         },\n         _hexToRgb: function(hex) {\n             var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n             return result ? {\n                 red: parseInt(result[1], 16),\n                 green: parseInt(result[2], 16),\n                 blue: parseInt(result[3], 16)\n             } : null;\n         },\n         getColor: function(number) {\n             var n = (number - this._low) * this._fscale;\n             var colorindex = ~~n; //make int fastest method\n             if (colorindex > this.map.length - 1) {\n                 colorindex = this.map.length - 1;\n             } else if (colorindex < 0) {\n                 colorindex = 0;\n             }\n             return this.map[colorindex];\n         },\n         setRange: function(low, high) {\n             // only recalculate if a value has changed\n             if ((this._low !== low) || (this._high !== high)) {\n                 this._low = low;\n                 this._high = high;\n                 this._fscale = this.map.length / Math.abs(this._high - this._low);\n             }\n         },\n         interpolate: function(col1, col2, factor) {\n             return {\n                 red: col1.red + factor * (col2.red - col1.red),\n                 green: col1.green + factor * (col2.green - col1.green),\n                 blue: col1.blue + factor * (col2.blue - col1.blue),\n                 alpha: col1.alpha + factor * (col2.alpha - col1.alpha)\n             };\n         }\n     };\n     module.exports = ColorMap;\n })();","/**\n * @license\n * File: CanvasInput.js\n *  CanvasInput v1.0.10\n *  http://goldfirestudios.com/blog/108/CanvasInput-HTML5-Canvas-Text-Input\n *\n *  (c) 2013, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  (c) 2013, Axios, Inc.\n *  Modifications made by Axios, Inc.\n *  axiosengineering.com\n *\n *  MIT License\n */\n\n/* global module */\n/* global require */\n\n(function() {\n    // create a buffer that stores all inputs so that tabbing\n    // between them is made possible.\n    var inputs = [];\n\n    // initialize the Canvas Input\n    var CanvasInput = window.CanvasInput = function(o) {\n        var self = this;\n\n        o = o ? o : {};\n\n        // setup the defaults\n        self._canvas = o.canvas || null;\n        self._ctx = self._canvas ? self._canvas.getContext('2d') : null;\n        self._x = o.x || 0;\n        self._y = o.y || 0;\n        self._extraX = o.extraX || 0;\n        self._extraY = o.extraY || 0;\n        self._fontSize = o.fontSize || 14;\n        self._fontFamily = o.fontFamily || 'Arial';\n        self._fontColor = o.fontColor || '#000';\n        self._placeHolderColor = o.placeHolderColor || '#bfbebd';\n        self._fontWeight = o.fontWeight || 'normal';\n        self._fontStyle = o.fontStyle || 'normal';\n        self._readonly = o.readonly || false;\n        self._maxlength = o.maxlength || null;\n        self._width = o.width || 150;\n        self._height = o.height || self._fontSize;\n        self._padding = o.padding >= 0 ? o.padding : 5;\n        self._borderWidth = o.borderWidth >= 0 ? o.borderWidth : 1;\n        self._borderColor = o.borderColor || '#959595';\n        self._borderRadius = o.borderRadius >= 0 ? o.borderRadius : 3;\n        self._backgroundImage = o.backgroundImage || '';\n        self._boxShadow = o.boxShadow || '1px 1px 0px rgba(255, 255, 255, 1)';\n        self._innerShadow = o.innerShadow || '0px 0px 4px rgba(0, 0, 0, 0.4)';\n        self._selectionColor = o.selectionColor || 'rgba(179, 212, 253, 0.8)';\n        self._placeHolder = o.placeHolder || '';\n        self._value = o.value || self._placeHolder;\n        self._onsubmit = o.onsubmit || function() {};\n        self._onkeydown = o.onkeydown || function() {};\n        self._onkeyup = o.onkeyup || function() {};\n        self._onfocus = o.onfocus || function() {};\n        self._onblur = o.onblur || function() {};\n        self._cursor = false;\n        self._cursorPos = 0;\n        self._hasFocus = false;\n        self._selection = [0, 0];\n        self._wasOver = false;\n        self._renderOnReturn = (o.renderOnReturn !== undefined ? o.renderOnReturn : true);\n        self._disableBlur = o.disableBlur || false;\n        self._tabToClear = o.tabToClear || false;\n\n        // parse box shadow\n        self.boxShadow(self._boxShadow, true);\n\n        // calculate the full width and height with padding, borders and shadows\n        self._calcWH();\n\n        // setup the off-DOM canvas\n        self._renderCanvas = document.createElement('canvas');\n        self._renderCanvas.setAttribute('width', self.outerW);\n        self._renderCanvas.setAttribute('height', self.outerH);\n        self._renderCtx = self._renderCanvas.getContext('2d');\n\n        // setup another off-DOM canvas for inner-shadows\n        self._shadowCanvas = document.createElement('canvas');\n        self._shadowCanvas.setAttribute('width', self._width + self._padding * 2);\n        self._shadowCanvas.setAttribute('height', self._height + self._padding * 2);\n        self._shadowCtx = self._shadowCanvas.getContext('2d');\n\n        // setup the background color\n        if (typeof o.backgroundGradient !== 'undefined') {\n            self._backgroundColor = self._renderCtx.createLinearGradient(\n                0,\n                0,\n                0,\n                self.outerH\n            );\n            self._backgroundColor.addColorStop(0, o.backgroundGradient[0]);\n            self._backgroundColor.addColorStop(1, o.backgroundGradient[1]);\n        } else {\n            self._backgroundColor = o.backgroundColor || '#fff';\n        }\n\n        // setup main canvas events\n        if (self._canvas) {\n            self.mousemoveCanvasListener = function(e) {\n                e = e || window.event;\n                self.mousemove(e, self);\n            };\n            self._canvas.addEventListener('mousemove', self.mousemoveCanvasListener, false);\n\n            self.mousedownCanvasListener = function(e) {\n                e = e || window.event;\n                self.mousedown(e, self);\n            };\n            self._canvas.addEventListener('mousedown', self.mousedownCanvasListener, false);\n\n            self.mouseupCanvasListener = function(e) {\n                e = e || window.event;\n                self.mouseup(e, self);\n            };\n            self._canvas.addEventListener('mouseup', self.mouseupCanvasListener, false);\n        }\n\n        // setup a global mouseup to blur the input outside of the canvas\n        self.mouseupWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus && !self._mouseDown) {\n                self.blur();\n            }\n        };\n        window.addEventListener('mouseup', self.mouseupWindowListener, true);\n\n        // setup the keydown listener\n        self.keydownWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                self.keydown(e, self);\n            }\n        };\n        window.addEventListener('keydown', self.keydownWindowListener, false);\n\n        // setup the keyup listener\n        self.keyupWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                self._onkeyup(e, self);\n            }\n        };\n        window.addEventListener('keyup', self.keyupWindowListener, false);\n\n        // setup the 'paste' listener\n        self.pasteWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                var text = e.clipboardData.getData('text/plain'),\n                    startText = self._value.substr(0, self._cursorPos),\n                    endText = self._value.substr(self._cursorPos);\n                self._value = startText + text + endText;\n                self._cursorPos += text.length;\n\n                self.render();\n            }\n        };\n        window.addEventListener('paste', self.pasteWindowListener, false);\n\n        // add this to the buffer\n        inputs.push(self);\n        self._inputsIndex = inputs.length - 1;\n\n        // draw the text box\n        self.render();\n    };\n\n    // setup the prototype\n    CanvasInput.prototype = {\n        /**\n         * Get/set the main canvas.\n         * @param  {Object} data Canvas reference.\n         * @return {Mixed}      CanvasInput or current canvas.\n         */\n        canvas: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._canvas = data;\n                self._ctx = self._canvas.getContext('2d');\n\n                return self.render();\n            } else {\n                return self._canvas;\n            }\n        },\n\n        /**\n         * Get/set the x-position.\n         * @param  {Number} data The pixel position along the x-coordinate.\n         * @return {Mixed}      CanvasInput or current x-value.\n         */\n        x: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._x = data;\n\n                return self.render();\n            } else {\n                return self._x;\n            }\n        },\n\n        /**\n         * Get/set the y-position.\n         * @param  {Number} data The pixel position along the y-coordinate.\n         * @return {Mixed}      CanvasInput or current y-value.\n         */\n        y: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._y = data;\n\n                return self.render();\n            } else {\n                return self._y;\n            }\n        },\n\n        /**\n         * Get/set the extra x-position (generally used when no canvas is specified).\n         * @param  {Number} data The pixel position along the x-coordinate.\n         * @return {Mixed}      CanvasInput or current x-value.\n         */\n        extraX: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._extraX = data;\n\n                return self.render();\n            } else {\n                return self._extraX;\n            }\n        },\n\n        /**\n         * Get/set the extra y-position (generally used when no canvas is specified).\n         * @param  {Number} data The pixel position along the y-coordinate.\n         * @return {Mixed}      CanvasInput or current y-value.\n         */\n        extraY: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._extraY = data;\n\n                return self.render();\n            } else {\n                return self._extraY;\n            }\n        },\n\n        /**\n         * Get/set the font size.\n         * @param  {Number} data Font size.\n         * @return {Mixed}      CanvasInput or current font size.\n         */\n        fontSize: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontSize = data;\n\n                return self.render();\n            } else {\n                return self._fontSize;\n            }\n        },\n\n        /**\n         * Get/set the font family.\n         * @param  {String} data Font family.\n         * @return {Mixed}      CanvasInput or current font family.\n         */\n        fontFamily: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontFamily = data;\n\n                return self.render();\n            } else {\n                return self._fontFamily;\n            }\n        },\n\n        /**\n         * Get/set the font color.\n         * @param  {String} data Font color.\n         * @return {Mixed}      CanvasInput or current font color.\n         */\n        fontColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontColor = data;\n\n                return self.render();\n            } else {\n                return self._fontColor;\n            }\n        },\n\n        /**\n         * Get/set the place holder font color.\n         * @param  {String} data Font color.\n         * @return {Mixed}      CanvasInput or current place holder font color.\n         */\n        placeHolderColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._placeHolderColor = data;\n\n                return self.render();\n            } else {\n                return self._placeHolderColor;\n            }\n        },\n\n        /**\n         * Get/set the font weight.\n         * @param  {String} data Font weight.\n         * @return {Mixed}      CanvasInput or current font weight.\n         */\n        fontWeight: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontWeight = data;\n\n                return self.render();\n            } else {\n                return self._fontWeight;\n            }\n        },\n\n        /**\n         * Get/set the font style.\n         * @param  {String} data Font style.\n         * @return {Mixed}      CanvasInput or current font style.\n         */\n        fontStyle: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontStyle = data;\n\n                return self.render();\n            } else {\n                return self._fontStyle;\n            }\n        },\n\n        /**\n         * Get/set the width of the text box.\n         * @param  {Number} data Width in pixels.\n         * @return {Mixed}      CanvasInput or current width.\n         */\n        width: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._width = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._width;\n            }\n        },\n\n        /**\n         * Get/set the height of the text box.\n         * @param  {Number} data Height in pixels.\n         * @return {Mixed}      CanvasInput or current height.\n         */\n        height: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._height = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._height;\n            }\n        },\n\n        /**\n         * Get/set the padding of the text box.\n         * @param  {Number} data Padding in pixels.\n         * @return {Mixed}      CanvasInput or current padding.\n         */\n        padding: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._padding = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._padding;\n            }\n        },\n\n        /**\n         * Get/set the border width.\n         * @param  {Number} data Border width.\n         * @return {Mixed}      CanvasInput or current border width.\n         */\n        borderWidth: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderWidth = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._borderWidth;\n            }\n        },\n\n        /**\n         * Get/set the border color.\n         * @param  {String} data Border color.\n         * @return {Mixed}      CanvasInput or current border color.\n         */\n        borderColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderColor = data;\n\n                return self.render();\n            } else {\n                return self._borderColor;\n            }\n        },\n\n        /**\n         * Get/set the border radius.\n         * @param  {Number} data Border radius.\n         * @return {Mixed}      CanvasInput or current border radius.\n         */\n        borderRadius: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderRadius = data;\n\n                return self.render();\n            } else {\n                return self._borderRadius;\n            }\n        },\n\n        /**\n         * Get/set the background color.\n         * @param  {Number} data Background color.\n         * @return {Mixed}      CanvasInput or current background color.\n         */\n        backgroundColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._backgroundColor = data;\n\n                return self.render();\n            } else {\n                return self._backgroundColor;\n            }\n        },\n\n        /**\n         * Get/set the background gradient.\n         * @param  {Number} data Background gradient.\n         * @return {Mixed}      CanvasInput or current background gradient.\n         */\n        backgroundGradient: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._backgroundColor = self._renderCtx.createLinearGradient(\n                    0,\n                    0,\n                    0,\n                    self.outerH\n                );\n                self._backgroundColor.addColorStop(0, data[0]);\n                self._backgroundColor.addColorStop(1, data[1]);\n\n                return self.render();\n            } else {\n                return self._backgroundColor;\n            }\n        },\n\n        /**\n         * Get/set the box shadow.\n         * @param  {String} data     Box shadow in CSS format (1px 1px 1px rgba(0, 0, 0.5)).\n         * @param  {Boolean} doReturn (optional) True to prevent a premature render.\n         * @return {Mixed}          CanvasInput or current box shadow.\n         */\n        boxShadow: function(data, doReturn) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                // parse box shadow\n                var boxShadow = data.split('px ');\n                self._boxShadow = {\n                    x: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[0], 10),\n                    y: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[1], 10),\n                    blur: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[2], 10),\n                    color: self._boxShadow === 'none' ? '' : boxShadow[3]\n                };\n\n                // take into account the shadow and its direction\n                if (self._boxShadow.x < 0) {\n                    self.shadowL = Math.abs(self._boxShadow.x) + self._boxShadow.blur;\n                    self.shadowR = self._boxShadow.blur + self._boxShadow.x;\n                } else {\n                    self.shadowL = Math.abs(self._boxShadow.blur - self._boxShadow.x);\n                    self.shadowR = self._boxShadow.blur + self._boxShadow.x;\n                }\n                if (self._boxShadow.y < 0) {\n                    self.shadowT = Math.abs(self._boxShadow.y) + self._boxShadow.blur;\n                    self.shadowB = self._boxShadow.blur + self._boxShadow.y;\n                } else {\n                    self.shadowT = Math.abs(self._boxShadow.blur - self._boxShadow.y);\n                    self.shadowB = self._boxShadow.blur + self._boxShadow.y;\n                }\n\n                self.shadowW = self.shadowL + self.shadowR;\n                self.shadowH = self.shadowT + self.shadowB;\n\n                self._calcWH();\n\n                if (!doReturn) {\n                    self._updateCanvasWH();\n\n                    return self.render();\n                }\n            } else {\n                return self._boxShadow;\n            }\n        },\n\n        /**\n         * Get/set the inner shadow.\n         * @param  {String} data In the format of a CSS box shadow (1px 1px 1px rgba(0, 0, 0.5)).\n         * @return {Mixed}          CanvasInput or current inner shadow.\n         */\n        innerShadow: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._innerShadow = data;\n\n                return self.render();\n            } else {\n                return self._innerShadow;\n            }\n        },\n\n        /**\n         * Get/set the text selection color.\n         * @param  {String} data Color.\n         * @return {Mixed}      CanvasInput or current selection color.\n         */\n        selectionColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._selectionColor = data;\n\n                return self.render();\n            } else {\n                return self._selectionColor;\n            }\n        },\n\n        /**\n         * Get/set the place holder text.\n         * @param  {String} data Place holder text.\n         * @return {Mixed}      CanvasInput or current place holder text.\n         */\n        placeHolder: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._placeHolder = data;\n\n                return self.render();\n            } else {\n                return self._placeHolder;\n            }\n        },\n\n        /**\n         * Get/set the current text box value.\n         * @param  {String} data Text value.\n         * @return {Mixed}      CanvasInput or current text value.\n         */\n        value: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._value = data;\n\n                return self.focus();\n            } else {\n                return self._value;\n            }\n        },\n\n        /**\n         * Set or fire the onsubmit event.\n         * @param  {Function} fn Custom callback.\n         */\n        onsubmit: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onsubmit = fn;\n\n                return self;\n            } else {\n                self._onsubmit();\n            }\n        },\n\n        /**\n         * Set or fire the onkeydown event.\n         * @param  {Function} fn Custom callback.\n         */\n        onkeydown: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onkeydown = fn;\n\n                return self;\n            } else {\n                self._onkeydown();\n            }\n        },\n\n        /**\n         * Set or fire the onkeyup event.\n         * @param  {Function} fn Custom callback.\n         */\n        onkeyup: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onkeyup = fn;\n\n                return self;\n            } else {\n                self._onkeyup();\n            }\n        },\n\n        /**\n         * Place focus on the CanvasInput box, placing the cursor\n         * either at the end of the text or where the user clicked.\n         * @param  {Number} pos (optional) The position to place the cursor.\n         * @return {CanvasInput}\n         */\n        focus: function(pos) {\n            var self = this,\n                input;\n\n            // if this is readonly, don't allow it to get focus\n            if (self._readonly) {\n                return;\n            }\n\n            // only fire the focus event when going from unfocussed\n            if (!self._hasFocus) {\n                self._onfocus(self);\n            }\n\n            // remove selection\n            if (!self._selectionUpdated) {\n                self._selection = [0, 0];\n            } else {\n                delete self._selectionUpdated;\n            }\n\n            // update the cursor position\n            self._cursorPos = (typeof pos === 'number') ? pos : self._clipText().length;\n\n            // clear the place holder\n            if (self._placeHolder === self._value) {\n                self._value = '';\n            }\n\n            self._hasFocus = true;\n            self._cursor = true;\n\n            // setup cursor interval\n            if (self._cursorInterval) {\n                clearInterval(self._cursorInterval);\n            }\n            self._cursorInterval = setInterval(function() {\n                self._cursor = !self._cursor;\n                self.render();\n            }, 500);\n\n            // check if this is Chrome for Android (there is a bug with returning incorrect character key codes)\n            var nav = navigator.userAgent.toLowerCase(),\n                isChromeMobile = (nav.indexOf('chrome') >= 0 && nav.indexOf('mobile') >= 0 && nav.indexOf('android') >= 0);\n\n            // add support for mobile\n            var isMobile = (typeof window.orientation !== 'undefined');\n            if (isMobile && !isChromeMobile && document && document.createElement && (input = document.createElement('input'))) {\n                input.type = 'text';\n                input.style.opacity = 0;\n                input.style.position = 'absolute';\n                input.style.left = (self._x + self._extraX + (self._canvas ? self._canvas.offsetLeft : 0)) + 'px';\n                input.style.top = (self._y + self._extraY + (self._canvas ? self._canvas.offsetTop : 0)) + 'px';\n                input.style.width = self._width;\n                input.style.height = 0;\n                document.body.appendChild(input);\n                input.focus();\n                input.addEventListener('blur', function() {\n                    self.blur(self);\n                }, false);\n            } else if (isMobile) {\n                self.value(prompt(self._placeHolder) || '');\n            }\n\n            return self.render();\n        },\n\n        /**\n         * Removes focus from the CanvasInput box.\n         * @param  {Object} _this Reference to this.\n         * @return {CanvasInput}\n         */\n        blur: function(_this) {\n            var self = _this || this;\n\n            if (!self._disableBlur) {\n                self._onblur(self);\n\n                if (self._cursorInterval) {\n                    clearInterval(self._cursorInterval);\n                }\n                self._hasFocus = false;\n                self._cursor = false;\n                self._selection = [0, 0];\n\n                // fill the place holder\n                if (self._value === '') {\n                    self._value = self._placeHolder;\n                }\n            }\n\n            return self.render();\n        },\n\n        /**\n         * Maintains continual focus on the CanvasInput by disabling blur.\n         * @param {Object} _this Reference to this.\n         */\n        disableBlur: function(_this) {\n            var self = _this || this;\n            self._disableBlur = true;\n        },\n\n        /**\n         * Allows the CanvasInput to blur or focus by re-enabling blur.\n         * @param {Object} _this Reference to this.\n         */\n        enableBlur: function(_this) {\n            var self = _this || this;\n            self._disableBlur = false;\n        },\n\n        /**\n         * Fired with the keydown event to draw the typed characters.\n         * @param  {Event}       e    The keydown event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        keydown: function(e, self) {\n            var keyCode = e.which,\n                isShift = e.shiftKey,\n                key = null,\n                startText, endText;\n\n            // make sure the correct text field is being updated\n            if (!self._hasFocus) {\n                return;\n            }\n\n            // fire custom user event\n            self._onkeydown(e, self);\n\n            // add support for Ctrl/Cmd+A selection\n            if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n                self._selection = [0, self._value.length];\n                e.preventDefault();\n                return self.render();\n            }\n\n            // block keys that shouldn't be processed\n            if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n                return self;\n            }\n\n            // prevent the default action\n            e.preventDefault();\n\n            if (keyCode === 8) { // backspace\n                if (!self._clearSelection()) {\n                    if (self._cursorPos > 0) {\n                        startText = self._value.substr(0, self._cursorPos - 1);\n                        endText = self._value.substr(self._cursorPos, self._value.length);\n                        self._value = startText + endText;\n                        self._cursorPos--;\n                    }\n                }\n            } else if (keyCode === 37) { // left arrow key\n                if (self._cursorPos > 0) {\n                    self._cursorPos--;\n                    self._cursor = true;\n                    self._selection = [0, 0];\n                }\n            } else if (keyCode === 39) { // right arrow key\n                if (self._cursorPos < self._value.length) {\n                    self._cursorPos++;\n                    self._cursor = true;\n                    self._selection = [0, 0];\n                }\n            } else if (keyCode === 13) { // enter key\n                self._onsubmit(e, self);\n            } else if (keyCode === 9) { // tab key\n                if (self._tabToClear) {\n                    self._value = \"\";\n                    self._cursorPos = 0;\n                } else {\n                    var next = (inputs[self._inputsIndex + 1]) ? self._inputsIndex + 1 : 0;\n                    if (next !== self._inputsIndex) {\n                        self.blur();\n                        setTimeout(function() {\n                            inputs[next].focus();\n                        }, 10);\n                    }\n                }\n            } else if (key = self._mapCodeToKey(isShift, keyCode)) {\n                self._clearSelection();\n\n                // enforce the max length\n                if (self._maxlength && self._maxlength <= self._value.length) {\n                    return;\n                }\n\n                startText = (self._value) ? self._value.substr(0, self._cursorPos) : '';\n                endText = (self._value) ? self._value.substr(self._cursorPos) : '';\n                self._value = startText + key + endText;\n                self._cursorPos++;\n            }\n\n            if ((keyCode == 13 && self._renderOnReturn) || keyCode !== 13) {\n                return self.render();\n            } else {\n                return function() {};\n            }\n        },\n\n        /**\n         * Fired with the click event on the canvas, and puts focus on/off\n         * based on where the user clicks.\n         * @param  {Event}       e    The click event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        click: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y;\n\n            if (self._endSelection) {\n                delete self._endSelection;\n                delete self._selectionUpdated;\n                return;\n            }\n\n            if (self._canvas && self._overInput(x, y) || !self._canvas) {\n                if (self._mouseDown) {\n                    self._mouseDown = false;\n                    self.click(e, self);\n                    return self.focus(self._clickPos(x, y));\n                }\n            } else {\n                return self.blur();\n            }\n        },\n\n        /**\n         * Fired with the mousemove event to update the default cursor.\n         * @param  {Event}       e    The mousemove event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        mousemove: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y,\n                isOver = self._overInput(x, y);\n\n            if (isOver && self._canvas) {\n                self._canvas.style.cursor = 'text';\n                self._wasOver = true;\n            } else if (self._wasOver && self._canvas) {\n                self._canvas.style.cursor = 'default';\n                self._wasOver = false;\n            }\n\n            if (self._hasFocus && self._selectionStart >= 0) {\n                var curPos = self._clickPos(x, y),\n                    start = Math.min(self._selectionStart, curPos),\n                    end = Math.max(self._selectionStart, curPos);\n\n                if (!isOver) {\n                    self._selectionUpdated = true;\n                    self._endSelection = true;\n                    delete self._selectionStart;\n                    self.render();\n                    return;\n                }\n\n                if (self._selection[0] !== start || self._selection[1] !== end) {\n                    self._selection = [start, end];\n                    self.render();\n                }\n            }\n        },\n\n        /**\n         * Fired with the mousedown event to start a selection drag.\n         * @param  {Event} e    The mousedown event.\n         * @param  {CanvasInput} self\n         */\n        mousedown: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y,\n                isOver = self._overInput(x, y);\n\n            // setup the 'click' event\n            self._mouseDown = isOver;\n\n            // start the selection drag if inside the input\n            if (self._hasFocus && isOver) {\n                self._selectionStart = self._clickPos(x, y);\n            }\n        },\n\n        /**\n         * Fired with the mouseup event to end a selection drag.\n         * @param  {Event} e    The mouseup event.\n         * @param  {CanvasInput} self\n         */\n        mouseup: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y;\n\n            // update selection if a drag has happened\n            var isSelection = self._clickPos(x, y) !== self._selectionStart;\n            if (self._hasFocus && self._selectionStart >= 0 && self._overInput(x, y) && isSelection) {\n                self._selectionUpdated = true;\n                delete self._selectionStart;\n                self.render();\n            } else {\n                delete self._selectionStart;\n            }\n\n            self.click(e, self);\n        },\n\n        /**\n         * Helper method to get the off-DOM canvas.\n         * @return {Object} Reference to the canvas.\n         */\n        renderCanvas: function() {\n            return this._renderCanvas;\n        },\n\n        /**\n         * Helper method to remove all event listeners, stop the blinking cursor and\n         * reset the cursor style.\n         */\n        cleanup: function() {\n            this._canvas.removeEventListener(\"mouseup\", this.mouseupCanvasListener, false);\n            this._canvas.removeEventListener(\"mousedown\", this.mousedownCanvasListener, false);\n            this._canvas.removeEventListener(\"mousemove\", this.mousemoveCanvasListener, false);\n            window.removeEventListener(\"keydown\", this.keydownWindowListener, false);\n            window.removeEventListener(\"keyup\", this.keyupWindowListener, false);\n            window.removeEventListener(\"mouseup\", this.mouseupWindowListener, true);\n            window.removeEventListener(\"paste\", this.pasteWindowListener, false);\n            clearInterval(this._cursorInterval);\n\n            this._canvas.style.cursor = 'default';\n            for (var i = (inputs.length- 1); i >= 0 ; i--) {\n                if (inputs[i] === this) {\n                    inputs.splice(i, 1);\n                }\n            }\n        },\n\n        /**\n         * Clears and redraws the CanvasInput on an off-DOM canvas,\n         * and if a main canvas is provided, draws it all onto that.\n         * @return {CanvasInput}\n         */\n        render: function() {\n            var self = this,\n                ctx = self._renderCtx,\n                w = self.outerW,\n                h = self.outerH,\n                br = self._borderRadius,\n                bw = self._borderWidth,\n                sw = self.shadowW,\n                sh = self.shadowH;\n\n            // clear the canvas\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            // setup the box shadow\n            ctx.shadowOffsetX = self._boxShadow.x;\n            ctx.shadowOffsetY = self._boxShadow.y;\n            ctx.shadowBlur = self._boxShadow.blur;\n            ctx.shadowColor = self._boxShadow.color;\n\n            // draw the border\n            if (self._borderWidth > 0) {\n                ctx.fillStyle = self._borderColor;\n                self._roundedRect(ctx, self.shadowL, self.shadowT, w - sw, h - sh, br);\n                ctx.fill();\n\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 0;\n                ctx.shadowBlur = 0;\n            }\n\n            // draw the text box background\n            self._drawTextBox(function() {\n                // make sure all shadows are reset\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 0;\n                ctx.shadowBlur = 0;\n\n                // clip the text so that it fits within the box\n                var text = self._clipText();\n\n                // draw the selection\n                var paddingBorder = self._padding + self._borderWidth + self.shadowT;\n                if (self._selection[1] > 0) {\n                    var selectOffset = self._textWidth(text.substring(0, self._selection[0])),\n                        selectWidth = self._textWidth(text.substring(self._selection[0], self._selection[1]));\n\n                    ctx.fillStyle = self._selectionColor;\n                    ctx.fillRect(paddingBorder + selectOffset, paddingBorder, selectWidth, self._height);\n                }\n\n                // draw the cursor\n                ctx.fillStyle = (self._placeHolder === self._value && self._value !== '') ? self._placeHolderColor : self._fontColor;\n                if (self._cursor) {\n                    var cursorOffset = self._textWidth(text.substring(0, self._cursorPos));\n\n                    ctx.fillRect(paddingBorder + cursorOffset, paddingBorder, 1, self._height);\n                }\n\n                // draw the text\n                var textX = self._padding + self._borderWidth + self.shadowL,\n                    textY = Math.round(paddingBorder + self._height / 2);\n\n                ctx.font = self._fontStyle + ' ' + self._fontWeight + ' ' + self._fontSize + 'px ' + self._fontFamily;\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'middle';\n                ctx.fillText(text, textX, textY);\n\n                // parse inner shadow\n                var innerShadow = self._innerShadow.split('px '),\n                    isOffsetX = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[0], 10),\n                    isOffsetY = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[1], 10),\n                    isBlur = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[2], 10),\n                    isColor = self._innerShadow === 'none' ? '' : innerShadow[3];\n\n                // draw the inner-shadow (damn you canvas, this should be easier than this...)\n                if (isBlur > 0) {\n                    var shadowCtx = self._shadowCtx,\n                        scw = shadowCtx.canvas.width,\n                        sch = shadowCtx.canvas.height;\n\n                    shadowCtx.clearRect(0, 0, scw, sch);\n                    shadowCtx.shadowBlur = isBlur;\n                    shadowCtx.shadowColor = isColor;\n\n                    // top shadow\n                    shadowCtx.shadowOffsetX = 0;\n                    shadowCtx.shadowOffsetY = isOffsetY;\n                    shadowCtx.fillRect(-1 * w, -100, 3 * w, 100);\n\n                    // right shadow\n                    shadowCtx.shadowOffsetX = isOffsetX;\n                    shadowCtx.shadowOffsetY = 0;\n                    shadowCtx.fillRect(scw, -1 * h, 100, 3 * h);\n\n                    // bottom shadow\n                    shadowCtx.shadowOffsetX = 0;\n                    shadowCtx.shadowOffsetY = isOffsetY;\n                    shadowCtx.fillRect(-1 * w, sch, 3 * w, 100);\n\n                    // left shadow\n                    shadowCtx.shadowOffsetX = isOffsetX;\n                    shadowCtx.shadowOffsetY = 0;\n                    shadowCtx.fillRect(-100, -1 * h, 100, 3 * h);\n\n                    // create a clipping mask on the main canvas\n                    self._roundedRect(ctx, bw + self.shadowL, bw + self.shadowT, w - bw * 2 - sw, h - bw * 2 - sh, br);\n                    ctx.clip();\n\n                    // draw the inner-shadow from the off-DOM canvas\n                    ctx.drawImage(self._shadowCanvas, 0, 0, scw, sch, bw + self.shadowL, bw + self.shadowT, scw, sch);\n                }\n\n                // draw to the visible canvas\n                if (self._ctx) {\n                    self._ctx.clearRect(self._x, self._y, ctx.canvas.width, ctx.canvas.height);\n                    self._ctx.drawImage(self._renderCanvas, self._x, self._y);\n                }\n\n                return self;\n\n            });\n        },\n\n        /**\n         * Draw the text box area with either an image or background color.\n         * @param  {Function} fn Callback.\n         */\n        _drawTextBox: function(fn) {\n            var self = this,\n                ctx = self._renderCtx,\n                w = self.outerW,\n                h = self.outerH,\n                br = self._borderRadius,\n                bw = self._borderWidth,\n                sw = self.shadowW,\n                sh = self.shadowH;\n\n            // only draw the background shape if no image is being used\n            if (self._backgroundImage === '') {\n                ctx.fillStyle = self._backgroundColor;\n                self._roundedRect(ctx, bw + self.shadowL, bw + self.shadowT, w - bw * 2 - sw, h - bw * 2 - sh, br);\n                ctx.fill();\n\n                fn();\n            } else {\n                var img = new Image();\n                img.src = self._backgroundImage;\n                img.onload = function() {\n                    ctx.drawImage(img, 0, 0, img.width, img.height, bw + self.shadowL, bw + self.shadowT, w, h);\n\n                    fn();\n                };\n            }\n        },\n\n        /**\n         * Deletes selected text in selection range and repositions cursor.\n         * @return {Boolean} true if text removed.\n         */\n        _clearSelection: function() {\n            var self = this;\n\n            if (self._selection[1] > 0) {\n                // clear the selected contents\n                var start = self._selection[0],\n                    end = self._selection[1];\n\n                self._value = self._value.substr(0, start) + self._value.substr(end);\n                self._cursorPos = start;\n                self._cursorPos = (self._cursorPos < 0) ? 0 : self._cursorPos;\n                self._selection = [0, 0];\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Clip the text string to only return what fits in the visible text box.\n         * @param  {String} value The text to clip.\n         * @return {String} The clipped text.\n         */\n        _clipText: function(value) {\n            var self = this;\n            value = (typeof value === 'undefined') ? self._value : value;\n\n            var textWidth = self._textWidth(value),\n                fillPer = textWidth / (self._width - self._padding),\n                text = fillPer > 1 ? value.substr(-1 * Math.floor(value.length / fillPer)) : value;\n\n            return text + '';\n        },\n\n        /**\n         * Gets the pixel with of passed text.\n         * @param  {String} text The text to measure.\n         * @return {Number}      The measured width.\n         */\n        _textWidth: function(text) {\n            var self = this,\n                ctx = self._renderCtx;\n\n            ctx.font = self._fontStyle + ' ' + self._fontWeight + ' ' + self._fontSize + 'px ' + self._fontFamily;\n            ctx.textAlign = 'left';\n\n            return ctx.measureText(text).width;\n        },\n\n        /**\n         * Recalculate the outer with and height of the text box.\n         */\n        _calcWH: function() {\n            var self = this;\n\n            // calculate the full width and height with padding, borders and shadows\n            self.outerW = self._width + self._padding * 2 + self._borderWidth * 2 + self.shadowW;\n            self.outerH = self._height + self._padding * 2 + self._borderWidth * 2 + self.shadowH;\n        },\n\n        /**\n         * Update the width and height of the off-DOM canvas when attributes are changed.\n         */\n        _updateCanvasWH: function() {\n            var self = this,\n                oldW = self._renderCanvas.width,\n                oldH = self._renderCanvas.height;\n\n            // update off-DOM canvas\n            self._renderCanvas.setAttribute('width', self.outerW);\n            self._renderCanvas.setAttribute('height', self.outerH);\n            self._shadowCanvas.setAttribute('width', self._width + self._padding * 2);\n            self._shadowCanvas.setAttribute('height', self._height + self._padding * 2);\n\n            // clear the main canvas\n            if (self._ctx) {\n                self._ctx.clearRect(self._x, self._y, oldW, oldH);\n            }\n        },\n\n        /**\n         * Creates the path for a rectangle with rounded corners.\n         * Must call ctx.fill() after calling this to draw the rectangle.\n         * @param  {Object} ctx Canvas context.\n         * @param  {Number} x   x-coordinate to draw from.\n         * @param  {Number} y   y-coordinate to draw from.\n         * @param  {Number} w   Width of rectangle.\n         * @param  {Number} h   Height of rectangle.\n         * @param  {Number} r   Border radius.\n         */\n        _roundedRect: function(ctx, x, y, w, h, r) {\n            if (w < 2 * r) r = w / 2;\n            if (h < 2 * r) r = h / 2;\n\n            ctx.beginPath();\n\n            ctx.moveTo(x + r, y);\n            ctx.lineTo(x + w - r, y);\n            ctx.quadraticCurveTo(x + w, y, x + w, y + r);\n            ctx.lineTo(x + w, y + h - r);\n            ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n            ctx.lineTo(x + r, y + h);\n            ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n            ctx.lineTo(x, y + r);\n            ctx.quadraticCurveTo(x, y, x + r, y);\n\n            ctx.closePath();\n        },\n\n        /**\n         * Checks if a coordinate point is over the input box.\n         * @param  {Number} x x-coordinate position.\n         * @param  {Number} y y-coordinate position.\n         * @return {Boolean}   True if it is over the input box.\n         */\n        _overInput: function(x, y) {\n            var self = this,\n                xLeft = x >= self._x + self._extraX,\n                xRight = x <= self._x + self._extraX + self._width + self._padding * 2,\n                yTop = y >= self._y + self._extraY,\n                yBottom = y <= self._y + self._extraY + self._height + self._padding * 2;\n\n            return xLeft && xRight && yTop && yBottom;\n        },\n\n        /**\n         * Use the mouse's x & y coordinates to determine\n         * the position clicked in the text.\n         * @param  {Number} x X-coordinate.\n         * @param  {Number} y Y-coordinate.\n         * @return {Number}   Cursor position.\n         */\n        _clickPos: function(x, y) {\n            var self = this,\n                value = self._value;\n\n            // don't count placeholder text in this\n            if (self._value === self._placeHolder) {\n                value = '';\n            }\n\n            // determine where the click was made along the string\n            var text = self._clipText(value),\n                totalW = 0,\n                pos = text.length;\n\n            if (x - (self._x + self._extraX) < self._textWidth(text)) {\n                // loop through each character to identify the position\n                for (var i = 0; i < text.length; i++) {\n                    totalW += self._textWidth(text[i]);\n                    if (totalW >= x - (self._x + self._extraX)) {\n                        pos = i;\n                        break;\n                    }\n                }\n            }\n\n            return pos;\n        },\n\n        /**\n         * Calculate the mouse position based on the event callback and the elements on the page.\n         * @param  {Event} e\n         * @return {Object}   x & y values\n         */\n        _mousePos: function(e) {\n            var elm = e.target,\n                style = document.defaultView.getComputedStyle(elm, undefined),\n                paddingLeft = parseInt(style['paddingLeft'], 10) || 0,\n                paddingTop = parseInt(style['paddingLeft'], 10) || 0,\n                borderLeft = parseInt(style['borderLeftWidth'], 10) || 0,\n                borderTop = parseInt(style['borderLeftWidth'], 10) || 0,\n                htmlTop = document.body.parentNode.offsetTop || 0,\n                htmlLeft = document.body.parentNode.offsetLeft || 0,\n                offsetX = 0,\n                offsetY = 0,\n                x, y;\n\n            // calculate the total offset\n            if (typeof elm.offsetParent !== 'unefined') {\n                do {\n                    offsetX += elm.offsetLeft;\n                    offsetY += elm.offsetTop;\n                } while ((elm = elm.offsetParent));\n            }\n\n            // take into account borders and padding\n            offsetX += paddingLeft + borderLeft + htmlLeft;\n            offsetY += paddingTop + borderTop + htmlTop;\n\n            return {\n                x: e.pageX - offsetX,\n                y: e.pageY - offsetY\n            };\n        },\n\n        /**\n         * Translate a keycode into the correct keyboard character.\n         * @param  {Boolean} isShift True if the shift key is being pressed.\n         * @param  {Number}  keyCode The character code.\n         * @return {String}          The translated character.\n         */\n        _mapCodeToKey: function(isShift, keyCode) {\n            var self = this,\n                blockedKeys = [8, 9, 13, 16, 17, 18, 20, 27, 91, 92],\n                key = '';\n\n            // block keys that we don't want to type\n            for (var i = 0; i < blockedKeys.length; i++) {\n                if (keyCode === blockedKeys[i]) {\n                    return;\n                }\n            }\n\n            // make sure we are getting the correct input\n            if (typeof isShift !== 'boolean' || typeof keyCode !== 'number') {\n                return;\n            }\n\n            var charMap = {\n                32: ' ',\n                48: ')',\n                49: '!',\n                50: '@',\n                51: '#',\n                52: '$',\n                53: '%',\n                54: '^',\n                55: '&',\n                56: '*',\n                57: '(',\n                59: ':',\n                107: '+',\n                173: '_', // firefox uses 173 instead of 189\n                189: '_',\n                186: ':',\n                187: '+',\n                188: '<',\n                190: '>',\n                191: '?',\n                192: '~',\n                219: '{',\n                220: '|',\n                221: '}',\n                222: '\"'\n            };\n\n            // convert the code to a character\n            if (isShift) {\n                key = (keyCode >= 65 && keyCode <= 90) ? String.fromCharCode(keyCode) : charMap[keyCode];\n            } else {\n                if (keyCode >= 65 && keyCode <= 90) {\n                    key = String.fromCharCode(keyCode).toLowerCase();\n                } else {\n                    if (keyCode === 96) {\n                        key = '0';\n                    } else if (keyCode === 97) {\n                        key = '1';\n                    } else if (keyCode === 98) {\n                        key = '2';\n                    } else if (keyCode === 99) {\n                        key = '3';\n                    } else if (keyCode === 100) {\n                        key = '4';\n                    } else if (keyCode === 101) {\n                        key = '5';\n                    } else if (keyCode === 102) {\n                        key = '6';\n                    } else if (keyCode === 103) {\n                        key = '7';\n                    } else if (keyCode === 104) {\n                        key = '8';\n                    } else if (keyCode === 105) {\n                        key = '9';\n                    } else if (keyCode === 188) {\n                        key = ',';\n                    } else if (keyCode === 190) {\n                        key = '.';\n                    } else if (keyCode === 191) {\n                        key = '/';\n                    } else if (keyCode === 192) {\n                        key = '`';\n                    } else if (keyCode === 220) {\n                        key = '\\\\';\n                    } else if (keyCode === 187) {\n                        key = '=';\n                    } else if ((keyCode === 189)  || (keyCode === 173)) {\n                        // firefox maps the minus key to 173, rather\n                        // then trying to use browser detection we\n                        // simply accept 173 as well...which means that\n                        // for Chrome using the mute button would\n                        // cause minus sign to appear\n                        key = '-';\n                    } else if (keyCode === 222) {\n                        key = '\\'';\n                    } else if (keyCode === 186) {\n                        key = ';';\n                    } else if (keyCode === 219) {\n                        key = '[';\n                    } else if (keyCode === 221) {\n                        key = ']';\n                    } else {\n                        key = String.fromCharCode(keyCode);\n                    }\n                }\n            }\n\n            return key;\n        }\n    };\n\n    module.exports = CanvasInput;\n})();\n","/**\n * @license\n * File: sigplot.layer1d.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    /**\n     * @constructor\n     * @param plot\n     */\n\n    var Layer1D = function(plot) {\n        this.plot = plot;\n\n        this.xbuf = undefined; // raw (ArrayBuffer) of ABSC data\n        this.ybuf = undefined; // raw (ArrayBuffer) of ORD data\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n        // xbufn = xbuf.byteLength\n        // ybufn = ybuf.byteLength\n        this.size = 0;\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n        this.modified = false;\n        this.opacity = 1.0;\n        this.fillStyle = null;\n        this.preferred_origin = 1;\n\n        this.pointbufsize = 0;\n        this.xptr = null;\n        this.yptr = null;\n        this.xpoint = null; // PointArray backed by memory in xptr\n        this.ypoint = null; // PointArray backed by memory in yptr\n\n        this.options = {};\n    };\n\n    Layer1D.prototype = {\n\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf Layer1D\n         * @private\n         */\n        init: function(hcb, options) {\n            var Gx = this.plot._Gx;\n\n            this.hcb = hcb;\n            this.hcb.buf_type = \"D\";\n\n            this.offset = 0;\n            this.size = 0;\n            this.xbufn = 0;\n            this.ybufn = 0;\n\n            if (!this.hcb.pipe) {\n                if (hcb[\"class\"] === 2) {\n                    m.force1000(hcb);\n                    this.size = hcb.subsize;\n                } else {\n                    this.size = hcb.size;\n                }\n            } else {\n                if (hcb[\"class\"] === 2) {\n                    m.force1000(hcb);\n                    this.size = hcb.subsize;\n                }\n            }\n\n            if (options.framesize) {\n                this.size = options.framesize;\n            }\n\n            // pipe data requires a valid size on overlay, but\n            // other data can work without a valid size because\n            // the reload() function will correctly update the size\n            if (this.hcb.pipe && !this.size) {\n                throw \"1D layer could not determine appropriate size for pipe, use framesize option\";\n            }\n\n            if (hcb[\"class\"] <= 2) {\n                this.xsub = -1;\n                this.ysub = 1;\n                this.cx = (hcb.format[0] === 'C');\n            } else {\n                // TODO\n            }\n\n            this.skip = 1;\n            if (this.cx) {\n                this.skip = 2;\n            }\n\n            this.xstart = hcb.xstart;\n            this.xdelta = hcb.xdelta;\n            var d = hcb.xstart + hcb.xdelta * (this.size - 1.0);\n            this.xmin = Math.min(hcb.xstart, d);\n            this.xmax = Math.max(hcb.xstart, d);\n\n            this.xlab = hcb.xunits;\n            this.ylab = hcb.yunits; // might be undefined\n\n            if (this.hcb.pipe) {\n                this.drawmode = \"scrolling\";\n                this.position = 0;\n                this.tle = options.tl;\n\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n\n                var self = this;\n                m.addPipeWriteListener(this.hcb, function() {\n                    self._onpipewrite();\n                });\n            }\n        },\n\n        _onpipewrite: function() {\n            var ybuf = new m.PointArray(this.ybuf);\n\n            var tle = this.tle; // in scalars\n            if (tle === undefined) {\n                // if the transfer length wasn't set then we read\n                // all the elements that are available\n                tle = Math.floor(m.pavail(this.hcb)) / this.hcb.spa;\n            }\n\n            // Calculate transfer length in scalars\n            var tl = tle * this.hcb.spa;\n            while (m.pavail(this.hcb) >= tl) {\n\n                if (this.drawmode === \"lefttoright\") {\n                    this.position = 0;\n                    ybuf.set(ybuf.subarray(0, this.size - tl), tl);\n                } else if (this.drawmode === \"righttoleft\") {\n                    this.position = this.size - tle;\n                    ybuf.set(ybuf.subarray(tl), 0);\n                } else if (this.drawmode === \"scrolling\") {\n                    // Nothing to do\n                } else {\n                    throw \"Invalid draw mode\";\n                }\n\n                // transfer length is adjusted to the remaining size \n                // before wrapping\n                var ngot = m.grabx(\n                    this.hcb, ybuf,\n                    Math.min(tle, this.size - this.position) * this.hcb.spa,\n                    this.position * this.hcb.spa\n                );\n                if (ngot === 0) {\n                    break;\n                }\n\n                // update the position\n                this.position = (this.position + tle) % this.size;\n\n                if (this.tle === undefined) {\n                    tle = Math.floor(m.pavail(this.hcb)) / this.hcb.spa;\n                }\n                tl = tle * this.hcb.spa;\n            }\n\n            if (this.plot._Gx.autol !== 0) {\n                this.plot.rescale();\n            }\n        },\n\n        get_data: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var HCB = this.hcb;\n\n            var skip = this.skip;\n\n            var size;\n            if (HCB[\"class\"] === 2) {\n                size = HCB.subsize;\n            } else {\n                size = HCB.size;\n            }\n\n            var imin = 0;\n            var imax = 0;\n            if (Gx.index) {\n                imin = Math.floor(xmin);\n                imax = Math.floor(xmax + 0.5);\n            } else if (HCB.xdelta >= 0.0) {\n                imin = Math.floor((xmin - HCB.xstart) / HCB.xdelta) - 1;\n                imax = Math.floor((xmax - HCB.xstart) / HCB.xdelta + 0.5);\n            } else {\n\n                imin = Math.floor((xmax - HCB.xstart) / HCB.xdelta) - 1;\n                imax = Math.floor((xmin - HCB.xstart) / HCB.xdelta + 0.5);\n            }\n            imin = Math.max(0.0, imin);\n            imax = Math.min(size, imax);\n\n            var npts = Math.max(0.0, Math.min(imax - imin + 1, Gx.bufmax));\n            if (HCB.xdelta < 0) {\n                imin = imax - npts + 1;\n            }\n\n            if ((imin >= this.imin) && (imin + npts <= this.imin + this.size) && (this.ybuf !== undefined)) {\n                // data already in buffers\n            } else if (this.modified) {\n                // modified data not yet saved off\n\n            } else if (HCB[\"class\"] <= 2) {\n                // load new data\n                var start = this.offset + imin;\n                var skip = this.skip;\n                this.ybufn = npts * Math.max(skip * m.PointArray.BYTES_PER_ELEMENT,\n                    m.PointArray.BYTES_PER_ELEMENT);\n                if ((this.ybuf === undefined) || (this.ybuf.byteLength < this.ybufn)) {\n                    this.ybuf = new ArrayBuffer(this.ybufn);\n                }\n                var ybuf = new m.PointArray(this.ybuf);\n                var ngot = m.grab(HCB, ybuf, start, npts);\n                this.imin = imin;\n                this.xstart = HCB.xstart + (imin) * this.xdelta;\n                this.size = ngot;\n            } else {\n                // type 3000, 4000, 5000\n                // TODO yeah right\n            }\n\n        },\n\n        change_settings: function(settings) {\n            if (settings.index !== undefined) {\n                if (settings.index) {\n                    this.xstart = 1.0;\n                    this.xdelta = 1.0;\n                    this.xmin = 1.0;\n                    this.xmax = this.size;\n                } else {\n                    this.xstart = this.hcb.xstart + (this.imin) * this.xdelta;\n                    this.xdelta = this.hcb.xdelta;\n                    var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                    this.xmin = Math.min(this.hcb.xstart, d);\n                    this.xmax = Math.max(this.hcb.xstart, d);\n                }\n            }\n\n            if (settings.drawmode !== undefined) {\n                this.drawmode = settings.drawmode;\n                // Reset the buffer\n                this.position = 0;\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n            }\n\n            if (settings.framesize !== undefined) {\n                this.size = settings.framesize;\n                this.xstart = this.hcb.xstart + (this.imin) * this.xdelta;\n                this.xdelta = this.hcb.xdelta;\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n            }\n        },\n\n        reload: function(data, hdrmod) {\n            if (this.hcb.pipe) {\n                throw \"reload cannot be used with pipe, use push instead\";\n            }\n            var axis_change = (this.hcb.dview.length !== data.length) || hdrmod;\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"xstart\" || k === \"xdelta\") {\n                        axis_change = true;\n                    }\n                }\n            }\n            this.hcb.setData(data);\n\n            // Setting these causes refresh() to refetch\n            this.imin = 0;\n            this.xstart = undefined;\n            this.size = 0;\n\n            var xmin = this.xmin;\n            var xmax = this.xmax;\n\n            if (axis_change) {\n                if (this.hcb[\"class\"] === 2) {\n                    m.force1000(this.hcb);\n                }\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.hcb.size - 1.0);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n                xmin = undefined;\n                xmax = undefined;\n            }\n\n            return {\n                xmin: xmin,\n                xmax: xmax\n            };\n        },\n\n        push: function(data, hdrmod, sync) {\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"type\") {\n                        this.hcb[\"class\"] = hdrmod[k] / 1000;\n                    }\n                }\n\n                if (hdrmod.subsize) {\n                    if (this.hcb[\"class\"] === 2) {\n                        m.force1000(this.hcb);\n                        this.size = this.hcb.subsize;\n                        // Reset the buffer\n                        this.position = null;\n                        this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                        this.ybuf = new ArrayBuffer(this.ybufn);\n                    }\n                }\n\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                this.xmin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                this.xmax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n            }\n\n            if (data.length > 0) {\n                m.filad(this.hcb, data, sync);\n            }\n\n            return hdrmod ? true : false;\n\n        },\n\n        prep: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            var npts = Math.ceil(this.size);\n\n            var skip = this.skip;\n\n            if (npts === 0) {\n                return {\n                    num: 0,\n                    start: 0,\n                    end: 0\n                };\n            }\n\n            if (npts * m.PointArray.BYTES_PER_ELEMENT > this.pointbufsize) {\n                this.pointbufsize = npts * m.PointArray.BYTES_PER_ELEMENT;\n                this.xptr = new ArrayBuffer(this.pointbufsize);\n                this.yptr = new ArrayBuffer(this.pointbufsize);\n                this.xpoint = new m.PointArray(this.xptr);\n                this.ypoint = new m.PointArray(this.yptr);\n            }\n\n            var dbuf = new m.PointArray(this.ybuf);\n            var qmin = this.xmin;\n            var qmax = this.xmax;\n            var n1, n2;\n            var mxmn;\n            // xsub isn't really used yet, so it can largely be ignored\n            if ((Gx.cmode === 5) || (this.xsub > 0)) {\n                if (npts <= 0) {\n                    // This is a degenerate case when there are no points\n                    qmin = Gx.panxmin;\n                    qmax = Gx.panxmax;\n                } else if (Gx.cmode !== 5) {\n                    // Largely unused code since xsub isn't used\n                    this.xpoint = new m.PointArray(this.xbuf);\n                } else if (this.cx) {\n                    // This is the pre-dominate condition\n                    m.vmov(dbuf, skip, this.xpoint, 1, npts);\n                } else if (this.line !== 0) {\n                    // If we have been asked to plot Real vs. Imaginary\n                    // for real data and there is a line being drawn\n                    // we take the min x and max x and then plot it\n                    // later on against the first two ypoints...it's\n                    // not clear if this is correct or not, but since\n                    // it's a degenerate case it is tolerated\n                    mxmn = m.vmxmn(dbuf, npts);\n                    this.xpoint[0] = mxmn.smax;\n                    this.xpoint[1] = mxmn.smin;\n                    n1 = 0;\n                    n2 = 2;\n                    npts = 2;\n                } else {\n                    // Otherwise we just plot the y-values\n                    this.xpoint = dbuf;\n                }\n                if (npts > 0) {\n                    mxmn = m.vmxmn(this.xpoint, npts);\n                    qmax = mxmn.smax;\n                    qmin = mxmn.smin;\n                    n1 = 0;\n                    n2 = npts;\n                }\n            } else if (npts > 0) {\n                var xstart = this.xstart;\n                var xdelta = this.xdelta;\n                var d = npts;\n                if (Gx.index) {\n                    n1 = 0;\n                    n2 = npts - 1;\n                } else if (xdelta >= 0.0) {\n                    n1 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta))) - 1.0;\n                    n2 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) + 2.0)) - 1.0;\n                } else {\n                    n1 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) - 1.0)) - 1.0;\n                    n2 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta) + 2.0)) - 1.0;\n                }\n\n                npts = n2 - n1 + 1;\n                if (npts < 0) {\n                    m.log.debug(\"Nothing to plot\");\n                    npts = 0;\n                }\n                dbuf = new m.PointArray(this.ybuf).subarray(n1 * skip);\n                xstart = xstart + xdelta * (n1);\n                for (var i = 0; i < npts; i++) {\n                    if (Gx.index) {\n                        this.xpoint[i] = this.imin + i + 1;\n                    } else {\n                        this.xpoint[i] = xstart + i * xdelta;\n                    }\n                }\n            }\n\n            if (Gx.panxmin > Gx.panxmax) {\n                Gx.panxmin = qmin;\n                Gx.panxmax = qmax;\n            } else {\n                Gx.panxmin = Math.min(Gx.panxmin, qmin);\n                Gx.panxmax = Math.max(Gx.panxmax, qmax);\n            }\n\n            if (npts <= 0) {\n                m.log.debug(\"Nothing to plot\");\n                return {\n                    num: npts,\n                    start: n1,\n                    end: n2\n                };\n            }\n            if (this.cx) {\n                if (Gx.cmode === 1) {\n                    m.cvmag(dbuf, this.ypoint, npts);\n                } else if (Gx.cmode === 2) {\n                    if (Gx.plab === 25) {\n                        m.cvpha(dbuf, this.ypoint, npts);\n                        m.vsmul(this.ypoint, 1.0 / (2 * Math.PI), this.ypoint, npts);\n                    } else if (Gx.plab !== 24) {\n                        m.cvpha(dbuf, this.ypoint, npts);\n                    } else {\n                        m.cvphad(dbuf, this.ypoint, npts);\n                    }\n                } else if (Gx.cmode === 3) {\n                    m.vmov(dbuf, skip, this.ypoint, 1, npts);\n                } else if (Gx.cmode >= 6) {\n                    m.cvmag2(dbuf, this.ypoint, npts);\n                } else if (Gx.cmode >= 4) {\n                    m.vmov(dbuf.subarray(1), skip, this.ypoint, 1, npts);\n                }\n            } else {\n                if (Gx.cmode === 5) { // I vs. R\n                    m.vfill(this.ypoint, 0, npts);\n                } else if ((Gx.cmode === 1) || (Gx.cmode >= 6)) { // Mag, log\n                    for (var i = 0; i < npts; i++) {\n                        this.ypoint[i] = Math.abs(dbuf[i]);\n                    }\n                } else {\n                    for (var i = 0; i < npts; i++) {\n                        this.ypoint[i] = dbuf[i];\n                    }\n                }\n            }\n\n            if (Gx.cmode >= 6) {\n                m.vlog10(this.ypoint, Gx.dbmin, this.ypoint);\n                var dbscale = 10.0;\n                if (Gx.cmode === 7) {\n                    dbscale = 20.0;\n                }\n                if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                    dbscale = dbscale / 2.0;\n                }\n                m.vsmul(this.ypoint, dbscale, this.ypoint);\n            }\n            mxmn = m.vmxmn(this.ypoint, npts);\n\n            qmax = mxmn.smax;\n            qmin = mxmn.smin;\n\n            var yran = qmax - qmin;\n            if (yran < 0.0) {\n                qmax = qmin;\n                qmin = qmax + yran;\n                yran = -yran;\n            }\n            if (yran <= 1.0e-20) {\n                qmin = qmin - 1.0;\n                qmax = qmax + 1.0;\n            } else {\n                qmin = qmin - 0.02 * yran;\n                qmax = qmax + 0.02 * yran;\n            }\n\n            if (Mx.level === 0) {\n                if (Gx.panymin > Gx.panymax) {\n                    Gx.panymin = qmin;\n                    Gx.panymax = qmax;\n                } else {\n                    Gx.panymin = Math.min(Gx.panymin, qmin);\n                    Gx.panymax = Math.max(Gx.panymax, qmax);\n                }\n\n                if (Gx.autol > 1) {\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n                    Gx.panymin = Gx.panymin * fac + Mx.stk[0].ymin * (1.0 - fac);\n                    Gx.panymax = Gx.panymax * fac + Mx.stk[0].ymax * (1.0 - fac);\n                }\n            }\n\n            return {\n                num: npts,\n                start: n1,\n                end: n2\n            };\n        },\n\n        draw: function() {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n\n            var ic = this.color;\n            var symbol = this.symbol;\n            var rad = this.radius;\n            var mask = 0;\n            var line = 0;\n            var traceoptions = {};\n\n            if (this.fillStyle) {\n                traceoptions.fillStyle = this.fillStyle;\n            } else if (Gx.fillStyle) {\n                traceoptions.fillStyle = Gx.fillStyle;\n            }\n            if (this.options) {\n                traceoptions.highlight = this.options.highlight;\n                traceoptions.noclip = this.options.noclip;\n            }\n\n            if (this.line === 0) {\n                line = 0;\n            } else {\n                line = 1;\n                if (this.thick > 0) {\n                    line = this.thick;\n                } else if (this.thick < 0) {\n                    line = Math.abs(this.thick);\n                    traceoptions.dashed = true;\n                }\n                if (this.line === 1) {\n                    traceoptions.vertsym = true;\n                }\n                if (this.line === 2) {\n                    traceoptions.horzsym = true;\n                }\n                if (this.line === 4) {\n                    traceoptions.horzsym = true;\n                    traceoptions.vertsym = true;\n                }\n            }\n\n            var segment = (Gx.segment) && (Gx.cmode !== 5) && (this.xsub > 0) && (mask === 0);\n            var xdelta = this.xdelta;\n\n            var xmin;\n            var xmax;\n            if (this.xdata) {\n                xmin = this.xmin;\n                xmax = this.xmax;\n            } else {\n                xmin = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n                xmax = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n                if (xmin >= xmax) { // no data but do scaling\n                    Gx.panxmin = Math.min(Gx.panxmin, this.xmin);\n                    Gx.panxmax = Math.max(Gx.panxmax, this.xmax);\n                }\n            }\n\n            if (!Gx.all) {\n                var xran = (Gx.bufmax - 1.0) * xdelta;\n                if (xran >= -0.0) {\n                    xmax = Math.min(xmax, xmin + xran);\n                } else {\n                    xmin = Math.max(xmin, xmax + xran);\n                }\n            }\n\n            if ((line === 0) && (symbol === 0)) {\n                // Nothing to draw\n                return;\n            }\n            while (xmin < xmax) {\n                //if (Gx.all) {\n                // TODO allow interrupt of all by mouse clicks\n                //}\n\n                if (!this.hcb.pipe) {\n                    // get_data fills in the layer xbuf/ybuf with data\n                    this.get_data(xmin, xmax);\n                }\n\n                // sigplot_prep fills in this.xptr and this.yptr (both m.PointArray)\n                // with the data to be plotted\n\n                var pts = this.prep(xmin, xmax);\n                if (pts.num > 0) {\n                    if (segment) {\n                        // TODO\n                    } else {\n                        mx.trace(Mx,\n                            ic,\n                            new m.PointArray(this.xptr),\n                            new m.PointArray(this.yptr),\n                            pts.num,\n                            pts.start,\n                            1,\n                            line,\n                            symbol,\n                            rad,\n                            traceoptions);\n                    }\n                }\n\n                if (Gx.all) {\n                    if (this.size === 0) {\n                        xmin = xmax;\n                    } else {\n                        if (Gx.index) {\n                            xmin = xmin + pts.num;\n                        } else {\n                            if (xdelta >= 0) {\n                                xmin = xmin + (this.size * xdelta);\n                            } else {\n                                xmax = xmax + (this.size * xdelta);\n                            }\n                        }\n                    }\n                } else {\n                    xmin = xmax;\n                }\n            }\n\n            if ((this.position) && (this.drawmode === \"scrolling\")) {\n                var pnt = mx.real_to_pixel(Mx, this.position * this.xdelta, 0);\n                if ((pnt.x > Mx.l) && (pnt.x < Mx.r)) {\n                    mx.draw_line(Mx, \"white\", pnt.x, Mx.t, pnt.x, Mx.b);\n                }\n            }\n        },\n\n        /**\n         * Add a highlight to a specific layer.\n         *\n         * @param {Number}\n         *            n the layer to add the highlight to\n         * @param highlight\n         *            the highlight to add\n         * @param {Number}\n         *            highlight.xstart x value to start the highlight\n         *            at\n         * @param {Number}\n         *            highlight.xend the maximum x value to end the highlight\n         *            at\n         * @param {String}\n         *            hightlight.color the color to use for the highlight\n         *\n         * @param {String}\n         *            hightlight.id the id for the highlight\n         */\n        add_highlight: function(highlight) {\n            if (!this.options.highlight) {\n                this.options.highlight = [];\n            }\n            // Check for nans\n\n            var xmin = highlight.xstart;\n            var xmax = highlight.xend;\n            var min_nan = isNaN(xmin);\n            var max_nan = isNaN(xmax);\n\n            if ((min_nan === true) || (xmin === null) || (xmin === undefined)) {\n\n                this.options.highlight = [];\n            }\n            if ((max_nan === true) || (xmax === null) || (xmax === undefined)) {\n\n                this.options.highlight = [];\n            }\n\n            if (highlight instanceof Array) {\n                this.options.highlight.push.apply(\n                    this.options.highlight, highlight);\n            } else {\n                this.options.highlight.push(highlight);\n            }\n            this.plot.refresh();\n        },\n\n        /**\n         * Remove a highlight from the layer.\n         *\n         * @param {String} {Object}\n         *             the id of the highlight to remove\n         *             or the highlight object itself\n         */\n        remove_highlight: function(highlight) {\n            if (this.options.highlight) {\n                var i = this.options.highlight.length;\n                while (i--) {\n                    if ((highlight === this.options.highlight[i]) || (highlight === this.options.highlight[i].id)) {\n                        this.options.highlight.splice(i, 1);\n                    }\n                }\n                this.plot.refresh();\n            }\n        },\n\n        get_highlights: function() {\n            if (this.options.highlight) {\n                return this.options.highlight.slice(0);\n            } else {\n                return [];\n            }\n        },\n\n        /**\n         * Clear all highlights from the layer.\n         */\n        clear_highlights: function() {\n            if (this.options.highlight) {\n                this.options.highlight = undefined;\n                this.plot.refresh();\n            }\n        }\n    };\n\n    /**\n     * Color positions for the various layers\n     *\n     * These magic numbers were conjured up by a wizard somewhere.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var mixc = [0, 53, 27, 80, 13, 40, 67, 93, 7, 60, 33, 87, 20, 47, 73, 100];\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @private\n     */\n    Layer1D.overlay = function(plot, hcb, layerOptions) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (hcb[\"class\"] === 2) {\n            m.force1000(hcb);\n        }\n        hcb.buf_type = \"D\";\n\n        // If the input is type 2000, each row becomes\n        // it's own layer\n        var n1 = 0;\n        var n2 = 1;\n        if ((hcb[\"class\"] === 2) && (hcb.size > 0)) {\n            var num_rows = hcb.size / hcb.subsize;\n            n2 = Math.min(num_rows, 16 - Gx.lyr.length);\n        }\n\n        // Extract the layer_name before enter the loop\n        var layer_name_override = layerOptions[\"name\"];\n        delete layerOptions[\"name\"];\n\n        for (var i = n1; i < n2; i++) {\n            // This is logic from within sigplot.for LOAD_FILES\n            var layer = new Layer1D(plot);\n            layer.init(hcb, layerOptions);\n\n            // Provide a default color for the layer\n            var n = (Gx.lyr.length) % mixc.length;\n            layer.color = mx.getcolor(Mx, m.Mc.colormap[3].colors, mixc[n]);\n\n            // Provide the layer name\n            if (hcb[\"class\"] === 2) {\n                if (layer_name_override !== undefined) {\n                    // If you get an array of names, pull the name\n                    // from this list...if we run out of names before\n                    // we run out of layers fall back\n                    if (Array.isArray(layer_name_override)) {\n                        layer.name = layer_name_override[i];\n                    } else {\n                        layer.name = layer_name_override;\n                        layer.name = layer.name + \".\" + mx.pad((i + 1).toString(), 3, \"0\");\n                    }\n                }\n                // If a name hasn't been assigned yet\n                if (!layer.name) {\n                    if (hcb.file_name) {\n                        layer.name = m.trim_name(hcb.file_name);\n                    } else {\n                        layer.name = \"layer_\" + Gx.lyr.length;\n                    }\n                    layer.name = layer.name + \".\" + mx.pad((i + 1).toString(), 3, \"0\");\n                }\n                layer.offset = i * hcb.subsize;\n            } else {\n                if (layer_name_override !== undefined) {\n                    layer.name = layer_name_override;\n                } else if (hcb.file_name) {\n                    layer.name = m.trim_name(hcb.file_name);\n                } else {\n                    layer.name = \"layer_\" + Gx.lyr.length;\n                }\n                layer.offset = 0;\n            }\n\n            for (var layerOption in layerOptions) {\n                if (layer[layerOption] !== undefined) {\n                    layer[layerOption] = layerOptions[layerOption];\n                }\n            }\n            if (plot.add_layer(layer)) {\n                return layer;\n            } else {\n                return null;\n            }\n        }\n    };\n\n    module.exports = Layer1D;\n\n}());\n","/**\n * @license\n * File: sigplot.layer2d.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    /**\n     * @constructor\n     * @param plot\n     */\n    var Layer2D = function(plot) {\n        this.plot = plot;\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.ystart = 0.0;\n        this.ydelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n        this.modified = false;\n\n        this.preferred_origin = 4;\n        this.opacity = 1;\n\n        // LPB is kinda odd right now, since we read the entire file into memory anyways...\n        // given that often we are loading from an HREF so there is no downside to this...\n        // however, we keep LPB around (for now) so that the scaling behaves identical to\n        // the original code\n        this.lpb = undefined;\n\n        this.yc = 1; // y-compression factor...not yet used\n\n        this.options = {};\n    };\n\n    Layer2D.prototype = {\n\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf Layer2D\n         * @private\n         */\n        init: function(hcb) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            this.hcb = hcb;\n            this.hcb.buf_type = \"D\";\n\n            if (this.hcb.pipe) {\n                var self = this;\n                this.position = 0;\n                this.frame = 0;\n\n\n                this.lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.b - Mx.t)));\n                m.addPipeWriteListener(this.hcb, function() {\n                    self._onpipewrite();\n                });\n            } else {\n                this.lps = this.hcb.lps || Math.ceil(hcb.size);\n            }\n\n            this.offset = 0;\n            this.xbufn = 0;\n            this.ybufn = 0;\n            this.drawmode = \"scrolling\"; // \"falling\", \"rising\"\n\n\n            if (hcb[\"class\"] <= 2) {\n                this.xsub = -1;\n                this.ysub = 1;\n                this.cx = (hcb.format[0] === 'C');\n            } else {\n                // TODO\n            }\n\n            this.skip = 1;\n            if (this.cx) {\n                this.skip = 2;\n            }\n\n            if (Gx.index) {\n                this.xstart = 1.0;\n                this.xdelta = 1.0;\n                this.xmin = 1.0;\n                this.xmax = hcb.subsize;\n                this.ystart = 1.0;\n                this.ydelta = 1.0;\n                this.ymin = 1.0;\n                this.ymax = this.size;\n            } else {\n                this.xstart = hcb.xstart;\n                this.xdelta = hcb.xdelta;\n                var d = hcb.xstart + hcb.xdelta * (hcb.subsize - 1.0);\n                this.xmin = this.hcb.xmin || Math.min(hcb.xstart, d);\n                this.xmax = this.hcb.xmax || Math.max(hcb.xstart, d);\n                this.ystart = hcb.ystart;\n                this.ydelta = hcb.ydelta;\n                var d = hcb.ystart + hcb.ydelta * (this.lps - 1.0);\n                this.ymin = this.hcb.ymin || Math.min(hcb.ystart, d);\n                this.ymax = this.hcb.ymax || Math.max(hcb.ystart, d);\n            }\n\n            // TODO make this work with force 1000 applied\n            this.xframe = this.hcb.subsize;\n            this.yframe = (this.lps * this.hcb.subsize) / this.xframe;\n\n            if (this.lpb === 0) {\n                this.lpb = this.yframe;\n            }\n            if (!this.lpb || (this.lpb <= 0)) {\n                this.lpb = 16;\n            }\n            this.lpb = Math.max(1, this.lpb / this.yc) * this.yc;\n\n            this.xlab = hcb.xunits;\n            this.ylab = hcb.yunits; // might be undefined\n\n        },\n\n        _onpipewrite: function() {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            while (m.pavail(this.hcb) >= (this.hcb.subsize * this.hcb.spa)) {\n\n                // if we aren't scrolling, than update the values\n                // so that the axis scrolls with the data.  The below\n                // code might seem counter intuitive, but given the\n                // the behavior of other rendering code it is configured\n                // to have ymin always be the history (i.e prior to ystart)\n                // and ystart is always the relative \"now\" which is equivalent\n                // to ymax\n                if (this.drawmode !== \"scrolling\") {\n                    this.hcb.ystart += this.hcb.ydelta;\n                    this.ystart = this.hcb.ystart;\n                    this.ymin = this.hcb.ystart - (this.hcb.ydelta * (this.lps));\n                    this.ymax = this.hcb.ystart;\n                }\n\n                if (this.drawmode === \"falling\") {\n                    this.position = 0;\n                    if (this.img) {\n                        mx.shift_image_rows(Mx, this.img, 1);\n                    }\n                } else if (this.drawmode === \"rising\") {\n                    this.position = this.lps - 1;\n                    if (this.img) {\n                        mx.shift_image_rows(Mx, this.img, -1);\n                    }\n                } else if (this.drawmode === \"scrolling\") {\n                    var ylength = Math.abs(this.ymax - this.ymin);\n                    this.ystart = 0;\n                    this.ymin = 0;\n                    this.ymax = ylength;\n                    if (this.position >= this.lps) { // if lps got resized make sure we don't go out of bounds\n                        this.position = 0;\n                    }\n                } else {\n                    throw \"Invalid draw mode\";\n                }\n\n                if (!this.buf) {\n                    // the layer isn't setup correctly yet\n                    return;\n                }\n\n                // grab one row worth of data\n                var ngot = m.grabx(this.hcb, this.buf, this.hcb.subsize * this.hcb.spa);\n                if (ngot === 0) { // shouldn't happen because of the pavail check\n                    m.log.error(\"Internal error\");\n                    return;\n                }\n\n                var zpoint = new m.PointArray(this.hcb.subsize);\n                if (this.cx) {\n                    if (Gx.cmode === 1) {\n                        m.cvmag(this.buf, zpoint, zpoint.length);\n                    } else if (Gx.cmode === 2) {\n                        if (Gx.plab === 25) {\n                            m.cvpha(this.buf, zpoint, zpoint.length);\n                            m.vsmul(zpoint, 1.0 / (2 * Math.PI), zpoint, zpoint.length);\n                        } else if (Gx.plab !== 24) {\n                            m.cvpha(this.buf, zpoint, zpoint.length);\n                        } else {\n                            m.cvphad(this.buf, zpoint, zpoint.length);\n                        }\n                    } else if (Gx.cmode === 3) {\n                        m.vmov(this.buf, this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 4) {\n                        m.vmov(this.buf.subarray(1), this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 10.0, zpoint);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 20.0, zpoint);\n                    }\n                } else {\n                    if (Gx.cmode === 1) { // mag\n                        m.vabs(this.buf, zpoint);\n                    } else if (Gx.cmode === 2) { // phase\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.vlogscale(this.buf, Gx.dbmin, 10.0, zpoint);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.vlogscale(this.buf, Gx.dbmin, 20.0, zpoint);\n                    }\n                }\n\n                var min = zpoint[0];\n                var max = zpoint[0];\n                for (var i = 0; i < zpoint.length; i++) {\n                    if (zpoint[i] < min) {\n                        min = zpoint[i];\n                    }\n                    if (zpoint[i] > max) {\n                        max = zpoint[i];\n                    }\n                }\n\n                var zmin, zmax;\n                if (Gx.autol === 1) {\n                    zmin = min;\n                    zmax = max;\n                } else if (Gx.autol > 1) {\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n                    zmin = Gx.zmin * fac + min * (1.0 - fac);\n                    zmax = Gx.zmax * fac + max * (1.0 - fac);\n                } else if (Gx.autol < 0) {\n                    // -1 means autol wasn't set so default to\n                    // 5 like the original XRTRASTER; however,\n                    // don't actually override Gx.autol since\n                    // other layers may behave differently\n                    var fac = 1.0 / (Math.max(5, 1));\n                    zmin = Gx.zmin * fac + min * (1.0 - fac);\n                    zmax = Gx.zmax * fac + max * (1.0 - fac);\n                }\n\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = zmin;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = zmax;\n                }\n                if (Gx.p_cuts) {\n                    if (this.drawmode === \"scrolling\") {\n                        //fill in the next row of data.\n                        var start_write = this.position * this.hcb.subsize;\n                        var stop_write = start_write + this.hcb.subsize;\n                        var b = 0;\n                        for (var i = start_write; i < stop_write; i++) {\n                            this.zbuf[i] = zpoint[b];\n                            b++;\n                        }\n\n                    }\n                    if (this.drawmode === \"falling\") {\n                        //shift and fill in the next row of data.\n                        var cut_off = (this.lps - 1) * this.hcb.subsize;\n                        var tmp = this.zbuf.slice(0, cut_off);\n                        this.zbuf = [];\n                        for (var i = 0; i < this.hcb.subsize; i++) {\n                            this.zbuf.push(zpoint[i]);\n                        }\n                        this.zbuf.push.apply(this.zbuf, tmp);\n                        tmp = [];\n                    }\n                    if (this.drawmode === \"rising\") {\n                        //shift and fill in the next row of data.\n                        var cut_off = this.lps * this.hcb.subsize;\n                        var tmp = this.zbuf.slice(this.hcb.subsize, cut_off);\n                        this.zbuf = [];\n                        this.zbuf.push.apply(this.zbuf, tmp);\n                        for (var i = 0; i < this.hcb.subsize; i++) {\n                            this.zbuf.push(zpoint[i]);\n                        }\n                        tmp = [];\n                    }\n                }\n\n                if (this.img) {\n                    mx.update_image_row(Mx, this.img, zpoint, this.position, Gx.zmin, Gx.zmax, Gx.xcompression);\n                }\n                this.frame += 1;\n                if (this.drawmode === \"scrolling\") {\n                    this.position = (this.position + 1) % this.lps;\n                }\n\n                if (Mx.level === 0) {\n                    Gx.panymin = this.ymin;\n                    Gx.panymax = this.ymax;\n                    Mx.stk[0].ymin = this.ymin;\n                    Mx.stk[0].ymax = this.ymax;\n                }\n            }\n        },\n\n        get_data: function() {\n            var HCB = this.hcb;\n\n            if (!this.buf) {\n                if (this.hcb.pipe) {\n                    // For pipes, we allocate buf and zbuf to only hold one line of\n                    // data\n                    this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.hcb.subsize);\n                } else {\n                    // Otherwise, we allocate for the entire image\n                    this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                }\n            }\n\n            if (!this.hcb.pipe) {\n                m.grab(HCB, this.buf, 0, HCB.subsize);\n            }\n        },\n\n        /**\n         * Provisional API\n         *\n         * @private\n         * @param x\n         * @param y\n         */\n        get_z: function(x, y) {\n            var ix = Math.floor(x / this.hcb.xdelta);\n            var iy = Math.floor(y / this.hcb.ydelta);\n            var zidx = (iy * this.hcb.subsize) + ix;\n            return this.zbuf[zidx];\n        },\n\n        change_settings: function(settings) {\n            var Gx = this.plot._Gx;\n\n            if (settings.cmode !== undefined) {\n                this.img = undefined;\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = undefined;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = undefined;\n                }\n            }\n            if ((settings.zmin !== undefined) ||\n                (settings.zmax !== undefined) ||\n                (settings.autoz !== undefined)) {\n                this.img = undefined;\n            }\n            if (settings.cmap !== undefined) {\n                this.img = undefined;\n            }\n            if ((settings.drawmode !== undefined) || (settings.xmin !== undefined) ||\n                (settings.xmax !== undefined) || (settings.xdelta !== undefined) ||\n                (settings.xstart !== undefined)) {\n                if (settings.drawmode === undefined) {\n                    settings.drawmode = this.drawmode;\n                }\n                this.drawmode = settings.drawmode;\n                // Reset the buffer\n                this.position = 0;\n                this.frame = 0;\n                if (this.hcb.pipe) {\n                    this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.hcb.subsize);\n                } else {\n                    this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                }\n                this.img = undefined;\n\n                if (this.drawmode === \"falling\") {\n                    this.plot._Mx.origin = 1;\n                    this.preferred_origin = 1;\n                } else {\n                    this.plot._Mx.origin = 4;\n                    this.preferred_origin = 4;\n                }\n            }\n            if (settings.opacity !== undefined) {\n                this.opacity = settings.opacity;\n            }\n            if (settings.p_cuts !== undefined) {\n                var p_cuts = Gx.p_cuts;\n                if (settings.p_cuts === null) {\n                    p_cuts = !p_cuts;\n                } else {\n                    p_cuts = settings.p_cuts;\n                }\n\n                // If p_cuts are enabled from streams, we need to keep the entire zbuf in memory\n                if (this.hcb.pipe) {\n                    if (!p_cuts) {\n                        this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                    } else {\n                        this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.hcb.subsize);\n                    }\n                }\n            }\n        },\n\n        push: function(data, hdrmod, sync) {\n            var Gx = this.plot._Gx;\n            var rescale = false;\n            var timestamp = null;\n            if (hdrmod) {\n                // handle timestamps in a unique manner\n                if (hdrmod.timestamp) {\n                    timestamp = hdrmod.timestamp;\n                    delete hdrmod[\"timestamp\"];\n                }\n\n                // If the subsize changes, we need to invalidate the buffer\n                if ((hdrmod.subsize) && (hdrmod.subsize !== this.hcb.subsize)) {\n                    this.hcb.subsize = hdrmod.subsize;\n                    if (this.hcb.pipe && !Gx.p_cuts) {\n                        this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.hcb.subsize);\n\n                    } else {\n                        this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                    }\n                    rescale = true;\n                }\n\n                for (var k in hdrmod) {\n                    if (this.hcb[k] !== hdrmod[k]) {\n                        this.hcb[k] = hdrmod[k];\n                        if (k === \"type\") {\n                            this.hcb[\"class\"] = hdrmod[k] / 1000;\n                        }\n                        rescale = true;\n                    }\n                }\n\n                if (hdrmod.lps) {\n                    this.lps = hdrmod.lps;\n                }\n\n                if (rescale) {\n                    var d = this.hcb.xstart + this.hcb.xdelta * (this.hcb.subsize - 1.0);\n                    this.xmin = Math.min(this.hcb.xstart, d);\n                    this.xmax = Math.max(this.hcb.xstart, d);\n                    this.xdelta = this.hcb.xdelta;\n                    this.xstart = this.hcb.xstart;\n\n                    this.ystart = this.hcb.ystart;\n                    this.ydelta = this.hcb.ydelta;\n                    var d = this.hcb.ystart + this.hcb.ydelta * (this.lps - 1.0);\n                    this.ymin = Math.min(this.hcb.ystart, d);\n                    this.ymax = Math.max(this.hcb.ystart, d);\n                }\n\n            }\n\n            if ((this.hcb.yunits === 1) || (this.hcb.yunits === 4)) {\n                if ((!this.hcb[\"timecode\"]) && (timestamp)) {\n                    // if we don't have a timecode set, we can use\n                    // the timestamp and reset ystart\n                    this.hcb.timecode = m.j1970toj1950(timestamp);\n                    this.hcb.ystart = 0;\n                    rescale = true;\n                } else {\n                    // otherwise, we need to look at timecode, ystart,\n                    // and ydelta to see if the timestamp indicates\n                    // any data drops...and then zero-fill accordingly\n                    // TODO\n                }\n            }\n\n            if (data.length > 0) {\n                m.filad(this.hcb, data, sync);\n            }\n\n            return rescale;\n\n        },\n\n        prep: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            var npts = this.lps;\n\n            var skip = this.skip;\n\n            var qmin = this.xmin;\n            var qmax = this.xmax;\n            var n1, n2;\n\n            var xsize = this.hcb.subsize;\n            if (Gx.xcompression > 0) {\n                xsize = Math.ceil(Mx.r - Mx.l);\n            }\n\n            this.get_data(xmin, xmax);\n\n            if (!this.hcb.pipe) {\n                // if we aren't a pipe we do a full prep\n\n                if ((Gx.cmode === 5) || (this.xsub > 0)) {\n                    // TODO - is this mode supported in rasters?\n                } else if (npts > 0) {\n                    var xstart = this.xstart;\n                    var xdelta = this.xdelta;\n                    var d = npts;\n                    if (Gx.index) {\n                        n1 = 0;\n                        n2 = npts - 1;\n                    } else if (xdelta >= 0.0) {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta))) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) + 2.0)) - 1.0;\n                    } else {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) - 1.0)) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta) + 2.0)) - 1.0;\n                    }\n\n                    npts = n2 - n1 + 1;\n                    if (npts < 0) {\n                        m.log.debug(\"Nothing to plot\");\n                        npts = 0;\n                    }\n                }\n\n                if (Gx.panxmin > Gx.panxmax) {\n                    Gx.panxmin = qmin;\n                    Gx.panxmax = qmax;\n                } else {\n                    Gx.panxmin = Math.min(Gx.panxmin, qmin);\n                    Gx.panxmax = Math.max(Gx.panxmax, qmax);\n                }\n\n                if (npts <= 0) {\n                    m.log.debug(\"Nothing to plot\");\n                    return;\n                }\n\n                if ((Gx.cmode === 5) || (this.ysub > 0)) {\n                    // TODO - is this mode supported in rasters?\n                } else if (npts > 0) {\n                    var ystart = this.ystart;\n                    var ydelta = this.ydelta;\n                    var d = npts;\n                    if (Gx.index) {\n                        n1 = 0;\n                        n2 = npts - 1;\n                    } else if (ydelta >= 0.0) {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmin - ystart) / ydelta))) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmax - ystart) / ydelta) + 2.0)) - 1.0;\n                    } else {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmax - ystart) / ydelta) - 1.0)) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmin - ystart) / ydelta) + 2.0)) - 1.0;\n                    }\n\n                    npts = n2 - n1 + 1;\n                    if (npts < 0) {\n                        m.log.debug(\"Nothing to plot\");\n                        npts = 0;\n                    }\n                }\n\n                if (Gx.panymin > Gx.panxmax) {\n                    Gx.panymin = this.ymin;\n                    Gx.panymax = this.ymax;\n                } else {\n                    Gx.panymin = Math.min(Gx.panymin, this.ymin);\n                    Gx.panymax = Math.max(Gx.panymax, this.ymax);\n                }\n\n                if (this.cx) {\n                    if (Gx.cmode === 1) { // mag\n                        m.cvmag(this.buf, this.zbuf, this.zbuf.length);\n                    } else if (Gx.cmode === 2) { // phase\n                        if (Gx.plab === 25) {\n                            m.cvpha(this.buf, this.zbuf, this.zbuf.length);\n                            m.vsmul(this.zbuf, 1.0 / (2 * Math.PI), this.zbuf, this.zbuf.length);\n                        } else if (Gx.plab !== 24) {\n                            m.cvpha(this.buf, this.zbuf, this.zbuf.length);\n                        } else {\n                            m.cvphad(this.buf, this.zbuf, this.zbuf.length);\n                        }\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vmov(this.buf.subarray(1), this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 5) { // IR - what does this mean for a raster?\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 10.0, this.zbuf);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 20.0, this.zbuf);\n                    }\n                } else {\n                    if (Gx.cmode === 1) { // mag\n                        m.vabs(this.buf, this.zbuf);\n                    } else if (Gx.cmode === 2) { // phase\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.vlogscale(this.buf, Gx.dbmin, 10.0, this.zbuf);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.vlogscale(this.buf, Gx.dbmin, 20.0, this.zbuf);\n                    }\n                }\n\n                // find z-min/z-max\n                // this is equivalent to setting XRASTER /LPB=0\n                var zpoint = this.zbuf;\n\n                var min = 0;\n                var max = 0;\n\n                if ((Gx.autol <= 0) || this.hcb.pipe) {\n                    // If autol is not used or the layer is rendering\n                    // a pipe, then use the basic z-scaling method\n                    if (zpoint.length > 0) {\n                        min = zpoint[0];\n                        max = zpoint[0];\n                        for (var i = 0; i < zpoint.length; i++) {\n                            if ((i / this.xframe) >= this.lpb) {\n                                break;\n                            }\n                            if (zpoint[i] < min) {\n                                min = zpoint[i];\n                            }\n                            if (zpoint[i] > max) {\n                                max = zpoint[i];\n                            }\n                        }\n                    }\n\n                    if (((Gx.autoz & 1) !== 0)) {\n                        if (Gx.zmin !== undefined) {\n                            Gx.zmin = Math.min(Gx.zmin, min);\n                        } else {\n                            Gx.zmin = min;\n                        }\n                    }\n                    if (((Gx.autoz & 2) !== 0)) {\n                        if (Gx.zmax !== undefined) {\n                            Gx.zmax = Math.min(Gx.zmax, max);\n                        } else {\n                            Gx.zmax = max;\n                        }\n                    }\n\n                    this.img = mx.create_image(Mx,\n                        this.zbuf,\n                        this.hcb.subsize,\n                        xsize,\n                        this.lps,\n                        Gx.zmin + Gx.zoff,\n                        Gx.zmax + Gx.zoff,\n                        Gx.xcompression);\n                } else {\n                    // otherwise autol > 1\n                    var nny = this.hcb.size;\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n\n                    // If the image isn't yet created, make one now\n                    if (!this.img) {\n                        this.img = mx.create_image(Mx,\n                            this.zbuf,\n                            this.hcb.subsize,\n                            xsize,\n                            this.lps,\n                            Gx.zmin + Gx.zoff,\n                            Gx.zmax + Gx.zoff);\n                    }\n\n                    Gx.zmin = 0;\n                    Gx.zmax = 0;\n                    if (zpoint.length > 0) {\n                        for (var yy = 0; yy < nny; yy++) {\n                            var noff = yy * this.xframe;\n                            var min = zpoint[noff];\n                            var max = zpoint[noff];\n                            for (var i = 0; i < this.xframe; i++) {\n                                min = Math.min(zpoint[noff + i], min);\n                                max = Math.max(zpoint[noff + i], max);\n                            }\n\n                            // Auto-scale this raster line\n                            if ((Gx.autoz !== 2) && (min !== undefined)) {\n                                Gx.zmin = (min * fac) + (Gx.zmin * (1.0 - fac));\n                            }\n                            if ((Gx.autoz !== 1) && (max !== undefined)) {\n                                Gx.zmax = (max * fac) + (Gx.zmax * (1.0 - fac));\n                            }\n\n                            // Render the row\n                            mx.update_image_row(Mx,\n                                this.img,\n                                zpoint.subarray(noff, noff + this.xframe),\n                                yy,\n                                Gx.zmin,\n                                Gx.zmax);\n\n                        }\n                    }\n                }\n            } else {\n                // Setup image for pipe-mode\n                if (Gx.panxmin > Gx.panxmax) {\n                    Gx.panxmin = qmin;\n                    Gx.panxmax = qmax;\n                } else {\n                    Gx.panxmin = Math.min(Gx.panxmin, qmin);\n                    Gx.panxmax = Math.max(Gx.panxmax, qmax);\n                }\n                if (Gx.panymin > Gx.panxmax) {\n                    Gx.panymin = this.ymin;\n                    Gx.panymax = this.ymax;\n                } else {\n                    Gx.panymin = Math.min(Gx.panymin, this.ymin);\n                    Gx.panymax = Math.max(Gx.panymax, this.ymax);\n                }\n\n                if (!this.img) {\n                    if (Gx.zmin === undefined) {\n                        Gx.zmin = 0;\n                    }\n                    if (Gx.zmax === undefined) {\n                        Gx.zmax = 0;\n                    }\n                    this.img = mx.create_image(Mx,\n                        null,\n                        this.hcb.subsize,\n                        xsize,\n                        this.lps,\n                        Gx.zmin + Gx.zoff,\n                        Gx.zmax + Gx.zoff,\n                        Gx.xcompression);\n                }\n            }\n\n            this.img.cmode = Gx.cmode;\n            this.img.cmap = Gx.cmap;\n            this.img.origin = Mx.origin;\n\n            // Make the parts without data transparent\n            if (this.hcb.pipe && (this.frame < this.lps)) {\n                var imgd = new Uint32Array(this.img);\n                if (this.drawmode === \"rising\") {\n                    for (var i = 0; i < imgd.length - (this.frame * xsize); i++) {\n                        imgd[i] = 0;\n                    }\n                } else {\n                    for (var i = this.frame * xsize; i < imgd.length; i++) {\n                        imgd[i] = 0;\n                    }\n                }\n            }\n\n            return npts;\n        },\n\n        draw: function() {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n            var HCB = this.hcb;\n\n            if (this.hcb.pipe) {\n                var lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.b - Mx.t)));\n                if ((lps !== this.lps) && this.buf) {\n                    this.lps = lps;\n                    if (this.position >= this.lps) { // if lps got resized make sure we don't go out of bounds\n                        this.position = 0;\n                    }\n                    var d = HCB.ystart + HCB.ydelta * (this.lps - 1.0);\n                    this.ymin = Math.min(HCB.ystart, d);\n                    this.ymax = Math.max(HCB.ystart, d);\n                    // reset the image since we now have more lines to render\n                    // TODO - can we preserve the image data rather than resetting?\n                    this.img = null;\n                    this.plot.rescale();\n                }\n            }\n\n            var xmin = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n            var xmax = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n            if (xmin >= xmax) { // no data but do scaling\n                Gx.panxmin = Math.min(Gx.panxmin, this.xmin);\n                Gx.panxmax = Math.max(Gx.panxmax, this.xmax);\n                return;\n            }\n            var ymin = Math.max(this.ymin, Mx.stk[Mx.level].ymin);\n            var ymax = Math.min(this.ymax, Mx.stk[Mx.level].ymax);\n\n            var w = Math.abs(xmax - xmin) + 1;\n            var h = Math.abs(ymax - ymin) + 1;\n\n            w = Math.floor(w / HCB.xdelta);\n            h = Math.floor(h / HCB.ydelta);\n\n            w = Math.min(w, HCB.subsize);\n            h = Math.min(h, HCB.size);\n\n            var ul = mx.real_to_pixel(Mx, xmin, ymin);\n            var lr = mx.real_to_pixel(Mx, xmax, ymax);\n\n            var iw = lr.x - ul.x;\n            var ih = lr.y - ul.y;\n\n            var rx = iw / w;\n            var ry = ih / h;\n\n            Gx.xe = Math.max(1, Math.round(rx));\n            Gx.ye = Math.max(1, Math.round(ry));\n\n            // we might need to prep in certian situations\n            if ((!this.img) || (!this.buf) || (Gx.cmode !== this.img.cmode) || (Gx.cmap !== this.img.cmap) || (Mx.origin !== this.img.origin)) {\n                this.prep(xmin, xmax);\n            }\n\n            // if there is an image, render it\n            if (this.img) {\n                mx.draw_image(Mx, this.img, this.xmin, this.ymin, this.xmax, this.ymax, this.opacity, Gx.rasterSmoothing);\n            }\n\n            // render the scrolling pipe line\n            if (this.position !== null && this.drawmode === \"scrolling\") {\n                var pnt = mx.real_to_pixel(Mx, 0, this.position * this.ydelta);\n                if ((pnt.y > Mx.t) && (pnt.y < Mx.b)) {\n                    mx.draw_line(Mx, \"white\", Mx.l, pnt.y, Mx.r, pnt.y);\n                }\n            }\n        }\n    };\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @private\n     */\n    Layer2D.overlay = function(plot, hcb, layerOptions) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        hcb.buf_type = \"D\";\n\n        var layer = new Layer2D(plot);\n        layer.init(hcb);\n\n        if (hcb.file_name) {\n            layer.name = m.trim_name(hcb.file_name);\n        } else {\n            layer.name = \"layer_\" + Gx.lyr.length;\n        }\n\n        layer.change_settings(layerOptions);\n\n        if (plot.add_layer(layer)) {\n            return layer;\n        } else {\n            return null;\n        }\n    };\n\n    module.exports = Layer2D;\n\n}());\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.5.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"schedule\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=wa(d);la(b,c,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)xa(a,b,c[e],d[e]);else c&&xa(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ca(a){return Ba(a,!0)}function Da(a){return Ba(a,!1)}\nvar Ea={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Fa(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ga(a,b){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(b?za(a,Ca):za(a,Da),Aa?t(\"95\"):void 0,ha))throw b=ia,ha=!1,ia=null,b;}var Ha=Math.random().toString(36).slice(2),Ia=\"__reactInternalInstance$\"+Ha,Ja=\"__reactEventHandlers$\"+Ha;function Ka(a){if(a[Ia])return a[Ia];for(;!a[Ia];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ia];return 7===a.tag||8===a.tag?a:null}function La(a){a=a[Ia];return!a||7!==a.tag&&8!==a.tag?null:a}\nfunction Ma(a){if(7===a.tag||8===a.tag)return a.stateNode;t(\"33\")}function Na(a){return a[Ja]||null}function Oa(a){do a=a.return;while(a&&7!==a.tag);return a?a:null}function Pa(a,b,c){if(b=Fa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Qa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Oa(b);for(b=c.length;0<b--;)Pa(c[b],\"captured\",a);for(b=0;b<c.length;b++)Pa(c[b],\"bubbled\",a)}}function Ra(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Fa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Ta(a){a&&a.dispatchConfig.registrationName&&Ra(a._targetInst,null,a)}\nfunction Ua(a){za(a,Qa)}var Va=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Wa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ya={animationend:Wa(\"Animation\",\"AnimationEnd\"),animationiteration:Wa(\"Animation\",\"AnimationIteration\"),animationstart:Wa(\"Animation\",\"AnimationStart\"),transitionend:Wa(\"Transition\",\"TransitionEnd\")},Za={},$a={};\nVa&&($a=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ya.animationend.animation,delete Ya.animationiteration.animation,delete Ya.animationstart.animation),\"TransitionEvent\"in window||delete Ya.transitionend.transition);function ab(a){if(Za[a])return Za[a];if(!Ya[a])return a;var b=Ya[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in $a)return Za[a]=b[c];return a}\nvar bb=ab(\"animationend\"),cb=ab(\"animationiteration\"),db=ab(\"animationstart\"),eb=ab(\"transitionend\"),fb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),gb=null,hb=null,ib=null;\nfunction jb(){if(ib)return ib;var a,b=hb,c=b.length,d,e=\"value\"in gb?gb.value:gb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return ib=e.slice(a,1<d?1-d:void 0)}function kb(){return!0}function lb(){return!1}\nfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?kb:lb;this.isPropagationStopped=lb;return this}\nn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=kb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=kb)},persist:function(){this.isPersistent=kb},isPersistent:lb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=lb;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;mb(c);return c};mb(z);function nb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function ob(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction mb(a){a.eventPool=[];a.getPooled=nb;a.release=ob}var pb=z.extend({data:null}),qb=z.extend({data:null}),rb=[9,13,27,32],sb=Va&&\"CompositionEvent\"in window,tb=null;Va&&\"documentMode\"in document&&(tb=document.documentMode);\nvar ub=Va&&\"TextEvent\"in window&&!tb,vb=Va&&(!sb||tb&&8<tb&&11>=tb),wb=String.fromCharCode(32),xb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},yb=!1;\nfunction zb(a,b){switch(a){case \"keyup\":return-1!==rb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Ab(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Bb=!1;function Cb(a,b){switch(a){case \"compositionend\":return Ab(b);case \"keypress\":if(32!==b.which)return null;yb=!0;return wb;case \"textInput\":return a=b.data,a===wb&&yb?null:a;default:return null}}\nfunction Db(a,b){if(Bb)return\"compositionend\"===a||!sb&&zb(a,b)?(a=jb(),ib=hb=gb=null,Bb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return vb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Eb={eventTypes:xb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(sb)b:{switch(a){case \"compositionstart\":e=xb.compositionStart;break b;case \"compositionend\":e=xb.compositionEnd;break b;case \"compositionupdate\":e=xb.compositionUpdate;break b}e=void 0}else Bb?zb(a,c)&&(e=xb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=xb.compositionStart);e?(vb&&\"ko\"!==c.locale&&(Bb||e!==xb.compositionStart?e===xb.compositionEnd&&Bb&&(f=jb()):(gb=d,hb=\"value\"in gb?gb.value:gb.textContent,Bb=\n!0)),e=pb.getPooled(e,b,c,d),f?e.data=f:(f=Ab(c),null!==f&&(e.data=f)),Ua(e),f=e):f=null;(a=ub?Cb(a,c):Db(a,c))?(b=qb.getPooled(xb.beforeInput,b,c,d),b.data=a,Ua(b)):b=null;return null===f?b:null===b?f:[f,b]}},Fb=null,Gb=null,Hb=null;function Ib(a){if(a=va(a)){\"function\"!==typeof Fb?t(\"280\"):void 0;var b=ua(a.stateNode);Fb(a.stateNode,a.type,b)}}function Jb(a){Gb?Hb?Hb.push(a):Hb=[a]:Gb=a}function Kb(){if(Gb){var a=Gb,b=Hb;Hb=Gb=null;Ib(a);if(b)for(a=0;a<b.length;a++)Ib(b[a])}}\nfunction Lb(a,b){return a(b)}function Mb(a,b,c){return a(b,c)}function Nb(){}var Ob=!1;function Pb(a,b){if(Ob)return a(b);Ob=!0;try{return Lb(a,b)}finally{if(Ob=!1,null!==Gb||null!==Hb)Nb(),Kb()}}var Qb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Rb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Qb[a.type]:\"textarea\"===b?!0:!1}\nfunction Sb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Tb(a){if(!Va)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Ub(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Vb(a){var b=Ub(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Wb(a){a._valueTracker||(a._valueTracker=Vb(a))}function Xb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ub(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Yb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Zb=/^(.*)[\\\\\\/]/,C=\"function\"===typeof Symbol&&Symbol.for,$b=C?Symbol.for(\"react.element\"):60103,ac=C?Symbol.for(\"react.portal\"):60106,bc=C?Symbol.for(\"react.fragment\"):60107,cc=C?Symbol.for(\"react.strict_mode\"):60108,dc=C?Symbol.for(\"react.profiler\"):60114,ec=C?Symbol.for(\"react.provider\"):60109,fc=C?Symbol.for(\"react.context\"):60110,gc=C?Symbol.for(\"react.async_mode\"):60111,hc=C?Symbol.for(\"react.forward_ref\"):60112,ic=C?Symbol.for(\"react.placeholder\"):\n60113,jc=\"function\"===typeof Symbol&&Symbol.iterator;function kc(a){if(null===a||\"object\"!==typeof a)return null;a=jc&&a[jc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction lc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case gc:return\"AsyncMode\";case bc:return\"Fragment\";case ac:return\"Portal\";case dc:return\"Profiler\";case cc:return\"StrictMode\";case ic:return\"Placeholder\"}if(\"object\"===typeof a){switch(a.$$typeof){case fc:return\"Context.Consumer\";case ec:return\"Context.Provider\";case hc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\")}if(\"function\"===typeof a.then&&(a=1===a._reactStatus?a._reactResult:null))return lc(a)}return null}function mc(a){var b=\"\";do{a:switch(a.tag){case 4:case 0:case 1:case 2:case 3:case 7:case 10:var c=a._debugOwner,d=a._debugSource,e=lc(a.type);var f=null;c&&(f=lc(c.type));c=e;e=\"\";d?e=\" (at \"+d.fileName.replace(Zb,\"\")+\":\"+d.lineNumber+\")\":f&&(e=\" (created by \"+f+\")\");f=\"\\n    in \"+(c||\"Unknown\")+e;break a;default:f=\"\"}b+=f;a=a.return}while(a);return b}\nvar nc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(nc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function D(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var E={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){E[a]=new D(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];E[b]=new D(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){E[a]=new D(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){E[a]=new D(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){E[a]=new D(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){E[a]=new D(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){E[a]=new D(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){E[a]=new D(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){E[a]=new D(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nwc);E[b]=new D(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});E.tabIndex=new D(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction xc(a,b,c,d){var e=E.hasOwnProperty(b)?E[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Bc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\nfunction Dc(a,b){Cc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Ec(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Ec(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Fc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Ec(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Gc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Hc(a,b,c){a=z.getPooled(Gc.change,a,b,c);a.type=\"change\";Jb(c);Ua(a);return a}var Ic=null,Jc=null;function Kc(a){Ga(a,!1)}\nfunction Lc(a){var b=Ma(a);if(Xb(b))return a}function Mc(a,b){if(\"change\"===a)return b}var Nc=!1;Va&&(Nc=Tb(\"input\")&&(!document.documentMode||9<document.documentMode));function Oc(){Ic&&(Ic.detachEvent(\"onpropertychange\",Pc),Jc=Ic=null)}function Pc(a){\"value\"===a.propertyName&&Lc(Jc)&&(a=Hc(Jc,a,Sb(a)),Pb(Kc,a))}function Qc(a,b,c){\"focus\"===a?(Oc(),Ic=b,Jc=c,Ic.attachEvent(\"onpropertychange\",Pc)):\"blur\"===a&&Oc()}function Rc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Lc(Jc)}\nfunction Sc(a,b){if(\"click\"===a)return Lc(b)}function Tc(a,b){if(\"input\"===a||\"change\"===a)return Lc(b)}\nvar Uc={eventTypes:Gc,_isInputEventSupported:Nc,extractEvents:function(a,b,c,d){var e=b?Ma(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Mc:Rb(e)?Nc?f=Tc:(f=Rc,g=Qc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Sc);if(f&&(f=f(a,b)))return Hc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Ec(e,\"number\",e.value)}},Vc=z.extend({view:null,detail:null}),Wc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Xc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Wc[a])?!!b[a]:!1}function Yc(){return Xc}\nvar Zc=0,$c=0,ad=!1,bd=!1,cd=Vc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Zc;Zc=a.screenX;return ad?\"mousemove\"===a.type?a.screenX-b:0:(ad=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=$c;$c=a.screenY;return bd?\"mousemove\"===a.type?a.screenY-b:0:(bd=!0,0)}}),dd=cd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),ed={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},fd={eventTypes:ed,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ka(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=cd,h=ed.mouseLeave,k=ed.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=dd,h=ed.pointerLeave,k=ed.pointerEnter,l=\"pointer\";var m=null==f?e:Ma(f);e=null==b?e:Ma(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Oa(g))l++;g=0;for(k=e;k;k=Oa(k))g++;for(;0<l-g;)b=Oa(b),l--;for(;0<g-l;)e=Oa(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Oa(b);e=Oa(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Oa(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Oa(d)}for(d=0;d<b.length;d++)Ra(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Ra(f[d],\"captured\",c);return[a,c]}},gd=Object.prototype.hasOwnProperty;function hd(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction id(a,b){if(hd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!gd.call(b,c[d])||!hd(a[c[d]],b[c[d]]))return!1;return!0}function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 5===b.tag?2:3}function kd(a){2!==jd(a)?t(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}5!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(7===b.tag||8===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar nd=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),od=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),pd=Vc.extend({relatedTarget:null});function qd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar rd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},sd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},td=Vc.extend({key:function(a){if(a.key){var b=rd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=qd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?sd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yc,charCode:function(a){return\"keypress\"===\na.type?qd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?qd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),ud=cd.extend({dataTransfer:null}),vd=Vc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yc}),wd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),xd=cd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),yd=[[\"abort\",\"abort\"],[bb,\"animationEnd\"],[cb,\"animationIteration\"],[db,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[eb,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],zd={},Ad={};function Bd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};zd[a]=b;Ad[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Bd(a,!0)});yd.forEach(function(a){Bd(a,!1)});\nvar Cd={eventTypes:zd,isInteractiveTopLevelEventType:function(a){a=Ad[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Ad[a];if(!e)return null;switch(a){case \"keypress\":if(0===qd(c))return null;case \"keydown\":case \"keyup\":a=td;break;case \"blur\":case \"focus\":a=pd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=cd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nud;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=vd;break;case bb:case cb:case db:a=nd;break;case eb:a=wd;break;case \"scroll\":a=Vc;break;case \"wheel\":a=xd;break;case \"copy\":case \"cut\":case \"paste\":a=od;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=dd;break;default:a=z}b=a.getPooled(e,b,c,d);Ua(b);return b}},Dd=Cd.isInteractiveTopLevelEventType,\nEd=[];function Fd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=5!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ka(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Sb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ga(g,!1)}}var Gd=!0;\nfunction F(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!1)}function Jd(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!0)}function Hd(a,b){Mb(Id,a,b)}\nfunction Id(a,b){if(Gd){var c=Sb(b);c=Ka(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Ed.length){var d=Ed.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Pb(Fd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Ed.length&&Ed.push(a)}}}var Kd={},Ld=0,Md=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Nd(a){Object.prototype.hasOwnProperty.call(a,Md)||(a[Md]=Ld++,Kd[a[Md]]={});return Kd[a[Md]]}function Od(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Od();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Od(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Va&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Od(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&id(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ua(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Nd(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ma(b):window;switch(a){case \"focus\":if(Rb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ea.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=Na;va=La;wa=Ma;Ea.injectEventPluginsByName({SimpleEventPlugin:Cd,EnterLeaveEventPlugin:fd,ChangeEventPlugin:Uc,SelectEventPlugin:be,BeforeInputEventPlugin:Eb});function ce(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction de(a,b){a=n({children:void 0},b);if(b=ce(b.children))a.children=b;return a}function ee(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction fe(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ge(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\nfunction he(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ie(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var je={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ke(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function le(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ke(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar me=void 0,ne=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==je.svg||\"innerHTML\"in a)a.innerHTML=b;else{me=me||document.createElement(\"div\");me.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=me.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction oe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qe=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pe).forEach(function(a){qe.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pe[b]=pe[a]})});\nfunction re(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||pe.hasOwnProperty(e)&&pe[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var se=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction te(a,b){b&&(se[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction ue(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction ve(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Nd(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Jd(\"scroll\",a);break;case \"focus\":case \"blur\":Jd(\"focus\",a);Jd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Tb(e)&&Jd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===fb.indexOf(e)&&F(e,a)}c[e]=!0}}}function we(){}var xe=null,ye=null;\nfunction ze(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ae(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}function Be(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}\nfunction Ce(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var De=[],Ee=-1;function G(a){0>Ee||(a.current=De[Ee],De[Ee]=null,Ee--)}function H(a,b){Ee++;De[Ee]=a.current;a.current=b}var Fe={},I={current:Fe},J={current:!1},Ge=Fe;\nfunction He(a,b){var c=a.type.contextTypes;if(!c)return Fe;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function K(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ie(a){G(J,a);G(I,a)}function Je(a){G(J,a);G(I,a)}\nfunction Ke(a,b,c){I.current!==Fe?t(\"168\"):void 0;H(I,b,a);H(J,c,a)}function Le(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",lc(b)||\"Unknown\",e);return n({},c,d)}function Me(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Fe;Ge=I.current;H(I,b,a);H(J,J.current,a);return!0}\nfunction Ne(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Le(a,b,Ge),d.__reactInternalMemoizedMergedChildContext=b,G(J,a),G(I,a),H(I,b,a)):G(J,a);H(J,c,a)}var Oe=null,Pe=null;function Qe(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Re(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Oe=Qe(function(a){return b.onCommitFiberRoot(c,a)});Pe=Qe(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Se(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Te(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Ue(a,b,c){var d=a.alternate;null===d?(d=new Se(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.childExpirationTime=a.childExpirationTime;d.expirationTime=b!==a.pendingProps?c:a.expirationTime;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.firstContextDependency=a.firstContextDependency;d.sibling=a.sibling;\nd.index=a.index;d.ref=a.ref;return d}\nfunction Ve(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=Te(d)?2:4;else if(\"string\"===typeof d)f=7;else a:switch(d){case bc:return We(a.children,b,c,e);case gc:f=10;b|=3;break;case cc:f=10;b|=2;break;case dc:return d=new Se(15,a,e,b|4),d.type=dc,d.expirationTime=c,d;case ic:f=16;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case ec:f=12;break a;case fc:f=11;break a;case hc:f=13;break a;default:if(\"function\"===typeof d.then){f=4;break a}}t(\"130\",\nnull==d?d:typeof d,\"\")}b=new Se(f,a,e,b);b.type=d;b.expirationTime=c;return b}function We(a,b,c,d){a=new Se(9,a,d,b);a.expirationTime=c;return a}function Xe(a,b,c){a=new Se(8,a,null,b);a.expirationTime=c;return a}function Ye(a,b,c){b=new Se(6,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ze(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c>b?a.earliestPendingTime=b:a.latestPendingTime<b&&(a.latestPendingTime=b);$e(b,a)}function $e(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d>a)&&(e=d);a=e;0!==a&&0!==c&&c<a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var af=!1;\nfunction bf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function cf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction df(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ef(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction ff(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bf(a.memoizedState),e=c.updateQueue=bf(c.memoizedState)):d=a.updateQueue=cf(e):null===e&&(e=c.updateQueue=cf(d));null===e||d===e?ef(d,b):null===d.lastUpdate||null===e.lastUpdate?(ef(d,b),ef(e,b)):(ef(d,b),e.lastUpdate=b)}\nfunction gf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bf(a.memoizedState):hf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function hf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=cf(b));return b}\nfunction jf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:af=!0}return d}\nfunction kf(a,b,c,d,e){af=!1;b=hf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;if(m>e){if(null===g&&(g=k,f=l),0===h||h>m)h=m}else l=jf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;if(r>e){if(null===m&&(m=k,null===g&&(f=l)),0===h||h>r)h=r}else l=jf(a,b,k,l,c,d),\nnull!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction lf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);mf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;mf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function mf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction nf(a,b){return{value:a,source:b,stack:mc(b)}}var of={current:null},pf=null,qf=null,rf=null;function sf(a,b){var c=a.type._context;H(of,c._currentValue,a);c._currentValue=b}function tf(a){var b=of.current;G(of,a);a.type._context._currentValue=b}function uf(a){pf=a;rf=qf=null;a.firstContextDependency=null}\nfunction vf(a,b){if(rf!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)rf=a,b=1073741823;b={context:a,observedBits:b,next:null};null===qf?(null===pf?t(\"277\"):void 0,pf.firstContextDependency=qf=b):qf=qf.next=b}return a._currentValue}var wf={},L={current:wf},xf={current:wf},yf={current:wf};function zf(a){a===wf?t(\"174\"):void 0;return a}\nfunction Af(a,b){H(yf,b,a);H(xf,a,a);H(L,wf,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:le(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=le(b,c)}G(L,a);H(L,b,a)}function Bf(a){G(L,a);G(xf,a);G(yf,a)}function Cf(a){zf(yf.current);var b=zf(L.current);var c=le(b,a.type);b!==c&&(H(xf,a,a),H(L,c,a))}function Df(a){xf.current===a&&(G(L,a),G(xf,a))}var Ef=(new aa.Component).refs;\nfunction Ff(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Jf={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);ff(a,d);If(a,c)}};function Kf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!id(c,d)||!id(e,f):!0}function Lf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jf.enqueueReplaceState(b,b.state,null)}\nfunction Mf(a,b,c,d){var e=a.stateNode,f=K(b)?Ge:I.current;e.props=c;e.state=a.memoizedState;e.refs=Ef;e.context=He(a,f);f=a.updateQueue;null!==f&&(kf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Ff(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&\ne.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(kf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Nf=Array.isArray;\nfunction Of(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag&&3!==c.tag?t(\"110\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Ef&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"254\",a)}return a}\nfunction Pf(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Qf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Ue(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||8!==b.tag)return b=Xe(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Of(a,b,c),d.return=a,d;d=Ve(c,a.mode,d);d.ref=Of(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||6!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nYe(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||9!==b.tag)return b=We(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Xe(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case $b:return c=Ve(b,a.mode,c),c.ref=Of(a,null,b),c.return=a,c;case ac:return b=Ye(b,a.mode,c),b.return=a,b}if(Nf(b)||kc(b))return b=We(b,a.mode,c,null),b.return=\na,b;Pf(a,b)}return null}function A(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case $b:return c.key===e?c.type===bc?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case ac:return c.key===e?l(a,b,c,d):null}if(Nf(c)||kc(c))return null!==e?null:m(a,b,c,d,null);Pf(a,c)}return null}function S(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case $b:return a=a.get(null===d.key?c:d.key)||null,d.type===bc?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case ac:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Nf(d)||kc(d))return a=a.get(c)||null,m(b,a,d,e,null);Pf(b,d)}return null}function B(e,g,h,k){for(var l=null,m=null,p=g,u=g=0,q=null;null!==p&&u<h.length;u++){p.index>u?(q=p,p=null):q=p.sibling;var v=A(e,p,h[u],k);if(null===v){null===p&&(p=q);break}a&&p&&null===v.alternate&&b(e,\np);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;p=q}if(u===h.length)return c(e,p),l;if(null===p){for(;u<h.length;u++)if(p=r(e,h[u],k))g=f(p,g,u),null===m?l=p:m.sibling=p,m=p;return l}for(p=d(e,p);u<h.length;u++)if(q=S(p,e,u,h[u],k))a&&null!==q.alternate&&p.delete(null===q.key?u:q.key),g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;a&&p.forEach(function(a){return b(e,a)});return l}function P(e,g,h,k){var l=kc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;for(var m=l=null,p=g,u=g=\n0,q=null,v=h.next();null!==p&&!v.done;u++,v=h.next()){p.index>u?(q=p,p=null):q=p.sibling;var x=A(e,p,v.value,k);if(null===x){p||(p=q);break}a&&p&&null===x.alternate&&b(e,p);g=f(x,g,u);null===m?l=x:m.sibling=x;m=x;p=q}if(v.done)return c(e,p),l;if(null===p){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(p=d(e,p);!v.done;u++,v=h.next())v=S(p,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&p.delete(null===v.key?u:v.key),g=f(v,g,u),null===\nm?l=v:m.sibling=v,m=v);a&&p.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===bc&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case $b:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(9===k.tag?f.type===bc:k.type===f.type){c(a,k.sibling);d=e(k,f.type===bc?f.props.children:f.props,h);d.ref=Of(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===bc?(d=We(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Ve(f,a.mode,h),h.ref=Of(a,d,f),h.return=a,a=h)}return g(a);case ac:a:{for(k=f.key;null!==d;){if(d.key===k)if(6===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Ye(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&8===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Xe(f,a.mode,h),d.return=a,a=d),g(a);if(Nf(f))return B(a,d,f,h);if(kc(f))return P(a,d,f,h);l&&Pf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 3:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Rf=Qf(!0),Sf=Qf(!1),Tf=null,Uf=null,Vf=!1;function Wf(a,b){var c=new Se(7,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Xf(a,b){switch(a.tag){case 7:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 8:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Yf(a){if(Vf){var b=Uf;if(b){var c=b;if(!Xf(a,b)){b=Be(c);if(!b||!Xf(a,b)){a.effectTag|=2;Vf=!1;Tf=a;return}Wf(Tf,c)}Tf=a;Uf=Ce(b)}else a.effectTag|=2,Vf=!1,Tf=a}}\nfunction Zf(a){for(a=a.return;null!==a&&7!==a.tag&&5!==a.tag;)a=a.return;Tf=a}function $f(a){if(a!==Tf)return!1;if(!Vf)return Zf(a),Vf=!0,!1;var b=a.type;if(7!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ae(b,a.memoizedProps))for(b=Uf;b;)Wf(a,b),b=Be(b);Zf(a);Uf=Tf?Be(a.stateNode):null;return!0}function ag(){Uf=Tf=null;Vf=!1}\nfunction bg(a){switch(a._reactStatus){case 1:return a._reactResult;case 2:throw a._reactResult;case 0:throw a;default:throw a._reactStatus=0,a.then(function(b){if(0===a._reactStatus){a._reactStatus=1;if(\"object\"===typeof b&&null!==b){var c=b.default;b=void 0!==c&&null!==c?c:b}a._reactResult=b}},function(b){0===a._reactStatus&&(a._reactStatus=2,a._reactResult=b)}),a;}}var cg=Yb.ReactCurrentOwner;function M(a,b,c,d){b.child=null===a?Sf(b,null,c,d):Rf(b,a.child,c,d)}\nfunction dg(a,b,c,d,e){c=c.render;var f=b.ref;if(!J.current&&b.memoizedProps===d&&f===(null!==a?a.ref:null))return eg(a,b,e);c=c(d,f);M(a,b,c,e);b.memoizedProps=d;return b.child}function fg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function gg(a,b,c,d,e){var f=K(c)?Ge:I.current;f=He(b,f);uf(b,e);c=c(d,f);b.effectTag|=1;M(a,b,c,e);b.memoizedProps=d;return b.child}\nfunction hg(a,b,c,d,e){if(K(c)){var f=!0;Me(b)}else f=!1;uf(b,e);if(null===a)if(null===b.stateNode){var g=K(c)?Ge:I.current,h=c.contextTypes,k=null!==h&&void 0!==h;h=k?He(b,g):Fe;var l=new c(d,h);b.memoizedState=null!==l.state&&void 0!==l.state?l.state:null;l.updater=Jf;b.stateNode=l;l._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=g,k.__reactInternalMemoizedMaskedChildContext=h);Mf(b,c,d,e);d=!0}else{g=b.stateNode;h=b.memoizedProps;g.props=h;var m=g.context;\nk=K(c)?Ge:I.current;k=He(b,k);var r=c.getDerivedStateFromProps;(l=\"function\"===typeof r||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k);af=!1;var A=b.memoizedState;m=g.state=A;var S=b.updateQueue;null!==S&&(kf(b,S,d,g,e),m=b.memoizedState);h!==d||A!==m||J.current||af?(\"function\"===typeof r&&(Ff(b,c,r,d),m=b.memoizedState),(h=af||Kf(b,c,h,d,A,m,k))?(l||\"function\"!==\ntypeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=m),g.props=d,g.state=m,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=\nb.memoizedProps,g.props=h,m=g.context,k=K(c)?Ge:I.current,k=He(b,k),r=c.getDerivedStateFromProps,(l=\"function\"===typeof r||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k),af=!1,m=b.memoizedState,A=g.state=m,S=b.updateQueue,null!==S&&(kf(b,S,d,g,e),A=b.memoizedState),h!==d||m!==A||J.current||af?(\"function\"===typeof r&&(Ff(b,c,r,d),A=b.memoizedState),(r=af||Kf(b,c,h,d,\nm,A,k))?(l||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,A,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,A,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),\"function\"!==\ntypeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=A),g.props=d,g.state=A,g.context=k,d=r):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),d=!1);return ig(a,b,c,d,f,e)}\nfunction ig(a,b,c,d,e,f){fg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Ne(b,c,!1),eg(a,b,f);d=b.stateNode;cg.current=b;var h=g?null:d.render();b.effectTag|=1;null!==a&&g&&(M(a,b,null,f),b.child=null);M(a,b,h,f);b.memoizedState=d.state;b.memoizedProps=d.props;e&&Ne(b,c,!0);return b.child}function jg(a){var b=a.stateNode;b.pendingContext?Ke(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ke(a,b.context,!1);Af(a,b.containerInfo)}\nfunction ng(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction og(a,b,c,d){null!==a?t(\"155\"):void 0;var e=b.pendingProps;if(\"object\"===typeof c&&null!==c&&\"function\"===typeof c.then){c=bg(c);var f=c;f=\"function\"===typeof f?Te(f)?3:1:void 0!==f&&null!==f&&f.$$typeof?14:4;f=b.tag=f;var g=ng(c,e);switch(f){case 1:return gg(a,b,c,g,d);case 3:return hg(a,b,c,g,d);case 14:return dg(a,b,c,g,d);default:t(\"283\",c)}}f=He(b,I.current);uf(b,d);f=c(e,f);b.effectTag|=1;if(\"object\"===typeof f&&null!==f&&\"function\"===typeof f.render&&void 0===f.$$typeof){b.tag=2;K(c)?\n(g=!0,Me(b)):g=!1;b.memoizedState=null!==f.state&&void 0!==f.state?f.state:null;var h=c.getDerivedStateFromProps;\"function\"===typeof h&&Ff(b,c,h,e);f.updater=Jf;b.stateNode=f;f._reactInternalFiber=b;Mf(b,c,e,d);return ig(a,b,c,!0,g,d)}b.tag=0;M(a,b,f,d);b.memoizedProps=e;return b.child}\nfunction eg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);var d=b.childExpirationTime;if(0===d||d>c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=Ue(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ue(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction pg(a,b,c){var d=b.expirationTime;if(!J.current&&(0===d||d>c)){switch(b.tag){case 5:jg(b);ag();break;case 7:Cf(b);break;case 2:K(b.type)&&Me(b);break;case 3:K(b.type._reactResult)&&Me(b);break;case 6:Af(b,b.stateNode.containerInfo);break;case 12:sf(b,b.memoizedProps.value)}return eg(a,b,c)}b.expirationTime=0;switch(b.tag){case 4:return og(a,b,b.type,c);case 0:return gg(a,b,b.type,b.pendingProps,c);case 1:var e=b.type._reactResult;d=b.pendingProps;a=gg(a,b,e,ng(e,d),c);b.memoizedProps=d;return a;\ncase 2:return hg(a,b,b.type,b.pendingProps,c);case 3:return e=b.type._reactResult,d=b.pendingProps,a=hg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 5:jg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;kf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)ag(),b=eg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)Uf=Ce(b.stateNode.containerInfo),Tf=b,e=Vf=!0;e?(b.effectTag|=2,b.child=Sf(b,null,d,c)):(M(a,b,d,c),ag());b=b.child}return b;\ncase 7:Cf(b);null===a&&Yf(b);d=b.type;e=b.pendingProps;var f=null!==a?a.memoizedProps:null,g=e.children;Ae(d,e)?g=null:null!==f&&Ae(d,f)&&(b.effectTag|=16);fg(a,b);1073741823!==c&&b.mode&1&&e.hidden?(b.expirationTime=1073741823,b.memoizedProps=e,b=null):(M(a,b,g,c),b.memoizedProps=e,b=b.child);return b;case 8:return null===a&&Yf(b),b.memoizedProps=b.pendingProps,null;case 16:return null;case 6:return Af(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Rf(b,null,d,c):M(a,b,d,c),b.memoizedProps=\nd,b.child;case 13:return dg(a,b,b.type,b.pendingProps,c);case 14:return e=b.type._reactResult,d=b.pendingProps,a=dg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 9:return d=b.pendingProps,M(a,b,d,c),b.memoizedProps=d,b.child;case 10:return d=b.pendingProps.children,M(a,b,d,c),b.memoizedProps=d,b.child;case 15:return d=b.pendingProps,M(a,b,d.children,c),b.memoizedProps=d,b.child;case 12:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;b.memoizedProps=e;sf(b,f);if(null!==g){var h=g.value;\nf=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!J.current){b=eg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(2===g.tag||3===g.tag){var k=df(c);k.tag=2;ff(g,k)}if(0===g.expirationTime||g.expirationTime>c)g.expirationTime=c;k=g.alternate;null!==k&&(0===k.expirationTime||\nk.expirationTime>c)&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(0===l.childExpirationTime||l.childExpirationTime>c)l.childExpirationTime=c,null!==k&&(0===k.childExpirationTime||k.childExpirationTime>c)&&(k.childExpirationTime=c);else if(null!==k&&(0===k.childExpirationTime||k.childExpirationTime>c))k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=12===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==\nk;){if(k===b){k=null;break}g=k.sibling;if(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}M(a,b,e.children,c);b=b.child}return b;case 11:return f=b.type,d=b.pendingProps,e=d.children,uf(b,c),f=vf(f,d.unstable_observedBits),e=e(f),b.effectTag|=1,M(a,b,e,c),b.memoizedProps=d,b.child;default:t(\"156\")}}function qg(a){a.effectTag|=4}var rg=void 0,sg=void 0,tg=void 0;rg=function(){};\nsg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;zf(L.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=de(g,f);d=de(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=fe(g,f);d=fe(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=we)}te(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&ve(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&qg(b)}};tg=function(a,b,c,d){c!==d&&qg(b)};\nfunction ug(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=mc(c));null!==c&&lc(c.type);b=b.value;null!==a&&2===a.tag&&lc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function vg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){wg(a,c)}else b.current=null}\nfunction xg(a){\"function\"===typeof Pe&&Pe(a);switch(a.tag){case 2:case 3:vg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){wg(a,c)}break;case 7:vg(a);break;case 6:yg(a)}}function zg(a){return 7===a.tag||5===a.tag||6===a.tag}\nfunction Ag(a){a:{for(var b=a.return;null!==b;){if(zg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 7:b=c.stateNode;d=!1;break;case 5:b=c.stateNode.containerInfo;d=!0;break;case 6:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(oe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||zg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;7!==c.tag&&8!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||6===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(7===e.tag||8===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?(h=f.parentNode,h.insertBefore(g,f)):(h=f,h.appendChild(g)),null===h.onclick&&(h.onclick=we)):b.appendChild(e.stateNode);else if(6!==e.tag&&null!==e.child){e.child.return=\ne;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction yg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 7:d=c.stateNode;e=!1;break a;case 5:d=c.stateNode.containerInfo;e=!0;break a;case 6:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(7===b.tag||8===b.tag){a:for(var f=b,g=f;;)if(xg(g),null!==g.child&&6!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(6===b.tag?(d=b.stateNode.containerInfo,e=!0):xg(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;6===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Bg(a,b){switch(b.tag){case 2:case 3:break;case 7:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Ja]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cc(c,d);ue(a,e);b=ue(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?re(c,h):\"dangerouslySetInnerHTML\"===g?ne(c,h):\"children\"===g?oe(c,h):xc(c,g,h,b)}switch(a){case \"input\":Dc(c,d);break;case \"textarea\":he(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,\nc._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?ee(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?ee(c,!!d.multiple,d.defaultValue,!0):ee(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 8:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 5:break;case 15:break;case 16:break;default:t(\"163\")}}function Cg(a,b,c){c=df(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Dg(d);ug(a,b)};return c}\nfunction Eg(a,b,c){c=df(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===Fg?Fg=new Set([this]):Fg.add(this);var c=b.value,d=b.stack;ug(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction Gg(a){switch(a.tag){case 2:K(a.type)&&Ie(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return K(a.type._reactResult)&&Ie(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return Bf(a),Je(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-1025|64,a;case 7:return Df(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 6:return Bf(a),null;case 12:return tf(a),null;default:return null}}\nvar Hg={readContext:vf},Ig=Yb.ReactCurrentOwner,Jg=0,Kg=0,Lg=!1,N=null,Mg=null,O=0,Ng=!1,Q=null,Og=!1,Fg=null;function Pg(){if(null!==N)for(var a=N.return;null!==a;){var b=a;switch(b.tag){case 2:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ie(b);break;case 3:c=b.type._reactResult.childContextTypes;null!==c&&void 0!==c&&Ie(b);break;case 5:Bf(b);Je(b);break;case 7:Df(b);break;case 6:Bf(b);break;case 12:tf(b)}a=a.return}Mg=null;O=0;Ng=!1;N=null}\nfunction Qg(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){var e=b;b=a;var f=b.pendingProps;switch(b.tag){case 0:case 1:break;case 2:K(b.type)&&Ie(b);break;case 3:K(b.type._reactResult)&&Ie(b);break;case 5:Bf(b);Je(b);f=b.stateNode;f.pendingContext&&(f.context=f.pendingContext,f.pendingContext=null);if(null===e||null===e.child)$f(b),b.effectTag&=-3;rg(b);break;case 7:Df(b);var g=zf(yf.current),h=b.type;if(null!==e&&null!=b.stateNode)sg(e,b,h,f,g),e.ref!==b.ref&&(b.effectTag|=\n128);else if(f){var k=zf(L.current);if($f(b)){f=b;e=f.stateNode;var l=f.type,m=f.memoizedProps,r=g;e[Ia]=f;e[Ja]=m;h=void 0;g=l;switch(g){case \"iframe\":case \"object\":F(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<fb.length;l++)F(fb[l],e);break;case \"source\":F(\"error\",e);break;case \"img\":case \"image\":case \"link\":F(\"error\",e);F(\"load\",e);break;case \"form\":F(\"reset\",e);F(\"submit\",e);break;case \"details\":F(\"toggle\",e);break;case \"input\":Bc(e,m);F(\"invalid\",e);ve(r,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};F(\"invalid\",e);ve(r,\"onChange\");break;case \"textarea\":ge(e,m),F(\"invalid\",e),ve(r,\"onChange\")}te(g,m);l=null;for(h in m)m.hasOwnProperty(h)&&(k=m[h],\"children\"===h?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(h)&&null!=k&&ve(r,h));switch(g){case \"input\":Wb(e);Fc(e,m,!0);break;case \"textarea\":Wb(e);ie(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=we)}h=l;f.updateQueue=h;f=null!==h?!0:!1;f&&qg(b)}else{m=b;e=h;r=f;l=9===g.nodeType?g:g.ownerDocument;k===je.html&&(k=ke(e));k===je.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ia]=m;e[Ja]=f;a:for(m=e,r=b,l=r.child;null!==l;){if(7===l.tag||8===l.tag)m.appendChild(l.stateNode);\nelse if(6!==l.tag&&null!==l.child){l.child.return=l;l=l.child;continue}if(l===r)break;for(;null===l.sibling;){if(null===l.return||l.return===r)break a;l=l.return}l.sibling.return=l.return;l=l.sibling}r=e;l=h;m=f;var A=g,S=ue(l,m);switch(l){case \"iframe\":case \"object\":F(\"load\",r);g=m;break;case \"video\":case \"audio\":for(g=0;g<fb.length;g++)F(fb[g],r);g=m;break;case \"source\":F(\"error\",r);g=m;break;case \"img\":case \"image\":case \"link\":F(\"error\",r);F(\"load\",r);g=m;break;case \"form\":F(\"reset\",r);F(\"submit\",\nr);g=m;break;case \"details\":F(\"toggle\",r);g=m;break;case \"input\":Bc(r,m);g=zc(r,m);F(\"invalid\",r);ve(A,\"onChange\");break;case \"option\":g=de(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};g=n({},m,{value:void 0});F(\"invalid\",r);ve(A,\"onChange\");break;case \"textarea\":ge(r,m);g=fe(r,m);F(\"invalid\",r);ve(A,\"onChange\");break;default:g=m}te(l,g);k=void 0;var B=l,P=r,v=g;for(k in v)if(v.hasOwnProperty(k)){var p=v[k];\"style\"===k?re(P,p):\"dangerouslySetInnerHTML\"===k?(p=p?p.__html:void 0,\nnull!=p&&ne(P,p)):\"children\"===k?\"string\"===typeof p?(\"textarea\"!==B||\"\"!==p)&&oe(P,p):\"number\"===typeof p&&oe(P,\"\"+p):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=p&&ve(A,k):null!=p&&xc(P,k,p,S))}switch(l){case \"input\":Wb(r);Fc(r,m,!1);break;case \"textarea\":Wb(r);ie(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":g=r;g.multiple=!!m.multiple;r=m.value;null!=r?ee(g,!!m.multiple,\nr,!1):null!=m.defaultValue&&ee(g,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof g.onClick&&(r.onclick=we)}(f=ze(h,f))&&qg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 8:e&&null!=b.stateNode?tg(e,b,e.memoizedProps,f):(\"string\"!==typeof f&&(null===b.stateNode?t(\"166\"):void 0),e=zf(yf.current),zf(L.current),$f(b)?(f=b,h=f.stateNode,e=f.memoizedProps,h[Ia]=f,(f=h.nodeValue!==e)&&qg(b)):(h=b,f=(9===e.nodeType?e:e.ownerDocument).createTextNode(f),\nf[Ia]=h,b.stateNode=f));break;case 13:case 14:break;case 16:break;case 9:break;case 10:break;case 15:break;case 6:Bf(b);rg(b);break;case 12:tf(b);break;case 11:break;case 4:t(\"167\");default:t(\"156\")}b=N=null;f=a;if(1073741823===O||1073741823!==f.childExpirationTime){h=0;for(e=f.child;null!==e;){g=e.expirationTime;m=e.childExpirationTime;if(0===h||0!==g&&g<h)h=g;if(0===h||0!==m&&m<h)h=m;e=e.sibling}f.childExpirationTime=h}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gg(a,O);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512)}if(null!==d)return d;if(null!==c)a=c;else break}return null}function Rg(a){var b=pg(a.alternate,a,O);null===b&&(b=Qg(a));Ig.current=null;return b}\nfunction Sg(a,b,c){Lg?t(\"243\"):void 0;Lg=!0;Ig.currentDispatcher=Hg;var d=a.nextExpirationTimeToWorkOn;if(d!==O||a!==Mg||null===N)Pg(),Mg=a,O=d,N=Ue(Mg.current,null,O),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==N&&!Tg();)N=Rg(N);else for(;null!==N;)N=Rg(N)}catch(r){if(null===N)e=!0,Dg(r);else{null===N?t(\"271\"):void 0;var f=N,g=f.return;if(null===g)e=!0,Dg(r);else{a:{var h=g,k=f,l=r;g=O;k.effectTag|=512;k.firstEffect=k.lastEffect=null;Ng=!0;l=nf(l,k);do{switch(h.tag){case 5:h.effectTag|=\n1024;h.expirationTime=g;g=Cg(h,l,g);gf(h,g);break a;case 2:case 3:k=l;var m=h.stateNode;if(0===(h.effectTag&64)&&null!==m&&\"function\"===typeof m.componentDidCatch&&(null===Fg||!Fg.has(m))){h.effectTag|=1024;h.expirationTime=g;g=Eg(h,k,g);gf(h,g);break a}}h=h.return}while(null!==h)}N=Qg(f);continue}}}break}while(1);Lg=!1;rf=qf=pf=Ig.currentDispatcher=null;if(e)Mg=null,a.finishedWork=null;else if(null!==N)a.finishedWork=null;else{b=a.current.alternate;null===b?t(\"281\"):void 0;Mg=null;if(Ng){e=a.latestPendingTime;\nf=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e>d||0!==f&&f>d||0!==g&&g>d){a.didError=!1;c=a.latestPingedTime;0!==c&&c<=d&&(a.latestPingedTime=0);c=a.earliestPendingTime;b=a.latestPendingTime;c===d?a.earliestPendingTime=b===d?a.latestPendingTime=0:b:b===d&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;b=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=d:c>d?a.earliestSuspendedTime=d:b<d&&(a.latestSuspendedTime=d);$e(d,a);a.expirationTime=a.expirationTime;return}if(!a.didError&&\n!c){a.didError=!0;a.nextExpirationTimeToWorkOn=d;d=a.expirationTime=1;a.expirationTime=d;return}}a.pendingCommitExpirationTime=d;a.finishedWork=b}}\nfunction wg(a,b){var c;a:{Lg&&!Og?t(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:case 3:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===Fg||!Fg.has(d))){a=nf(b,a);a=Eg(c,a,1);ff(c,a);If(c,1);c=void 0;break a}break;case 5:a=nf(b,a);a=Cg(c,a,1);ff(c,a);If(c,1);c=void 0;break a}c=c.return}5===a.tag&&(c=nf(b,a),c=Cg(a,c,1),ff(a,c),If(a,1));c=void 0}return c}\nfunction Hf(a,b){0!==Kg?a=Kg:Lg?a=Og?1:O:b.mode&1?(a=Ug?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1),null!==Mg&&a===O&&(a+=1)):a=1;Ug&&(0===Vg||a>Vg)&&(Vg=a);return a}\nfunction If(a,b){a:{if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;var c=a.alternate;null!==c&&(0===c.expirationTime||c.expirationTime>b)&&(c.expirationTime=b);var d=a.return;if(null===d&&5===a.tag)a=a.stateNode;else{for(;null!==d;){c=d.alternate;if(0===d.childExpirationTime||d.childExpirationTime>b)d.childExpirationTime=b;null!==c&&(0===c.childExpirationTime||c.childExpirationTime>b)&&(c.childExpirationTime=b);if(null===d.return&&5===d.tag){a=d.stateNode;break a}d=d.return}a=null}}if(null!==\na){!Lg&&0!==O&&b<O&&Pg();Ze(a,b);if(!Lg||Og||Mg!==a){b=a;a=a.expirationTime;if(null===b.nextScheduledRoot)b.expirationTime=a,null===T?(U=T=b,b.nextScheduledRoot=b):(T=T.nextScheduledRoot=b,T.nextScheduledRoot=U);else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t(\"185\"))}}function bh(a,b,c,d,e){var f=Kg;Kg=1;try{return a(b,c,d,e)}finally{Kg=f}}\nvar U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0)+2,lh=kh,ah=50,$g=0,mh=null,nh=1;function oh(){kh=((ba.unstable_now()-jh)/10|0)+2}function Zg(a,b){if(0!==ch){if(b>ch)return;null!==dh&&ba.unstable_cancelScheduledWork(dh)}ch=b;a=ba.unstable_now()-jh;dh=ba.unstable_scheduleWork(ph,{timeout:10*(b-2)-a})}function Gf(){if(V)return lh;qh();if(0===Z||1073741823===Z)oh(),lh=kh;return lh}\nfunction qh(){var a=0,b=null;if(null!==T)for(var c=T,d=U;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===T?t(\"244\"):void 0;if(d===d.nextScheduledRoot){U=T=d.nextScheduledRoot=null;break}else if(d===U)U=e=d.nextScheduledRoot,T.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===T){T=c;T.nextScheduledRoot=U;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===T)break;if(1===a)break;\nc=d;d=d.nextScheduledRoot}}Y=b;Z=a}function ph(a){if(a.didTimeout&&null!==U){oh();var b=U;do{var c=b.expirationTime;0!==c&&kh>=c&&(b.nextExpirationTimeToWorkOn=kh);b=b.nextScheduledRoot}while(b!==U)}Yg(0,a)}\nfunction Yg(a,b){hh=b;qh();if(null!==hh)for(oh(),lh=kh;null!==Y&&0!==Z&&(0===a||a>=Z)&&(!eh||kh>=Z);)Xg(Y,Z,kh>=Z),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=null;if(null!==ih)for(a=ih,ih=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){fh||(fh=!0,gh=d)}}if(fh)throw a=gh,gh=null,fh=!1,a;}\nfunction Xg(a,b,c){V?t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh(a,d,b))}else d=a.finishedWork,null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!0,c),d=a.finishedWork,null!==d&&(Tg()?a.finishedWork=d:rh(a,d,b)));V=!1}\nfunction rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===mh?$g++:(mh=a,$g=0);Og=Lg=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=0===d||0!==e&&e<d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=\n0,a.latestPingedTime=0):(e=a.latestPendingTime,0!==e&&(e<d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime<d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?Ze(a,d):d>a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,Ze(a,d)):d<e&&Ze(a,d));$e(0,a);Ig.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;xe=Gd;e=Td();if(Ud(e)){if(\"selectionStart\"in e)var f=\n{start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(Xa){f=null;break a}var l=0,m=-1,r=-1,A=0,S=0,B=e,P=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;P=B;B=v}for(;;){if(B===\ne)break b;P===f&&++A===h&&(m=l);P===k&&++S===g&&(r=l);if(null!==(v=B.nextSibling))break;B=P;P=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;ye={focusedElem:e,selectionRange:f};Gd=!1;for(Q=d;null!==Q;){e=!1;f=void 0;try{for(;null!==Q;){if(Q.effectTag&256){var p=Q.alternate;a:switch(h=Q,h.tag){case 2:case 3:if(h.effectTag&256&&null!==p){var u=p.memoizedProps,x=p.memoizedState,R=h.stateNode;R.props=h.memoizedProps;R.state=h.memoizedState;var yh=R.getSnapshotBeforeUpdate(u,\nx);R.__reactInternalSnapshotBeforeUpdate=yh}break a;case 5:case 7:case 8:case 6:break a;default:t(\"163\")}}Q=Q.nextEffect}}catch(Xa){e=!0,f=Xa}e&&(null===Q?t(\"178\"):void 0,wg(Q,f),null!==Q&&(Q=Q.nextEffect))}for(Q=d;null!==Q;){p=!1;u=void 0;try{for(;null!==Q;){var w=Q.effectTag;w&16&&oe(Q.stateNode,\"\");if(w&128){var y=Q.alternate;if(null!==y){var q=y.ref;null!==q&&(\"function\"===typeof q?q(null):q.current=null)}}switch(w&14){case 2:Ag(Q);Q.effectTag&=-3;break;case 6:Ag(Q);Q.effectTag&=-3;Bg(Q.alternate,\nQ);break;case 4:Bg(Q.alternate,Q);break;case 8:x=Q,yg(x),x.return=null,x.child=null,x.alternate&&(x.alternate.child=null,x.alternate.return=null)}Q=Q.nextEffect}}catch(Xa){p=!0,u=Xa}p&&(null===Q?t(\"178\"):void 0,wg(Q,u),null!==Q&&(Q=Q.nextEffect))}q=ye;y=Td();w=q.focusedElem;u=q.selectionRange;if(y!==w&&w&&w.ownerDocument&&Sd(w.ownerDocument.documentElement,w)){null!==u&&Ud(w)&&(y=u.start,q=u.end,void 0===q&&(q=y),\"selectionStart\"in w?(w.selectionStart=y,w.selectionEnd=Math.min(q,w.value.length)):\n(p=w.ownerDocument||document,y=(p&&p.defaultView||window).getSelection(),x=w.textContent.length,q=Math.min(u.start,x),u=void 0===u.end?q:Math.min(u.end,x),!y.extend&&q>u&&(x=u,u=q,q=x),x=Rd(w,q),R=Rd(w,u),x&&R&&(1!==y.rangeCount||y.anchorNode!==x.node||y.anchorOffset!==x.offset||y.focusNode!==R.node||y.focusOffset!==R.offset)&&(p=p.createRange(),p.setStart(x.node,x.offset),y.removeAllRanges(),q>u?(y.addRange(p),y.extend(R.node,R.offset)):(p.setEnd(R.node,R.offset),y.addRange(p)))));y=[];for(q=w;q=\nq.parentNode;)1===q.nodeType&&y.push({element:q,left:q.scrollLeft,top:q.scrollTop});\"function\"===typeof w.focus&&w.focus();for(w=0;w<y.length;w++)q=y[w],q.element.scrollLeft=q.left,q.element.scrollTop=q.top}ye=null;Gd=!!xe;xe=null;a.current=b;for(Q=d;null!==Q;){d=!1;w=void 0;try{for(y=c;null!==Q;){var Sa=Q.effectTag;if(Sa&36){var oc=Q.alternate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.componentDidMount();\nelse{var Ih=oc.memoizedProps,Jh=oc.memoizedState;X.props=q.memoizedProps;X.state=q.memoizedState;X.componentDidUpdate(Ih,Jh,X.__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;case 5:var lg=q.updateQueue;if(null!==lg){u=null;if(null!==q.child)switch(q.child.tag){case 7:u=q.child.stateNode;break;case 2:case 3:u=q.child.stateNode}lf(q,lg,u,p)}break;case 7:var Kh=q.stateNode;null===oc&&q.effectTag&4&&ze(q.type,q.memoizedProps)&&\nKh.focus();break;case 8:break;case 6:break;case 15:break;case 16:break;default:t(\"163\")}}if(Sa&128){var Ac=Q.ref;if(null!==Ac){var mg=Q.stateNode;switch(Q.tag){case 7:var Pd=mg;break;default:Pd=mg}\"function\"===typeof Ac?Ac(Pd):Ac.current=Pd}}var Lh=Q.nextEffect;Q.nextEffect=null;Q=Lh}}catch(Xa){d=!0,w=Xa}d&&(null===Q?t(\"178\"):void 0,wg(Q,w),null!==Q&&(Q=Q.nextEffect))}Lg=Og=!1;\"function\"===typeof Oe&&Oe(b.stateNode);Sa=b.expirationTime;b=b.childExpirationTime;b=0===Sa||0!==b&&b<Sa?b:Sa;0===b&&(Fg=\nnull);a.expirationTime=b;a.finishedWork=null}function Tg(){return eh?!0:null===hh||hh.timeRemaining()>nh?!1:eh=!0}function Dg(a){null===Y?t(\"246\"):void 0;Y.expirationTime=0;fh||(fh=!0,gh=a)}function sh(a,b){var c=W;W=!0;try{return a(b)}finally{(W=c)||V||Yg(1,null)}}function th(a,b){if(W&&!Wg){Wg=!0;try{return a(b)}finally{Wg=!1}}return a(b)}function uh(a,b,c){if(Ug)return a(b,c);W||V||0===Vg||(Yg(Vg,null),Vg=0);var d=Ug,e=W;W=Ug=!0;try{return a(b,c)}finally{Ug=d,(W=e)||V||Yg(1,null)}}\nfunction vh(a){if(!a)return Fe;a=a._reactInternalFiber;a:{2!==jd(a)||2!==a.tag&&3!==a.tag?t(\"170\"):void 0;var b=a;do{switch(b.tag){case 5:b=b.stateNode.context;break a;case 2:if(K(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}break;case 3:if(K(b.type._reactResult)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);t(\"171\");b=void 0}if(2===a.tag){var c=a.type;if(K(c))return Le(a,c,b)}else if(3===a.tag&&(c=a.type._reactResult,K(c)))return Le(a,\nc,b);return b}function wh(a,b,c,d,e){var f=b.current;c=vh(c);null===b.context?b.context=c:b.pendingContext=c;b=e;e=df(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);ff(f,e);If(f,d);return d}function xh(a,b,c,d){var e=b.current,f=Gf();e=Hf(f,e);return wh(a,b,c,e,d)}function zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 7:return a.child.stateNode;default:return a.child.stateNode}}\nfunction Ah(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ac,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nFb=function(a,b,c){switch(b){case \"input\":Dc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Na(d);e?void 0:t(\"90\");Xb(d);Dc(d,e)}}}break;case \"textarea\":he(a,c);break;case \"select\":b=c.value,null!=b&&ee(a,!!c.multiple,b,!1)}};\nfunction Bh(a){var b=2+25*(((Gf()-2+500)/25|0)+1);b<=Jg&&(b=Jg+1);this._expirationTime=Jg=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Bh.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Ch;wh(a,b,null,c,d._onCommit);return d};\nBh.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nBh.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;b=c;V?t(\"253\"):void 0;Y=a;Z=b;Xg(a,b,!0);Yg(1,null);b=this._next;this._next=null;b=a.firstBatch=b;null!==\nb&&b._hasChildren&&b.render(b._children)}else this._next=null,this._defer=!1};Bh.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Ch(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Ch.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nCh.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction Dh(a,b,c){b=new Se(5,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nDh.prototype.render=function(a,b){var c=this._internalRoot,d=new Ch;b=void 0===b?null:b;null!==b&&d.then(b);xh(a,c,null,d._onCommit);return d};Dh.prototype.unmount=function(a){var b=this._internalRoot,c=new Ch;a=void 0===a?null:a;null!==a&&c.then(a);xh(null,b,null,c._onCommit);return c};Dh.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Ch;c=void 0===c?null:c;null!==c&&e.then(c);xh(b,d,a,e._onCommit);return e};\nDh.prototype.createBatch=function(){var a=new Bh(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Eh(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Lb=sh;Mb=uh;Nb=function(){V||0===Vg||(Yg(Vg,null),Vg=0)};\nfunction Fh(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Dh(a,!1,b)}\nfunction Gh(a,b,c,d,e){Eh(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Fh(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=zh(f._internalRoot);h.call(a)}}th(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return zh(f._internalRoot)}\nfunction Hh(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Eh(b)?void 0:t(\"200\");return Ah(a,b,null,c)}\nvar Mh={createPortal:Hh,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=md(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return Gh(null,a,b,!0,c)},render:function(a,b,c){return Gh(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return Gh(a,b,c,!1,d)},unmountComponentAtNode:function(a){Eh(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(th(function(){Gh(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Hh.apply(void 0,arguments)},unstable_batchedUpdates:sh,unstable_interactiveUpdates:uh,flushSync:function(a,b){V?t(\"187\"):void 0;var c=W;W=!0;try{return bh(a,b)}finally{W=c,Yg(1,null)}},unstable_flushControlled:function(a){var b=W;W=!0;try{bh(a)}finally{(W=b)||V||Yg(1,null)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[La,\nMa,Na,Ea.injectEventPluginsByName,qa,Ua,function(a){za(a,Ta)},Jb,Kb,Id,Ga]},unstable_createRoot:function(a,b){Eh(a)?void 0:t(\"278\");return new Dh(a,!0,null!=b&&!0===b.hydrate)}};(function(a){var b=a.findFiberByHostInstance;return Re(n({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ka,bundleType:0,version:\"16.5.2\",rendererPackageName:\"react-dom\"});\nvar Nh={default:Mh},Oh=Nh&&Mh||Nh;module.exports=Oh.default||Oh;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/schedule.production.min.js');\n} else {\n  module.exports = require('./cjs/schedule.development.js');\n}\n","/** @license React v16.5.2\n * schedule.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,e=!1,f=!1,g=\"object\"===typeof performance&&\"function\"===typeof performance.now,l={timeRemaining:g?function(){var a=h()-performance.now();return 0<a?a:0}:function(){var a=h()-Date.now();return 0<a?a:0},didTimeout:!1};function m(){if(!e){var a=c.timesOutAt;f?n():f=!0;p(q,a)}}function r(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;a=a.callback;a(l)}\nfunction q(a){e=!0;l.didTimeout=a;try{if(a)for(;null!==c;){var b=exports.unstable_now();if(c.timesOutAt<=b){do r();while(null!==c&&c.timesOutAt<=b)}else break}else if(null!==c){do r();while(null!==c&&0<h()-exports.unstable_now())}}finally{e=!1,null!==c?m(c):f=!1}}\nvar t=Date,u=\"function\"===typeof setTimeout?setTimeout:void 0,v=\"function\"===typeof clearTimeout?clearTimeout:void 0,w=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,x=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,y,z;function A(a){y=w(function(b){v(z);a(b)});z=u(function(){x(y);a(exports.unstable_now())},100)}if(g){var B=performance;exports.unstable_now=function(){return B.now()}}else exports.unstable_now=function(){return t.now()};var p,n,h;\nif(\"undefined\"===typeof window){var C=-1;p=function(a){C=setTimeout(a,0,!0)};n=function(){clearTimeout(C)};h=function(){return 0}}else if(window._schedMock){var D=window._schedMock;p=D[0];n=D[1];h=D[2]}else{\"undefined\"!==typeof console&&(\"function\"!==typeof w&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof x&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\nvar E=null,F=!1,G=-1,H=!1,I=!1,J=0,K=33,L=33;h=function(){return J};var M=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===M){F=!1;var b=exports.unstable_now();a=!1;if(0>=J-b)if(-1!==G&&G<=b)a=!0;else{H||(H=!0,A(N));return}G=-1;b=E;E=null;if(null!==b){I=!0;try{b(a)}finally{I=!1}}}},!1);var N=function(a){H=!1;var b=a-J+L;b<L&&K<L?(8>b&&(b=8),L=b<K?K:b):K=b;J=a+L;F||(F=!0,window.postMessage(M,\"*\"))};p=function(a,\nb){E=a;G=b;I?window.postMessage(M,\"*\"):H||(H=!0,A(N))};n=function(){E=null;F=!1;G=-1}}exports.unstable_scheduleWork=function(a,b){var d=exports.unstable_now();b=void 0!==b&&null!==b&&null!==b.timeout&&void 0!==b.timeout?d+b.timeout:d+5E3;a={callback:a,timesOutAt:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,m(c);else{d=null;var k=c;do{if(k.timesOutAt>b){d=k;break}k=k.next}while(k!==c);null===d?d=c:d===c&&(c=a,m(c));b=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};\nexports.unstable_cancelScheduledWork=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};\n","module.exports = __webpack_public_path__ + \"demo.html\";","import React, {Component} from 'react';\nimport { SigPlot, ArrayLayer, PipeLayer, HrefLayer } from '../src';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rasterData: [],\n      href: \"http://sigplot.lgsinnovations.com/dat/penny.prm\"\n    };\n  }\n\n  componentDidMount() {\n    setInterval(()=> {\n      let random = [];\n      for (let i = 0; i <= 1000; i += 1) {\n          random.push(Math.random());\n      }\n      this.setState({rasterData: random});\n    }, 16);\n  }\n\n  render() {\n    return(\n      <div>\n        <SigPlot options={{autol:1}}>\n          <ArrayLayer data={this.state.rasterData}/>\n        </SigPlot>\n        <SigPlot>\n          <PipeLayer options={{type: 2000, subsize: 1000}} \n            data={this.state.rasterData}/>\n        </SigPlot>\n        <SigPlot>\n          <HrefLayer\n            href={this.state.href}/>\n        </SigPlot>\n      </div>\n    );\n  }\n}\n","import  App  from './app';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nrequire('file-loader?name=demo.html!./demo.html');\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}